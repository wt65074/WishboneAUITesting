/* module-key = 'com.atlassian.plugins.jquery:jquery', location = '/jquery.js' */
(function(q){function Pa(a){var b=a.length,d=c.type(a);return c.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===d||"function"!==d&&(0===b||"number"===typeof b&&0<b&&b-1 in a)}function wb(a,b,d,e){if(c.acceptData(a)){var f=c.expando,g=a.nodeType,h=g?c.cache:a,i=g?a[f]:a[f]&&f;if(i&&h[i]&&(e||h[i].data)||!(void 0===d&&"string"===typeof b)){i||(i=g?a[f]=ga.pop()||c.guid++:f);h[i]||(h[i]=g?{}:{toJSON:c.noop});if("object"===typeof b||"function"===typeof b)e?h[i]=c.extend(h[i],b):h[i].data=c.extend(h[i].data,
b);a=h[i];e||(a.data||(a.data={}),a=a.data);void 0!==d&&(a[c.camelCase(b)]=d);"string"===typeof b?(d=a[b],null==d&&(d=a[c.camelCase(b)])):d=a;return d}}}function xb(a,b,d){if(c.acceptData(a)){var e,f,g=a.nodeType,h=g?c.cache:a,i=g?a[c.expando]:c.expando;if(h[i]){if(b&&(e=d?h[i]:h[i].data)){c.isArray(b)?b=b.concat(c.map(b,c.camelCase)):b in e?b=[b]:(b=c.camelCase(b),b=b in e?[b]:b.split(" "));for(f=b.length;f--;)delete e[b[f]];if(d?!Qa(e):!c.isEmptyObject(e))return}if(!d&&(delete h[i].data,!Qa(h[i])))return;
g?c.cleanData([a],!0):c.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null}}}function yb(a,b,d){if(void 0===d&&1===a.nodeType)if(d="data-"+b.replace(Ic,"-$1").toLowerCase(),d=a.getAttribute(d),"string"===typeof d){try{d="true"===d?!0:"false"===d?!1:"null"===d?null:+d+""===d?+d:Jc.test(d)?c.parseJSON(d):d}catch(e){}c.data(a,b,d)}else d=void 0;return d}function Qa(a){for(var b in a)if(!("data"===b&&c.isEmptyObject(a[b]))&&"toJSON"!==b)return!1;return!0}function ua(){return!0}function ha(){return!1}
function zb(){try{return p.activeElement}catch(a){}}function Ab(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}function Ra(a,b,d){if(c.isFunction(b))return c.grep(a,function(a,c){return!!b.call(a,c,a)!==d});if(b.nodeType)return c.grep(a,function(a){return a===b!==d});if("string"===typeof b){if(Kc.test(b))return c.filter(b,a,d);b=c.filter(b,a)}return c.grep(a,function(a){return 0<=c.inArray(a,b)!==d})}function Bb(a){var b=Cb.split("|"),a=a.createDocumentFragment();if(a.createElement)for(;b.length;)a.createElement(b.pop());
return a}function Db(a,b){return c.nodeName(a,"table")&&c.nodeName(1===b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function Eb(a){a.type=(null!==c.find.attr(a,"type"))+"/"+a.type;return a}function Fb(a){var b=Lc.exec(a.type);b?a.type=b[1]:a.removeAttribute("type");return a}function Sa(a,b){for(var d,e=0;null!=(d=a[e]);e++)c._data(d,"globalEval",!b||c._data(b[e],"globalEval"))}function Gb(a,b){if(1===b.nodeType&&c.hasData(a)){var d,
e,f;e=c._data(a);var g=c._data(b,e),h=e.events;if(h)for(d in delete g.handle,g.events={},h){e=0;for(f=h[d].length;e<f;e++)c.event.add(b,d,h[d][e])}g.data&&(g.data=c.extend({},g.data))}}function x(a,b){var d,e,f=0,g=typeof a.getElementsByTagName!==M?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==M?a.querySelectorAll(b||"*"):void 0;if(!g){g=[];for(d=a.childNodes||a;null!=(e=d[f]);f++)!b||c.nodeName(e,b)?g.push(e):c.merge(g,x(e,b))}return void 0===b||b&&c.nodeName(a,b)?c.merge([a],g):g}function Mc(a){Ta.test(a.type)&&
(a.defaultChecked=a.checked)}function Hb(a,b){if(b in a)return b;for(var d=b.charAt(0).toUpperCase()+b.slice(1),c=b,f=Ib.length;f--;)if(b=Ib[f]+d,b in a)return b;return c}function oa(a,b){a=b||a;return"none"===c.css(a,"display")||!c.contains(a.ownerDocument,a)}function Jb(a,b){for(var d,e,f,g=[],h=0,i=a.length;h<i;h++)if(e=a[h],e.style)if(g[h]=c._data(e,"olddisplay"),d=e.style.display,b)!g[h]&&"none"===d&&(e.style.display=""),""===e.style.display&&oa(e)&&(g[h]=c._data(e,"olddisplay",Kb(e.nodeName)));
else if(!g[h]&&(f=oa(e),d&&"none"!==d||!f))c._data(e,"olddisplay",f?d:c.css(e,"display"));for(h=0;h<i;h++)if(e=a[h],e.style&&(!b||"none"===e.style.display||""===e.style.display))e.style.display=b?g[h]||"":"none";return a}function Lb(a,b,d){return(a=Nc.exec(b))?Math.max(0,a[1]-(d||0))+(a[2]||"px"):b}function Mb(a,b,d,e,f){for(var b=d===(e?"border":"content")?4:"width"===b?1:0,g=0;4>b;b+=2)"margin"===d&&(g+=c.css(a,d+W[b],!0,f)),e?("content"===d&&(g-=c.css(a,"padding"+W[b],!0,f)),"margin"!==d&&(g-=
c.css(a,"border"+W[b]+"Width",!0,f))):(g+=c.css(a,"padding"+W[b],!0,f),"padding"!==d&&(g+=c.css(a,"border"+W[b]+"Width",!0,f)));return g}function Nb(a,b,d){var e=!0,f="width"===b?a.offsetWidth:a.offsetHeight,g=X(a),h=c.support.boxSizing&&"border-box"===c.css(a,"boxSizing",!1,g);if(0>=f||null==f){f=Y(a,b,g);if(0>f||null==f)f=a.style[b];if(va.test(f))return f;e=h&&(c.support.boxSizingReliable||f===a.style[b]);f=parseFloat(f)||0}return f+Mb(a,b,d||(h?"border":"content"),e,g)+"px"}function Kb(a){var b=
p,d=Ob[a];if(!d){d=Pb(a,b);if("none"===d||!d)pa=(pa||c("<iframe frameborder='0' width='0' height='0'/>").css("cssText","display:block !important")).appendTo(b.documentElement),b=(pa[0].contentWindow||pa[0].contentDocument).document,b.write("<!doctype html><html><body>"),b.close(),d=Pb(a,b),pa.detach();Ob[a]=d}return d}function Pb(a,b){var d=c(b.createElement(a)).appendTo(b.body),e=c.css(d[0],"display");d.remove();return e}function Ua(a,b,d,e){var f;if(c.isArray(b))c.each(b,function(b,c){d||Oc.test(a)?
e(a,c):Ua(a+"["+("object"===typeof c?b:"")+"]",c,d,e)});else if(!d&&"object"===c.type(b))for(f in b)Ua(a+"["+f+"]",b[f],d,e);else e(a,b)}function Qb(a){return function(b,d){"string"!==typeof b&&(d=b,b="*");var e,f=0,g=b.toLowerCase().match(N)||[];if(c.isFunction(d))for(;e=g[f++];)"+"===e[0]?(e=e.slice(1)||"*",(a[e]=a[e]||[]).unshift(d)):(a[e]=a[e]||[]).push(d)}}function Rb(a,b,d,e){function f(i){var j;g[i]=!0;c.each(a[i]||[],function(a,c){var i=c(b,d,e);if("string"===typeof i&&!h&&!g[i])return b.dataTypes.unshift(i),
f(i),!1;if(h)return!(j=i)});return j}var g={},h=a===Va;return f(b.dataTypes[0])||!g["*"]&&f("*")}function Wa(a,b){var d,e,f=c.ajaxSettings.flatOptions||{};for(e in b)void 0!==b[e]&&((f[e]?a:d||(d={}))[e]=b[e]);d&&c.extend(!0,a,d);return a}function Sb(){try{return new q.XMLHttpRequest}catch(a){}}function Tb(){setTimeout(function(){ia=void 0});return ia=c.now()}function Ub(a,b,d){for(var c,f=(qa[b]||[]).concat(qa["*"]),g=0,h=f.length;g<h;g++)if(c=f[g].call(d,b,a))return c}function Vb(a,b,d){var e,f,
g=0,h=wa.length,i=c.Deferred().always(function(){delete j.elem}),j=function(){if(f)return!1;for(var b=ia||Tb(),b=Math.max(0,l.startTime+l.duration-b),d=1-(b/l.duration||0),c=0,e=l.tweens.length;c<e;c++)l.tweens[c].run(d);i.notifyWith(a,[l,d,b]);if(1>d&&e)return b;i.resolveWith(a,[l]);return!1},l=i.promise({elem:a,props:c.extend({},b),opts:c.extend(!0,{specialEasing:{}},d),originalProperties:b,originalOptions:d,startTime:ia||Tb(),duration:d.duration,tweens:[],createTween:function(b,d){var e=c.Tween(a,
l.opts,b,d,l.opts.specialEasing[b]||l.opts.easing);l.tweens.push(e);return e},stop:function(b){var d=0,c=b?l.tweens.length:0;if(f)return this;for(f=!0;d<c;d++)l.tweens[d].run(1);b?i.resolveWith(a,[l,b]):i.rejectWith(a,[l,b]);return this}}),b=l.props,d=l.opts.specialEasing,m,k,n,E;for(e in b)if(m=c.camelCase(e),k=d[m],n=b[e],c.isArray(n)&&(k=n[1],n=b[e]=n[0]),e!==m&&(b[m]=n,delete b[e]),(E=c.cssHooks[m])&&"expand"in E)for(e in n=E.expand(n),delete b[m],n)e in b||(b[e]=n[e],d[e]=k);else d[m]=k;for(;g<
h;g++)if(e=wa[g].call(l,a,b,l.opts))return e;c.map(b,Ub,l);c.isFunction(l.opts.start)&&l.opts.start.call(a,l);c.fx.timer(c.extend(j,{elem:a,anim:l,queue:l.opts.queue}));return l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function A(a,b,d,c,f){return new A.prototype.init(a,b,d,c,f)}function xa(a,b){for(var d,c={height:a},f=0,b=b?1:0;4>f;f+=2-b)d=W[f],c["margin"+d]=c["padding"+d]=a;b&&(c.opacity=c.width=a);return c}function Wb(a){return c.isWindow(a)?
a:9===a.nodeType?a.defaultView||a.parentWindow:!1}var ya,Xb,M="undefined",Qc=q.location,p=q.document,Yb=p.documentElement,Rc=q.jQuery,Sc=q.$,za={},ga=[],Zb=ga.concat,Xa=ga.push,Z=ga.slice,$b=ga.indexOf,Tc=za.toString,ja=za.hasOwnProperty,Ya="1.10.2".trim,c=function(a,b){return new c.fn.init(a,b,Xb)},Aa=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,N=/\S+/g,Uc=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,Vc=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ac=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,Wc=/^[\],:{}\s]*$/,Xc=/(?:^|:|,)(?:\s*\[)+/g,
Yc=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,Zc=/"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,$c=/^-ms-/,ad=/-([\da-z])/gi,bd=function(a,b){return b.toUpperCase()},P=function(a){if(p.addEventListener||"load"===a.type||"complete"===p.readyState)bc(),c.ready()},bc=function(){p.addEventListener?(p.removeEventListener("DOMContentLoaded",P,!1),q.removeEventListener("load",P,!1)):(p.detachEvent("onreadystatechange",P),q.detachEvent("onload",P))};c.fn=c.prototype={jquery:"1.10.2",constructor:c,
init:function(a,b,d){var e;if(!a)return this;if("string"===typeof a){if((e="<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&3<=a.length?[null,a,null]:Vc.exec(a))&&(e[1]||!b)){if(e[1]){if(b=b instanceof c?b[0]:b,c.merge(this,c.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:p,!0)),ac.test(e[1])&&c.isPlainObject(b))for(e in b)if(c.isFunction(this[e]))this[e](b[e]);else this.attr(e,b[e])}else{if((b=p.getElementById(e[2]))&&b.parentNode){if(b.id!==e[2])return d.find(a);this.length=1;this[0]=b}this.context=
p;this.selector=a}return this}return!b||b.jquery?(b||d).find(a):this.constructor(b).find(a)}if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(c.isFunction(a))return d.ready(a);void 0!==a.selector&&(this.selector=a.selector,this.context=a.context);return c.makeArray(a,this)},selector:"",length:0,toArray:function(){return Z.call(this)},get:function(a){return null==a?this.toArray():0>a?this[this.length+a]:this[a]},pushStack:function(a){a=c.merge(this.constructor(),a);a.prevObject=this;
a.context=this.context;return a},each:function(a,b){return c.each(this,a,b)},ready:function(a){c.ready.promise().done(a);return this},slice:function(){return this.pushStack(Z.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,a=+a+(0>a?b:0);return this.pushStack(0<=a&&a<b?[this[a]]:[])},map:function(a){return this.pushStack(c.map(this,function(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||this.constructor(null)},
push:Xa,sort:[].sort,splice:[].splice};c.fn.init.prototype=c.fn;c.extend=c.fn.extend=function(){var a,b,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;"boolean"===typeof g&&(j=g,g=arguments[1]||{},h=2);"object"!==typeof g&&!c.isFunction(g)&&(g={});i===h&&(g=this,--h);for(;h<i;h++)if(null!=(f=arguments[h]))for(e in f)a=g[e],d=f[e],g!==d&&(j&&d&&(c.isPlainObject(d)||(b=c.isArray(d)))?(b?(b=!1,a=a&&c.isArray(a)?a:[]):a=a&&c.isPlainObject(a)?a:{},g[e]=c.extend(j,a,d)):void 0!==d&&(g[e]=d));return g};
c.extend({expando:"jQuery"+("1.10.2"+Math.random()).replace(/\D/g,""),noConflict:function(a){q.$===c&&(q.$=Sc);a&&q.jQuery===c&&(q.jQuery=Rc);return c},isReady:!1,readyWait:1,holdReady:function(a){a?c.readyWait++:c.ready(!0)},ready:function(a){if(!(!0===a?--c.readyWait:c.isReady)){if(!p.body)return setTimeout(c.ready);c.isReady=!0;!0!==a&&0<--c.readyWait||(ya.resolveWith(p,[c]),c.fn.trigger&&c(p).trigger("ready").off("ready"))}},isFunction:function(a){return"function"===c.type(a)},isArray:Array.isArray||
function(a){return"array"===c.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return null==a?String(a):"object"===typeof a||"function"===typeof a?za[Tc.call(a)]||"object":typeof a},isPlainObject:function(a){var b;if(!a||"object"!==c.type(a)||a.nodeType||c.isWindow(a))return!1;try{if(a.constructor&&!ja.call(a,"constructor")&&!ja.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(d){return!1}if(c.support.ownLast)for(b in a)return ja.call(a,
b);for(b in a);return void 0===b||ja.call(a,b)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw Error(a);},parseHTML:function(a,b,d){if(!a||"string"!==typeof a)return null;"boolean"===typeof b&&(d=b,b=!1);var b=b||p,e=ac.exec(a),d=!d&&[];if(e)return[b.createElement(e[1])];e=c.buildFragment([a],b,d);d&&c(d).remove();return c.merge([],e.childNodes)},parseJSON:function(a){if(q.JSON&&q.JSON.parse)return q.JSON.parse(a);if(null===a)return a;if("string"===typeof a&&(a=
c.trim(a))&&Wc.test(a.replace(Yc,"@").replace(Zc,"]").replace(Xc,"")))return(new Function("return "+a))();c.error("Invalid JSON: "+a)},parseXML:function(a){var b,d;if(!a||"string"!==typeof a)return null;try{q.DOMParser?(d=new DOMParser,b=d.parseFromString(a,"text/xml")):(b=new ActiveXObject("Microsoft.XMLDOM"),b.async="false",b.loadXML(a))}catch(e){b=void 0}(!b||!b.documentElement||b.getElementsByTagName("parsererror").length)&&c.error("Invalid XML: "+a);return b},noop:function(){},globalEval:function(a){a&&
c.trim(a)&&(q.execScript||function(a){q.eval.call(q,a)})(a)},camelCase:function(a){return a.replace($c,"ms-").replace(ad,bd)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,d){var c,f=0,g=a.length;c=Pa(a);if(d)if(c)for(;f<g&&!(c=b.apply(a[f],d),!1===c);f++);else for(f in a){if(c=b.apply(a[f],d),!1===c)break}else if(c)for(;f<g&&!(c=b.call(a[f],f,a[f]),!1===c);f++);else for(f in a)if(c=b.call(a[f],f,a[f]),!1===c)break;return a},trim:Ya&&!Ya.call("\ufeff\u00a0")?
function(a){return null==a?"":Ya.call(a)}:function(a){return null==a?"":(a+"").replace(Uc,"")},makeArray:function(a,b){var d=b||[];null!=a&&(Pa(Object(a))?c.merge(d,"string"===typeof a?[a]:a):Xa.call(d,a));return d},inArray:function(a,b,d){var c;if(b){if($b)return $b.call(b,a,d);c=b.length;for(d=d?0>d?Math.max(0,c+d):d:0;d<c;d++)if(d in b&&b[d]===a)return d}return-1},merge:function(a,b){var d=b.length,c=a.length,f=0;if("number"===typeof d)for(;f<d;f++)a[c++]=b[f];else for(;void 0!==b[f];)a[c++]=b[f++];
a.length=c;return a},grep:function(a,b,d){for(var c,f=[],g=0,h=a.length,d=!!d;g<h;g++)c=!!b(a[g],g),d!==c&&f.push(a[g]);return f},map:function(a,b,d){var c,f=0,g=a.length,h=[];if(Pa(a))for(;f<g;f++)c=b(a[f],f,d),null!=c&&(h[h.length]=c);else for(f in a)c=b(a[f],f,d),null!=c&&(h[h.length]=c);return Zb.apply([],h)},guid:1,proxy:function(a,b){var d,e;"string"===typeof b&&(e=a[b],b=a,a=e);if(c.isFunction(a))return d=Z.call(arguments,2),e=function(){return a.apply(b||this,d.concat(Z.call(arguments)))},
e.guid=a.guid=a.guid||c.guid++,e},access:function(a,b,d,e,f,g,h){var i=0,j=a.length,l=null==d;if("object"===c.type(d))for(i in f=!0,d)c.access(a,b,i,d[i],!0,g,h);else if(void 0!==e&&(f=!0,c.isFunction(e)||(h=!0),l&&(h?(b.call(a,e),b=null):(l=b,b=function(a,b,d){return l.call(c(a),d)})),b))for(;i<j;i++)b(a[i],d,h?e:e.call(a[i],i,b(a[i],d)));return f?a:l?b.call(a):j?b(a[0],d):g},now:function(){return(new Date).getTime()},swap:function(a,b,d,c){var f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];d=
d.apply(a,c||[]);for(f in b)a.style[f]=g[f];return d}});c.ready.promise=function(a){if(!ya)if(ya=c.Deferred(),"complete"===p.readyState)setTimeout(c.ready);else if(p.addEventListener)p.addEventListener("DOMContentLoaded",P,!1),q.addEventListener("load",P,!1);else{p.attachEvent("onreadystatechange",P);q.attachEvent("onload",P);var b=!1;try{b=null==q.frameElement&&p.documentElement}catch(d){}b&&b.doScroll&&function f(){if(!c.isReady){try{b.doScroll("left")}catch(a){return setTimeout(f,50)}bc();c.ready()}}()}return ya.promise(a)};
c.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){za["[object "+b+"]"]=b.toLowerCase()});Xb=c(p);var Za=q,u=function(a,b,d,c){var f,g,h,i,j;(b?b.ownerDocument||b:O)!==C&&$(b);b=b||C;d=d||[];if(!a||"string"!==typeof a)return d;if(1!==(i=b.nodeType)&&9!==i)return[];if(J&&!c){if(f=cd.exec(a))if(h=f[1])if(9===i)if((g=b.getElementById(h))&&g.parentNode){if(g.id===h)return d.push(g),d}else return d;else{if(b.ownerDocument&&(g=b.ownerDocument.getElementById(h))&&
ra(b,g)&&g.id===h)return d.push(g),d}else{if(f[2])return Q.apply(d,b.getElementsByTagName(a)),d;if((h=f[3])&&t.getElementsByClassName&&b.getElementsByClassName)return Q.apply(d,b.getElementsByClassName(h)),d}if(t.qsa&&(!B||!B.test(a))){g=f=v;h=b;j=9===i&&a;if(1===i&&"object"!==b.nodeName.toLowerCase()){i=Ba(a);(f=b.getAttribute("id"))?g=f.replace(dd,"\\$&"):b.setAttribute("id",g);g="[id='"+g+"'] ";for(h=i.length;h--;)i[h]=g+Ca(i[h]);h=$a.test(a)&&b.parentNode||b;j=i.join(",")}if(j)try{return Q.apply(d,
h.querySelectorAll(j)),d}catch(l){}finally{f||b.removeAttribute("id")}}}var m;a:{a=a.replace(Da,"$1");g=Ba(a);if(!c&&1===g.length){f=g[0]=g[0].slice(0);if(2<f.length&&"ID"===(m=f[0]).type&&t.getById&&9===b.nodeType&&J&&s.relative[f[1].type]){b=(s.find.ID(m.matches[0].replace(R,S),b)||[])[0];if(!b){m=d;break a}a=a.slice(f.shift().value.length)}for(i=Ea.needsContext.test(a)?0:f.length;i--;){m=f[i];if(s.relative[h=m.type])break;if(h=s.find[h])if(c=h(m.matches[0].replace(R,S),$a.test(f[0].type)&&b.parentNode||
b)){f.splice(i,1);a=c.length&&Ca(f);if(!a){Q.apply(d,c);m=d;break a}break}}}ab(a,g)(c,b,!J,d,$a.test(a));m=d}return m},bb=function(){function a(d,c){b.push(d+=" ")>s.cacheLength&&delete a[b.shift()];return a[d]=c}var b=[];return a},F=function(a){a[v]=!0;return a},H=function(a){var b=C.createElement("div");try{return!!a(b)}catch(d){return!1}finally{b.parentNode&&b.parentNode.removeChild(b)}},cb=function(a,b){for(var d=a.split("|"),c=a.length;c--;)s.attrHandle[d[c]]=b},dc=function(a,b){var d=b&&a,c=
d&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||cc)-(~a.sourceIndex||cc);if(c)return c;if(d)for(;d=d.nextSibling;)if(d===b)return-1;return a?1:-1},ed=function(a){return function(b){return"input"===b.nodeName.toLowerCase()&&b.type===a}},fd=function(a){return function(b){var d=b.nodeName.toLowerCase();return("input"===d||"button"===d)&&b.type===a}},aa=function(a){return F(function(b){b=+b;return F(function(d,c){for(var f,g=a([],d.length,b),h=g.length;h--;)if(d[f=g[h]])d[f]=!(c[f]=d[f])})})},ec=
function(){},Ba=function(a,b){var d,c,f,g,h,i,j;if(h=fc[a+" "])return b?0:h.slice(0);h=a;i=[];for(j=s.preFilter;h;){if(!d||(c=gd.exec(h)))c&&(h=h.slice(c[0].length)||h),i.push(f=[]);d=!1;if(c=hd.exec(h))d=c.shift(),f.push({value:d,type:c[0].replace(Da," ")}),h=h.slice(d.length);for(g in s.filter)if((c=Ea[g].exec(h))&&(!j[g]||(c=j[g](c))))d=c.shift(),f.push({value:d,type:g,matches:c}),h=h.slice(d.length);if(!d)break}return b?h.length:h?u.error(a):fc(a,i).slice(0)},Ca=function(a){for(var b=0,d=a.length,
c="";b<d;b++)c+=a[b].value;return c},db=function(a,b,d){var c=b.dir,f=d&&"parentNode"===c,g=id++;return b.first?function(b,d,g){for(;b=b[c];)if(1===b.nodeType||f)return a(b,d,g)}:function(b,d,j){var l,m,k,n=K+" "+g;if(j)for(;b=b[c];){if((1===b.nodeType||f)&&a(b,d,j))return!0}else for(;b=b[c];)if(1===b.nodeType||f)if(k=b[v]||(b[v]={}),(m=k[c])&&m[0]===n){if(!0===(l=m[1])||l===Fa)return!0===l}else if(m=k[c]=[n],m[1]=a(b,d,j)||Fa,!0===m[1])return!0}},eb=function(a){return 1<a.length?function(b,d,c){for(var f=
a.length;f--;)if(!a[f](b,d,c))return!1;return!0}:a[0]},Ga=function(a,b,d,c,f){for(var g,h=[],i=0,j=a.length,l=null!=b;i<j;i++)if(g=a[i])if(!d||d(g,c,f))h.push(g),l&&b.push(i);return h},fb=function(a,b,d,c,f,g){c&&!c[v]&&(c=fb(c));f&&!f[v]&&(f=fb(f,g));return F(function(g,i,j,l){var m,k,n=[],E=[],p=i.length,o;if(!(o=g)){o=b||"*";for(var y=j.nodeType?[j]:j,q=[],r=0,s=y.length;r<s;r++)u(o,y[r],q);o=q}o=a&&(g||!b)?Ga(o,n,a,j,l):o;y=d?f||(g?a:p||c)?[]:i:o;d&&d(o,y,j,l);if(c){m=Ga(y,E);c(m,[],j,l);for(j=
m.length;j--;)if(k=m[j])y[E[j]]=!(o[E[j]]=k)}if(g){if(f||a){if(f){m=[];for(j=y.length;j--;)if(k=y[j])m.push(o[j]=k);f(null,y=[],m,l)}for(j=y.length;j--;)if((k=y[j])&&-1<(m=f?ba.call(g,k):n[j]))g[m]=!(i[m]=k)}}else y=Ga(y===i?y.splice(p,y.length):y),f?f(null,i,y,l):Q.apply(i,y)})},gb=function(a){var b,d,c,f=a.length,g=s.relative[a[0].type];d=g||s.relative[" "];for(var h=g?1:0,i=db(function(a){return a===b},d,!0),j=db(function(a){return-1<ba.call(b,a)},d,!0),l=[function(a,d,c){return!g&&(c||d!==Ha)||
((b=d).nodeType?i(a,d,c):j(a,d,c))}];h<f;h++)if(d=s.relative[a[h].type])l=[db(eb(l),d)];else{d=s.filter[a[h].type].apply(null,a[h].matches);if(d[v]){for(c=++h;c<f&&!s.relative[a[c].type];c++);return fb(1<h&&eb(l),1<h&&Ca(a.slice(0,h-1).concat({value:" "===a[h-2].type?"*":""})).replace(Da,"$1"),d,h<c&&gb(a.slice(h,c)),c<f&&gb(a=a.slice(c)),c<f&&Ca(a))}l.push(d)}return eb(l)},ka,t,Fa,s,Ia,gc,ab,Ha,ca,$,C,L,J,B,da,Ja,ra,v="sizzle"+-new Date,O=Za.document,K=0,id=0,hc=bb(),fc=bb(),ic=bb(),la=!1,hb=function(a,
b){a===b&&(la=!0);return 0},cc=-2147483648,jd={}.hasOwnProperty,T=[],kd=T.pop,ld=T.push,Q=T.push,jc=T.slice,ba=T.indexOf||function(a){for(var b=0,d=this.length;b<d;b++)if(this[b]===a)return b;return-1},kc="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+".replace("w","w#"),lc="\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\\x00-\\xa0])+)[\\x20\\t\\r\\n\\f]*(?:([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+kc+")|)|)[\\x20\\t\\r\\n\\f]*\\]",ib=":((?:\\\\.|[\\w-]|[^\\x00-\\xa0])+)(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+
lc.replace(3,8)+")*)|.*)\\)|)",Da=RegExp("^[\\x20\\t\\r\\n\\f]+|((?:^|[^\\\\])(?:\\\\.)*)[\\x20\\t\\r\\n\\f]+$","g"),gd=/^[\x20\t\r\n\f]*,[\x20\t\r\n\f]*/,hd=/^[\x20\t\r\n\f]*([>+~]|[\x20\t\r\n\f])[\x20\t\r\n\f]*/,$a=/[\x20\t\r\n\f]*[+~]/,md=RegExp("=[\\x20\\t\\r\\n\\f]*([^\\]'\"]*)[\\x20\\t\\r\\n\\f]*\\]","g"),nd=RegExp(ib),od=RegExp("^"+kc+"$"),Ea={ID:/^#((?:\\.|[\w-]|[^\x00-\xa0])+)/,CLASS:/^\.((?:\\.|[\w-]|[^\x00-\xa0])+)/,TAG:RegExp("^("+"(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+".replace("w","w*")+")"),
ATTR:RegExp("^"+lc),PSEUDO:RegExp("^"+ib),CHILD:RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\([\\x20\\t\\r\\n\\f]*(even|odd|(([+-]|)(\\d*)n|)[\\x20\\t\\r\\n\\f]*(?:([+-]|)[\\x20\\t\\r\\n\\f]*(\\d+)|))[\\x20\\t\\r\\n\\f]*\\)|)","i"),bool:RegExp("^(?:checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)$","i"),needsContext:RegExp("^[\\x20\\t\\r\\n\\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\([\\x20\\t\\r\\n\\f]*((?:-\\d)?\\d*)[\\x20\\t\\r\\n\\f]*\\)|)(?=[^-]|$)",
"i")},jb=/^[^{]+\{\s*\[native \w/,cd=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,pd=/^(?:input|select|textarea|button)$/i,qd=/^h\d$/i,dd=/'|\\/g,R=RegExp("\\\\([\\da-f]{1,6}[\\x20\\t\\r\\n\\f]?|([\\x20\\t\\r\\n\\f])|.)","ig"),S=function(a,b,d){a="0x"+b-65536;return a!==a||d?b:0>a?String.fromCharCode(a+65536):String.fromCharCode(a>>10|55296,a&1023|56320)};try{Q.apply(T=jc.call(O.childNodes),O.childNodes),T[O.childNodes.length].nodeType}catch(Td){Q={apply:T.length?function(a,b){ld.apply(a,jc.call(b))}:function(a,
b){for(var d=a.length,c=0;a[d++]=b[c++];);a.length=d-1}}}gc=u.isXML=function(a){return(a=a&&(a.ownerDocument||a).documentElement)?"HTML"!==a.nodeName:!1};t=u.support={};$=u.setDocument=function(a){var b=a?a.ownerDocument||a:O,a=b.defaultView;if(b===C||9!==b.nodeType||!b.documentElement)return C;C=b;L=b.documentElement;J=!gc(b);a&&(a.attachEvent&&a!==a.top)&&a.attachEvent("onbeforeunload",function(){$()});t.attributes=H(function(a){a.className="i";return!a.getAttribute("className")});t.getElementsByTagName=
H(function(a){a.appendChild(b.createComment(""));return!a.getElementsByTagName("*").length});t.getElementsByClassName=H(function(a){a.innerHTML="<div class='a'></div><div class='a i'></div>";a.firstChild.className="i";return 2===a.getElementsByClassName("i").length});t.getById=H(function(a){L.appendChild(a).id=v;return!b.getElementsByName||!b.getElementsByName(v).length});t.getById?(s.find.ID=function(a,b){if("undefined"!==typeof b.getElementById&&J){var c=b.getElementById(a);return c&&c.parentNode?
[c]:[]}},s.filter.ID=function(a){var b=a.replace(R,S);return function(a){return a.getAttribute("id")===b}}):(delete s.find.ID,s.filter.ID=function(a){var b=a.replace(R,S);return function(a){return(a="undefined"!==typeof a.getAttributeNode&&a.getAttributeNode("id"))&&a.value===b}});s.find.TAG=t.getElementsByTagName?function(a,b){if(typeof b.getElementsByTagName!=="undefined")return b.getElementsByTagName(a)}:function(a,b){var c,g=[],h=0,i=b.getElementsByTagName(a);if(a==="*"){for(;c=i[h++];)c.nodeType===
1&&g.push(c);return g}return i};s.find.CLASS=t.getElementsByClassName&&function(a,b){if(typeof b.getElementsByClassName!=="undefined"&&J)return b.getElementsByClassName(a)};da=[];B=[];if(t.qsa=jb.test(b.querySelectorAll))H(function(a){a.innerHTML="<select><option selected=''></option></select>";a.querySelectorAll("[selected]").length||B.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)");
a.querySelectorAll(":checked").length||B.push(":checked")}),H(function(a){var c=b.createElement("input");c.setAttribute("type","hidden");a.appendChild(c).setAttribute("t","");a.querySelectorAll("[t^='']").length&&B.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:''|\"\")");a.querySelectorAll(":enabled").length||B.push(":enabled",":disabled");a.querySelectorAll("*,:x");B.push(",.*:")});(t.matchesSelector=jb.test(Ja=L.webkitMatchesSelector||L.mozMatchesSelector||L.oMatchesSelector||L.msMatchesSelector))&&H(function(a){t.disconnectedMatch=
Ja.call(a,"div");Ja.call(a,"[s!='']:x");da.push("!=",ib)});B=B.length&&RegExp(B.join("|"));da=da.length&&RegExp(da.join("|"));ra=jb.test(L.contains)||L.compareDocumentPosition?function(a,b){var c=a.nodeType===9?a.documentElement:a,g=b&&b.parentNode;return a===g||!(!g||!(g.nodeType===1&&(c.contains?c.contains(g):a.compareDocumentPosition&&a.compareDocumentPosition(g)&16)))}:function(a,b){if(b)for(;b=b.parentNode;)if(b===a)return true;return false};hb=L.compareDocumentPosition?function(a,c){if(a===
c){la=true;return 0}var f=c.compareDocumentPosition&&a.compareDocumentPosition&&a.compareDocumentPosition(c);return f?f&1||!t.sortDetached&&c.compareDocumentPosition(a)===f?a===b||ra(O,a)?-1:c===b||ra(O,c)?1:ca?ba.call(ca,a)-ba.call(ca,c):0:f&4?-1:1:a.compareDocumentPosition?-1:1}:function(a,c){var f,g=0;f=a.parentNode;var h=c.parentNode,i=[a],j=[c];if(a===c){la=true;return 0}if(!f||!h)return a===b?-1:c===b?1:f?-1:h?1:ca?ba.call(ca,a)-ba.call(ca,c):0;if(f===h)return dc(a,c);for(f=a;f=f.parentNode;)i.unshift(f);
for(f=c;f=f.parentNode;)j.unshift(f);for(;i[g]===j[g];)g++;return g?dc(i[g],j[g]):i[g]===O?-1:j[g]===O?1:0};return b};u.matches=function(a,b){return u(a,null,null,b)};u.matchesSelector=function(a,b){(a.ownerDocument||a)!==C&&$(a);b=b.replace(md,"='$1']");if(t.matchesSelector&&J&&(!da||!da.test(b))&&(!B||!B.test(b)))try{var d=Ja.call(a,b);if(d||t.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(c){}return 0<u(b,C,null,[a]).length};u.contains=function(a,b){(a.ownerDocument||a)!==
C&&$(a);return ra(a,b)};u.attr=function(a,b){(a.ownerDocument||a)!==C&&$(a);var d=s.attrHandle[b.toLowerCase()],d=d&&jd.call(s.attrHandle,b.toLowerCase())?d(a,b,!J):void 0;return void 0===d?t.attributes||!J?a.getAttribute(b):(d=a.getAttributeNode(b))&&d.specified?d.value:null:d};u.error=function(a){throw Error("Syntax error, unrecognized expression: "+a);};u.uniqueSort=function(a){var b,d=[],c=0,f=0;la=!t.detectDuplicates;ca=!t.sortStable&&a.slice(0);a.sort(hb);if(la){for(;b=a[f++];)b===a[f]&&(c=
d.push(f));for(;c--;)a.splice(d[c],1)}return a};Ia=u.getText=function(a){var b,c="",e=0;if(b=a.nodeType)if(1===b||9===b||11===b){if("string"===typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=Ia(a)}else{if(3===b||4===b)return a.nodeValue}else for(;b=a[e];e++)c+=Ia(b);return c};s=u.selectors={cacheLength:50,createPseudo:F,match:Ea,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},
preFilter:{ATTR:function(a){a[1]=a[1].replace(R,S);a[3]=(a[4]||a[5]||"").replace(R,S);"~="===a[2]&&(a[3]=" "+a[3]+" ");return a.slice(0,4)},CHILD:function(a){a[1]=a[1].toLowerCase();"nth"===a[1].slice(0,3)?(a[3]||u.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&u.error(a[0]);return a},PSEUDO:function(a){var b,c=!a[5]&&a[2];if(Ea.CHILD.test(a[0]))return null;if(a[3]&&void 0!==a[4])a[2]=a[4];else if(c&&nd.test(c)&&(b=Ba(c,!0))&&(b=c.indexOf(")",
c.length-b)-c.length))a[0]=a[0].slice(0,b),a[2]=c.slice(0,b);return a.slice(0,3)}},filter:{TAG:function(a){var b=a.replace(R,S).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=hc[a+" "];return b||(b=RegExp("(^|[\\x20\\t\\r\\n\\f])"+a+"([\\x20\\t\\r\\n\\f]|$)"))&&hc(a,function(a){return b.test("string"===typeof a.className&&a.className||"undefined"!==typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,
b,c){return function(e){e=u.attr(e,a);if(null==e)return"!="===b;if(!b)return!0;e+="";return"="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&-1<e.indexOf(c):"$="===b?c&&e.slice(-c.length)===c:"~="===b?-1<(" "+e+" ").indexOf(c):"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1}},CHILD:function(a,b,c,e,f){var g="nth"!==a.slice(0,3),h="last"!==a.slice(-4),i="of-type"===b;return 1===e&&0===f?function(a){return!!a.parentNode}:function(b,c,d){var k,n,E,o,p,c=g!==h?"nextSibling":"previousSibling",
y=b.parentNode,q=i&&b.nodeName.toLowerCase(),d=!d&&!i;if(y){if(g){for(;c;){for(n=b;n=n[c];)if(i?n.nodeName.toLowerCase()===q:1===n.nodeType)return!1;p=c="only"===a&&!p&&"nextSibling"}return!0}p=[h?y.firstChild:y.lastChild];if(h&&d){d=y[v]||(y[v]={});k=d[a]||[];o=k[0]===K&&k[1];E=k[0]===K&&k[2];for(n=o&&y.childNodes[o];n=++o&&n&&n[c]||(E=o=0)||p.pop();)if(1===n.nodeType&&++E&&n===b){d[a]=[K,o,E];break}}else if(d&&(k=(b[v]||(b[v]={}))[a])&&k[0]===K)E=k[1];else for(;n=++o&&n&&n[c]||(E=o=0)||p.pop();)if((i?
n.nodeName.toLowerCase()===q:1===n.nodeType)&&++E)if(d&&((n[v]||(n[v]={}))[a]=[K,E]),n===b)break;E-=f;return E===e||0===E%e&&0<=E/e}}},PSEUDO:function(a,b){var c,e=s.pseudos[a]||s.setFilters[a.toLowerCase()]||u.error("unsupported pseudo: "+a);return e[v]?e(b):1<e.length?(c=[a,a,"",b],s.setFilters.hasOwnProperty(a.toLowerCase())?F(function(a,c){for(var d,i=e(a,b),j=i.length;j--;)d=ba.call(a,i[j]),a[d]=!(c[d]=i[j])}):function(a){return e(a,0,c)}):e}},pseudos:{not:F(function(a){var b=[],c=[],e=ab(a.replace(Da,
"$1"));return e[v]?F(function(a,b,c,d){for(var d=e(a,null,d,[]),j=a.length;j--;)if(c=d[j])a[j]=!(b[j]=c)}):function(a,g,h){b[0]=a;e(b,null,h,c);return!c.pop()}}),has:F(function(a){return function(b){return 0<u(a,b).length}}),contains:F(function(a){return function(b){return-1<(b.textContent||b.innerText||Ia(b)).indexOf(a)}}),lang:F(function(a){od.test(a||"")||u.error("unsupported lang: "+a);a=a.replace(R,S).toLowerCase();return function(b){var c;do if(c=J?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=
c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(a){var b=Za.location&&Za.location.hash;return b&&b.slice(1)===a.id},root:function(a){return a===L},focus:function(a){return a===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!(!a.type&&!a.href&&!~a.tabIndex)},enabled:function(a){return!1===a.disabled},disabled:function(a){return!0===a.disabled},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===
b&&!!a.selected},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return!0===a.selected},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if("@"<a.nodeName||3===a.nodeType||4===a.nodeType)return!1;return!0},parent:function(a){return!s.pseudos.empty(a)},header:function(a){return qd.test(a.nodeName)},input:function(a){return pd.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===
a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||b.toLowerCase()===a.type)},first:aa(function(){return[0]}),last:aa(function(a,b){return[b-1]}),eq:aa(function(a,b,c){return[0>c?c+b:c]}),even:aa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:aa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:aa(function(a,b,c){for(b=0>c?c+b:c;0<=--b;)a.push(b);return a}),gt:aa(function(a,b,c){for(c=0>c?c+b:c;++c<b;)a.push(c);return a})}};s.pseudos.nth=s.pseudos.eq;
for(ka in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})s.pseudos[ka]=ed(ka);for(ka in{submit:!0,reset:!0})s.pseudos[ka]=fd(ka);ec.prototype=s.filters=s.pseudos;s.setFilters=new ec;ab=u.compile=function(a,b){var c,e=[],f=[],g=ic[a+" "];if(!g){b||(b=Ba(a));for(c=b.length;c--;)g=gb(b[c]),g[v]?e.push(g):f.push(g);var h=0,i=0<e.length,j=0<f.length;c=function(a,b,c,d,g){var o,p,y=[],q=0,r="0",t=a&&[],v=null!=g,w=Ha,x=a||j&&s.find.TAG("*",g&&b.parentNode||b),mc=K+=null==w?1:Math.random()||0.1;v&&(Ha=
b!==C&&b,Fa=h);for(;null!=(g=x[r]);r++){if(j&&g){for(o=0;p=f[o++];)if(p(g,b,c)){d.push(g);break}v&&(K=mc,Fa=++h)}i&&((g=!p&&g)&&q--,a&&t.push(g))}q+=r;if(i&&r!==q){for(o=0;p=e[o++];)p(t,y,b,c);if(a){if(0<q)for(;r--;)!t[r]&&!y[r]&&(y[r]=kd.call(d));y=Ga(y)}Q.apply(d,y);v&&(!a&&0<y.length&&1<q+e.length)&&u.uniqueSort(d)}v&&(K=mc,Ha=w);return t};c=i?F(c):c;g=ic(a,c)}return g};t.sortStable=v.split("").sort(hb).join("")===v;t.detectDuplicates=la;$();t.sortDetached=H(function(a){return a.compareDocumentPosition(C.createElement("div"))&
1});H(function(a){a.innerHTML="<a href='#'></a>";return"#"===a.firstChild.getAttribute("href")})||cb("type|href|height|width",function(a,b,c){if(!c)return a.getAttribute(b,"type"===b.toLowerCase()?1:2)});(!t.attributes||!H(function(a){a.innerHTML="<input/>";a.firstChild.setAttribute("value","");return""===a.firstChild.getAttribute("value")}))&&cb("value",function(a,b,c){if(!c&&"input"===a.nodeName.toLowerCase())return a.defaultValue});H(function(a){return null==a.getAttribute("disabled")})||cb("checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
function(a,b,c){var e;if(!c)return(e=a.getAttributeNode(b))&&e.specified?e.value:!0===a[b]?b.toLowerCase():null});c.find=u;c.expr=u.selectors;c.expr[":"]=c.expr.pseudos;c.unique=u.uniqueSort;c.text=u.getText;c.isXMLDoc=u.isXML;c.contains=u.contains;var nc={};c.Callbacks=function(a){var b;if("string"===typeof a){if(!(b=nc[a])){b=a;var d=nc[b]={};c.each(b.match(N)||[],function(a,b){d[b]=!0});b=d}}else b=c.extend({},a);var a=b,e,f,g,h,i,j,l=[],m=!a.once&&[],k=function(b){f=a.memory&&b;g=!0;i=j||0;j=
0;h=l.length;for(e=!0;l&&i<h;i++)if(!1===l[i].apply(b[0],b[1])&&a.stopOnFalse){f=!1;break}e=!1;l&&(m?m.length&&k(m.shift()):f?l=[]:n.disable())},n={add:function(){if(l){var b=l.length;(function Pc(b){c.each(b,function(b,d){var e=c.type(d);"function"===e?(!a.unique||!n.has(d))&&l.push(d):d&&(d.length&&"string"!==e)&&Pc(d)})})(arguments);e?h=l.length:f&&(j=b,k(f))}return this},remove:function(){l&&c.each(arguments,function(a,b){for(var d;-1<(d=c.inArray(b,l,d));)l.splice(d,1),e&&(d<=h&&h--,d<=i&&i--)});
return this},has:function(a){return a?-1<c.inArray(a,l):!(!l||!l.length)},empty:function(){l=[];h=0;return this},disable:function(){l=m=f=void 0;return this},disabled:function(){return!l},lock:function(){m=void 0;f||n.disable();return this},locked:function(){return!m},fireWith:function(a,b){if(l&&(!g||m))b=b||[],b=[a,b.slice?b.slice():b],e?m.push(b):k(b);return this},fire:function(){n.fireWith(this,arguments);return this},fired:function(){return!!g}};return n};c.extend({Deferred:function(a){var b=
[["resolve","done",c.Callbacks("once memory"),"resolved"],["reject","fail",c.Callbacks("once memory"),"rejected"],["notify","progress",c.Callbacks("memory")]],d="pending",e={state:function(){return d},always:function(){f.done(arguments).fail(arguments);return this},then:function(){var a=arguments;return c.Deferred(function(d){c.each(b,function(b,j){var l=j[0],m=c.isFunction(a[b])&&a[b];f[j[1]](function(){var a=m&&m.apply(this,arguments);if(a&&c.isFunction(a.promise))a.promise().done(d.resolve).fail(d.reject).progress(d.notify);
else d[l+"With"](this===e?d.promise():this,m?[a]:arguments)})});a=null}).promise()},promise:function(a){return null!=a?c.extend(a,e):e}},f={};e.pipe=e.then;c.each(b,function(a,c){var i=c[2],j=c[3];e[c[1]]=i.add;j&&i.add(function(){d=j},b[a^1][2].disable,b[2][2].lock);f[c[0]]=function(){f[c[0]+"With"](this===f?e:this,arguments);return this};f[c[0]+"With"]=i.fireWith});e.promise(f);a&&a.call(f,f);return f},when:function(a){var b=0,d=Z.call(arguments),e=d.length,f=1!==e||a&&c.isFunction(a.promise)?e:
0,g=1===f?a:c.Deferred(),h=function(a,b,c){return function(d){b[a]=this;c[a]=1<arguments.length?Z.call(arguments):d;c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,l;if(1<e){i=Array(e);j=Array(e);for(l=Array(e);b<e;b++)d[b]&&c.isFunction(d[b].promise)?d[b].promise().done(h(b,l,d)).fail(g.reject).progress(h(b,j,i)):--f}f||g.resolveWith(l,d);return g.promise()}});var rd=c;var o={},kb,U,z,Ka,La,Ma,lb,oc,sa,r=p.createElement("div");r.setAttribute("className","t");r.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
kb=r.getElementsByTagName("*")||[];if((U=r.getElementsByTagName("a")[0])&&U.style&&kb.length){Ka=p.createElement("select");Ma=Ka.appendChild(p.createElement("option"));z=r.getElementsByTagName("input")[0];U.style.cssText="top:1px;float:left;opacity:.5";o.getSetAttribute="t"!==r.className;o.leadingWhitespace=3===r.firstChild.nodeType;o.tbody=!r.getElementsByTagName("tbody").length;o.htmlSerialize=!!r.getElementsByTagName("link").length;o.style=/top/.test(U.getAttribute("style"));o.hrefNormalized="/a"===
U.getAttribute("href");o.opacity=/^0.5/.test(U.style.opacity);o.cssFloat=!!U.style.cssFloat;o.checkOn=!!z.value;o.optSelected=Ma.selected;o.enctype=!!p.createElement("form").enctype;o.html5Clone="<:nav></:nav>"!==p.createElement("nav").cloneNode(!0).outerHTML;o.inlineBlockNeedsLayout=!1;o.shrinkWrapBlocks=!1;o.pixelPosition=!1;o.deleteExpando=!0;o.noCloneEvent=!0;o.reliableMarginRight=!0;o.boxSizingReliable=!0;z.checked=!0;o.noCloneChecked=z.cloneNode(!0).checked;Ka.disabled=!0;o.optDisabled=!Ma.disabled;
try{delete r.test}catch(Ud){o.deleteExpando=!1}z=p.createElement("input");z.setAttribute("value","");o.input=""===z.getAttribute("value");z.value="t";z.setAttribute("type","radio");o.radioValue="t"===z.value;z.setAttribute("checked","t");z.setAttribute("name","t");La=p.createDocumentFragment();La.appendChild(z);o.appendChecked=z.checked;o.checkClone=La.cloneNode(!0).cloneNode(!0).lastChild.checked;r.attachEvent&&(r.attachEvent("onclick",function(){o.noCloneEvent=!1}),r.cloneNode(!0).click());for(sa in{submit:!0,
change:!0,focusin:!0})r.setAttribute(lb="on"+sa,"t"),o[sa+"Bubbles"]=lb in q||!1===r.attributes[lb].expando;r.style.backgroundClip="content-box";r.cloneNode(!0).style.backgroundClip="";o.clearCloneStyle="content-box"===r.style.backgroundClip;for(sa in c(o))break;o.ownLast="0"!==sa;c(function(){var a,b,d=p.getElementsByTagName("body")[0];if(d){a=p.createElement("div");a.style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px";d.appendChild(a).appendChild(r);r.innerHTML=
"<table><tr><td></td><td>t</td></tr></table>";b=r.getElementsByTagName("td");b[0].style.cssText="padding:0;margin:0;border:0;display:none";oc=b[0].offsetHeight===0;b[0].style.display="";b[1].style.display="none";o.reliableHiddenOffsets=oc&&b[0].offsetHeight===0;r.innerHTML="";r.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";c.swap(d,d.style.zoom!=null?{zoom:1}:{},
function(){o.boxSizing=r.offsetWidth===4});if(q.getComputedStyle){o.pixelPosition=(q.getComputedStyle(r,null)||{}).top!=="1%";o.boxSizingReliable=(q.getComputedStyle(r,null)||{width:"4px"}).width==="4px";b=r.appendChild(p.createElement("div"));b.style.cssText=r.style.cssText="padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;";b.style.marginRight=b.style.width="0";r.style.width="1px";o.reliableMarginRight=!parseFloat((q.getComputedStyle(b,
null)||{}).marginRight)}if(typeof r.style.zoom!==M){r.innerHTML="";r.style.cssText="padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;width:1px;padding:1px;display:inline;zoom:1";o.inlineBlockNeedsLayout=r.offsetWidth===3;r.style.display="block";r.innerHTML="<div></div>";r.firstChild.style.width="5px";o.shrinkWrapBlocks=r.offsetWidth!==3;if(o.inlineBlockNeedsLayout)d.style.zoom=1}d.removeChild(a);a=r=b=b=null}});kb=Ka=La=Ma=
U=z=null}rd.support=o;var Jc=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,Ic=/([A-Z])/g;c.extend({cache:{},noData:{applet:!0,embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){a=a.nodeType?c.cache[a[c.expando]]:a[c.expando];return!!a&&!Qa(a)},data:function(a,b,c){return wb(a,b,c)},removeData:function(a,b){return xb(a,b)},_data:function(a,b,c){return wb(a,b,c,!0)},_removeData:function(a,b){return xb(a,b,!0)},acceptData:function(a){if(a.nodeType&&1!==a.nodeType&&9!==a.nodeType)return!1;
var b=a.nodeName&&c.noData[a.nodeName.toLowerCase()];return!b||!0!==b&&a.getAttribute("classid")===b}});c.fn.extend({data:function(a,b){var d,e,f=null,g=0,h=this[0];if(void 0===a){if(this.length&&(f=c.data(h),1===h.nodeType&&!c._data(h,"parsedAttrs"))){for(d=h.attributes;g<d.length;g++)e=d[g].name,0===e.indexOf("data-")&&(e=c.camelCase(e.slice(5)),yb(h,e,f[e]));c._data(h,"parsedAttrs",!0)}return f}return"object"===typeof a?this.each(function(){c.data(this,a)}):1<arguments.length?this.each(function(){c.data(this,
a,b)}):h?yb(h,a,c.data(h,a)):null},removeData:function(a){return this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a,b,d){var e;if(a)return b=(b||"fx")+"queue",e=c._data(a,b),d&&(!e||c.isArray(d)?e=c._data(a,b,c.makeArray(d)):e.push(d)),e||[]},dequeue:function(a,b){var b=b||"fx",d=c.queue(a,b),e=d.length,f=d.shift(),g=c._queueHooks(a,b),h=function(){c.dequeue(a,b)};"inprogress"===f&&(f=d.shift(),e--);f&&("fx"===b&&d.unshift("inprogress"),delete g.stop,f.call(a,h,g));!e&&g&&g.empty.fire()},
_queueHooks:function(a,b){var d=b+"queueHooks";return c._data(a,d)||c._data(a,d,{empty:c.Callbacks("once memory").add(function(){c._removeData(a,b+"queue");c._removeData(a,d)})})}});c.fn.extend({queue:function(a,b){var d=2;"string"!==typeof a&&(b=a,a="fx",d--);return arguments.length<d?c.queue(this[0],a):void 0===b?this:this.each(function(){var d=c.queue(this,a,b);c._queueHooks(this,a);a==="fx"&&d[0]!=="inprogress"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,
a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:a;return this.queue(b||"fx",function(b,c){var f=setTimeout(b,a);c.stop=function(){clearTimeout(f)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var d,e=1,f=c.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};"string"!==typeof a&&(b=a,a=void 0);for(a=a||"fx";h--;)if((d=c._data(g[h],a+"queueHooks"))&&d.empty)e++,d.empty.add(i);i();return f.promise(b)}});var ma,pc,mb=/[\t\r\n\f]/g,sd=/\r/g,td=/^(?:input|select|textarea|button|object)$/i,
ud=/^(?:a|area)$/i,nb=/^(?:checked|selected)$/i,ea=c.support.getSetAttribute,Na=c.support.input;c.fn.extend({attr:function(a,b){return c.access(this,c.attr,a,b,1<arguments.length)},removeAttr:function(a){return this.each(function(){c.removeAttr(this,a)})},prop:function(a,b){return c.access(this,c.prop,a,b,1<arguments.length)},removeProp:function(a){a=c.propFix[a]||a;return this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})},addClass:function(a){var b,d,e,f,g,h=0,i=this.length;b="string"===
typeof a&&a;if(c.isFunction(a))return this.each(function(b){c(this).addClass(a.call(this,b,this.className))});if(b)for(b=(a||"").match(N)||[];h<i;h++)if(d=this[h],e=1===d.nodeType&&(d.className?(" "+d.className+" ").replace(mb," "):" ")){for(g=0;f=b[g++];)0>e.indexOf(" "+f+" ")&&(e+=f+" ");d.className=c.trim(e)}return this},removeClass:function(a){var b,d,e,f,g,h=0,i=this.length;b=0===arguments.length||"string"===typeof a&&a;if(c.isFunction(a))return this.each(function(b){c(this).removeClass(a.call(this,
b,this.className))});if(b)for(b=(a||"").match(N)||[];h<i;h++)if(d=this[h],e=1===d.nodeType&&(d.className?(" "+d.className+" ").replace(mb," "):"")){for(g=0;f=b[g++];)for(;0<=e.indexOf(" "+f+" ");)e=e.replace(" "+f+" "," ");d.className=a?c.trim(e):""}return this},toggleClass:function(a,b){var d=typeof a;return"boolean"===typeof b&&"string"===d?b?this.addClass(a):this.removeClass(a):c.isFunction(a)?this.each(function(d){c(this).toggleClass(a.call(this,d,this.className,b),b)}):this.each(function(){if("string"===
d)for(var b,f=0,g=c(this),h=a.match(N)||[];b=h[f++];)g.hasClass(b)?g.removeClass(b):g.addClass(b);else if(d===M||"boolean"===d)this.className&&c._data(this,"__className__",this.className),this.className=this.className||!1===a?"":c._data(this,"__className__")||""})},hasClass:function(a){for(var a=" "+a+" ",b=0,c=this.length;b<c;b++)if(1===this[b].nodeType&&0<=(" "+this[b].className+" ").replace(mb," ").indexOf(a))return!0;return!1},val:function(a){var b,d,e,f=this[0];if(arguments.length)return e=c.isFunction(a),
this.each(function(b){if(1===this.nodeType&&(b=e?a.call(this,b,c(this).val()):a,null==b?b="":"number"===typeof b?b+="":c.isArray(b)&&(b=c.map(b,function(a){return a==null?"":a+""})),d=c.valHooks[this.type]||c.valHooks[this.nodeName.toLowerCase()],!d||!("set"in d)||void 0===d.set(this,b,"value")))this.value=b});if(f){if((d=c.valHooks[f.type]||c.valHooks[f.nodeName.toLowerCase()])&&"get"in d&&void 0!==(b=d.get(f,"value")))return b;b=f.value;return"string"===typeof b?b.replace(sd,""):null==b?"":b}}});
c.extend({valHooks:{option:{get:function(a){var b=c.find.attr(a,"value");return null!=b?b:a.text}},select:{get:function(a){for(var b,d=a.options,e=a.selectedIndex,f=(a="select-one"===a.type||0>e)?null:[],g=a?e+1:d.length,h=0>e?g:a?e:0;h<g;h++)if(b=d[h],(b.selected||h===e)&&(c.support.optDisabled?!b.disabled:null===b.getAttribute("disabled"))&&(!b.parentNode.disabled||!c.nodeName(b.parentNode,"optgroup"))){b=c(b).val();if(a)return b;f.push(b)}return f},set:function(a,b){for(var d,e,f=a.options,g=c.makeArray(b),
h=f.length;h--;)if(e=f[h],e.selected=0<=c.inArray(c(e).val(),g))d=!0;d||(a.selectedIndex=-1);return g}}},attr:function(a,b,d){var e,f,g=a.nodeType;if(a&&!(3===g||8===g||2===g)){if(typeof a.getAttribute===M)return c.prop(a,b,d);if(1!==g||!c.isXMLDoc(a))b=b.toLowerCase(),e=c.attrHooks[b]||(c.expr.match.bool.test(b)?pc:ma);if(void 0!==d)if(null===d)c.removeAttr(a,b);else{if(e&&"set"in e&&void 0!==(f=e.set(a,d,b)))return f;a.setAttribute(b,d+"");return d}else{if(e&&"get"in e&&null!==(f=e.get(a,b)))return f;
f=c.find.attr(a,b);return null==f?void 0:f}}},removeAttr:function(a,b){var d,e,f=0,g=b&&b.match(N);if(g&&1===a.nodeType)for(;d=g[f++];)e=c.propFix[d]||d,c.expr.match.bool.test(d)?Na&&ea||!nb.test(d)?a[e]=!1:a[c.camelCase("default-"+d)]=a[e]=!1:c.attr(a,d,""),a.removeAttribute(ea?d:e)},attrHooks:{type:{set:function(a,b){if(!c.support.radioValue&&"radio"===b&&c.nodeName(a,"input")){var d=a.value;a.setAttribute("type",b);d&&(a.value=d);return b}}}},propFix:{"for":"htmlFor","class":"className"},prop:function(a,
b,d){var e,f,g;g=a.nodeType;if(a&&!(3===g||8===g||2===g)){if(g=1!==g||!c.isXMLDoc(a))b=c.propFix[b]||b,f=c.propHooks[b];return void 0!==d?f&&"set"in f&&void 0!==(e=f.set(a,d,b))?e:a[b]=d:f&&"get"in f&&null!==(e=f.get(a,b))?e:a[b]}},propHooks:{tabIndex:{get:function(a){var b=c.find.attr(a,"tabindex");return b?parseInt(b,10):td.test(a.nodeName)||ud.test(a.nodeName)&&a.href?0:-1}}}});pc={set:function(a,b,d){!1===b?c.removeAttr(a,d):Na&&ea||!nb.test(d)?a.setAttribute(!ea&&c.propFix[d]||d,d):a[c.camelCase("default-"+
d)]=a[d]=!0;return d}};c.each(c.expr.match.bool.source.match(/\w+/g),function(a,b){var d=c.expr.attrHandle[b]||c.find.attr;c.expr.attrHandle[b]=Na&&ea||!nb.test(b)?function(a,b,g){var h=c.expr.attrHandle[b],a=g?void 0:(c.expr.attrHandle[b]=void 0)!=d(a,b,g)?b.toLowerCase():null;c.expr.attrHandle[b]=h;return a}:function(a,b,d){return d?void 0:a[c.camelCase("default-"+b)]?b.toLowerCase():null}});if(!Na||!ea)c.attrHooks.value={set:function(a,b,d){if(c.nodeName(a,"input"))a.defaultValue=b;else return ma&&
ma.set(a,b,d)}};ea||(ma={set:function(a,b,c){var e=a.getAttributeNode(c);e||a.setAttributeNode(e=a.ownerDocument.createAttribute(c));e.value=b+="";return"value"===c||b===a.getAttribute(c)?b:void 0}},c.expr.attrHandle.id=c.expr.attrHandle.name=c.expr.attrHandle.coords=function(a,b,c){var e;return c?void 0:(e=a.getAttributeNode(b))&&""!==e.value?e.value:null},c.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:ma.set},c.attrHooks.contenteditable=
{set:function(a,b,c){ma.set(a,""===b?!1:b,c)}},c.each(["width","height"],function(a,b){c.attrHooks[b]={set:function(a,c){if(""===c)return a.setAttribute(b,"auto"),c}}}));c.support.hrefNormalized||c.each(["href","src"],function(a,b){c.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}});c.support.style||(c.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});c.support.optSelected||(c.propHooks.selected={get:function(a){if(a=a.parentNode){a.selectedIndex;
a.parentNode&&a.parentNode.selectedIndex}return null}});c.each("tabIndex readOnly maxLength cellSpacing cellPadding rowSpan colSpan useMap frameBorder contentEditable".split(" "),function(){c.propFix[this.toLowerCase()]=this});c.support.enctype||(c.propFix.enctype="encoding");c.each(["radio","checkbox"],function(){c.valHooks[this]={set:function(a,b){if(c.isArray(b))return a.checked=c.inArray(c(a).val(),b)>=0}};if(!c.support.checkOn)c.valHooks[this].get=function(a){return a.getAttribute("value")===
null?"on":a.value}});var ob=/^(?:input|select|textarea)$/i,vd=/^key/,wd=/^(?:mouse|contextmenu)|click/,qc=/^(?:focusinfocus|focusoutblur)$/,rc=/^([^.]*)(?:\.(.+)|)$/;c.event={global:{},add:function(a,b,d,e,f){var g,h,i,j,l,m,k,n,o;if(i=c._data(a)){if(d.handler){j=d;d=j.handler;f=j.selector}if(!d.guid)d.guid=c.guid++;if(!(h=i.events))h=i.events={};if(!(l=i.handle)){l=i.handle=function(a){return typeof c!==M&&(!a||c.event.triggered!==a.type)?c.event.dispatch.apply(l.elem,arguments):void 0};l.elem=a}b=
(b||"").match(N)||[""];for(i=b.length;i--;){g=rc.exec(b[i])||[];n=m=g[1];o=(g[2]||"").split(".").sort();if(n){g=c.event.special[n]||{};n=(f?g.delegateType:g.bindType)||n;g=c.event.special[n]||{};m=c.extend({type:n,origType:m,data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&c.expr.match.needsContext.test(f),namespace:o.join(".")},j);if(!(k=h[n])){k=h[n]=[];k.delegateCount=0;if(!g.setup||g.setup.call(a,e,o,l)===false)a.addEventListener?a.addEventListener(n,l,false):a.attachEvent&&a.attachEvent("on"+
n,l)}if(g.add){g.add.call(a,m);if(!m.handler.guid)m.handler.guid=d.guid}f?k.splice(k.delegateCount++,0,m):k.push(m);c.event.global[n]=true}}a=null}},remove:function(a,b,d,e,f){var g,h,i,j,l,m,k,n,o,p,q,r=c.hasData(a)&&c._data(a);if(r&&(m=r.events)){b=(b||"").match(N)||[""];for(l=b.length;l--;){i=rc.exec(b[l])||[];o=q=i[1];p=(i[2]||"").split(".").sort();if(o){k=c.event.special[o]||{};o=(e?k.delegateType:k.bindType)||o;n=m[o]||[];i=i[2]&&RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)");for(j=g=n.length;g--;){h=
n[g];if((f||q===h.origType)&&(!d||d.guid===h.guid)&&(!i||i.test(h.namespace))&&(!e||e===h.selector||e==="**"&&h.selector)){n.splice(g,1);h.selector&&n.delegateCount--;k.remove&&k.remove.call(a,h)}}if(j&&!n.length){(!k.teardown||k.teardown.call(a,p,r.handle)===false)&&c.removeEvent(a,o,r.handle);delete m[o]}}else for(o in m)c.event.remove(a,o+b[l],d,e,true)}if(c.isEmptyObject(m)){delete r.handle;c._removeData(a,"events")}}},trigger:function(a,b,d,e){var f,g,h,i,j,l,m=[d||p],k=ja.call(a,"type")?a.type:
a;j=ja.call(a,"namespace")?a.namespace.split("."):[];h=f=d=d||p;if(!(d.nodeType===3||d.nodeType===8)&&!qc.test(k+c.event.triggered)){if(k.indexOf(".")>=0){j=k.split(".");k=j.shift();j.sort()}g=k.indexOf(":")<0&&"on"+k;a=a[c.expando]?a:new c.Event(k,typeof a==="object"&&a);a.isTrigger=e?2:3;a.namespace=j.join(".");a.namespace_re=a.namespace?RegExp("(^|\\.)"+j.join("\\.(?:.*\\.|)")+"(\\.|$)"):null;a.result=void 0;if(!a.target)a.target=d;b=b==null?[a]:c.makeArray(b,[a]);j=c.event.special[k]||{};if(e||
!(j.trigger&&j.trigger.apply(d,b)===false)){if(!e&&!j.noBubble&&!c.isWindow(d)){i=j.delegateType||k;if(!qc.test(i+k))h=h.parentNode;for(;h;h=h.parentNode){m.push(h);f=h}if(f===(d.ownerDocument||p))m.push(f.defaultView||f.parentWindow||q)}for(l=0;(h=m[l++])&&!a.isPropagationStopped();){a.type=l>1?i:j.bindType||k;(f=(c._data(h,"events")||{})[a.type]&&c._data(h,"handle"))&&f.apply(h,b);(f=g&&h[g])&&(c.acceptData(h)&&f.apply&&f.apply(h,b)===false)&&a.preventDefault()}a.type=k;if(!e&&!a.isDefaultPrevented()&&
(!j._default||j._default.apply(m.pop(),b)===false)&&c.acceptData(d)&&g&&d[k]&&!c.isWindow(d)){(f=d[g])&&(d[g]=null);c.event.triggered=k;try{d[k]()}catch(n){}c.event.triggered=void 0;f&&(d[g]=f)}return a.result}}},dispatch:function(a){var a=c.event.fix(a),b,d,e,f,g=[],h=Z.call(arguments);b=(c._data(this,"events")||{})[a.type]||[];var i=c.event.special[a.type]||{};h[0]=a;a.delegateTarget=this;if(!(i.preDispatch&&i.preDispatch.call(this,a)===false)){g=c.event.handlers.call(this,a,b);for(b=0;(e=g[b++])&&
!a.isPropagationStopped();){a.currentTarget=e.elem;for(f=0;(d=e.handlers[f++])&&!a.isImmediatePropagationStopped();)if(!a.namespace_re||a.namespace_re.test(d.namespace)){a.handleObj=d;a.data=d.data;d=((c.event.special[d.origType]||{}).handle||d.handler).apply(e.elem,h);if(d!==void 0&&(a.result=d)===false){a.preventDefault();a.stopPropagation()}}}i.postDispatch&&i.postDispatch.call(this,a);return a.result}},handlers:function(a,b){var d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&(!a.button||
a.type!=="click"))for(;j!=this;j=j.parentNode||this)if(j.nodeType===1&&(j.disabled!==true||a.type!=="click")){f=[];for(g=0;g<i;g++){e=b[g];d=e.selector+" ";f[d]===void 0&&(f[d]=e.needsContext?c(d,this).index(j)>=0:c.find(d,this,null,[j]).length);f[d]&&f.push(e)}f.length&&h.push({elem:j,handlers:f})}i<b.length&&h.push({elem:this,handlers:b.slice(i)});return h},fix:function(a){if(a[c.expando])return a;var b,d,e;b=a.type;var f=a,g=this.fixHooks[b];g||(this.fixHooks[b]=g=wd.test(b)?this.mouseHooks:vd.test(b)?
this.keyHooks:{});e=g.props?this.props.concat(g.props):this.props;a=new c.Event(f);for(b=e.length;b--;){d=e[b];a[d]=f[d]}if(!a.target)a.target=f.srcElement||p;if(a.target.nodeType===3)a.target=a.target.parentNode;a.metaKey=!!a.metaKey;return g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:["char","charCode","key","keyCode"],filter:function(a,b){if(a.which==
null)a.which=b.charCode!=null?b.charCode:b.keyCode;return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,e,f=b.button,g=b.fromElement;if(a.pageX==null&&b.clientX!=null){c=a.target.ownerDocument||p;e=c.documentElement;c=c.body;a.pageX=b.clientX+(e&&e.scrollLeft||c&&c.scrollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0);a.pageY=b.clientY+(e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||
c&&c.clientTop||0)}if(!a.relatedTarget&&g)a.relatedTarget=g===a.target?b.toElement:g;if(!a.which&&f!==void 0)a.which=f&1?1:f&2?3:f&4?2:0;return a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==zb()&&this.focus)try{this.focus();return false}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){if(this===zb()&&this.blur){this.blur();return false}},delegateType:"focusout"},click:{trigger:function(){if(c.nodeName(this,"input")&&this.type==="checkbox"&&this.click){this.click();
return false}},_default:function(a){return c.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){if(a.result!==void 0)a.originalEvent.returnValue=a.result}}},simulate:function(a,b,d,e){a=c.extend(new c.Event,d,{type:a,isSimulated:true,originalEvent:{}});e?c.event.trigger(a,null,b):c.event.dispatch.call(b,a);a.isDefaultPrevented()&&d.preventDefault()}};c.removeEvent=p.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,false)}:function(a,b,c){b="on"+b;if(a.detachEvent){typeof a[b]===
M&&(a[b]=null);a.detachEvent(b,c)}};c.Event=function(a,b){if(!(this instanceof c.Event))return new c.Event(a,b);if(a&&a.type){this.originalEvent=a;this.type=a.type;this.isDefaultPrevented=a.defaultPrevented||a.returnValue===false||a.getPreventDefault&&a.getPreventDefault()?ua:ha}else this.type=a;b&&c.extend(this,b);this.timeStamp=a&&a.timeStamp||c.now();this[c.expando]=true};c.Event.prototype={isDefaultPrevented:ha,isPropagationStopped:ha,isImmediatePropagationStopped:ha,preventDefault:function(){var a=
this.originalEvent;this.isDefaultPrevented=ua;if(a)a.preventDefault?a.preventDefault():a.returnValue=false},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ua;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=ua;this.stopPropagation()}};c.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.special[a]={delegateType:b,bindType:b,handle:function(a){var e,f=a.relatedTarget,
g=a.handleObj;if(!f||f!==this&&!c.contains(this,f)){a.type=g.origType;e=g.handler.apply(this,arguments);a.type=b}return e}}});c.support.submitBubbles||(c.event.special.submit={setup:function(){if(c.nodeName(this,"form"))return false;c.event.add(this,"click._submit keypress._submit",function(a){a=a.target;if((a=c.nodeName(a,"input")||c.nodeName(a,"button")?a.form:void 0)&&!c._data(a,"submitBubbles")){c.event.add(a,"submit._submit",function(a){a._submit_bubble=true});c._data(a,"submitBubbles",true)}})},
postDispatch:function(a){if(a._submit_bubble){delete a._submit_bubble;this.parentNode&&!a.isTrigger&&c.event.simulate("submit",this.parentNode,a,true)}},teardown:function(){if(c.nodeName(this,"form"))return false;c.event.remove(this,"._submit")}});c.support.changeBubbles||(c.event.special.change={setup:function(){if(ob.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio"){c.event.add(this,"propertychange._change",function(a){if(a.originalEvent.propertyName==="checked")this._just_changed=
true});c.event.add(this,"click._change",function(a){if(this._just_changed&&!a.isTrigger)this._just_changed=false;c.event.simulate("change",this,a,true)})}return false}c.event.add(this,"beforeactivate._change",function(a){a=a.target;if(ob.test(a.nodeName)&&!c._data(a,"changeBubbles")){c.event.add(a,"change._change",function(a){this.parentNode&&(!a.isSimulated&&!a.isTrigger)&&c.event.simulate("change",this.parentNode,a,true)});c._data(a,"changeBubbles",true)}})},handle:function(a){var b=a.target;if(this!==
b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){c.event.remove(this,"._change");return!ob.test(this.nodeName)}});c.support.focusinBubbles||c.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){c.event.simulate(b,a.target,c.event.fix(a),true)};c.event.special[b]={setup:function(){d++===0&&p.addEventListener(a,e,true)},teardown:function(){--d===0&&p.removeEventListener(a,e,true)}}});c.fn.extend({on:function(a,
b,d,e,f){var g,h;if(typeof a==="object"){if(typeof b!=="string"){d=d||b;b=void 0}for(g in a)this.on(g,b,d,a[g],f);return this}if(d==null&&e==null){e=b;d=b=void 0}else if(e==null)if(typeof b==="string"){e=d;d=void 0}else{e=d;d=b;b=void 0}if(e===false)e=ha;else if(!e)return this;if(f===1){h=e;e=function(a){c().off(a);return h.apply(this,arguments)};e.guid=h.guid||(h.guid=c.guid++)}return this.each(function(){c.event.add(this,a,e,d,b)})},one:function(a,b,c,e){return this.on(a,b,c,e,1)},off:function(a,
b,d){var e;if(a&&a.preventDefault&&a.handleObj){e=a.handleObj;c(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler);return this}if(typeof a==="object"){for(e in a)this.off(e,b,a[e]);return this}if(b===false||typeof b==="function"){d=b;b=void 0}d===false&&(d=ha);return this.each(function(){c.event.remove(this,a,d,b)})},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){var d=this[0];if(d)return c.event.trigger(a,
b,d,true)}});var Kc=/^.[^:#\[\.,]*$/,xd=/^(?:parents|prev(?:Until|All))/,sc=c.expr.match.needsContext,yd={children:!0,contents:!0,next:!0,prev:!0};c.fn.extend({find:function(a){var b,d=[],e=this,f=e.length;if(typeof a!=="string")return this.pushStack(c(a).filter(function(){for(b=0;b<f;b++)if(c.contains(e[b],this))return true}));for(b=0;b<f;b++)c.find(a,e[b],d);d=this.pushStack(f>1?c.unique(d):d);d.selector=this.selector?this.selector+" "+a:a;return d},has:function(a){var b,d=c(a,this),e=d.length;
return this.filter(function(){for(b=0;b<e;b++)if(c.contains(this,d[b]))return true})},not:function(a){return this.pushStack(Ra(this,a||[],true))},filter:function(a){return this.pushStack(Ra(this,a||[],false))},is:function(a){return!!Ra(this,typeof a==="string"&&sc.test(a)?c(a):a||[],false).length},closest:function(a,b){for(var d,e=0,f=this.length,g=[],h=sc.test(a)||typeof a!=="string"?c(a,b||this.context):0;e<f;e++)for(d=this[e];d&&d!==b;d=d.parentNode)if(d.nodeType<11&&(h?h.index(d)>-1:d.nodeType===
1&&c.find.matchesSelector(d,a))){g.push(d);break}return this.pushStack(g.length>1?c.unique(g):g)},index:function(a){return!a?this[0]&&this[0].parentNode?this.first().prevAll().length:-1:typeof a==="string"?c.inArray(this[0],c(a)):c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var d=typeof a==="string"?c(a,b):c.makeArray(a&&a.nodeType?[a]:a),d=c.merge(this.get(),d);return this.pushStack(c.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}});c.each({parent:function(a){return(a=
a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return c.dir(a,"parentNode",d)},next:function(a){return Ab(a,"nextSibling")},prev:function(a){return Ab(a,"previousSibling")},nextAll:function(a){return c.dir(a,"nextSibling")},prevAll:function(a){return c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return c.dir(a,"previousSibling",d)},siblings:function(a){return c.sibling((a.parentNode||
{}).firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:c.merge([],a.childNodes)}},function(a,b){c.fn[a]=function(d,e){var f=c.map(this,b,d);a.slice(-5)!=="Until"&&(e=d);e&&typeof e==="string"&&(f=c.filter(e,f));if(this.length>1){yd[a]||(f=c.unique(f));xd.test(a)&&(f=f.reverse())}return this.pushStack(f)}});c.extend({filter:function(a,b,d){var e=b[0];d&&(a=":not("+a+")");return b.length===
1&&e.nodeType===1?c.find.matchesSelector(e,a)?[e]:[]:c.find.matches(a,c.grep(b,function(a){return a.nodeType===1}))},dir:function(a,b,d){for(var e=[],a=a[b];a&&a.nodeType!==9&&(d===void 0||a.nodeType!==1||!c(a).is(d));){a.nodeType===1&&e.push(a);a=a[b]}return e},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var Cb="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
zd=/ jQuery\d+="(?:null|\d+)"/g,tc=RegExp("<(?:"+Cb+")[\\s/>]","i"),pb=/^\s+/,uc=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,vc=/<([\w:]+)/,wc=/<tbody/i,Ad=/<|&#?\w+;/,Bd=/<(?:script|style|link)/i,Ta=/^(?:checkbox|radio)$/i,Cd=/checked\s*(?:[^=]|=\s*.checked.)/i,xc=/^$|\/(?:java|ecma)script/i,Lc=/^true\/(.*)/,Dd=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,G={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],
param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:c.support.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},qb=Bb(p).appendChild(p.createElement("div"));G.optgroup=G.option;G.tbody=G.tfoot=G.colgroup=G.caption=G.thead;G.th=G.td;c.fn.extend({text:function(a){return c.access(this,function(a){return a===void 0?c.text(this):
this.empty().append((this[0]&&this[0].ownerDocument||p).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){(this.nodeType===1||this.nodeType===11||this.nodeType===9)&&Db(this,a).appendChild(a)})},prepend:function(){return this.domManip(arguments,function(a){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var b=Db(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&
this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var d,e=a?c.filter(a,this):this,f=0;(d=e[f])!=null;f++){!b&&d.nodeType===1&&c.cleanData(x(d));if(d.parentNode){b&&c.contains(d.ownerDocument,d)&&Sa(x(d,"script"));d.parentNode.removeChild(d)}}return this},empty:function(){for(var a,b=0;(a=this[b])!=null;b++){for(a.nodeType===1&&c.cleanData(x(a,false));a.firstChild;)a.removeChild(a.firstChild);
if(a.options&&c.nodeName(a,"select"))a.options.length=0}return this},clone:function(a,b){a=a==null?false:a;b=b==null?a:b;return this.map(function(){return c.clone(this,a,b)})},html:function(a){return c.access(this,function(a){var d=this[0]||{},e=0,f=this.length;if(a===void 0)return d.nodeType===1?d.innerHTML.replace(zd,""):void 0;if(typeof a==="string"&&!Bd.test(a)&&(c.support.htmlSerialize||!tc.test(a))&&(c.support.leadingWhitespace||!pb.test(a))&&!G[(vc.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(uc,
"<$1></$2>");try{for(;e<f;e++){d=this[e]||{};if(d.nodeType===1){c.cleanData(x(d,false));d.innerHTML=a}}d=0}catch(g){}}d&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=c.map(this,function(a){return[a.nextSibling,a.parentNode]}),b=0;this.domManip(arguments,function(d){var e=a[b++],f=a[b++];if(f){if(e&&e.parentNode!==f)e=this.nextSibling;c(this).remove();f.insertBefore(d,e)}},true);return b?this:this.remove()},detach:function(a){return this.remove(a,true)},domManip:function(a,
b,d){var a=Zb.apply([],a),e,f,g,h,i=0,j=this.length,l=this,m=j-1,k=a[0],n=c.isFunction(k);if(n||!(j<=1||typeof k!=="string"||c.support.checkClone||!Cd.test(k)))return this.each(function(c){var e=l.eq(c);n&&(a[0]=k.call(this,c,e.html()));e.domManip(a,b,d)});if(j){h=c.buildFragment(a,this[0].ownerDocument,false,!d&&this);e=h.firstChild;h.childNodes.length===1&&(h=e);if(e){g=c.map(x(h,"script"),Eb);for(f=g.length;i<j;i++){e=h;if(i!==m){e=c.clone(e,true,true);f&&c.merge(g,x(e,"script"))}b.call(this[i],
e,i)}if(f){h=g[g.length-1].ownerDocument;c.map(g,Fb);for(i=0;i<f;i++){e=g[i];if(xc.test(e.type||"")&&!c._data(e,"globalEval")&&c.contains(h,e))e.src?c._evalUrl(e.src):c.globalEval((e.text||e.textContent||e.innerHTML||"").replace(Dd,""))}}h=e=null}}return this}});c.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){c.fn[a]=function(a){for(var e=0,f=[],g=c(a),h=g.length-1;e<=h;e++){a=e===h?this:this.clone(true);c(g[e])[b](a);
Xa.apply(f,a.get())}return this.pushStack(f)}});c.extend({clone:function(a,b,d){var e,f,g,h,i,j=c.contains(a.ownerDocument,a);if(c.support.html5Clone||c.isXMLDoc(a)||!tc.test("<"+a.nodeName+">"))g=a.cloneNode(true);else{qb.innerHTML=a.outerHTML;qb.removeChild(g=qb.firstChild)}if((!c.support.noCloneEvent||!c.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!c.isXMLDoc(a)){e=x(g);i=x(a);for(h=0;(f=i[h])!=null;++h)if(e[h]){var l=e[h],m=void 0,k=void 0,n=void 0;if(l.nodeType===1){m=l.nodeName.toLowerCase();
if(!c.support.noCloneEvent&&l[c.expando]){n=c._data(l);for(k in n.events)c.removeEvent(l,k,n.handle);l.removeAttribute(c.expando)}if(m==="script"&&l.text!==f.text){Eb(l).text=f.text;Fb(l)}else if(m==="object"){if(l.parentNode)l.outerHTML=f.outerHTML;if(c.support.html5Clone&&f.innerHTML&&!c.trim(l.innerHTML))l.innerHTML=f.innerHTML}else if(m==="input"&&Ta.test(f.type)){l.defaultChecked=l.checked=f.checked;if(l.value!==f.value)l.value=f.value}else if(m==="option")l.defaultSelected=l.selected=f.defaultSelected;
else if(m==="input"||m==="textarea")l.defaultValue=f.defaultValue}}}if(b)if(d){i=i||x(a);e=e||x(g);for(h=0;(f=i[h])!=null;h++)Gb(f,e[h])}else Gb(a,g);e=x(g,"script");e.length>0&&Sa(e,!j&&x(a,"script"));return g},buildFragment:function(a,b,d,e){for(var f,g,h,i,j,l,m=a.length,k=Bb(b),n=[],o=0;o<m;o++)if((g=a[o])||g===0)if(c.type(g)==="object")c.merge(n,g.nodeType?[g]:g);else if(Ad.test(g)){h=h||k.appendChild(b.createElement("div"));i=(vc.exec(g)||["",""])[1].toLowerCase();l=G[i]||G._default;h.innerHTML=
l[1]+g.replace(uc,"<$1></$2>")+l[2];for(f=l[0];f--;)h=h.lastChild;!c.support.leadingWhitespace&&pb.test(g)&&n.push(b.createTextNode(pb.exec(g)[0]));if(!c.support.tbody)for(f=(g=i==="table"&&!wc.test(g)?h.firstChild:l[1]==="<table>"&&!wc.test(g)?h:0)&&g.childNodes.length;f--;)c.nodeName(j=g.childNodes[f],"tbody")&&!j.childNodes.length&&g.removeChild(j);c.merge(n,h.childNodes);for(h.textContent="";h.firstChild;)h.removeChild(h.firstChild);h=k.lastChild}else n.push(b.createTextNode(g));h&&k.removeChild(h);
c.support.appendChecked||c.grep(x(n,"input"),Mc);for(o=0;g=n[o++];)if(!(e&&c.inArray(g,e)!==-1)){a=c.contains(g.ownerDocument,g);h=x(k.appendChild(g),"script");a&&Sa(h);if(d)for(f=0;g=h[f++];)xc.test(g.type||"")&&d.push(g)}return k},cleanData:function(a,b){for(var d,e,f,g,h=0,i=c.expando,j=c.cache,l=c.support.deleteExpando,m=c.event.special;(d=a[h])!=null;h++)if(b||c.acceptData(d))if(g=(f=d[i])&&j[f]){if(g.events)for(e in g.events)m[e]?c.event.remove(d,e):c.removeEvent(d,e,g.handle);if(j[f]){delete j[f];
l?delete d[i]:typeof d.removeAttribute!==M?d.removeAttribute(i):d[i]=null;ga.push(f)}}},_evalUrl:function(a){return c.ajax({url:a,type:"GET",dataType:"script",async:false,global:false,"throws":true})}});c.fn.extend({wrapAll:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapAll(a.call(this,b))});if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var a=this;a.firstChild&&a.firstChild.nodeType===1;)a=a.firstChild;
return a}).append(this)}return this},wrapInner:function(a){return c.isFunction(a)?this.each(function(b){c(this).wrapInner(a.call(this,b))}):this.each(function(){var b=c(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){var b=c.isFunction(a);return this.each(function(d){c(this).wrapAll(b?a.call(this,d):a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWith(this.childNodes)}).end()}});var pa,X,Y,rb=/alpha\([^)]*\)/i,Ed=/opacity\s*=\s*([^)]*)/,
Fd=/^(top|right|bottom|left)$/,Gd=/^(none|table(?!-c[ea]).+)/,yc=/^margin/,Nc=RegExp("^("+Aa+")(.*)$","i"),va=RegExp("^("+Aa+")(?!px)[a-z%]+$","i"),Hd=RegExp("^([+-])=("+Aa+")","i"),Ob={BODY:"block"},Id={position:"absolute",visibility:"hidden",display:"block"},zc={letterSpacing:0,fontWeight:400},W=["Top","Right","Bottom","Left"],Ib=["Webkit","O","Moz","ms"];c.fn.extend({css:function(a,b){return c.access(this,function(a,b,f){var g,h={},i=0;if(c.isArray(b)){g=X(a);for(f=b.length;i<f;i++)h[b[i]]=c.css(a,
b[i],false,g);return h}return f!==void 0?c.style(a,b,f):c.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,true)},hide:function(){return Jb(this)},toggle:function(a){return typeof a==="boolean"?a?this.show():this.hide():this.each(function(){oa(this)?c(this).show():c(this).hide()})}});c.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Y(a,"opacity");return c===""?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,
zIndex:!0,zoom:!0},cssProps:{"float":c.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,d,e){if(a&&!(a.nodeType===3||a.nodeType===8||!a.style)){var f,g,h,i=c.camelCase(b),j=a.style,b=c.cssProps[i]||(c.cssProps[i]=Hb(j,i));h=c.cssHooks[b]||c.cssHooks[i];if(d!==void 0){g=typeof d;if(g==="string"&&(f=Hd.exec(d))){d=(f[1]+1)*f[2]+parseFloat(c.css(a,b));g="number"}if(!(d==null||g==="number"&&isNaN(d))){g==="number"&&!c.cssNumber[i]&&(d=d+"px");!c.support.clearCloneStyle&&(d===""&&b.indexOf("background")===
0)&&(j[b]="inherit");if(!h||!("set"in h)||(d=h.set(a,d,e))!==void 0)try{j[b]=d}catch(l){}}}else return h&&"get"in h&&(f=h.get(a,false,e))!==void 0?f:j[b]}},css:function(a,b,d,e){var f,g;g=c.camelCase(b);b=c.cssProps[g]||(c.cssProps[g]=Hb(a.style,g));(g=c.cssHooks[b]||c.cssHooks[g])&&"get"in g&&(f=g.get(a,true,d));f===void 0&&(f=Y(a,b,e));f==="normal"&&b in zc&&(f=zc[b]);if(d===""||d){a=parseFloat(f);return d===true||c.isNumeric(a)?a||0:f}return f}});q.getComputedStyle?(X=function(a){return q.getComputedStyle(a,
null)},Y=function(a,b,d){var e,f=(d=d||X(a))?d.getPropertyValue(b)||d[b]:void 0,g=a.style;if(d){f===""&&!c.contains(a.ownerDocument,a)&&(f=c.style(a,b));if(va.test(f)&&yc.test(b)){a=g.width;b=g.minWidth;e=g.maxWidth;g.minWidth=g.maxWidth=g.width=f;f=d.width;g.width=a;g.minWidth=b;g.maxWidth=e}}return f}):p.documentElement.currentStyle&&(X=function(a){return a.currentStyle},Y=function(a,b,c){var e,f,g=(c=c||X(a))?c[b]:void 0,h=a.style;g==null&&(h&&h[b])&&(g=h[b]);if(va.test(g)&&!Fd.test(b)){c=h.left;
if(f=(e=a.runtimeStyle)&&e.left)e.left=a.currentStyle.left;h.left=b==="fontSize"?"1em":g;g=h.pixelLeft+"px";h.left=c;if(f)e.left=f}return g===""?"auto":g});c.each(["height","width"],function(a,b){c.cssHooks[b]={get:function(a,e,f){if(e)return a.offsetWidth===0&&Gd.test(c.css(a,"display"))?c.swap(a,Id,function(){return Nb(a,b,f)}):Nb(a,b,f)},set:function(a,e,f){var g=f&&X(a);return Lb(a,e,f?Mb(a,b,f,c.support.boxSizing&&c.css(a,"boxSizing",false,g)==="border-box",g):0)}}});c.support.opacity||(c.cssHooks.opacity=
{get:function(a,b){return Ed.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?0.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var d=a.style,e=a.currentStyle,f=c.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=e&&e.filter||d.filter||"";d.zoom=1;if((b>=1||b==="")&&c.trim(g.replace(rb,""))===""&&d.removeAttribute){d.removeAttribute("filter");if(b===""||e&&!e.filter)return}d.filter=rb.test(g)?g.replace(rb,f):g+" "+f}});c(function(){if(!c.support.reliableMarginRight)c.cssHooks.marginRight=
{get:function(a,b){if(b)return c.swap(a,{display:"inline-block"},Y,[a,"marginRight"])}};!c.support.pixelPosition&&c.fn.position&&c.each(["top","left"],function(a,b){c.cssHooks[b]={get:function(a,e){if(e){e=Y(a,b);return va.test(e)?c(a).position()[b]+"px":e}}}})});c.expr&&c.expr.filters&&(c.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||!c.support.reliableHiddenOffsets&&(a.style&&a.style.display||c.css(a,"display"))==="none"},c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)});
c.each({margin:"",padding:"",border:"Width"},function(a,b){c.cssHooks[a+b]={expand:function(c){for(var e=0,f={},c=typeof c==="string"?c.split(" "):[c];e<4;e++)f[a+W[e]+b]=c[e]||c[e-2]||c[0];return f}};if(!yc.test(a))c.cssHooks[a+b].set=Lb});var Jd=/%20/g,Oc=/\[\]$/,Ac=/\r?\n/g,Kd=/^(?:submit|button|image|reset|file)$/i,Ld=/^(?:input|select|textarea|keygen)/i;c.fn.extend({serialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=c.prop(this,
"elements");return a?c.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!c(this).is(":disabled")&&Ld.test(this.nodeName)&&!Kd.test(a)&&(this.checked||!Ta.test(a))}).map(function(a,b){var d=c(this).val();return d==null?null:c.isArray(d)?c.map(d,function(a){return{name:b.name,value:a.replace(Ac,"\r\n")}}):{name:b.name,value:d.replace(Ac,"\r\n")}}).get()}});c.param=function(a,b){var d,e=[],f=function(a,b){b=c.isFunction(b)?b():b==null?"":b;e[e.length]=encodeURIComponent(a)+"="+
encodeURIComponent(b)};b===void 0&&(b=c.ajaxSettings&&c.ajaxSettings.traditional);if(c.isArray(a)||a.jquery&&!c.isPlainObject(a))c.each(a,function(){f(this.name,this.value)});else for(d in a)Ua(d,a[d],b,f);return e.join("&").replace(Jd,"+")};c.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){c.fn[b]=function(a,c){return arguments.length>
0?this.on(b,null,a,c):this.trigger(b)}});c.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,e){return this.on(b,a,c,e)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,"**"):this.off(b,a||"**",c)}});var fa,V,sb=c.now(),tb=/\?/,Md=/#.*$/,Bc=/([?&])_=[^&]*/,Nd=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,Od=/^(?:GET|HEAD)$/,Pd=/^\/\//,Cc=/^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
Dc=c.fn.load,Ec={},Va={},Fc="*/".concat("*");try{V=Qc.href}catch(Vd){V=p.createElement("a"),V.href="",V=V.href}fa=Cc.exec(V.toLowerCase())||[];c.fn.load=function(a,b,d){if(typeof a!=="string"&&Dc)return Dc.apply(this,arguments);var e,f,g,h=this,i=a.indexOf(" ");if(i>=0){e=a.slice(i,a.length);a=a.slice(0,i)}if(c.isFunction(b)){d=b;b=void 0}else b&&typeof b==="object"&&(g="POST");h.length>0&&c.ajax({url:a,type:g,dataType:"html",data:b}).done(function(a){f=arguments;h.html(e?c("<div>").append(c.parseHTML(a)).find(e):
a)}).complete(d&&function(a,b){h.each(d,f||[a.responseText,b,a])});return this};c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){c.fn[b]=function(a){return this.on(b,a)}});c.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:V,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(fa[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Fc,text:"text/plain",
html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":c.parseJSON,"text xml":c.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Wa(Wa(a,c.ajaxSettings),b):Wa(c.ajaxSettings,a)},ajaxPrefilter:Qb(Ec),ajaxTransport:Qb(Va),ajax:function(a,b){function d(a,b,d,e){var f,
m,s,t;t=b;if(u!==2){u=2;i&&clearTimeout(i);l=void 0;h=e||"";w.readyState=a>0?4:0;e=a>=200&&a<300||a===304;if(d){s=k;for(var v=w,x,C,z,D,A=s.contents,B=s.dataTypes;B[0]==="*";){B.shift();C===void 0&&(C=s.mimeType||v.getResponseHeader("Content-Type"))}if(C)for(D in A)if(A[D]&&A[D].test(C)){B.unshift(D);break}if(B[0]in d)z=B[0];else{for(D in d){if(!B[0]||s.converters[D+" "+B[0]]){z=D;break}x||(x=D)}z=z||x}if(z){z!==B[0]&&B.unshift(z);s=d[z]}else s=void 0}a:{d=k;x=s;C=w;z=e;var G,I,F,v={},A=d.dataTypes.slice();
if(A[1])for(I in d.converters)v[I.toLowerCase()]=d.converters[I];for(D=A.shift();D;){d.responseFields[D]&&(C[d.responseFields[D]]=x);!F&&(z&&d.dataFilter)&&(x=d.dataFilter(x,d.dataType));F=D;if(D=A.shift())if(D==="*")D=F;else if(F!=="*"&&F!==D){I=v[F+" "+D]||v["* "+D];if(!I)for(G in v){s=G.split(" ");if(s[1]===D)if(I=v[F+" "+s[0]]||v["* "+s[0]]){if(I===true)I=v[G];else if(v[G]!==true){D=s[0];A.unshift(s[1])}break}}if(I!==true)if(I&&d["throws"])x=I(x);else try{x=I(x)}catch(H){s={state:"parsererror",
error:I?H:"No conversion from "+F+" to "+D};break a}}}s={state:"success",data:x}}if(e){if(k.ifModified){(t=w.getResponseHeader("Last-Modified"))&&(c.lastModified[g]=t);(t=w.getResponseHeader("etag"))&&(c.etag[g]=t)}if(a===204||k.type==="HEAD")t="nocontent";else if(a===304)t="notmodified";else{t=s.state;f=s.data;m=s.error;e=!m}}else{m=t;if(a||!t){t="error";a<0&&(a=0)}}w.status=a;w.statusText=(b||t)+"";e?p.resolveWith(n,[f,t,w]):p.rejectWith(n,[w,t,m]);w.statusCode(q);q=void 0;j&&o.trigger(e?"ajaxSuccess":
"ajaxError",[w,k,e?f:m]);r.fireWith(n,[w,t]);if(j){o.trigger("ajaxComplete",[w,k]);--c.active||c.event.trigger("ajaxStop")}}}if(typeof a==="object"){b=a;a=void 0}var b=b||{},e,f,g,h,i,j,l,m,k=c.ajaxSetup({},b),n=k.context||k,o=k.context&&(n.nodeType||n.jquery)?c(n):c.event,p=c.Deferred(),r=c.Callbacks("once memory"),q=k.statusCode||{},s={},t={},u=0,v="canceled",w={readyState:0,getResponseHeader:function(a){var b;if(u===2){if(!m)for(m={};b=Nd.exec(h);)m[b[1].toLowerCase()]=b[2];b=m[a.toLowerCase()]}return b==
null?null:b},getAllResponseHeaders:function(){return u===2?h:null},setRequestHeader:function(a,b){var c=a.toLowerCase();if(!u){a=t[c]=t[c]||a;s[a]=b}return this},overrideMimeType:function(a){if(!u)k.mimeType=a;return this},statusCode:function(a){var b;if(a)if(u<2)for(b in a)q[b]=[q[b],a[b]];else w.always(a[w.status]);return this},abort:function(a){a=a||v;l&&l.abort(a);d(0,a);return this}};p.promise(w).complete=r.add;w.success=w.done;w.error=w.fail;k.url=((a||k.url||V)+"").replace(Md,"").replace(Pd,
fa[1]+"//");k.type=b.method||b.type||k.method||k.type;k.dataTypes=c.trim(k.dataType||"*").toLowerCase().match(N)||[""];if(k.crossDomain==null){e=Cc.exec(k.url.toLowerCase());k.crossDomain=!(!e||!(e[1]!==fa[1]||e[2]!==fa[2]||(e[3]||(e[1]==="http:"?"80":"443"))!==(fa[3]||(fa[1]==="http:"?"80":"443"))))}if(k.data&&k.processData&&typeof k.data!=="string")k.data=c.param(k.data,k.traditional);Rb(Ec,k,b,w);if(u===2)return w;(j=k.global)&&c.active++===0&&c.event.trigger("ajaxStart");k.type=k.type.toUpperCase();
k.hasContent=!Od.test(k.type);g=k.url;if(!k.hasContent){if(k.data){g=k.url=k.url+((tb.test(g)?"&":"?")+k.data);delete k.data}if(k.cache===false)k.url=Bc.test(g)?g.replace(Bc,"$1_="+sb++):g+(tb.test(g)?"&":"?")+"_="+sb++}if(k.ifModified){c.lastModified[g]&&w.setRequestHeader("If-Modified-Since",c.lastModified[g]);c.etag[g]&&w.setRequestHeader("If-None-Match",c.etag[g])}(k.data&&k.hasContent&&k.contentType!==false||b.contentType)&&w.setRequestHeader("Content-Type",k.contentType);w.setRequestHeader("Accept",
k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(k.dataTypes[0]!=="*"?", "+Fc+"; q=0.01":""):k.accepts["*"]);for(f in k.headers)w.setRequestHeader(f,k.headers[f]);if(k.beforeSend&&(k.beforeSend.call(n,w,k)===false||u===2))return w.abort();v="abort";for(f in{success:1,error:1,complete:1})w[f](k[f]);if(l=Rb(Va,k,b,w)){w.readyState=1;j&&o.trigger("ajaxSend",[w,k]);k.async&&k.timeout>0&&(i=setTimeout(function(){w.abort("timeout")},k.timeout));try{u=1;l.send(s,d)}catch(x){if(u<2)d(-1,
x);else throw x;}}else d(-1,"No Transport");return w},getJSON:function(a,b,d){return c.get(a,b,d,"json")},getScript:function(a,b){return c.get(a,void 0,b,"script")}});c.each(["get","post"],function(a,b){c[b]=function(a,e,f,g){if(c.isFunction(e)){g=g||f;f=e;e=void 0}return c.ajax({url:a,type:b,dataType:g,data:e,success:f})}});c.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){c.globalEval(a);
return a}}});c.ajaxPrefilter("script",function(a){if(a.cache===void 0)a.cache=false;if(a.crossDomain){a.type="GET";a.global=false}});c.ajaxTransport("script",function(a){if(a.crossDomain){var b,d=p.head||c("head")[0]||p.documentElement;return{send:function(c,f){b=p.createElement("script");b.async=true;if(a.scriptCharset)b.charset=a.scriptCharset;b.src=a.url;b.onload=b.onreadystatechange=function(a,c){if(c||!b.readyState||/loaded|complete/.test(b.readyState)){b.onload=b.onreadystatechange=null;b.parentNode&&
b.parentNode.removeChild(b);b=null;c||f(200,"success")}};d.insertBefore(b,d.firstChild)},abort:function(){if(b)b.onload(void 0,true)}}}});var Gc=[],ub=/(=)\?(?=&|$)|\?\?/;c.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Gc.pop()||c.expando+"_"+sb++;this[a]=true;return a}});c.ajaxPrefilter("json jsonp",function(a,b,d){var e,f,g,h=a.jsonp!==false&&(ub.test(a.url)?"url":typeof a.data==="string"&&!(a.contentType||"").indexOf("application/x-www-form-urlencoded")&&ub.test(a.data)&&"data");if(h||
a.dataTypes[0]==="jsonp"){e=a.jsonpCallback=c.isFunction(a.jsonpCallback)?a.jsonpCallback():a.jsonpCallback;if(h)a[h]=a[h].replace(ub,"$1"+e);else if(a.jsonp!==false)a.url=a.url+((tb.test(a.url)?"&":"?")+a.jsonp+"="+e);a.converters["script json"]=function(){g||c.error(e+" was not called");return g[0]};a.dataTypes[0]="json";f=q[e];q[e]=function(){g=arguments};d.always(function(){q[e]=f;if(a[e]){a.jsonpCallback=b.jsonpCallback;Gc.push(e)}g&&c.isFunction(f)&&f(g[0]);g=f=void 0});return"script"}});var na,
ta,Qd=0,vb=q.ActiveXObject&&function(){for(var a in na)na[a](void 0,true)};c.ajaxSettings.xhr=q.ActiveXObject?function(){var a;if(!(a=!this.isLocal&&Sb()))a:{try{a=new q.ActiveXObject("Microsoft.XMLHTTP");break a}catch(b){}a=void 0}return a}:Sb;ta=c.ajaxSettings.xhr();c.support.cors=!!ta&&"withCredentials"in ta;(ta=c.support.ajax=!!ta)&&c.ajaxTransport(function(a){if(!a.crossDomain||c.support.cors){var b;return{send:function(d,e){var f,g,h=a.xhr();a.username?h.open(a.type,a.url,a.async,a.username,
a.password):h.open(a.type,a.url,a.async);if(a.xhrFields)for(g in a.xhrFields)h[g]=a.xhrFields[g];a.mimeType&&h.overrideMimeType&&h.overrideMimeType(a.mimeType);!a.crossDomain&&!d["X-Requested-With"]&&(d["X-Requested-With"]="XMLHttpRequest");try{for(g in d)h.setRequestHeader(g,d[g])}catch(i){}h.send(a.hasContent&&a.data||null);b=function(d,g){var i,k,n,o;try{if(b&&(g||h.readyState===4)){b=void 0;if(f){h.onreadystatechange=c.noop;vb&&delete na[f]}if(g)h.readyState!==4&&h.abort();else{o={};i=h.status;
k=h.getAllResponseHeaders();if(typeof h.responseText==="string")o.text=h.responseText;try{n=h.statusText}catch(p){n=""}!i&&a.isLocal&&!a.crossDomain?i=o.text?200:404:i===1223&&(i=204)}}}catch(q){g||e(-1,q)}o&&e(i,n,o,k)};if(a.async)if(h.readyState===4)setTimeout(b);else{f=++Qd;if(vb){if(!na){na={};c(q).unload(vb)}na[f]=b}h.onreadystatechange=b}else b()},abort:function(){b&&b(void 0,true)}}}});var ia,Oa,Rd=/^(?:toggle|show|hide)$/,Hc=RegExp("^(?:([+-])=|)("+Aa+")([a-z%]*)$","i"),Sd=/queueHooks$/,wa=
[function(a,b,d){var e,f,g,h,i,j=this,l={},m=a.style,k=a.nodeType&&oa(a),n=c._data(a,"fxshow");if(!d.queue){h=c._queueHooks(a,"fx");if(h.unqueued==null){h.unqueued=0;i=h.empty.fire;h.empty.fire=function(){h.unqueued||i()}}h.unqueued++;j.always(function(){j.always(function(){h.unqueued--;c.queue(a,"fx").length||h.empty.fire()})})}if(a.nodeType===1&&("height"in b||"width"in b)){d.overflow=[m.overflow,m.overflowX,m.overflowY];if(c.css(a,"display")==="inline"&&c.css(a,"float")==="none")!c.support.inlineBlockNeedsLayout||
Kb(a.nodeName)==="inline"?m.display="inline-block":m.zoom=1}if(d.overflow){m.overflow="hidden";c.support.shrinkWrapBlocks||j.always(function(){m.overflow=d.overflow[0];m.overflowX=d.overflow[1];m.overflowY=d.overflow[2]})}for(e in b){f=b[e];if(Rd.exec(f)){delete b[e];g=g||f==="toggle";if(f!==(k?"hide":"show"))l[e]=n&&n[e]||c.style(a,e)}}if(!c.isEmptyObject(l)){if(n){if("hidden"in n)k=n.hidden}else n=c._data(a,"fxshow",{});if(g)n.hidden=!k;k?c(a).show():j.done(function(){c(a).hide()});j.done(function(){var b;
c._removeData(a,"fxshow");for(b in l)c.style(a,b,l[b])});for(e in l){b=Ub(k?n[e]:0,e,j);if(!(e in n)){n[e]=b.start;if(k){b.end=b.start;b.start=e==="width"||e==="height"?1:0}}}}}],qa={"*":[function(a,b){var d=this.createTween(a,b),e=d.cur(),f=Hc.exec(b),g=f&&f[3]||(c.cssNumber[a]?"":"px"),h=(c.cssNumber[a]||g!=="px"&&+e)&&Hc.exec(c.css(d.elem,a)),i=1,j=20;if(h&&h[3]!==g){g=g||h[3];f=f||[];h=+e||1;do{i=i||".5";h=h/i;c.style(d.elem,a,h+g)}while(i!==(i=d.cur()/e)&&i!==1&&--j)}if(f){h=d.start=+h||+e||
0;d.unit=g;d.end=f[1]?h+(f[1]+1)*f[2]:+f[2]}return d}]};c.Animation=c.extend(Vb,{tweener:function(a,b){if(c.isFunction(a)){b=a;a=["*"]}else a=a.split(" ");for(var d,e=0,f=a.length;e<f;e++){d=a[e];qa[d]=qa[d]||[];qa[d].unshift(b)}},prefilter:function(a,b){b?wa.unshift(a):wa.push(a)}});c.Tween=A;A.prototype={constructor:A,init:function(a,b,d,e,f,g){this.elem=a;this.prop=d;this.easing=f||"swing";this.options=b;this.start=this.now=this.cur();this.end=e;this.unit=g||(c.cssNumber[d]?"":"px")},cur:function(){var a=
A.propHooks[this.prop];return a&&a.get?a.get(this):A.propHooks._default.get(this)},run:function(a){var b,d=A.propHooks[this.prop];this.pos=this.options.duration?b=c.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):b=a;this.now=(this.end-this.start)*b+this.start;this.options.step&&this.options.step.call(this.elem,this.now,this);d&&d.set?d.set(this):A.propHooks._default.set(this);return this}};A.prototype.init.prototype=A.prototype;A.propHooks={_default:{get:function(a){if(a.elem[a.prop]!=
null&&(!a.elem.style||a.elem.style[a.prop]==null))return a.elem[a.prop];a=c.css(a.elem,a.prop,"");return!a||a==="auto"?0:a},set:function(a){if(c.fx.step[a.prop])c.fx.step[a.prop](a);else a.elem.style&&(a.elem.style[c.cssProps[a.prop]]!=null||c.cssHooks[a.prop])?c.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}};A.propHooks.scrollTop=A.propHooks.scrollLeft={set:function(a){if(a.elem.nodeType&&a.elem.parentNode)a.elem[a.prop]=a.now}};c.each(["toggle","show","hide"],function(a,b){var d=c.fn[b];
c.fn[b]=function(a,c,g){return a==null||typeof a==="boolean"?d.apply(this,arguments):this.animate(xa(b,true),a,c,g)}});c.fn.extend({fadeTo:function(a,b,c,e){return this.filter(oa).css("opacity",0).show().end().animate({opacity:b},a,c,e)},animate:function(a,b,d,e){var f=c.isEmptyObject(a),g=c.speed(b,d,e),b=function(){var b=Vb(this,c.extend({},a),g);(f||c._data(this,"finish"))&&b.stop(true)};b.finish=b;return f||g.queue===false?this.each(b):this.queue(g.queue,b)},stop:function(a,b,d){var e=function(a){var b=
a.stop;delete a.stop;b(d)};if(typeof a!=="string"){d=b;b=a;a=void 0}b&&a!==false&&this.queue(a||"fx",[]);return this.each(function(){var b=true,g=a!=null&&a+"queueHooks",h=c.timers,i=c._data(this);if(g)i[g]&&i[g].stop&&e(i[g]);else for(g in i)i[g]&&(i[g].stop&&Sd.test(g))&&e(i[g]);for(g=h.length;g--;)if(h[g].elem===this&&(a==null||h[g].queue===a)){h[g].anim.stop(d);b=false;h.splice(g,1)}(b||!d)&&c.dequeue(this,a)})},finish:function(a){a!==false&&(a=a||"fx");return this.each(function(){var b,d=c._data(this),
e=d[a+"queue"];b=d[a+"queueHooks"];var f=c.timers,g=e?e.length:0;d.finish=true;c.queue(this,a,[]);b&&b.stop&&b.stop.call(this,true);for(b=f.length;b--;)if(f[b].elem===this&&f[b].queue===a){f[b].anim.stop(true);f.splice(b,1)}for(b=0;b<g;b++)e[b]&&e[b].finish&&e[b].finish.call(this);delete d.finish})}});c.each({slideDown:xa("show"),slideUp:xa("hide"),slideToggle:xa("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){c.fn[a]=function(a,c,f){return this.animate(b,
a,c,f)}});c.speed=function(a,b,d){var e=a&&typeof a==="object"?c.extend({},a):{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};e.duration=c.fx.off?0:typeof e.duration==="number"?e.duration:e.duration in c.fx.speeds?c.fx.speeds[e.duration]:c.fx.speeds._default;if(e.queue==null||e.queue===true)e.queue="fx";e.old=e.complete;e.complete=function(){c.isFunction(e.old)&&e.old.call(this);e.queue&&c.dequeue(this,e.queue)};return e};c.easing={linear:function(a){return a},
swing:function(a){return 0.5-Math.cos(a*Math.PI)/2}};c.timers=[];c.fx=A.prototype.init;c.fx.tick=function(){var a,b=c.timers,d=0;for(ia=c.now();d<b.length;d++){a=b[d];!a()&&b[d]===a&&b.splice(d--,1)}b.length||c.fx.stop();ia=void 0};c.fx.timer=function(a){a()&&c.timers.push(a)&&c.fx.start()};c.fx.interval=13;c.fx.start=function(){Oa||(Oa=setInterval(c.fx.tick,c.fx.interval))};c.fx.stop=function(){clearInterval(Oa);Oa=null};c.fx.speeds={slow:600,fast:200,_default:400};c.fx.step={};c.expr&&c.expr.filters&&
(c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===b.elem}).length});c.fn.offset=function(a){if(arguments.length)return a===void 0?this:this.each(function(b){c.offset.setOffset(this,a,b)});var b,d,e={top:0,left:0},f=(d=this[0])&&d.ownerDocument;if(f){b=f.documentElement;if(!c.contains(b,d))return e;typeof d.getBoundingClientRect!==M&&(e=d.getBoundingClientRect());d=Wb(f);return{top:e.top+(d.pageYOffset||b.scrollTop)-(b.clientTop||0),left:e.left+(d.pageXOffset||b.scrollLeft)-
(b.clientLeft||0)}}};c.offset={setOffset:function(a,b,d){var e=c.css(a,"position");if(e==="static")a.style.position="relative";var f=c(a),g=f.offset(),h=c.css(a,"top"),i=c.css(a,"left"),j={},l={};if((e==="absolute"||e==="fixed")&&c.inArray("auto",[h,i])>-1){l=f.position();e=l.top;i=l.left}else{e=parseFloat(h)||0;i=parseFloat(i)||0}c.isFunction(b)&&(b=b.call(a,d,g));if(b.top!=null)j.top=b.top-g.top+e;if(b.left!=null)j.left=b.left-g.left+i;"using"in b?b.using.call(a,j):f.css(j)}};c.fn.extend({position:function(){if(this[0]){var a,
b,d={top:0,left:0},e=this[0];if(c.css(e,"position")==="fixed")b=e.getBoundingClientRect();else{a=this.offsetParent();b=this.offset();c.nodeName(a[0],"html")||(d=a.offset());d.top=d.top+c.css(a[0],"borderTopWidth",true);d.left=d.left+c.css(a[0],"borderLeftWidth",true)}return{top:b.top-d.top-c.css(e,"marginTop",true),left:b.left-d.left-c.css(e,"marginLeft",true)}}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||Yb;a&&!c.nodeName(a,"html")&&c.css(a,"position")==="static";)a=
a.offsetParent;return a||Yb})}});c.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var d=/Y/.test(b);c.fn[a]=function(e){return c.access(this,function(a,e,h){var i=Wb(a);if(h===void 0)return i?b in i?i[b]:i.document.documentElement[e]:a[e];i?i.scrollTo(!d?h:c(i).scrollLeft(),d?h:c(i).scrollTop()):a[e]=h},a,e,arguments.length,null)}});c.each({Height:"height",Width:"width"},function(a,b){c.each({padding:"inner"+a,content:b,"":"outer"+a},function(d,e){c.fn[e]=function(e,g){var h=
arguments.length&&(d||typeof e!=="boolean"),i=d||(e===true||g===true?"margin":"border");return c.access(this,function(b,d,e){if(c.isWindow(b))return b.document.documentElement["client"+a];if(b.nodeType===9){d=b.documentElement;return Math.max(b.body["scroll"+a],d["scroll"+a],b.body["offset"+a],d["offset"+a],d["client"+a])}return e===void 0?c.css(b,d,i):c.style(b,d,e,i)},b,h?e:void 0,h,null)}})});c.fn.size=function(){return this.length};c.fn.andSelf=c.fn.addBack;"object"===typeof module&&module&&"object"===
typeof module.exports?module.exports=c:(q.jQuery=q.$=c,"function"===typeof define&&define.amd&&define("jquery",[],function(){return c}))})(window);
/* module-key = 'com.atlassian.plugins.jquery:jquery', location = '/jquery-migrate.js' */
(function(a,j){function g(b){var c=j.console;l[b]||(l[b]=!0,a.migrateWarnings.push(b),c&&(c.warn&&!a.migrateMute)&&(c.warn("JQMIGRATE: "+b),a.migrateTrace&&c.trace&&c.trace()))}function m(b,c,d,e){if(Object.defineProperty)try{Object.defineProperty(b,c,{configurable:!0,enumerable:!0,get:function(){g(e);return d},set:function(a){g(e);d=a}});return}catch(f){}a._definePropertyBroken=!0;b[c]=d}var l={};a.migrateWarnings=[];!a.migrateMute&&(j.console&&j.console.log)&&j.console.log("JQMIGRATE: Logging is active");
void 0===a.migrateTrace&&(a.migrateTrace=!0);a.migrateReset=function(){l={};a.migrateWarnings.length=0};"BackCompat"===document.compatMode&&g("jQuery is not compatible with Quirks Mode");var n=a("<input/>",{size:1}).attr("size")&&a.attrFn,o=a.attr,v=a.attrHooks.value&&a.attrHooks.value.get||function(){return null},w=a.attrHooks.value&&a.attrHooks.value.set||function(){},x=/^(?:input|button)$/i,y=/^[238]$/,z=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
A=/^(?:checked|selected)$/i;m(a,"attrFn",n||{},"jQuery.attrFn is deprecated");a.attr=function(b,c,d,e){var f=c.toLowerCase(),h=b&&b.nodeType;if(e){o.length<4&&g("jQuery.fn.attr( props, pass ) is deprecated");if(b&&!y.test(h)&&(n?c in n:a.isFunction(a.fn[c])))return a(b)[c](d)}c==="type"&&(d!==void 0&&x.test(b.nodeName)&&b.parentNode)&&g("Can't change the 'type' of an input or button in IE 6/7/8");if(!a.attrHooks[f]&&z.test(f)){a.attrHooks[f]={get:function(b,c){var d,e=a.prop(b,c);return e===true||
typeof e!=="boolean"&&(d=b.getAttributeNode(c))&&d.nodeValue!==false?c.toLowerCase():void 0},set:function(b,c,d){if(c===false)a.removeAttr(b,d);else{c=a.propFix[d]||d;c in b&&(b[c]=true);b.setAttribute(d,d.toLowerCase())}return d}};A.test(f)&&g("jQuery.fn.attr('"+f+"') may use property instead of attribute")}return o.call(a,b,c,d)};a.attrHooks.value={get:function(b,a){var d=(b.nodeName||"").toLowerCase();if(d==="button")return v.apply(this,arguments);d!=="input"&&d!=="option"&&g("jQuery.fn.attr('value') no longer gets properties");
return a in b?b.value:null},set:function(a,c){var d=(a.nodeName||"").toLowerCase();if(d==="button")return w.apply(this,arguments);d!=="input"&&d!=="option"&&g("jQuery.fn.attr('value', val) no longer sets properties");a.value=c}};var k,i,p=a.fn.init,B=a.parseJSON,C=/^([^<]*)(<[\w\W]+>)([^>]*)$/;a.fn.init=function(b,c,d){var e;if(b&&typeof b==="string"&&!a.isPlainObject(c)&&(e=C.exec(a.trim(b)))&&e[0]){b.charAt(0)!=="<"&&g("$(html) HTML strings must start with '<' character");e[3]&&g("$(html) HTML text after last tag is ignored");
if(e[0].charAt(0)==="#"){g("HTML string cannot start with a '#' character");a.error("JQMIGRATE: Invalid selector string (XSS)")}if(c&&c.context)c=c.context;if(a.parseHTML)return p.call(this,a.parseHTML(e[2],c,true),c,d)}return p.apply(this,arguments)};a.fn.init.prototype=a.fn;a.parseJSON=function(a){if(!a&&a!==null){g("jQuery.parseJSON requires a valid JSON string");return null}return B.apply(this,arguments)};a.uaMatch=function(a){a=a.toLowerCase();a=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||
/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}};a.browser||(k=a.uaMatch(navigator.userAgent),i={},k.browser&&(i[k.browser]=!0,i.version=k.version),i.chrome?i.webkit=!0:i.webkit&&(i.safari=!0),a.browser=i);m(a,"browser",a.browser,"jQuery.browser is deprecated");a.sub=function(){function b(a,c){return new b.fn.init(a,c)}a.extend(true,b,this);b.superclass=this;b.fn=
b.prototype=this();b.fn.constructor=b;b.sub=this.sub;b.fn.init=function(d,e){e&&(e instanceof a&&!(e instanceof b))&&(e=b(e));return a.fn.init.call(this,d,e,c)};b.fn.init.prototype=b.fn;var c=b(document);g("jQuery.sub() is deprecated");return b};a.ajaxSetup({converters:{"text json":a.parseJSON}});var D=a.fn.data;a.fn.data=function(b){var c,d;if((d=this[0])&&b==="events"&&arguments.length===1){c=a.data(d,b);d=a._data(d,b);if((c===void 0||c===d)&&d!==void 0){g("Use of jQuery.fn.data('events') is deprecated");
return d}}return D.apply(this,arguments)};var E=/\/(java|ecma)script/i,F=a.fn.andSelf||a.fn.addBack;a.fn.andSelf=function(){g("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()");return F.apply(this,arguments)};a.clean||(a.clean=function(b,c,d,e){c=c||document;c=!c.nodeType&&c[0]||c;c=c.ownerDocument||c;g("jQuery.clean() is deprecated");var f,h=[];a.merge(h,a.buildFragment(b,c).childNodes);if(d){c=function(a){if(!a.type||E.test(a.type))return e?e.push(a.parentNode?a.parentNode.removeChild(a):a):
d.appendChild(a)};for(b=0;(f=h[b])!=null;b++)if(!a.nodeName(f,"script")||!c(f)){d.appendChild(f);if(typeof f.getElementsByTagName!=="undefined"){f=a.grep(a.merge([],f.getElementsByTagName("script")),c);h.splice.apply(h,[b+1,0].concat(f));b=b+f.length}}}return h});var G=a.event.add,H=a.event.remove,I=a.event.trigger,J=a.fn.toggle,q=a.fn.live,r=a.fn.die,s=/\b(?:ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess)\b/,t=/(?:^|\s)hover(\.\S+|)\b/,u=function(b){if(typeof b!=="string"||a.event.special.hover)return b;
t.test(b)&&g("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'");return b&&b.replace(t,"mouseenter$1 mouseleave$1")};a.event.props&&"attrChange"!==a.event.props[0]&&a.event.props.unshift("attrChange","attrName","relatedNode","srcElement");a.event.dispatch&&m(a.event,"handle",a.event.dispatch,"jQuery.event.handle is undocumented and deprecated");a.event.add=function(a,c,d,e,f){a!==document&&s.test(c)&&g("AJAX events should be attached to document: "+c);G.call(this,a,u(c||""),d,e,f)};
a.event.remove=function(a,c,d,e,f){H.call(this,a,u(c)||"",d,e,f)};a.fn.error=function(){var a=Array.prototype.slice.call(arguments,0);g("jQuery.fn.error() is deprecated");a.splice(0,0,"error");if(arguments.length)return this.bind.apply(this,a);this.triggerHandler.apply(this,a);return this};a.fn.toggle=function(b,c){if(!a.isFunction(b)||!a.isFunction(c))return J.apply(this,arguments);g("jQuery.fn.toggle(handler, handler...) is deprecated");var d=arguments,e=b.guid||a.guid++,f=0,h=function(c){var e=
(a._data(this,"lastToggle"+b.guid)||0)%f;a._data(this,"lastToggle"+b.guid,e+1);c.preventDefault();return d[e].apply(this,arguments)||false};for(h.guid=e;f<d.length;)d[f++].guid=e;return this.click(h)};a.fn.live=function(b,c,d){g("jQuery.fn.live() is deprecated");if(q)return q.apply(this,arguments);a(this.context).on(b,this.selector,c,d);return this};a.fn.die=function(b,c){g("jQuery.fn.die() is deprecated");if(r)return r.apply(this,arguments);a(this.context).off(b,this.selector||"**",c);return this};
a.event.trigger=function(a,c,d,e){!d&&!s.test(a)&&g("Global events are undocumented and deprecated");return I.call(this,a,c,d||document,e)};a.each("ajaxStart ajaxStop ajaxSend ajaxComplete ajaxError ajaxSuccess".split(" "),function(b,c){a.event.special[c]={setup:function(){var b=this;if(b!==document){a.event.add(document,c+"."+a.guid,function(){a.event.trigger(c,null,b,true)});a._data(this,c,a.guid++)}return false},teardown:function(){this!==document&&a.event.remove(document,c+"."+a._data(this,c));
return false}}})})(jQuery,window);
/* module-key = 'com.atlassian.auiplugin:jquery-compatibility', location = 'js-vendor/jquery/jquery-compatibility.js' */
jQuery.noConflict();
/* module-key = 'com.atlassian.auiplugin:aui-core', location = 'skate/dist/skate.js' */
(function(){var P=document.createElement("style");var K=window.MutationObserver||window.WebkitMutationObserver||window.MozMutationObserver;if(!K){K=function(a){this.callback=a;this.elements=[]};K.prototype={observe:function(g,b){var f=this;var e={};var d={target:g,options:b,insertHandler:function(i){if(!c(i)){return }f.callback([a(i,{addedNodes:[i.target]})])},removeHandler:function(i){if(!c(i)){return }f.callback([a(i,{removedNodes:[i.target]})])},attributeHandler:function(i){if(!h(i)){return }f.callback([a(i,{attributeName:i.attrName,oldValue:b.attributeOldValue?(e[i.attrName]||i.prevValue||null):null,type:"attributes"})]);if(b.attributeOldValue){e[i.attrName]=i.newValue}}};this.elements.push(d);if(b.childList){g.addEventListener("DOMSubtreeModified",d.insertHandler);g.addEventListener("DOMNodeRemoved",d.removeHandler)}if(b.attributes){g.addEventListener("DOMAttrModified",d.attributeHandler)}return this;function c(i){return b.childList&&(b.subtree||i.target.parentNode===g)}function h(i){return i.target===g}function a(i,j){return R(j,{addedNodes:null,attributeName:null,attributeNamespace:null,nextSibling:i.target.nextSibling,oldValue:null,previousSibling:i.target.previousSibling,removedNodes:null,target:i.target,type:"childList"})}},disconnect:function(){for(var b in this.elements){var c=this.elements[b];c.target.removeEventListener("DOMSubtreeModified",c.insertHandler);c.target.removeEventListener("DOMNodeRemoved",c.removeHandler);c.target.removeEventListener("DOMAttrModified",c.attributeHandler)}this.elements=[];return this}}}var Q;var W={};function X(f,d){if(W[f]){throw new Error('A component with the ID of "'+f+'" already exists.')}if(!Q){Q=new K(function(a){a.forEach(function(g){X.init(g.addedNodes);F(g.removedNodes)})});Q.observe(document,{childList:true,subtree:true})}if(!d){d={}}if(typeof d==="function"){d={insert:d}}R(d,X.defaults);var c=E(f,d);if(d.ready){P.sheet.insertRule(f+":not(."+d.classname+"),["+f+"]:not(."+d.classname+"),."+f+":not(."+d.classname+"){display:none}",P.sheet.cssRules.length)}var e=c.existing();for(var b=0;b<e.length;b++){H(f,d,e[b])}W[f]=d;return c}X.types={ANY:"act",ATTR:"a",CLASS:"c",NOATTR:"ct",NOCLASS:"at",NOTAG:"ac",TAG:"t"};X.defaults={attributes:false,classname:"__skate",events:false,prototype:{},template:"",type:X.types.ANY};X.destroy=function(){if(Q){Q.disconnect();Q=undefined}W={};return X};X.init=function(a){V(a,function(c){for(var b in M(c)){H(b,W[b],c)}X.init(c.children)});return X};X.unregister=function(a){delete W[a];return };X.watch=function(a){return new K(a)};X.when=function(a){return{is:function(b){return{then:function(d){if(O(a,b+".ready-called")){d(a)}else{var c=O(a,b+".when-callbacks");if(!c){c=[]}c.push(d);I(a,b+".when-callbacks",c)}return this}}}}};function H(c,a,b){U(c,a,b,function(d){if(!d){return C(c,a,b)}if(d===b||!b.parentNode){return }var f=document.createComment("placeholder");b.parentNode.insertBefore(f,b);b.parentNode.removeChild(b);if(typeof d==="string"){var e=document.createElement("div");e.innerHTML=d;d=e.children}V(d,function(g){f.parentNode.insertBefore(g,f)});f.parentNode.removeChild(f)})}function U(f,c,e,a){var b=/^[^(]+\([^,)]+,/;var d=c.ready;a=a||function(){};if(O(e,f+".ready-called")){return a()}I(e,f+".ready-called",true);R(e,c.prototype);J(f,c,e);L(f,e,c.events);Y(e,f);if(d&&b.test(d)){d(e,a)}else{if(d){a(d(e))}else{a()}}}function C(d,a,b){var c=a.insert;if(O(b,d+".insert-called")){return }if(!b.parentNode){return }I(b,d+".insert-called",true);D(d,a,b);N(b,a.classname);if(c){c(b)}}function Z(c,a,b){if(O(b,c+".remove-called")){return }I(b,c+".remove-called",true);if(a.remove){a.remove(b)}}function F(a){V(a,function(c){F(c.children);for(var b in M(c)){if(b in W){Z(b,W[b],c)}}})}function J(e,j,f){if(!j.template){return }var g=f.innerHTML;if(typeof j.template==="function"){j.template(f)}else{if(typeof j.template==="string"){f.innerHTML=j.template}}var k=f.querySelectorAll("content");if(!k||!k.length){return }var d=document.createElement("div");d.innerHTML=g;for(var l=0;l<k.length;l++){var n=k[l];var m=n.getAttribute("select");if(m){for(var i=0;i<d.children.length;i++){var o=d.children[i];if(B(o,m)){n.parentNode.insertBefore(o,n)}}}else{for(var h=0;h<d.childNodes.length;h++){n.parentNode.insertBefore(d.childNodes[h],n)}}n.parentNode.removeChild(n)}}function D(h,e,g){if(!e.attributes||O(g,h+".attributes-called")){return }I(g,h+".attributes-called",true);var d=new K(function(a){a.forEach(function(j){var l;var k=j.attributeName;var i=g.attributes[k];if(i&&j.oldValue===null){l="insert"}else{if(i&&j.oldValue!==null){l="update"}else{if(!i){l="remove"}}}f(l,k,i?i.nodeValue:undefined,j.oldValue)})});d.observe(g,{attributes:true,attributeOldValue:true});for(var c=0;c<g.attributes.length;c++){var b=g.attributes[c];f("insert",b.nodeName,b.nodeValue)}function f(j,i,k,a){var l;if(e.attributes&&e.attributes[i]&&typeof e.attributes[i][j]==="function"){l=e.attributes[i][j]}else{if(e.attributes&&typeof e.attributes[i]==="function"){l=e.attributes[i]}else{if(typeof e.attributes==="function"){l=e.attributes}}}if(l){l(g,{type:j,name:i,newValue:k,oldValue:a})}}}function L(h,g,d){if(typeof d!=="object"){return }function c(e,a){return function(i){if(!a||B(i.target,a)){e(g,i)}}}for(var b in d){if(d.hasOwnProperty(b)){var f=S(b);g.addEventListener(f.name,c(d[b],f.delegate))}}}function S(b){var a=b.split(" ",2);return{name:a[0],delegate:a[1]}}function Y(b,c){var a=O(b,c+".when-callbacks");if(!a){return }a.forEach(function(d){d(b)});A(b,c+".when-callbacks")}function O(b,a){if(b.__SKATE_DATA){return b.__SKATE_DATA[a]}}function I(b,a,c){if(!b.__SKATE_DATA){b.__SKATE_DATA={}}b.__SKATE_DATA[a]=c}function A(b,a){if(b.__SKATE_DATA&&b.__SKATE_DATA[a]){delete b.__SKATE_DATA[a]}}function N(a,b){if(a.classList){a.classList.add(b)}else{a.className+=a.className?" "+b:b}}function G(a){return a.classList||(a.getAttribute("class")&&a.getAttribute("class").split(/\s+/))||[]}function V(c,d){if(!c){return }if(c.nodeType){if(c.nodeType===1){c=[c]}else{return }}if(!c.length){return }for(var b=0;b<c.length;b++){if(c[b]&&c[b].nodeType===1){d(c[b],b)}}}function M(g){var h={};var d=g.tagName.toLowerCase();if(T(d,X.types.TAG)){h[d]=d}for(var e=0;e<g.attributes.length;e++){var i=g.attributes[e].nodeName;if(T(i,X.types.ATTR)){h[i]=i}}var f=G(g);for(var c=0;c<f.length;c++){var j=f[c];if(T(j,X.types.CLASS)){h[j]=j}}return h}function T(b,a){return b in W&&W[b].type.indexOf(a)>-1}function B(b,a){return(b.matches||b.msMatchesSelector||b.webkitMatchesSelector||b.mozMatchesSelector||b.oMatchesSelector).call(b,a)}function R(c,a){for(var b in a){if(c[b]===undefined){c[b]=a[b]}}return c}function E(g,c){var d=c.type.indexOf(X.types.TAG)>-1;var b=c.type.indexOf(X.types.ATTR)>-1;var f=c.type.indexOf(X.types.CLASS)>-1;var a=(function(){var h=[];if(d){h.push(g)}if(b){h.push("["+g+"]")}if(f){h.push("."+g)}return h.join(", ")}());function e(){if(!d){throw new Error('Cannot construct "'+g+'" as a custom element.')}var h=document.createElement(g);c.prototype=e.prototype;U(g,c,h);return h}e.existing=function(h){return(h||document).querySelectorAll(a)};e.selector=function(){return a};e.prototype=c.prototype;return e}document.getElementsByTagName("head")[0].appendChild(P);window.skate=X;if(typeof define==="function"&&define.amd){define(function(){return X})}else{if(typeof exports==="object"){module.exports=X}}})();
/* module-key = 'com.atlassian.auiplugin:aui-core', location = 'js/atlassian.js' */
/* Atlassian UI and the Atlassian Design Guidelines are created by Atlassian. See https://developer.atlassian.com/display/AUI/ for API documentation and https://developer.atlassian.com/design/ for license details. */
(function(){if(!window.jQuery&&!window.Zepto){throw new Error("either jQuery or Zepto is required for AJS to function.")}if(typeof window.console==="undefined"){window.console={messages:[],log:function(A){this.messages.push(A)},show:function(){alert(this.messages.join("\n"));this.messages=[]}}}else{console.show=function(){}}window.AJS=(function(){var F=[];var A;var E;var H=0;function D(L){var K={"<":"&lt;",">":"&gt;","&":"&amp;","'":"&#39;","`":"&#96;"};if(typeof K[L]==="string"){return K[L]}return"&quot;"}var I=/[&"'<>`]/g;var G={version:"5.6.16",params:{},$:window.jQuery||window.Zepto,log:(function(){if(typeof console!=="undefined"&&console.log){if(Function.prototype.bind){return Function.prototype.bind.call(console.log,console)}else{return function(){Function.prototype.apply.call(console.log,console,arguments)}}}return function(){}}()),warn:function(){if(typeof console!=="undefined"&&console.warn){Function.prototype.apply.apply(console.warn,[console,arguments])}},error:function(){if(typeof console!=="undefined"&&console.error){Function.prototype.apply.apply(console.error,[console,arguments])}},preventDefault:function(K){K.preventDefault()},stopEvent:function(K){K.stopPropagation();return false},include:function(K){if(!this.contains(F,K)){F.push(K);var L=document.createElement("script");L.src=K;this.$("body").append(L)}},toggleClassName:function(K,L){if(!(K=this.$(K))){return }K.toggleClass(L)},setVisible:function(L,K){if(!(L=this.$(L))){return }var M=this.$;M(L).each(function(){var N=M(this).hasClass("hidden");if(N&&K){M(this).removeClass("hidden")}else{if(!N&&!K){M(this).addClass("hidden")}}})},setCurrent:function(K,L){if(!(K=this.$(K))){return }if(L){K.addClass("current")}else{K.removeClass("current")}},isVisible:function(K){return !this.$(K).hasClass("hidden")},isClipped:function(K){K=AJS.$(K);return(K.prop("scrollWidth")>K.prop("clientWidth"))},populateParameters:function(L){if(!L){L=this.params}var K=this;this.$(".parameters input").each(function(){var M=this.value,N=this.title||this.id;if(K.$(this).hasClass("list")){if(L[N]){L[N].push(M)}else{L[N]=[M]}}else{L[N]=(M.match(/^(tru|fals)e$/i)?M.toLowerCase()==="true":M)}})},toInit:function(L){var K=this;this.$(function(){try{L.apply(this,arguments)}catch(M){K.log("Failed to run init function: "+M+"\n"+L.toString())}});return this},indexOf:function(O,N,L){var M=O.length;if(!L){L=0}else{if(L<0){L=Math.max(0,M+L)}}for(var K=L;K<M;K++){if(O[K]===N){return K}}return -1},contains:function(L,K){return this.indexOf(L,K)>-1},firebug:function(){AJS.log("DEPRECATED: AJS.firebug should no longer be used.");var K=this.$(document.createElement("script"));K.attr("src","https://getfirebug.com/releases/lite/1.2/firebug-lite-compressed.js");this.$("head").append(K);(function(){if(window.firebug){firebug.init()}else{setTimeout(AJS.firebug,0)}})()},clone:function(K){return AJS.$(K).clone().removeAttr("id")},alphanum:function(R,Q){R=(R+"").toLowerCase();Q=(Q+"").toLowerCase();var M=/(\d+|\D+)/g;var N=R.match(M);var K=Q.match(M);var P=Math.max(N.length,K.length);for(var L=0;L<P;L++){if(L===N.length){return -1}if(L===K.length){return 1}var S=parseInt(N[L],10)+"";var O=parseInt(K[L],10)+"";if(S===N[L]&&O===K[L]&&S!==O){return(S-O)/Math.abs(S-O)}if((S!==N[L]||O!==K[L])&&N[L]!==K[L]){return N[L]<K[L]?-1:1}}return 0},onTextResize:function(L){if(typeof L==="function"){if(AJS.onTextResize["on-text-resize"]){AJS.onTextResize["on-text-resize"].push(function(M){L(M)})}else{var K=AJS("div");K.css({width:"1em",height:"1em",position:"absolute",top:"-9999em",left:"-9999em"});this.$("body").append(K);K.size=K.width();setInterval(function(){if(K.size!==K.width()){K.size=K.width();for(var M=0,N=AJS.onTextResize["on-text-resize"].length;M<N;M++){AJS.onTextResize["on-text-resize"][M](K.size)}}},0);AJS.onTextResize.em=K;AJS.onTextResize["on-text-resize"]=[function(M){L(M)}]}}},unbindTextResize:function(M){for(var K=0,L=AJS.onTextResize["on-text-resize"].length;K<L;K++){if(AJS.onTextResize["on-text-resize"][K]===M){return AJS.onTextResize["on-text-resize"].splice(K,1)}}},escape:function(K){return escape(K).replace(/%u\w{4}/gi,function(L){return unescape(L)})},escapeHtml:function(K){return K.replace(I,D)},filterBySearch:function(O,T,U){if(!T){return[]}var M=this.$;var R=(U&&U.keywordsField)||"keywords";var Q=(U&&U.ignoreForCamelCase)?"i":"";var N=(U&&U.matchBoundary)?"\\b":"";var L=(U&&U.splitRegex)||(/\s+/);var P=T.split(L);var K=[];P.forEach(function(X){var W=[new RegExp(N+X,"i")];if(/^([A-Z][a-z]*) {2,}$/.test(this)){var V=this.replace(/([A-Z][a-z]*)/g,"\\b$1[^,]*");W.push(new RegExp(V,Q))}K.push(W)});var S=[];O.forEach(function(Y){for(var X=0;X<K.length;X++){var V=false;for(var W=0;W<K[X].length;W++){if(K[X][W].test(Y[R])){V=true;break}}if(!V){return }}S.push(Y)});return S},drawLogo:function(T){AJS.log("DEPRECATED: AJS.drawLogo should no longer be used.");var M=T.scaleFactor||1;var R=T.fill||"#fff";var S=T.stroke||"#000";var K=400*M;var P=40*M;var O=T.strokeWidth||1;var Q=T.containerID||".aui-logo";if(!AJS.$(".aui-logo").length){AJS.$("body").append('<div id="aui-logo" class="aui-logo"><div>')}var N=Raphael(Q,K+50*M,P+100*M);var L=N.path("M 0,0 c 3.5433333,-4.7243333 7.0866667,-9.4486667 10.63,-14.173 -14.173,0 -28.346,0 -42.519,0 C -35.432667,-9.4486667 -38.976333,-4.7243333 -42.52,0 -28.346667,0 -14.173333,0 0,0 z m 277.031,28.346 c -14.17367,0 -28.34733,0 -42.521,0 C 245.14,14.173 255.77,0 266.4,-14.173 c -14.17267,0 -28.34533,0 -42.518,0 C 213.25167,0 202.62133,14.173 191.991,28.346 c -14.17333,0 -28.34667,0 -42.52,0 14.17333,-18.8976667 28.34667,-37.7953333 42.52,-56.693 -7.08667,-9.448667 -14.17333,-18.897333 -21.26,-28.346 -14.173,0 -28.346,0 -42.519,0 7.08667,9.448667 14.17333,18.897333 21.26,28.346 -14.17333,18.8976667 -28.34667,37.7953333 -42.52,56.693 -14.173333,0 -28.346667,0 -42.52,0 10.63,-14.173 21.26,-28.346 31.89,-42.519 -14.390333,0 -28.780667,0 -43.171,0 C 42.520733,1.330715e-4 31.889933,14.174867 21.26,28.347 c -42.520624,6.24e-4 -85.039187,-8.13e-4 -127.559,-0.001 11.220667,-14.961 22.441333,-29.922 33.662,-44.883 -6.496,-8.661 -12.992,-17.322 -19.488,-25.983 5.905333,0 11.810667,0 17.716,0 -10.63,-14.173333 -21.26,-28.346667 -31.89,-42.52 14.173333,0 28.346667,0 42.52,0 10.63,14.173333 21.26,28.346667 31.89,42.52 14.173333,0 28.3466667,0 42.52,0 -10.63,-14.173333 -21.26,-28.346667 -31.89,-42.52 14.1733333,0 28.3466667,0 42.52,0 10.63,14.173333 21.26,28.346667 31.89,42.52 14.390333,0 28.780667,0 43.171,0 -10.63,-14.173333 -21.26,-28.346667 -31.89,-42.52 42.51967,0 85.03933,0 127.559,0 10.63033,14.173333 21.26067,28.346667 31.891,42.52 14.17267,0 28.34533,0 42.518,0 -10.63,-14.173333 -21.26,-28.346667 -31.89,-42.52 14.17367,0 28.34733,0 42.521,0 14.17333,18.897667 28.34667,37.795333 42.52,56.693 -14.17333,18.8976667 -28.34667,37.7953333 -42.52,56.693 z");L.scale(M,-M,0,0);L.translate(120*M,P);L.attr("fill",R);L.attr("stroke",S);L.attr("stroke-width",O)},debounce:function(L,N){var M;var K;return function(){var O=arguments;var P=this;var Q=function(){K=L.apply(P,O)};clearTimeout(M);M=setTimeout(Q,N);return K}},id:function(K){A=H+++"";E=K?K+A:"aui-uid-"+A;if(!document.getElementById(E)){return E}else{E=E+"-"+new Date().getTime();if(!document.getElementById(E)){return E}else{throw new Error("ERROR: timestamped fallback ID "+E+" exists. AJS.id stopped.")}}},_addID:function(L,M){var K=AJS.$(L);var N=M||false;K.each(function(){var O=AJS.$(this);if(!O.attr("id")){O.attr("id",AJS.id(N))}})},enable:function(M,K){var L=AJS.$(M);if(typeof K==="undefined"){K=true}return L.each(function(){this.disabled=!K})}};if(typeof AJS!=="undefined"){for(var C in AJS){G[C]=AJS[C]}}var J=function(){var K=null;if(arguments.length&&typeof arguments[0]==="string"){K=AJS.$(document.createElement(arguments[0]));if(arguments.length===2){K.html(arguments[1])}}return K};for(var B in G){J[B]=G[B]}return J})();AJS.$(function(){var A=AJS.$("body");if(!A.data("auiVersion")){A.attr("data-aui-version",AJS.version)}AJS.populateParameters()});AJS.$.ajaxSettings.traditional=true})();
/* module-key = 'com.atlassian.auiplugin:aui-core', location = 'js/format.js' */
AJS.format=function(I){var B=/'(?!')/g,H=/^\d+$/,E=/^(\d+),number$/,C=/^(\d+)\,choice\,(.+)/,G=/^(\d+)([#<])(.+)/;var F=function(R,P){var O="",M;if(M=R.match(H)){O=P.length>++R?P[R]:""}else{if(M=R.match(E)){O=P.length>++M[1]?P[M[1]]:""}else{if(M=R.match(C)){var S=(P.length>++M[1]?P[M[1]]:null);if(S!==null){var T=M[2].split("|");var N=null;for(var L=0;L<T.length;L++){var K=T[L].match(G);var Q=parseInt(K[1],10);if(S<Q){if(N){O=N;break}else{O=K[3];break}}if(S==Q&&K[2]=="#"){O=K[3];break}else{}if(L==T.length-1){O=K[3]}N=K[3]}var J=[O].concat(Array.prototype.slice.call(P,1));O=AJS.format.apply(AJS,J)}}}}return O};var D=function(O){var M=false,J=-1,N=0;for(var L=0;L<O.length;L++){var P=O.charAt(L);if(P=="'"){M=!M}if(M){continue}if(P==="{"){if(N===0){J=L}N++}else{if(P==="}"){if(N>0){N--;if(N===0){var K=[];K.push(O.substring(0,L+1));K.push(O.substring(0,J));K.push(O.substring(J+1,L));return K}}}}}return null};var A=function(M){var K=arguments,L="",J=D(M);while(J){M=M.substring(J[0].length);L+=J[1].replace(B,"");L+=F(J[2],K);J=D(M)}L+=M.replace(B,"");return L};return A.apply(AJS,arguments)};AJS.I18n={getText:function(A){var B=Array.prototype.slice.call(arguments,1);if(AJS.I18n.keys&&Object.prototype.hasOwnProperty.call(AJS.I18n.keys,A)){return AJS.format.apply(null,[AJS.I18n.keys[A]].concat(B))}return A}};
/* module-key = 'com.atlassian.auiplugin:aui-core', location = 'js/blanket.js' */
(function(B){var A;AJS.dim=function(C,D){if(!A){A=B(document.body)}if(C===true){AJS.log("DEPRECATED: useShim is calculated by dim() now")}if(!AJS.dim.$dim){AJS.dim.$dim=AJS("div").addClass("aui-blanket");AJS.dim.$dim.attr("tabindex","0");if(D){AJS.dim.$dim.css({zIndex:D})}if(B.browser.msie){AJS.dim.$dim.css({width:"200%",height:Math.max(B(document).height(),B(window).height())+"px"})}B("body").append(AJS.dim.$dim);AJS.dim.cachedOverflow=A.css("overflow");A.css("overflow","hidden")}return AJS.dim.$dim};AJS.undim=function(){if(AJS.dim.$dim){AJS.dim.$dim.remove();AJS.dim.$dim=null;if(AJS.dim.$shim){AJS.dim.$shim.remove();AJS.dim.$shim=null}A&&A.css("overflow",AJS.dim.cachedOverflow);if(B.browser.safari){var C=B(window).scrollTop();B(window).scrollTop(10+5*(C==10)).scrollTop(C)}}}}(AJS.$));
/* module-key = 'com.atlassian.auiplugin:ajs-gadgets-base', location = 'js-vendor/jquery/plugins/jquery.aop.js' */
(function(){var _after=1;var _afterThrow=2;var _afterFinally=3;var _before=4;var _around=5;var _intro=6;var _regexEnabled=true;var _arguments="arguments";var _undef="undefined";var getType=(function(){var toString=Object.prototype.toString,toStrings={},nodeTypes={1:"element",3:"textnode",9:"document",11:"fragment"},types="Arguments Array Boolean Date Document Element Error Fragment Function NodeList Null Number Object RegExp String TextNode Undefined Window".split(" ");for(var i=types.length;i--;){var type=types[i],constructor=window[type];if(constructor){try{toStrings[toString.call(new constructor)]=type.toLowerCase()}catch(e){}}}return function(item){return item==null&&(item===undefined?_undef:"null")||item.nodeType&&nodeTypes[item.nodeType]||typeof item.length=="number"&&(item.callee&&_arguments||item.alert&&"window"||item.item&&"nodelist")||toStrings[toString.call(item)]}})();var isFunc=function(obj){return getType(obj)=="function"};var weaveOne=function(source,method,advice){var old=source[method];if(advice.type!=_intro&&!isFunc(old)){var oldObject=old;old=function(){var code=arguments.length>0?_arguments+"[0]":"";for(var i=1;i<arguments.length;i++){code+=","+_arguments+"["+i+"]"}return eval("oldObject("+code+");")}}var aspect;if(advice.type==_after||advice.type==_afterThrow||advice.type==_afterFinally){aspect=function(){var returnValue,exceptionThrown=null;try{returnValue=old.apply(this,arguments)}catch(e){exceptionThrown=e}if(advice.type==_after){if(exceptionThrown==null){returnValue=advice.value.apply(this,[returnValue,method])}else{throw exceptionThrown}}else{if(advice.type==_afterThrow&&exceptionThrown!=null){returnValue=advice.value.apply(this,[exceptionThrown,method])}else{if(advice.type==_afterFinally){returnValue=advice.value.apply(this,[returnValue,exceptionThrown,method])}}}return returnValue}}else{if(advice.type==_before){aspect=function(){advice.value.apply(this,[arguments,method]);return old.apply(this,arguments)}}else{if(advice.type==_intro){aspect=function(){return advice.value.apply(this,arguments)}}else{if(advice.type==_around){aspect=function(){var invocation={object:this,args:Array.prototype.slice.call(arguments)};return advice.value.apply(invocation.object,[{arguments:invocation.args,method:method,proceed:function(){return old.apply(invocation.object,invocation.args)}}])}}}}}aspect.unweave=function(){source[method]=old;pointcut=source=aspect=old=null};source[method]=aspect;return aspect};var search=function(source,pointcut,advice){var methods=[];for(var method in source){var item=null;try{item=source[method]}catch(e){}if(item!=null&&method.match(pointcut.method)&&isFunc(item)){methods[methods.length]={source:source,method:method,advice:advice}}}return methods};var weave=function(pointcut,advice){var source=typeof (pointcut.target.prototype)!=_undef?pointcut.target.prototype:pointcut.target;var advices=[];if(advice.type!=_intro&&typeof (source[pointcut.method])==_undef){var methods=search(pointcut.target,pointcut,advice);if(methods.length==0){methods=search(source,pointcut,advice)}for(var i in methods){advices[advices.length]=weaveOne(methods[i].source,methods[i].method,methods[i].advice)}}else{advices[0]=weaveOne(source,pointcut.method,advice)}return _regexEnabled?advices:advices[0]};jQuery.aop={after:function(pointcut,advice){return weave(pointcut,{type:_after,value:advice})},afterThrow:function(pointcut,advice){return weave(pointcut,{type:_afterThrow,value:advice})},afterFinally:function(pointcut,advice){return weave(pointcut,{type:_afterFinally,value:advice})},before:function(pointcut,advice){return weave(pointcut,{type:_before,value:advice})},around:function(pointcut,advice){return weave(pointcut,{type:_around,value:advice})},introduction:function(pointcut,advice){return weave(pointcut,{type:_intro,value:advice})},setup:function(settings){_regexEnabled=settings.regexMatch}}})();
/* module-key = 'com.atlassian.auiplugin:ajs-gadgets-base', location = 'js/dropdown.js' */
AJS.dropDown=function(L,E){var U=null,I=[],Q=false,H=AJS.$(document),C={item:"li:has(a)",activeClass:"active",alignment:"right",displayHandler:function(W){return W.name},escapeHandler:function(){this.hide("escape");return false},hideHandler:function(){},moveHandler:function(X,W){},useDisabled:false};AJS.$.extend(C,E);C.alignment={left:"left",right:"right"}[C.alignment.toLowerCase()]||"left";if(L&&L.jquery){U=L}else{if(typeof L=="string"){U=AJS.$(L)}else{if(L&&L.constructor==Array){U=AJS("div").addClass("aui-dropdown").toggleClass("hidden",!!C.isHiddenByDefault);for(var P=0,K=L.length;P<K;P++){var J=AJS("ol");for(var O=0,S=L[P].length;O<S;O++){var M=AJS("li");var G=L[P][O];if(G.href){M.append(AJS("a").html("<span>"+C.displayHandler(G)+"</span>").attr({href:G.href}).addClass(G.className));AJS.$.data(AJS.$("a > span",M)[0],"properties",G)}else{M.html(G.html).addClass(G.className)}if(G.icon){M.prepend(AJS("img").attr("src",G.icon))}if(G.insideSpanIcon){M.children("a").prepend(AJS("span").attr("class","icon"))}AJS.$.data(M[0],"properties",G);J.append(M)}if(P==K-1){J.addClass("last")}U.append(J)}AJS.$("body").append(U)}else{throw new Error("AJS.dropDown function was called with illegal parameter. Should be AJS.$ object, AJS.$ selector or array.")}}}var F=function(){N(+1)};var T=function(){N(-1)};var N=function(Z){var Y=!Q,W=AJS.dropDown.current.$[0],X=AJS.dropDown.current.links,a=W.focused;Q=true;if(X.length===0){return }W.focused=(typeof a==="number")?a:-1;if(!AJS.dropDown.current){AJS.log("move - not current, aborting");return true}W.focused+=Z;if(W.focused<0){W.focused=X.length-1}else{if(W.focused>=X.length){W.focused=0}}C.moveHandler(AJS.$(X[W.focused]),Z<0?"up":"down");if(Y&&X.length){AJS.$(X[W.focused]).addClass(C.activeClass);Q=false}else{if(!X.length){Q=false}}};var V=function(Y){if(!AJS.dropDown.current){return true}var Z=Y.which,W=AJS.dropDown.current.$[0],X=AJS.dropDown.current.links;AJS.dropDown.current.cleanActive();switch(Z){case 40:F();break;case 38:T();break;case 27:return C.escapeHandler.call(AJS.dropDown.current,Y);case 13:if(W.focused>=0){if(!C.selectionHandler){if(AJS.$(X[W.focused]).attr("nodeName")!="a"){return AJS.$("a",X[W.focused]).trigger("focus")}else{return AJS.$(X[W.focused]).trigger("focus")}}else{return C.selectionHandler.call(AJS.dropDown.current,Y,AJS.$(X[W.focused]))}}return true;default:if(X.length){AJS.$(X[W.focused]).addClass(C.activeClass)}return true}Y.stopPropagation();Y.preventDefault();return false};var A=function(W){if(!((W&&W.which&&(W.which==3))||(W&&W.button&&(W.button==2))||false)){if(AJS.dropDown.current){AJS.dropDown.current.hide("click")}}};var D=function(W){return function(){if(!AJS.dropDown.current){return }AJS.dropDown.current.cleanFocus();this.originalClass=this.className;AJS.$(this).addClass(C.activeClass);AJS.dropDown.current.$[0].focused=W}};var R=function(W){if(W.button||W.metaKey||W.ctrlKey||W.shiftKey){return true}if(AJS.dropDown.current&&C.selectionHandler){C.selectionHandler.call(AJS.dropDown.current,W,AJS.$(this))}};var B=function(X){var W=false;if(X.data("events")){AJS.$.each(X.data("events"),function(Y,Z){AJS.$.each(Z,function(b,a){if(R===a){W=true;return false}})})}return W};U.each(function(){var W=this,Y=AJS.$(this),Z={};var X={reset:function(){Z=AJS.$.extend(Z,{$:Y,links:AJS.$(C.item||"li:has(a)",W),cleanActive:function(){if(W.focused+1&&Z.links.length){AJS.$(Z.links[W.focused]).removeClass(C.activeClass)}},cleanFocus:function(){Z.cleanActive();W.focused=-1},moveDown:F,moveUp:T,moveFocus:V,getFocusIndex:function(){return(typeof W.focused=="number")?W.focused:-1}});Z.links.each(function(a){var b=AJS.$(this);if(!B(b)){b.hover(D(a),Z.cleanFocus);b.click(R)}})},appear:function(a){if(a){Y.removeClass("hidden");Y.addClass("aui-dropdown-"+C.alignment)}else{Y.addClass("hidden")}},fade:function(a){if(a){Y.fadeIn("fast")}else{Y.fadeOut("fast")}},scroll:function(a){if(a){Y.slideDown("fast")}else{Y.slideUp("fast")}}};Z.reset=X.reset;Z.reset();Z.addControlProcess=function(b,a){AJS.$.aop.around({target:this,method:b},a)};Z.addCallback=function(b,a){return AJS.$.aop.after({target:this,method:b},a)};Z.show=function(a){if(C.useDisabled&&this.$.closest(".aui-dd-parent").hasClass("disabled")){return }this.alignment=C.alignment;A();AJS.dropDown.current=this;this.method=a||this.method||"appear";this.timer=setTimeout(function(){H.click(A)},0);H.keydown(V);if(C.firstSelected&&this.links[0]){D(0).call(this.links[0])}AJS.$(W.offsetParent).css({zIndex:2000});X[this.method](true);AJS.$(document).trigger("showLayer",["dropdown",AJS.dropDown.current])};Z.hide=function(a){this.method=this.method||"appear";AJS.$(Y.get(0).offsetParent).css({zIndex:""});this.cleanFocus();X[this.method](false);H.unbind("click",A).unbind("keydown",V);AJS.$(document).trigger("hideLayer",["dropdown",AJS.dropDown.current]);AJS.dropDown.current=null;return a};Z.addCallback("reset",function(){if(C.firstSelected&&this.links[0]){D(0).call(this.links[0])}});if(!AJS.dropDown.iframes){AJS.dropDown.iframes=[]}AJS.dropDown.createShims=function(){AJS.$("iframe").each(function(a){var b=this;if(!b.shim){b.shim=AJS.$("<div />").addClass("shim hidden").appendTo("body");AJS.dropDown.iframes.push(b)}});return arguments.callee}();Z.addCallback("show",function(){AJS.$(AJS.dropDown.iframes).each(function(){var a=AJS.$(this);if(a.is(":visible")){var b=a.offset();b.height=a.height();b.width=a.width();this.shim.css({left:b.left+"px",top:b.top+"px",height:b.height+"px",width:b.width+"px"}).removeClass("hidden")}})});Z.addCallback("hide",function(){AJS.$(AJS.dropDown.iframes).each(function(){this.shim.addClass("hidden")});C.hideHandler()});I.push(Z)});return I};AJS.dropDown.getAdditionalPropertyValue=function(D,A){var C=D[0];if(!C||(typeof C.tagName!="string")||C.tagName.toLowerCase()!="li"){AJS.log("AJS.dropDown.getAdditionalPropertyValue : item passed in should be an LI element wrapped by jQuery")}var B=AJS.$.data(C,"properties");return B?B[A]:null};AJS.dropDown.removeAllAdditionalProperties=function(A){};AJS.dropDown.Standard=function(H){var C=[],G,B={selector:".aui-dd-parent",dropDown:".aui-dropdown",trigger:".aui-dd-trigger"};AJS.$.extend(B,H);var F=function(I,L,K,J){AJS.$.extend(J,{trigger:I});L.addClass("dd-allocated");K.addClass("hidden");if(B.isHiddenByDefault==false){J.show()}J.addCallback("show",function(){L.addClass("active")});J.addCallback("hide",function(){L.removeClass("active")})};var A=function(K,I,L,J){if(J!=AJS.dropDown.current){L.css({top:I.outerHeight()});J.show();K.stopImmediatePropagation()}K.preventDefault()};if(B.useLiveEvents){var D=[];var E=[];AJS.$(B.trigger).live("click",function(L){var I=AJS.$(this);var N,M,J;var K;if((K=AJS.$.inArray(this,D))>=0){var O=E[K];N=O.parent;M=O.dropdown;J=O.ddcontrol}else{N=I.closest(B.selector);M=N.find(B.dropDown);if(M.length===0){return }J=AJS.dropDown(M,B)[0];if(!J){return }D.push(this);O={parent:N,dropdown:M,ddcontrol:J};F(I,N,M,J);E.push(O)}A(L,I,M,J)})}else{if(this instanceof AJS.$){G=this}else{G=AJS.$(B.selector)}G=G.not(".dd-allocated").filter(":has("+B.dropDown+")").filter(":has("+B.trigger+")");G.each(function(){var L=AJS.$(this),K=AJS.$(B.dropDown,this),I=AJS.$(B.trigger,this),J=AJS.dropDown(K,B)[0];AJS.$.extend(J,{trigger:I});F(I,L,K,J);I.click(function(M){A(M,I,K,J)});C.push(J)})}return C};AJS.dropDown.Ajax=function(C){var B,A={cache:true};AJS.$.extend(A,C||{});B=AJS.dropDown.Standard.call(this,A);AJS.$(B).each(function(){var D=this;AJS.$.extend(D,{getAjaxOptions:function(E){var F=function(G){if(A.formatResults){G=A.formatResults(G)}if(A.cache){D.cache.set(D.getAjaxOptions(),G)}D.refreshSuccess(G)};if(A.ajaxOptions){if(AJS.$.isFunction(A.ajaxOptions)){return AJS.$.extend(A.ajaxOptions.call(D),{success:F})}else{return AJS.$.extend(A.ajaxOptions,{success:F})}}return AJS.$.extend(E,{success:F})},refreshSuccess:function(E){this.$.html(E)},cache:function(){var E={};return{get:function(F){var G=F.data||"";return E[(F.url+G).replace(/[\?\&]/gi,"")]},set:function(F,G){var H=F.data||"";E[(F.url+H).replace(/[\?\&]/gi,"")]=G},reset:function(){E={}}}}(),show:function(E){return function(F){if(A.cache&&!!D.cache.get(D.getAjaxOptions())){D.refreshSuccess(D.cache.get(D.getAjaxOptions()));E.call(D)}else{AJS.$(AJS.$.ajax(D.getAjaxOptions())).throbber({target:D.$,end:function(){D.reset()}});E.call(D);if(D.iframeShim){D.iframeShim.hide()}}}}(D.show),resetCache:function(){D.cache.reset()}});D.addCallback("refreshSuccess",function(){D.reset()})});return B};AJS.$.fn.dropDown=function(B,A){B=(B||"Standard").replace(/^([a-z])/,function(C){return C.toUpperCase()});return AJS.dropDown[B].call(this,A)};
/* module-key = 'com.atlassian.auiplugin:ajs-raphael', location = 'js-vendor/raphael/raphael.js' */
/* THIS FILE HAS BEEN MODIFIED BY ATLASSIAN. See https://ecosystem.atlassian.net/browse/AUI-1535 for details. Modified lines are marked below, search "ATLASSIAN" */
(function(I){var E="0.3.4",J="hasOwnProperty",B=/[\.\/]/,A="*",G=function(){},F=function(M,L){return M-L},D,H,K={n:{}},C=function(L,a){var U=K,R=H,V=Array.prototype.slice.call(arguments,2),X=C.listeners(L),W=0,T=false,O,N=[],S={},P=[],M=D,Y=[];D=L;H=0;for(var Q=0,Z=X.length;Q<Z;Q++){if("zIndex" in X[Q]){N.push(X[Q].zIndex);if(X[Q].zIndex<0){S[X[Q].zIndex]=X[Q]}}}N.sort(F);while(N[W]<0){O=S[N[W++]];P.push(O.apply(a,V));if(H){H=R;return P}}for(Q=0;Q<Z;Q++){O=X[Q];if("zIndex" in O){if(O.zIndex==N[W]){P.push(O.apply(a,V));if(H){break}do{W++;O=S[N[W]];O&&P.push(O.apply(a,V));if(H){break}}while(O)}else{S[O.zIndex]=O}}else{P.push(O.apply(a,V));if(H){break}}}H=R;D=M;return P.length?P:null};C.listeners=function(L){var T=L.split(B),R=K,X,S,M,P,W,O,Q,U,V=[R],N=[];for(P=0,W=T.length;P<W;P++){U=[];for(O=0,Q=V.length;O<Q;O++){R=V[O].n;S=[R[T[P]],R[A]];M=2;while(M--){X=S[M];if(X){U.push(X);N=N.concat(X.f||[])}}}V=U}return N};C.on=function(L,O){var Q=L.split(B),P=K;for(var M=0,N=Q.length;M<N;M++){P=P.n;!P[Q[M]]&&(P[Q[M]]={n:{}});P=P[Q[M]]}P.f=P.f||[];for(M=0,N=P.f.length;M<N;M++){if(P.f[M]==O){return G}}P.f.push(O);return function(R){if(+R==+R){O.zIndex=+R}}};C.stop=function(){H=1};C.nt=function(L){if(L){return new RegExp("(?:\\.|\\/|^)"+L+"(?:\\.|\\/|$)").test(D)}return D};C.off=C.unbind=function(M,R){var T=M.split(B),S,V,N,P,W,O,Q,U=[K];for(P=0,W=T.length;P<W;P++){for(O=0;O<U.length;O+=N.length-2){N=[O,1];S=U[O].n;if(T[P]!=A){if(S[T[P]]){N.push(S[T[P]])}}else{for(V in S){if(S[J](V)){N.push(S[V])}}}U.splice.apply(U,N)}}for(P=0,W=U.length;P<W;P++){S=U[P];while(S.n){if(R){if(S.f){for(O=0,Q=S.f.length;O<Q;O++){if(S.f[O]==R){S.f.splice(O,1);break}}!S.f.length&&delete S.f}for(V in S.n){if(S.n[J](V)&&S.n[V].f){var L=S.n[V].f;for(O=0,Q=L.length;O<Q;O++){if(L[O]==R){L.splice(O,1);break}}!L.length&&delete S.n[V].f}}}else{delete S.f;for(V in S.n){if(S.n[J](V)&&S.n[V].f){delete S.n[V].f}}}S=S.n}}};C.once=function(L,M){var N=function(){var O=M.apply(this,arguments);C.unbind(L,N);return O};return C.on(L,N)};C.version=E;C.toString=function(){return"You are running Eve "+E};(typeof module!="undefined"&&module.exports)?(module.exports=C):(typeof define!="undefined"?(define("eve",[],function(){return C})):(I.eve=C))})(this);if(!window.eve&&typeof define==="function"&&typeof require==="function"){window.eve=require("eve")}(function(){function Aq(S){if(Aq.is(S,"function")){return AO?S():eve.on("raphael.DOMload",S)}else{if(Aq.is(S,BC)){return Aq._engine.create[Bf](Aq,S.splice(0,3+Aq.is(S[0],Ak))).add(S)}else{var E=Array.prototype.slice.call(arguments,0);if(Aq.is(E[E.length-1],"function")){var R=E.pop();return AO?R.call(Aq._engine.create[Bf](Aq,E)):eve.on("raphael.DOMload",function(){R.call(Aq._engine.create[Bf](Aq,E))})}else{return Aq._engine.create[Bf](Aq,arguments)}}}}Aq.version="2.1.0";Aq.eve=eve;var AO,A=/[, ]+/,BV={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},BQ=/\{(\d+)\}/g,Bi="prototype",AK="hasOwnProperty",AZ={doc:document,win:window},P={was:Object.prototype[AK].call(AZ.win,"Raphael"),is:AZ.win.Raphael},Be=function(){this.ca=this.customAttributes={}},A3,BN="appendChild",Bf="apply",Bd="concat",z="createTouch" in AZ.doc,Aw="",Ap=" ",Bg=String,f="split",s="click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[f](Ap),BW={mousedown:"touchstart",mousemove:"touchmove",mouseup:"touchend"},Bj=Bg.prototype.toLowerCase,AT=Math,J=AT.max,BL=AT.min,AV=AT.abs,BO=AT.pow,Au=AT.PI,Ak="number",AJ="string",BC="array",A4="toString",A8="fill",A0=Object.prototype.toString,BY={},G="push",D=Aq._ISURL=/^url\(['"]?([^\)]+?)['"]?\)$/i,Z=/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,AU={"NaN":1,"Infinity":1,"-Infinity":1},B=/^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,AH=AT.round,Y="setAttribute",AN=parseFloat,u=parseInt,BS=Bg.prototype.toUpperCase,O=Aq._availableAttrs={"arrow-end":"none","arrow-start":"none",blur:0,"clip-rect":"0 0 1e9 1e9",cursor:"default",cx:0,cy:0,fill:"#fff","fill-opacity":1,font:'10px "Arial"',"font-family":'"Arial"',"font-size":"10","font-style":"normal","font-weight":400,gradient:0,height:0,href:"http://raphaeljs.com/","letter-spacing":0,opacity:1,path:"M0,0",r:0,rx:0,ry:0,src:"",stroke:"#000","stroke-dasharray":"","stroke-linecap":"butt","stroke-linejoin":"butt","stroke-miterlimit":0,"stroke-opacity":1,"stroke-width":1,target:"_blank","text-anchor":"middle",title:"Raphael",transform:"",width:0,x:0,y:0},AR=Aq._availableAnimAttrs={blur:Ak,"clip-rect":"csv",cx:Ak,cy:Ak,fill:"colour","fill-opacity":Ak,"font-size":Ak,height:Ak,opacity:Ak,path:"path",r:Ak,rx:Ak,ry:Ak,stroke:"colour","stroke-opacity":Ak,"stroke-width":Ak,transform:"transform",width:Ak,x:Ak,y:Ak},AC=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]/g,BH=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,K={hs:1,rg:1},BF=/,?([achlmqrstvxz]),?/gi,Az=/([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,AI=/([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,Ao=/(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/ig,Av=Aq._radial_gradient=/^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,At={},BP=function(R,E){return R.key-E.key},T=function(R,E){return AN(R)-AN(E)},k=function(){},Ba=function(E){return E},AY=Aq._rectPath=function(E,d,R,S,b){if(b){return[["M",E+b,d],["l",R-b*2,0],["a",b,b,0,0,1,b,b],["l",0,S-b*2],["a",b,b,0,0,1,-b,b],["l",b*2-R,0],["a",b,b,0,0,1,-b,-b],["l",0,b*2-S],["a",b,b,0,0,1,b,-b],["z"]]}return[["M",E,d],["l",R,0],["l",0,S],["l",-R,0],["z"]]},m=function(E,b,S,R){if(R==null){R=S}return[["M",E,b],["m",0,-R],["a",S,R,0,1,1,0,2*R],["a",S,R,0,1,1,0,-2*R],["z"]]},p=Aq._getPath={path:function(E){return E.attr("path")},circle:function(R){var E=R.attrs;return m(E.cx,E.cy,E.r)},ellipse:function(R){var E=R.attrs;return m(E.cx,E.cy,E.rx,E.ry)},rect:function(R){var E=R.attrs;return AY(E.x,E.y,E.width,E.height,E.r)},image:function(R){var E=R.attrs;return AY(E.x,E.y,E.width,E.height)},text:function(E){var R=E._getBBox();return AY(R.x,R.y,R.width,R.height)}},n=Aq.mapPath=function(Bm,g){if(!g){return Bm}var Bk,d,S,E,Bl,b,R;Bm=w(Bm);for(S=0,Bl=Bm.length;S<Bl;S++){R=Bm[S];for(E=1,b=R.length;E<b;E+=2){Bk=g.x(R[E],R[E+1]);d=g.y(R[E],R[E+1]);R[E]=Bk;R[E+1]=d}}return Bm};Aq._g=AZ;Aq.type=(AZ.win.SVGAngle||AZ.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")?"SVG":"VML");if(Aq.type=="VML"){var Ad=AZ.doc.createElement("div"),Ag;Ad.innerHTML='<v:shape adj="1"/>';Ag=Ad.firstChild;Ag.style.behavior="url(#default#VML)";if(!(Ag&&typeof Ag.adj=="object")){return(Aq.type=Aw)}Ad=null}Aq.svg=!(Aq.vml=Aq.type=="VML");Aq._Paper=Be;Aq.fn=A3=Be.prototype=Aq.prototype;Aq._id=0;Aq._oid=0;Aq.is=function(R,E){E=Bj.call(E);if(E=="finite"){return !AU[AK](+R)}if(E=="array"){return R instanceof Array}return(E=="null"&&R===null)||(E==typeof R&&R!==null)||(E=="object"&&R===Object(R))||(E=="array"&&Array.isArray&&Array.isArray(R))||A0.call(R).slice(8,-1).toLowerCase()==E};function x(S){if(Object(S)!==S){return S}var R=new S.constructor;for(var E in S){if(S[AK](E)){R[E]=x(S[E])}}return R}Aq.angle=function(d,i,S,g,R,b){if(R==null){var E=d-S,Bk=i-g;if(!E&&!Bk){return 0}return(180+AT.atan2(-Bk,-E)*180/Au+360)%360}else{return Aq.angle(d,i,R,b)-Aq.angle(S,g,R,b)}};Aq.rad=function(E){return E%360*Au/180};Aq.deg=function(E){return E*180/Au%360};Aq.snapTo=function(R,b,E){E=Aq.is(E,"finite")?E:10;if(Aq.is(R,BC)){var S=R.length;while(S--){if(AV(R[S]-b)<=E){return R[S]}}}else{R=+R;var d=b%R;if(d<E){return b-d}if(d>R-E){return b-d+R}}return b};var F=Aq.createUUID=(function(E,R){return function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(E,R).toUpperCase()}})(/[xy]/g,function(S){var R=AT.random()*16|0,E=S=="x"?R:(R&3|8);return E.toString(16)});Aq.setWindow=function(E){eve("raphael.setWindow",Aq,AZ.win,E);AZ.win=E;AZ.doc=AZ.win.document;if(Aq._engine.initWin){Aq._engine.initWin(AZ.win)}};var BE=function(S){if(Aq.vml){var E=/^\s+|\s+$/g;var d;try{var g=new ActiveXObject("htmlfile");g.write("<body>");g.close();d=g.body}catch(Bk){d=createPopup().document.body}var R=d.createTextRange();BE=Af(function(i){try{d.style.color=Bg(i).replace(E,Aw);var Bl=R.queryCommandValue("ForeColor");Bl=((Bl&255)<<16)|(Bl&65280)|((Bl&16711680)>>>16);return"#"+("000000"+Bl.toString(16)).slice(-6)}catch(Bm){return"none"}})}else{var b=AZ.doc.createElement("i");b.title="Rapha\xebl Colour Picker";b.style.display="none";AZ.doc.body.appendChild(b);BE=Af(function(i){b.style.color=i;return AZ.doc.defaultView.getComputedStyle(b,Aw).getPropertyValue("color")})}return BE(S)},Ah=function(){return"hsb("+[this.h,this.s,this.b]+")"},o=function(){return"hsl("+[this.h,this.s,this.l]+")"},W=function(){return this.hex},Ax=function(d,S,E){if(S==null&&Aq.is(d,"object")&&"r" in d&&"g" in d&&"b" in d){E=d.b;S=d.g;d=d.r}if(S==null&&Aq.is(d,AJ)){var R=Aq.getRGB(d);d=R.r;S=R.g;E=R.b}if(d>1||S>1||E>1){d/=255;S/=255;E/=255}return[d,S,E]},A1=function(d,S,E,i){d*=255;S*=255;E*=255;var R={r:d,g:S,b:E,hex:Aq.rgb(d,S,E),toString:W};Aq.is(i,"finite")&&(R.opacity=i);return R};Aq.color=function(E){var R;if(Aq.is(E,"object")&&"h" in E&&"s" in E&&"b" in E){R=Aq.hsb2rgb(E);E.r=R.r;E.g=R.g;E.b=R.b;E.hex=R.hex}else{if(Aq.is(E,"object")&&"h" in E&&"s" in E&&"l" in E){R=Aq.hsl2rgb(E);E.r=R.r;E.g=R.g;E.b=R.b;E.hex=R.hex}else{if(Aq.is(E,"string")){E=Aq.getRGB(E)}if(Aq.is(E,"object")&&"r" in E&&"g" in E&&"b" in E){R=Aq.rgb2hsl(E);E.h=R.h;E.s=R.s;E.l=R.l;R=Aq.rgb2hsb(E);E.v=R.b}else{E={hex:"none"};E.r=E.g=E.b=E.h=E.s=E.v=E.l=-1}}}E.toString=W;return E};Aq.hsb2rgb=function(i,Bm,Bk,d){if(this.is(i,"object")&&"h" in i&&"s" in i&&"b" in i){Bk=i.b;Bm=i.s;i=i.h;d=i.o}i*=360;var g,Bl,S,b,E;i=(i%360)/60;E=Bk*Bm;b=E*(1-AV(i%2-1));g=Bl=S=Bk-E;i=~~i;g+=[E,b,0,0,b,E][i];Bl+=[b,E,E,b,0,0][i];S+=[0,0,b,E,E,b][i];return A1(g,Bl,S,d)};Aq.hsl2rgb=function(Bk,Bm,g,d){if(this.is(Bk,"object")&&"h" in Bk&&"s" in Bk&&"l" in Bk){g=Bk.l;Bm=Bk.s;Bk=Bk.h}if(Bk>1||Bm>1||g>1){Bk/=360;Bm/=100;g/=100}Bk*=360;var i,Bl,S,b,E;Bk=(Bk%360)/60;E=2*Bm*(g<0.5?g:1-g);b=E*(1-AV(Bk%2-1));i=Bl=S=g-E/2;Bk=~~Bk;i+=[E,b,0,0,b,E][Bk];Bl+=[b,E,E,b,0,0][Bk];S+=[0,0,b,E,E,b][Bk];return A1(i,Bl,S,d)};Aq.rgb2hsb=function(Bl,Bk,E){E=Ax(Bl,Bk,E);Bl=E[0];Bk=E[1];E=E[2];var i,d,R,Bm;R=J(Bl,Bk,E);Bm=R-BL(Bl,Bk,E);i=(Bm==0?null:R==Bl?(Bk-E)/Bm:R==Bk?(E-Bl)/Bm+2:(Bl-Bk)/Bm+4);i=((i+360)%6)*60/360;d=Bm==0?0:Bm/R;return{h:i,s:d,b:R,toString:Ah}};Aq.rgb2hsl=function(E,Bk,Bn){Bn=Ax(E,Bk,Bn);E=Bn[0];Bk=Bn[1];Bn=Bn[2];var Bo,i,Bm,Bl,d,R;Bl=J(E,Bk,Bn);d=BL(E,Bk,Bn);R=Bl-d;Bo=(R==0?null:Bl==E?(Bk-Bn)/R:Bl==Bk?(Bn-E)/R+2:(E-Bk)/R+4);Bo=((Bo+360)%6)*60/360;Bm=(Bl+d)/2;i=(R==0?0:Bm<0.5?R/(2*Bm):R/(2-2*Bm));return{h:Bo,s:i,l:Bm,toString:o}};Aq._path2string=function(){return this.join(",").replace(BF,"$1")};function BJ(b,S){for(var E=0,R=b.length;E<R;E++){if(b[E]===S){return b.push(b.splice(E,1)[0])}}}function Af(b,R,E){function S(){var d=Array.prototype.slice.call(arguments,0),i=d.join("\u2400"),g=S.cache=S.cache||{},Bk=S.count=S.count||[];if(g[AK](i)){BJ(Bk,i);return E?E(g[i]):g[i]}Bk.length>=1000&&delete g[Bk.shift()];Bk.push(i);g[i]=b[Bf](R,d);return E?E(g[i]):g[i]}return S}var BU=Aq._preload=function(S,R){var E=AZ.doc.createElement("img");E.style.cssText="position:absolute;left:-9999em;top:-9999em";E.onload=function(){R.call(this);this.onload=null;AZ.doc.body.removeChild(this)};E.onerror=function(){AZ.doc.body.removeChild(this)};AZ.doc.body.appendChild(E);E.src=S};function AQ(){return this.hex}Aq.getRGB=Af(function(E){if(!E||!!((E=Bg(E)).indexOf("-")+1)){return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:AQ}}if(E=="none"){return{r:-1,g:-1,b:-1,hex:"none",toString:AQ}}!(K[AK](E.toLowerCase().substring(0,2))||E.charAt()=="#")&&(E=BE(E));var d,R,S,i,b,Bl,Bk,g=E.match(Z);if(g){if(g[2]){i=u(g[2].substring(5),16);S=u(g[2].substring(3,5),16);R=u(g[2].substring(1,3),16)}if(g[3]){i=u((Bl=g[3].charAt(3))+Bl,16);S=u((Bl=g[3].charAt(2))+Bl,16);R=u((Bl=g[3].charAt(1))+Bl,16)}if(g[4]){Bk=g[4][f](BH);R=AN(Bk[0]);Bk[0].slice(-1)=="%"&&(R*=2.55);S=AN(Bk[1]);Bk[1].slice(-1)=="%"&&(S*=2.55);i=AN(Bk[2]);Bk[2].slice(-1)=="%"&&(i*=2.55);g[1].toLowerCase().slice(0,4)=="rgba"&&(b=AN(Bk[3]));Bk[3]&&Bk[3].slice(-1)=="%"&&(b/=100)}if(g[5]){Bk=g[5][f](BH);R=AN(Bk[0]);Bk[0].slice(-1)=="%"&&(R*=2.55);S=AN(Bk[1]);Bk[1].slice(-1)=="%"&&(S*=2.55);i=AN(Bk[2]);Bk[2].slice(-1)=="%"&&(i*=2.55);(Bk[0].slice(-3)=="deg"||Bk[0].slice(-1)=="\xb0")&&(R/=360);g[1].toLowerCase().slice(0,4)=="hsba"&&(b=AN(Bk[3]));Bk[3]&&Bk[3].slice(-1)=="%"&&(b/=100);return Aq.hsb2rgb(R,S,i,b)}if(g[6]){Bk=g[6][f](BH);R=AN(Bk[0]);Bk[0].slice(-1)=="%"&&(R*=2.55);S=AN(Bk[1]);Bk[1].slice(-1)=="%"&&(S*=2.55);i=AN(Bk[2]);Bk[2].slice(-1)=="%"&&(i*=2.55);(Bk[0].slice(-3)=="deg"||Bk[0].slice(-1)=="\xb0")&&(R/=360);g[1].toLowerCase().slice(0,4)=="hsla"&&(b=AN(Bk[3]));Bk[3]&&Bk[3].slice(-1)=="%"&&(b/=100);return Aq.hsl2rgb(R,S,i,b)}g={r:R,g:S,b:i,toString:AQ};g.hex="#"+(16777216|i|(S<<8)|(R<<16)).toString(16).slice(1);Aq.is(b,"finite")&&(g.opacity=b);return g}return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:AQ}},Aq);Aq.hsb=Af(function(S,R,E){return Aq.hsb2rgb(S,R,E).hex});Aq.hsl=Af(function(S,R,E){return Aq.hsl2rgb(S,R,E).hex});Aq.rgb=Af(function(S,R,E){return"#"+(16777216|E|(R<<8)|(S<<16)).toString(16).slice(1)});Aq.getColor=function(R){var S=this.getColor.start=this.getColor.start||{h:0,s:1,b:R||0.75},E=this.hsb2rgb(S.h,S.s,S.b);S.h+=0.075;if(S.h>1){S.h=0;S.s-=0.2;S.s<=0&&(this.getColor.start={h:0,s:1,b:S.b})}return E.hex};Aq.getColor.reset=function(){delete this.start};function BA(S,Bk){var g=[];for(var R=0,E=S.length;E-2*!Bk>R;R+=2){var b=[{x:+S[R-2],y:+S[R-1]},{x:+S[R],y:+S[R+1]},{x:+S[R+2],y:+S[R+3]},{x:+S[R+4],y:+S[R+5]}];if(Bk){if(!R){b[0]={x:+S[E-2],y:+S[E-1]}}else{if(E-4==R){b[3]={x:+S[0],y:+S[1]}}else{if(E-2==R){b[2]={x:+S[0],y:+S[1]};b[3]={x:+S[2],y:+S[3]}}}}}else{if(E-4==R){b[3]=b[2]}else{if(!R){b[0]={x:+S[R],y:+S[R+1]}}}}g.push(["C",(-b[0].x+6*b[1].x+b[2].x)/6,(-b[0].y+6*b[1].y+b[2].y)/6,(b[1].x+6*b[2].x-b[3].x)/6,(b[1].y+6*b[2].y-b[3].y)/6,b[2].x,b[2].y])}return g}Aq.parsePathString=function(E){if(!E){return null}var S=y(E);if(S.arr){return Ay(S.arr)}var b={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},R=[];if(Aq.is(E,BC)&&Aq.is(E[0],BC)){R=Ay(E)}if(!R.length){Bg(E).replace(Az,function(g,d,Bl){var Bk=[],i=d.toLowerCase();Bl.replace(Ao,function(Bn,Bm){Bm&&Bk.push(+Bm)});if(i=="m"&&Bk.length>2){R.push([d][Bd](Bk.splice(0,2)));i="l";d=d=="m"?"l":"L"}if(i=="r"){R.push([d][Bd](Bk))}else{while(Bk.length>=b[i]){R.push([d][Bd](Bk.splice(0,b[i])));if(!b[i]){break}}}})}R.toString=Aq._path2string;S.arr=Ay(R);return R};Aq.parseTransformString=Af(function(R){if(!R){return null}var S={r:3,s:4,t:2,m:6},E=[];if(Aq.is(R,BC)&&Aq.is(R[0],BC)){E=Ay(R)}if(!E.length){Bg(R).replace(AI,function(g,d,Bl){var Bk=[],i=Bj.call(d);Bl.replace(Ao,function(Bn,Bm){Bm&&Bk.push(+Bm)});E.push([d][Bd](Bk))})}E.toString=Aq._path2string;return E});var y=function(R){var E=y.ps=y.ps||{};if(E[R]){E[R].sleep=100}else{E[R]={sleep:100}}setTimeout(function(){for(var S in E){if(E[AK](S)&&S!=R){E[S].sleep--;!E[S].sleep&&delete E[S]}}});return E[R]};Aq.findDotsAtSegment=function(R,E,B1,Bz,i,d,Bm,Bk,Bu){var Br=1-Bu,Bw=BO(Br,3),Bx=BO(Br,2),Bo=Bu*Bu,Bl=Bo*Bu,Bq=Bw*R+Bx*3*Bu*B1+Br*3*Bu*Bu*i+Bl*Bm,Bn=Bw*E+Bx*3*Bu*Bz+Br*3*Bu*Bu*d+Bl*Bk,Bv=R+2*Bu*(B1-R)+Bo*(i-2*B1+R),Bt=E+2*Bu*(Bz-E)+Bo*(d-2*Bz+E),B0=B1+2*Bu*(i-B1)+Bo*(Bm-2*i+B1),By=Bz+2*Bu*(d-Bz)+Bo*(Bk-2*d+Bz),Bs=Br*R+Bu*B1,Bp=Br*E+Bu*Bz,b=Br*i+Bu*Bm,S=Br*d+Bu*Bk,g=(90-AT.atan2(Bv-B0,Bt-By)*180/Au);(Bv>B0||Bt<By)&&(g+=180);return{x:Bq,y:Bn,m:{x:Bv,y:Bt},n:{x:B0,y:By},start:{x:Bs,y:Bp},end:{x:b,y:S},alpha:g}};Aq.bezierBBox=function(R,E,b,S,Bl,i,g,d){if(!Aq.is(R,"array")){R=[R,E,b,S,Bl,i,g,d]}var Bk=A9.apply(null,R);return{x:Bk.min.x,y:Bk.min.y,x2:Bk.max.x,y2:Bk.max.y,width:Bk.max.x-Bk.min.x,height:Bk.max.y-Bk.min.y}};Aq.isPointInsideBBox=function(R,E,S){return E>=R.x&&E<=R.x2&&S>=R.y&&S<=R.y2};Aq.isBBoxIntersect=function(S,R){var E=Aq.isPointInsideBBox;return E(R,S.x,S.y)||E(R,S.x2,S.y)||E(R,S.x,S.y2)||E(R,S.x2,S.y2)||E(S,R.x,R.y)||E(S,R.x2,R.y)||E(S,R.x,R.y2)||E(S,R.x2,R.y2)||(S.x<R.x2&&S.x>R.x||R.x<S.x2&&R.x>S.x)&&(S.y<R.y2&&S.y>R.y||R.y<S.y2&&R.y>S.y)};function BI(E,i,g,d,b){var S=-3*i+9*g-9*d+3*b,R=E*S+6*i-12*g+6*d;return E*R-3*i+3*g}function N(Bv,d,Bu,S,Bt,R,Bq,E,Bn){if(Bn==null){Bn=1}Bn=Bn>1?1:Bn<0?0:Bn;var Bo=Bn/2,Bp=12,Bk=[-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],Bs=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],b=0;for(var Br=0;Br<Bp;Br++){var Bl=Bo*Bk[Br]+Bo,Bm=BI(Bl,Bv,Bu,Bt,Bq),Bw=BI(Bl,d,S,R,E),g=Bm*Bm+Bw*Bw;b+=Bs[Br]*AT.sqrt(g)}return Bo*b}function c(S,Bo,R,Bn,E,Bl,Bq,Bk,Bm){if(Bm<0||N(S,Bo,R,Bn,E,Bl,Bq,Bk)<Bm){return }var Bp=1,b=Bp/2,g=Bp-b,d,i=0.01;d=N(S,Bo,R,Bn,E,Bl,Bq,Bk,g);while(AV(d-Bm)>i){b/=2;g+=(d<Bm?1:-1)*b;d=N(S,Bo,R,Bn,E,Bl,Bq,Bk,g)}return g}function q(b,Bp,S,Bn,E,Bm,Br,Bl){if(J(b,S)<BL(E,Br)||BL(b,S)>J(E,Br)||J(Bp,Bn)<BL(Bm,Bl)||BL(Bp,Bn)>J(Bm,Bl)){return }var Bk=(b*Bn-Bp*S)*(E-Br)-(b-S)*(E*Bl-Bm*Br),i=(b*Bn-Bp*S)*(Bm-Bl)-(Bp-Bn)*(E*Bl-Bm*Br),d=(b-S)*(Bm-Bl)-(Bp-Bn)*(E-Br);if(!d){return }var Bq=Bk/d,Bo=i/d,g=+Bq.toFixed(2),R=+Bo.toFixed(2);if(g<+BL(b,S).toFixed(2)||g>+J(b,S).toFixed(2)||g<+BL(E,Br).toFixed(2)||g>+J(E,Br).toFixed(2)||R<+BL(Bp,Bn).toFixed(2)||R>+J(Bp,Bn).toFixed(2)||R<+BL(Bm,Bl).toFixed(2)||R>+J(Bm,Bl).toFixed(2)){return }return{x:Bq,y:Bo}}function AX(R,E){return AF(R,E)}function Q(R,E){return AF(R,E,1)}function AF(B1,B0,Bz){var b=Aq.bezierBBox(B1),R=Aq.bezierBBox(B0);if(!Aq.isBBoxIntersect(b,R)){return Bz?0:[]}var Bu=N.apply(0,B1),Bt=N.apply(0,B0),Bl=~~(Bu/5),Bk=~~(Bt/5),Br=[],Bq=[],S={},B2=Bz?0:[];for(var Bw=0;Bw<Bl+1;Bw++){var Bs=Aq.findDotsAtSegment.apply(Aq,B1.concat(Bw/Bl));Br.push({x:Bs.x,y:Bs.y,t:Bw/Bl})}for(Bw=0;Bw<Bk+1;Bw++){Bs=Aq.findDotsAtSegment.apply(Aq,B0.concat(Bw/Bk));Bq.push({x:Bs.x,y:Bs.y,t:Bw/Bk})}for(Bw=0;Bw<Bl;Bw++){for(var Bv=0;Bv<Bk;Bv++){var By=Br[Bw],E=Br[Bw+1],Bx=Bq[Bv],g=Bq[Bv+1],Bp=AV(E.x-By.x)<0.001?"y":"x",Bo=AV(g.x-Bx.x)<0.001?"y":"x",d=q(By.x,By.y,E.x,E.y,Bx.x,Bx.y,g.x,g.y);if(d){if(S[d.x.toFixed(4)]==d.y.toFixed(4)){continue}S[d.x.toFixed(4)]=d.y.toFixed(4);var Bn=By.t+AV((d[Bp]-By[Bp])/(E[Bp]-By[Bp]))*(E.t-By.t),Bm=Bx.t+AV((d[Bo]-Bx[Bo])/(g[Bo]-Bx[Bo]))*(g.t-Bx.t);if(Bn>=0&&Bn<=1&&Bm>=0&&Bm<=1){if(Bz){B2++}else{B2.push({x:d.x,y:d.y,t1:Bn,t2:Bm})}}}}}return B2}Aq.pathIntersection=function(R,E){return e(R,E)};Aq.pathIntersectionNumber=function(R,E){return e(R,E,1)};function e(S,E,Bv){S=Aq._path2curve(S);E=Aq._path2curve(E);var Bt,g,Bs,b,Bq,Bk,R,Bn,Bz,By,B0=Bv?0:[];for(var Br=0,Bl=S.length;Br<Bl;Br++){var Bx=S[Br];if(Bx[0]=="M"){Bt=Bq=Bx[1];g=Bk=Bx[2]}else{if(Bx[0]=="C"){Bz=[Bt,g].concat(Bx.slice(1));Bt=Bz[6];g=Bz[7]}else{Bz=[Bt,g,Bt,g,Bq,Bk,Bq,Bk];Bt=Bq;g=Bk}for(var Bp=0,Bu=E.length;Bp<Bu;Bp++){var Bw=E[Bp];if(Bw[0]=="M"){Bs=R=Bw[1];b=Bn=Bw[2]}else{if(Bw[0]=="C"){By=[Bs,b].concat(Bw.slice(1));Bs=By[6];b=By[7]}else{By=[Bs,b,Bs,b,R,Bn,R,Bn];Bs=R;b=Bn}var Bm=AF(Bz,By,Bv);if(Bv){B0+=Bm}else{for(var Bo=0,d=Bm.length;Bo<d;Bo++){Bm[Bo].segment1=Br;Bm[Bo].segment2=Bp;Bm[Bo].bez1=Bz;Bm[Bo].bez2=By}B0=B0.concat(Bm)}}}}}return B0}Aq.isPointInsidePath=function(R,E,b){var S=Aq.pathBBox(R);return Aq.isPointInsideBBox(S,E,b)&&e(R,[["M",E,b],["H",S.x2+10]],1)%2==1};Aq._removedFactory=function(E){return function(){eve("raphael.log",null,"Rapha\xebl: you are calling to method \u201c"+E+"\u201d of removed object",E)}};var AM=Aq.pathBBox=function(Bs){var Bm=y(Bs);if(Bm.bbox){return Bm.bbox}if(!Bs){return{x:0,y:0,width:0,height:0,x2:0,y2:0}}Bs=w(Bs);var Bp=0,Bo=0,d=[],R=[],S;for(var Bk=0,Br=Bs.length;Bk<Br;Bk++){S=Bs[Bk];if(S[0]=="M"){Bp=S[1];Bo=S[2];d.push(Bp);R.push(Bo)}else{var Bl=A9(Bp,Bo,S[1],S[2],S[3],S[4],S[5],S[6]);d=d[Bd](Bl.min.x,Bl.max.x);R=R[Bd](Bl.min.y,Bl.max.y);Bp=S[5];Bo=S[6]}}var E=BL[Bf](0,d),Bq=BL[Bf](0,R),g=J[Bf](0,d),b=J[Bf](0,R),Bn={x:E,y:Bq,x2:g,y2:b,width:g-E,height:b-Bq};Bm.bbox=x(Bn);return Bn},Ay=function(R){var E=x(R);E.toString=Aq._path2string;return E},Ab=Aq._pathToRelative=function(b){var Bl=y(b);if(Bl.rel){return Ay(Bl.rel)}if(!Aq.is(b,BC)||!Aq.is(b&&b[0],BC)){b=Aq.parsePathString(b)}var Bo=[],Bq=0,Bp=0,Bt=0,Bs=0,S=0;if(b[0][0]=="M"){Bq=b[0][1];Bp=b[0][2];Bt=Bq;Bs=Bp;S++;Bo.push(["M",Bq,Bp])}for(var Bk=S,Bu=b.length;Bk<Bu;Bk++){var E=Bo[Bk]=[],Br=b[Bk];if(Br[0]!=Bj.call(Br[0])){E[0]=Bj.call(Br[0]);switch(E[0]){case"a":E[1]=Br[1];E[2]=Br[2];E[3]=Br[3];E[4]=Br[4];E[5]=Br[5];E[6]=+(Br[6]-Bq).toFixed(3);E[7]=+(Br[7]-Bp).toFixed(3);break;case"v":E[1]=+(Br[1]-Bp).toFixed(3);break;case"m":Bt=Br[1];Bs=Br[2];default:for(var g=1,Bm=Br.length;g<Bm;g++){E[g]=+(Br[g]-((g%2)?Bq:Bp)).toFixed(3)}}}else{E=Bo[Bk]=[];if(Br[0]=="m"){Bt=Br[1]+Bq;Bs=Br[2]+Bp}for(var d=0,R=Br.length;d<R;d++){Bo[Bk][d]=Br[d]}}var Bn=Bo[Bk].length;switch(Bo[Bk][0]){case"z":Bq=Bt;Bp=Bs;break;case"h":Bq+=+Bo[Bk][Bn-1];break;case"v":Bp+=+Bo[Bk][Bn-1];break;default:Bq+=+Bo[Bk][Bn-2];Bp+=+Bo[Bk][Bn-1]}}Bo.toString=Aq._path2string;Bl.rel=Ay(Bo);return Bo},V=Aq._pathToAbsolute=function(Bp){var S=y(Bp);if(S.abs){return Ay(S.abs)}if(!Aq.is(Bp,BC)||!Aq.is(Bp&&Bp[0],BC)){Bp=Aq.parsePathString(Bp)}if(!Bp||!Bp.length){return[["M",0,0]]}var Bv=[],Bk=0,g=0,Bn=0,Bm=0,b=0;if(Bp[0][0]=="M"){Bk=+Bp[0][1];g=+Bp[0][2];Bn=Bk;Bm=g;b++;Bv[0]=["M",Bk,g]}var Bu=Bp.length==3&&Bp[0][0]=="M"&&Bp[1][0].toUpperCase()=="R"&&Bp[2][0].toUpperCase()=="Z";for(var Bo,E,Bs=b,Bl=Bp.length;Bs<Bl;Bs++){Bv.push(Bo=[]);E=Bp[Bs];if(E[0]!=BS.call(E[0])){Bo[0]=BS.call(E[0]);switch(Bo[0]){case"A":Bo[1]=E[1];Bo[2]=E[2];Bo[3]=E[3];Bo[4]=E[4];Bo[5]=E[5];Bo[6]=+(E[6]+Bk);Bo[7]=+(E[7]+g);break;case"V":Bo[1]=+E[1]+g;break;case"H":Bo[1]=+E[1]+Bk;break;case"R":var d=[Bk,g][Bd](E.slice(1));for(var Br=2,Bt=d.length;Br<Bt;Br++){d[Br]=+d[Br]+Bk;d[++Br]=+d[Br]+g}Bv.pop();Bv=Bv[Bd](BA(d,Bu));break;case"M":Bn=+E[1]+Bk;Bm=+E[2]+g;default:for(Br=1,Bt=E.length;Br<Bt;Br++){Bo[Br]=+E[Br]+((Br%2)?Bk:g)}}}else{if(E[0]=="R"){d=[Bk,g][Bd](E.slice(1));Bv.pop();Bv=Bv[Bd](BA(d,Bu));Bo=["R"][Bd](E.slice(-2))}else{for(var Bq=0,R=E.length;Bq<R;Bq++){Bo[Bq]=E[Bq]}}}switch(Bo[0]){case"Z":Bk=Bn;g=Bm;break;case"H":Bk=Bo[1];break;case"V":g=Bo[1];break;case"M":Bn=Bo[Bo.length-2];Bm=Bo[Bo.length-1];default:Bk=Bo[Bo.length-2];g=Bo[Bo.length-1]}}Bv.toString=Aq._path2string;S.abs=Ay(Bv);return Bv},Bh=function(R,b,E,S){return[R,b,E,S,E,S]},BM=function(R,b,i,d,E,S){var g=1/3,Bk=2/3;return[g*R+Bk*i,g*b+Bk*d,g*E+Bk*i,g*S+Bk*d,E,S]},AE=function(Br,CM,B0,By,Bs,Bm,b,Bq,CL,Bt){var Bx=Au*120/180,E=Au/180*(+Bs||0),B4=[],B1,CI=Af(function(CN,CQ,i){var CP=CN*AT.cos(i)-CQ*AT.sin(i),CO=CN*AT.sin(i)+CQ*AT.cos(i);return{x:CP,y:CO}});if(!Bt){B1=CI(Br,CM,-E);Br=B1.x;CM=B1.y;B1=CI(Bq,CL,-E);Bq=B1.x;CL=B1.y;var R=AT.cos(Au/180*Bs),Bo=AT.sin(Au/180*Bs),B6=(Br-Bq)/2,B5=(CM-CL)/2;var CG=(B6*B6)/(B0*B0)+(B5*B5)/(By*By);if(CG>1){CG=AT.sqrt(CG);B0=CG*B0;By=CG*By}var S=B0*B0,B9=By*By,CB=(Bm==b?-1:1)*AT.sqrt(AV((S*B9-S*B5*B5-B9*B6*B6)/(S*B5*B5+B9*B6*B6))),Bv=CB*B0*B5/By+(Br+Bq)/2,Bu=CB*-By*B6/B0+(CM+CL)/2,Bl=AT.asin(((CM-Bu)/By).toFixed(9)),Bk=AT.asin(((CL-Bu)/By).toFixed(9));Bl=Br<Bv?Au-Bl:Bl;Bk=Bq<Bv?Au-Bk:Bk;Bl<0&&(Bl=Au*2+Bl);Bk<0&&(Bk=Au*2+Bk);if(b&&Bl>Bk){Bl=Bl-Au*2}if(!b&&Bk>Bl){Bk=Bk-Au*2}}else{Bl=Bt[0];Bk=Bt[1];Bv=Bt[2];Bu=Bt[3]}var Bp=Bk-Bl;if(AV(Bp)>Bx){var Bw=Bk,Bz=Bq,Bn=CL;Bk=Bl+Bx*(b&&Bk>Bl?1:-1);Bq=Bv+B0*AT.cos(Bk);CL=Bu+By*AT.sin(Bk);B4=AE(Bq,CL,B0,By,Bs,0,b,Bz,Bn,[Bk,Bw,Bv,Bu])}Bp=Bk-Bl;var g=AT.cos(Bl),CK=AT.sin(Bl),d=AT.cos(Bk),CJ=AT.sin(Bk),B7=AT.tan(Bp/4),CA=4/3*B0*B7,B8=4/3*By*B7,CH=[Br,CM],CF=[Br+CA*CK,CM-B8*g],CE=[Bq+CA*CJ,CL-B8*d],CC=[Bq,CL];CF[0]=2*CH[0]-CF[0];CF[1]=2*CH[1]-CF[1];if(Bt){return[CF,CE,CC][Bd](B4)}else{B4=[CF,CE,CC][Bd](B4).join()[f](",");var B2=[];for(var CD=0,B3=B4.length;CD<B3;CD++){B2[CD]=CD%2?CI(B4[CD-1],B4[CD],E).y:CI(B4[CD],B4[CD+1],E).x}return B2}},AG=function(R,E,b,S,Bl,Bk,i,g,Bm){var d=1-Bm;return{x:BO(d,3)*R+BO(d,2)*3*Bm*b+d*3*Bm*Bm*Bl+BO(Bm,3)*i,y:BO(d,3)*E+BO(d,2)*3*Bm*S+d*3*Bm*Bm*Bk+BO(Bm,3)*g}},A9=Af(function(S,E,g,d,Bt,Bs,Bp,Bm){var Br=(Bt-2*g+S)-(Bp-2*Bt+g),Bo=2*(g-S)-2*(Bt-g),Bl=S-g,Bk=(-Bo+AT.sqrt(Bo*Bo-4*Br*Bl))/2/Br,i=(-Bo-AT.sqrt(Bo*Bo-4*Br*Bl))/2/Br,Bn=[E,Bm],Bq=[S,Bp],R;AV(Bk)>"1e12"&&(Bk=0.5);AV(i)>"1e12"&&(i=0.5);if(Bk>0&&Bk<1){R=AG(S,E,g,d,Bt,Bs,Bp,Bm,Bk);Bq.push(R.x);Bn.push(R.y)}if(i>0&&i<1){R=AG(S,E,g,d,Bt,Bs,Bp,Bm,i);Bq.push(R.x);Bn.push(R.y)}Br=(Bs-2*d+E)-(Bm-2*Bs+d);Bo=2*(d-E)-2*(Bs-d);Bl=E-d;Bk=(-Bo+AT.sqrt(Bo*Bo-4*Br*Bl))/2/Br;i=(-Bo-AT.sqrt(Bo*Bo-4*Br*Bl))/2/Br;AV(Bk)>"1e12"&&(Bk=0.5);AV(i)>"1e12"&&(i=0.5);if(Bk>0&&Bk<1){R=AG(S,E,g,d,Bt,Bs,Bp,Bm,Bk);Bq.push(R.x);Bn.push(R.y)}if(i>0&&i<1){R=AG(S,E,g,d,Bt,Bs,Bp,Bm,i);Bq.push(R.x);Bn.push(R.y)}return{min:{x:BL[Bf](0,Bq),y:BL[Bf](0,Bn)},max:{x:J[Bf](0,Bq),y:J[Bf](0,Bn)}}}),w=Aq._path2curve=Af(function(Bt,Bo){var Bm=!Bo&&y(Bt);if(!Bo&&Bm.curve){return Ay(Bm.curve)}var b=V(Bt),Bp=Bo&&V(Bo),Bq={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},R={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},g=function(Bu,Bv){var i,Bw;if(!Bu){return["C",Bv.x,Bv.y,Bv.x,Bv.y,Bv.x,Bv.y]}!(Bu[0] in {T:1,Q:1})&&(Bv.qx=Bv.qy=null);switch(Bu[0]){case"M":Bv.X=Bu[1];Bv.Y=Bu[2];break;case"A":Bu=["C"][Bd](AE[Bf](0,[Bv.x,Bv.y][Bd](Bu.slice(1))));break;case"S":i=Bv.x+(Bv.x-(Bv.bx||Bv.x));Bw=Bv.y+(Bv.y-(Bv.by||Bv.y));Bu=["C",i,Bw][Bd](Bu.slice(1));break;case"T":Bv.qx=Bv.x+(Bv.x-(Bv.qx||Bv.x));Bv.qy=Bv.y+(Bv.y-(Bv.qy||Bv.y));Bu=["C"][Bd](BM(Bv.x,Bv.y,Bv.qx,Bv.qy,Bu[1],Bu[2]));break;case"Q":Bv.qx=Bu[1];Bv.qy=Bu[2];Bu=["C"][Bd](BM(Bv.x,Bv.y,Bu[1],Bu[2],Bu[3],Bu[4]));break;case"L":Bu=["C"][Bd](Bh(Bv.x,Bv.y,Bu[1],Bu[2]));break;case"H":Bu=["C"][Bd](Bh(Bv.x,Bv.y,Bu[1],Bv.y));break;case"V":Bu=["C"][Bd](Bh(Bv.x,Bv.y,Bv.x,Bu[1]));break;case"Z":Bu=["C"][Bd](Bh(Bv.x,Bv.y,Bv.X,Bv.Y));break}return Bu},E=function(Bu,Bv){if(Bu[Bv].length>7){Bu[Bv].shift();var Bw=Bu[Bv];while(Bw.length){Bu.splice(Bv++,0,["C"][Bd](Bw.splice(0,6)))}Bu.splice(Bv,1);Br=J(b.length,Bp&&Bp.length||0)}},S=function(By,Bx,Bv,Bu,Bw){if(By&&Bx&&By[Bw][0]=="M"&&Bx[Bw][0]!="M"){Bx.splice(Bw,0,["M",Bu.x,Bu.y]);Bv.bx=0;Bv.by=0;Bv.x=By[Bw][1];Bv.y=By[Bw][2];Br=J(b.length,Bp&&Bp.length||0)}};for(var Bl=0,Br=J(b.length,Bp&&Bp.length||0);Bl<Br;Bl++){b[Bl]=g(b[Bl],Bq);E(b,Bl);Bp&&(Bp[Bl]=g(Bp[Bl],R));Bp&&E(Bp,Bl);S(b,Bp,Bq,R,Bl);S(Bp,b,R,Bq,Bl);var Bk=b[Bl],Bs=Bp&&Bp[Bl],d=Bk.length,Bn=Bp&&Bs.length;Bq.x=Bk[d-2];Bq.y=Bk[d-1];Bq.bx=AN(Bk[d-4])||Bq.x;Bq.by=AN(Bk[d-3])||Bq.y;R.bx=Bp&&(AN(Bs[Bn-4])||R.x);R.by=Bp&&(AN(Bs[Bn-3])||R.y);R.x=Bp&&Bs[Bn-2];R.y=Bp&&Bs[Bn-1]}if(!Bp){Bm.curve=Ay(b)}return Bp?[b,Bp]:b},null,Ay),U=Aq._parseDots=Af(function(Bn){var Bm=[];for(var g=0,Bo=Bn.length;g<Bo;g++){var E={},Bl=Bn[g].match(/^([^:]*):?([\d\.]*)/);E.color=Aq.getRGB(Bl[1]);if(E.color.error){return null}E.color=E.color.hex;Bl[2]&&(E.offset=Bl[2]+"%");Bm.push(E)}for(g=1,Bo=Bm.length-1;g<Bo;g++){if(!Bm[g].offset){var R=AN(Bm[g-1].offset||0),S=0;for(var b=g+1;b<Bo;b++){if(Bm[b].offset){S=Bm[b].offset;break}}if(!S){S=100;b=Bo}S=AN(S);var Bk=(S-R)/(b-g+1);for(;g<b;g++){R+=Bk;Bm[g].offset=R+"%"}}}return Bm}),Aj=Aq._tear=function(E,R){E==R.top&&(R.top=E.prev);E==R.bottom&&(R.bottom=E.next);E.next&&(E.next.prev=E.prev);E.prev&&(E.prev.next=E.next)},AP=Aq._tofront=function(E,R){if(R.top===E){return }Aj(E,R);E.next=null;E.prev=R.top;R.top.next=E;R.top=E},M=Aq._toback=function(E,R){if(R.bottom===E){return }Aj(E,R);E.next=R.bottom;E.prev=null;R.bottom.prev=E;R.bottom=E},h=Aq._insertafter=function(R,E,S){Aj(R,S);E==S.top&&(S.top=R);E.next&&(E.next.prev=R);R.next=E.next;R.prev=E;E.next=R},As=Aq._insertbefore=function(R,E,S){Aj(R,S);E==S.bottom&&(S.bottom=R);E.prev&&(E.prev.next=R);R.prev=E.prev;E.prev=R;R.next=E},BK=Aq.toMatrix=function(S,E){var b=AM(S),R={_:{transform:Aw},getBBox:function(){return b}};An(R,E);return R.matrix},t=Aq.transformPath=function(R,E){return n(R,BK(R,E))},An=Aq._extractTransform=function(R,By){if(By==null){return R._.transform}By=Bg(By).replace(/\.{3}|\u2026/g,R._.transform||Aw);var Bq=Aq.parseTransformString(By),Bo=0,Bm=0,Bl=0,Bs=1,Br=1,Bz=R._,Bt=new Ae;Bz.transform=Bq||[];if(Bq){for(var Bu=0,Bn=Bq.length;Bu<Bn;Bu++){var Bp=Bq[Bu],E=Bp.length,d=Bg(Bp[0]).toLowerCase(),Bx=Bp[0]!=d,Bk=Bx?Bt.invert():0,Bw,b,Bv,S,g;if(d=="t"&&E==3){if(Bx){Bw=Bk.x(0,0);b=Bk.y(0,0);Bv=Bk.x(Bp[1],Bp[2]);S=Bk.y(Bp[1],Bp[2]);Bt.translate(Bv-Bw,S-b)}else{Bt.translate(Bp[1],Bp[2])}}else{if(d=="r"){if(E==2){g=g||R.getBBox(1);Bt.rotate(Bp[1],g.x+g.width/2,g.y+g.height/2);Bo+=Bp[1]}else{if(E==4){if(Bx){Bv=Bk.x(Bp[2],Bp[3]);S=Bk.y(Bp[2],Bp[3]);Bt.rotate(Bp[1],Bv,S)}else{Bt.rotate(Bp[1],Bp[2],Bp[3])}Bo+=Bp[1]}}}else{if(d=="s"){if(E==2||E==3){g=g||R.getBBox(1);Bt.scale(Bp[1],Bp[E-1],g.x+g.width/2,g.y+g.height/2);Bs*=Bp[1];Br*=Bp[E-1]}else{if(E==5){if(Bx){Bv=Bk.x(Bp[3],Bp[4]);S=Bk.y(Bp[3],Bp[4]);Bt.scale(Bp[1],Bp[2],Bv,S)}else{Bt.scale(Bp[1],Bp[2],Bp[3],Bp[4])}Bs*=Bp[1];Br*=Bp[2]}}}else{if(d=="m"&&E==7){Bt.add(Bp[1],Bp[2],Bp[3],Bp[4],Bp[5],Bp[6])}}}}Bz.dirtyT=1;R.matrix=Bt}}R.matrix=Bt;Bz.sx=Bs;Bz.sy=Br;Bz.deg=Bo;Bz.dx=Bm=Bt.e;Bz.dy=Bl=Bt.f;if(Bs==1&&Br==1&&!Bo&&Bz.bbox){Bz.bbox.x+=+Bm;Bz.bbox.y+=+Bl}else{Bz.dirtyT=1}},I=function(R){var E=R[0];switch(E.toLowerCase()){case"t":return[E,0,0];case"m":return[E,1,0,0,1,0,0];case"r":if(R.length==4){return[E,0,R[2],R[3]]}else{return[E,0]}case"s":if(R.length==5){return[E,1,1,R[3],R[4]]}else{if(R.length==3){return[E,1,1]}else{return[E,1]}}}},Aa=Aq._equaliseTransform=function(d,b){b=Bg(b).replace(/\.{3}|\u2026/g,d);d=Aq.parseTransformString(d)||[];b=Aq.parseTransformString(b)||[];var E=J(d.length,b.length),Bm=[],Bn=[],S=0,R,g,Bl,Bk;for(;S<E;S++){Bl=d[S]||I(b[S]);Bk=b[S]||I(Bl);if((Bl[0]!=Bk[0])||(Bl[0].toLowerCase()=="r"&&(Bl[2]!=Bk[2]||Bl[3]!=Bk[3]))||(Bl[0].toLowerCase()=="s"&&(Bl[3]!=Bk[3]||Bl[4]!=Bk[4]))){return }Bm[S]=[];Bn[S]=[];for(R=0,g=J(Bl.length,Bk.length);R<g;R++){R in Bl&&(Bm[S][R]=Bl[R]);R in Bk&&(Bn[S][R]=Bk[R])}}return{from:Bm,to:Bn}};Aq._getContainer=function(E,d,S,b){var R;R=b==null&&!Aq.is(E,"object")?AZ.doc.getElementById(E):E;if(R==null){return }if(R.tagName){if(d==null){return{container:R,width:R.style.pixelWidth||R.offsetWidth,height:R.style.pixelHeight||R.offsetHeight}}else{return{container:R,width:d,height:S}}}return{container:1,x:E,y:d,width:S,height:b}};Aq.pathToRelative=Ab;Aq._engine={};Aq.path2curve=w;Aq.matrix=function(R,E,Bk,i,g,S){return new Ae(R,E,Bk,i,g,S)};function Ae(R,E,Bk,i,g,S){if(R!=null){this.a=+R;this.b=+E;this.c=+Bk;this.d=+i;this.e=+g;this.f=+S}else{this.a=1;this.b=0;this.c=0;this.d=1;this.e=0;this.f=0}}(function(S){S.add=function(Bu,Br,Bp,Bn,Bl,Bk){var i=[[],[],[]],g=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],Bt=[[Bu,Bp,Bl],[Br,Bn,Bk],[0,0,1]],Bs,Bq,Bo,Bm;if(Bu&&Bu instanceof Ae){Bt=[[Bu.a,Bu.c,Bu.e],[Bu.b,Bu.d,Bu.f],[0,0,1]]}for(Bs=0;Bs<3;Bs++){for(Bq=0;Bq<3;Bq++){Bm=0;for(Bo=0;Bo<3;Bo++){Bm+=g[Bs][Bo]*Bt[Bo][Bq]}i[Bs][Bq]=Bm}}this.a=i[0][0];this.b=i[1][0];this.c=i[0][1];this.d=i[1][1];this.e=i[0][2];this.f=i[1][2]};S.invert=function(){var d=this,b=d.a*d.d-d.b*d.c;return new Ae(d.d/b,-d.b/b,-d.c/b,d.a/b,(d.c*d.f-d.d*d.e)/b,(d.b*d.e-d.a*d.f)/b)};S.clone=function(){return new Ae(this.a,this.b,this.c,this.d,this.e,this.f)};S.translate=function(b,d){this.add(1,0,0,1,b,d)};S.scale=function(d,i,b,g){i==null&&(i=d);(b||g)&&this.add(1,0,0,1,b,g);this.add(d,0,0,i,0,0);(b||g)&&this.add(1,0,0,1,-b,-g)};S.rotate=function(d,b,Bk){d=Aq.rad(d);b=b||0;Bk=Bk||0;var i=+AT.cos(d).toFixed(9),g=+AT.sin(d).toFixed(9);this.add(i,g,-g,i,b,Bk);this.add(1,0,0,1,-b,-Bk)};S.x=function(b,d){return b*this.a+d*this.c+this.e};S.y=function(b,d){return b*this.b+d*this.d+this.f};S.get=function(b){return +this[Bg.fromCharCode(97+b)].toFixed(4)};S.toString=function(){return Aq.svg?"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+")":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()};S.toFilter=function(){return"progid:DXImageTransform.Microsoft.Matrix(M11="+this.get(0)+", M12="+this.get(2)+", M21="+this.get(1)+", M22="+this.get(3)+", Dx="+this.get(4)+", Dy="+this.get(5)+", sizingmethod='auto expand')"};S.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};function R(b){return b[0]*b[0]+b[1]*b[1]}function E(b){var d=AT.sqrt(R(b));b[0]&&(b[0]/=d);b[1]&&(b[1]/=d)}S.split=function(){var d={};d.dx=this.e;d.dy=this.f;var i=[[this.a,this.c],[this.b,this.d]];d.scalex=AT.sqrt(R(i[0]));E(i[0]);d.shear=i[0][0]*i[1][0]+i[0][1]*i[1][1];i[1]=[i[1][0]-i[0][0]*d.shear,i[1][1]-i[0][1]*d.shear];d.scaley=AT.sqrt(R(i[1]));E(i[1]);d.shear/=d.scaley;var b=-i[0][1],g=i[1][1];if(g<0){d.rotate=Aq.deg(AT.acos(g));if(b<0){d.rotate=360-d.rotate}}else{d.rotate=Aq.deg(AT.asin(b))}d.isSimple=!+d.shear.toFixed(9)&&(d.scalex.toFixed(9)==d.scaley.toFixed(9)||!d.rotate);d.isSuperSimple=!+d.shear.toFixed(9)&&d.scalex.toFixed(9)==d.scaley.toFixed(9)&&!d.rotate;d.noRotation=!+d.shear.toFixed(9)&&!d.rotate;return d};S.toTransformString=function(b){var d=b||this[f]();if(d.isSimple){d.scalex=+d.scalex.toFixed(4);d.scaley=+d.scaley.toFixed(4);d.rotate=+d.rotate.toFixed(4);return(d.dx||d.dy?"t"+[d.dx,d.dy]:Aw)+(d.scalex!=1||d.scaley!=1?"s"+[d.scalex,d.scaley,0,0]:Aw)+(d.rotate?"r"+[d.rotate,0,0]:Aw)}else{return"m"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}})(Ae.prototype);var v=navigator.userAgent.match(/Version\/(.*?)\s/)||navigator.userAgent.match(/Chrome\/(\d+)/);if((navigator.vendor=="Apple Computer, Inc.")&&(v&&v[1]<4||navigator.platform.slice(0,2)=="iP")||(navigator.vendor=="Google Inc."&&v&&v[1]<8)){A3.safari=function(){var E=this.rect(-99,-99,this.width+99,this.height+99).attr({stroke:"none"});setTimeout(function(){E.remove()})}}else{A3.safari=k}var r=function(){this.returnValue=false},Bc=function(){return this.originalEvent.preventDefault()},A7=function(){this.cancelBubble=true},Ai=function(){return this.originalEvent.stopPropagation()},Ac=(function(){if(AZ.doc.addEventListener){return function(g,b,S,R){var E=z&&BW[b]?BW[b]:b,d=function(Bp){var Bo=AZ.doc.documentElement.scrollTop||AZ.doc.body.scrollTop,Bq=AZ.doc.documentElement.scrollLeft||AZ.doc.body.scrollLeft,Bk=Bp.clientX+Bq,Br=Bp.clientY+Bo;if(z&&BW[AK](b)){for(var Bm=0,Bn=Bp.targetTouches&&Bp.targetTouches.length;Bm<Bn;Bm++){if(Bp.targetTouches[Bm].target==g){var Bl=Bp;Bp=Bp.targetTouches[Bm];Bp.originalEvent=Bl;Bp.preventDefault=Bc;Bp.stopPropagation=Ai;break}}}return S.call(R,Bp,Bk,Br)};g.addEventListener(E,d,false);return function(){g.removeEventListener(E,d,false);return true}}}else{if(AZ.doc.attachEvent){return function(g,b,S,R){var d=function(Bl){Bl=Bl||AZ.win.event;var Bk=AZ.doc.documentElement.scrollTop||AZ.doc.body.scrollTop,Bm=AZ.doc.documentElement.scrollLeft||AZ.doc.body.scrollLeft,i=Bl.clientX+Bm,Bn=Bl.clientY+Bk;Bl.preventDefault=Bl.preventDefault||r;Bl.stopPropagation=Bl.stopPropagation||A7;return S.call(R,Bl,i,Bn)};g.attachEvent("on"+b,d);var E=function(){g.detachEvent("on"+b,d);return true};return E}}}})(),BD=[],BX=function(Bl){var Bo=Bl.clientX,Bn=Bl.clientY,Bq=AZ.doc.documentElement.scrollTop||AZ.doc.body.scrollTop,Br=AZ.doc.documentElement.scrollLeft||AZ.doc.body.scrollLeft,S,b=BD.length;while(b--){S=BD[b];if(z){var g=Bl.touches.length,d;while(g--){d=Bl.touches[g];if(d.identifier==S.el._drag.id){Bo=d.clientX;Bn=d.clientY;(Bl.originalEvent?Bl.originalEvent:Bl).preventDefault();break}}}else{Bl.preventDefault()}var R=S.el.node,E,Bk=R.nextSibling,Bp=R.parentNode,Bm=R.style.display;AZ.win.opera&&Bp.removeChild(R);R.style.display="none";E=S.el.paper.getElementByPoint(Bo,Bn);R.style.display=Bm;AZ.win.opera&&(Bk?Bp.insertBefore(R,Bk):Bp.appendChild(R));E&&eve("raphael.drag.over."+S.el.id,S.el,E);Bo+=Br;Bn+=Bq;eve("raphael.drag.move."+S.el.id,S.move_scope||S.el,Bo-S.el._drag.x,Bn-S.el._drag.y,Bo,Bn,Bl)}},C=function(S){Aq.unmousemove(BX).unmouseup(C);var R=BD.length,E;while(R--){E=BD[R];E.el._drag={};eve("raphael.drag.end."+E.el.id,E.end_scope||E.start_scope||E.move_scope||E.el,S)}BD=[]},BG=Aq.el={};for(var AW=s.length;AW--;){(function(E){Aq[E]=BG[E]=function(S,R){if(Aq.is(S,"function")){this.events=this.events||[];this.events.push({name:E,f:S,unbind:Ac(this.shape||this.node||AZ.doc,E,S,R||this)})}return this};Aq["un"+E]=BG["un"+E]=function(b){var S=this.events||[],R=S.length;while(R--){if(S[R].name==E&&S[R].f==b){S[R].unbind();S.splice(R,1);!S.length&&delete this.events;return this}}return this}})(s[AW])}BG.data=function(R,b){var S=At[this.id]=At[this.id]||{};if(arguments.length==1){if(Aq.is(R,"object")){for(var E in R){if(R[AK](E)){this.data(E,R[E])}}return this}eve("raphael.data.get."+this.id,this,S[R],R);return S[R]}S[R]=b;eve("raphael.data.set."+this.id,this,b,R);return this};BG.removeData=function(E){if(E==null){At[this.id]={}}else{At[this.id]&&delete At[this.id][E]}return this};BG.hover=function(b,E,S,R){return this.mouseover(b,S).mouseout(E,R||S)};BG.unhover=function(R,E){return this.unmouseover(R).unmouseout(E)};var BT=[];BG.drag=function(R,g,d,E,S,b){function i(Bl){(Bl.originalEvent||Bl).preventDefault();var Bk=AZ.doc.documentElement.scrollTop||AZ.doc.body.scrollTop,Bm=AZ.doc.documentElement.scrollLeft||AZ.doc.body.scrollLeft;this._drag.x=Bl.clientX+Bm;this._drag.y=Bl.clientY+Bk;this._drag.id=Bl.identifier;!BD.length&&Aq.mousemove(BX).mouseup(C);BD.push({el:this,move_scope:E,start_scope:S,end_scope:b});g&&eve.on("raphael.drag.start."+this.id,g);R&&eve.on("raphael.drag.move."+this.id,R);d&&eve.on("raphael.drag.end."+this.id,d);eve("raphael.drag.start."+this.id,S||E||this,Bl.clientX+Bm,Bl.clientY+Bk,Bl)}this._drag={};BT.push({el:this,start:i});this.mousedown(i);return this};BG.onDragOver=function(E){E?eve.on("raphael.drag.over."+this.id,E):eve.unbind("raphael.drag.over."+this.id)};BG.undrag=function(){var E=BT.length;while(E--){if(BT[E].el==this){this.unmousedown(BT[E].start);BT.splice(E,1);eve.unbind("raphael.drag.*."+this.id)}}!BT.length&&Aq.unmousemove(BX).unmouseup(C)};A3.circle=function(E,b,S){var R=Aq._engine.circle(this,E||0,b||0,S||0);this.__set__&&this.__set__.push(R);return R};A3.rect=function(E,g,R,b,d){var S=Aq._engine.rect(this,E||0,g||0,R||0,b||0,d||0);this.__set__&&this.__set__.push(S);return S};A3.ellipse=function(E,d,b,S){var R=Aq._engine.ellipse(this,E||0,d||0,b||0,S||0);this.__set__&&this.__set__.push(R);return R};A3.path=function(E){E&&!Aq.is(E,AJ)&&!Aq.is(E[0],BC)&&(E+=Aw);var R=Aq._engine.path(Aq.format[Bf](Aq,arguments),this);this.__set__&&this.__set__.push(R);return R};A3.image=function(d,E,g,R,b){var S=Aq._engine.image(this,d||"about:blank",E||0,g||0,R||0,b||0);this.__set__&&this.__set__.push(S);return S};A3.text=function(E,b,S){var R=Aq._engine.text(this,E||0,b||0,Bg(S));this.__set__&&this.__set__.push(R);return R};A3.set=function(R){!Aq.is(R,"array")&&(R=Array.prototype.splice.call(arguments,0,arguments.length));var E=new AL(R);this.__set__&&this.__set__.push(E);return E};A3.setStart=function(E){this.__set__=E||this.set()};A3.setFinish=function(R){var E=this.__set__;delete this.__set__;return E};A3.setSize=function(R,E){return Aq._engine.setSize.call(this,R,E)};A3.setViewBox=function(E,d,R,b,S){return Aq._engine.setViewBox.call(this,E,d,R,b,S)};A3.top=A3.bottom=null;A3.raphael=Aq;var BR=function(S){var d=S.getBoundingClientRect(),Bl=S.ownerDocument,g=Bl.body,E=Bl.documentElement,b=E.clientTop||g.clientTop||0,i=E.clientLeft||g.clientLeft||0,Bk=d.top+(AZ.win.pageYOffset||E.scrollTop||g.scrollTop)-b,R=d.left+(AZ.win.pageXOffset||E.scrollLeft||g.scrollLeft)-i;return{y:Bk,x:R}};A3.getElementByPoint=function(R,Bk){var i=this,S=i.canvas,g=AZ.doc.elementFromPoint(R,Bk);if(AZ.win.opera&&g.tagName=="svg"){var d=BR(S),b=S.createSVGRect();b.x=R-d.x;b.y=Bk-d.y;b.width=b.height=1;var E=S.getIntersectionList(b,null);if(E.length){g=E[E.length-1]}}if(!g){return null}while(g.parentNode&&g!=S.parentNode&&!g.raphael){g=g.parentNode}g==i.canvas.parentNode&&(g=S);g=g&&g.raphael?i.getById(g.raphaelid):null;return g};A3.getById=function(R){var E=this.bottom;while(E){if(E.id==R){return E}E=E.next}return null};A3.forEach=function(S,E){var R=this.bottom;while(R){if(S.call(E,R)===false){return this}R=R.next}return this};A3.getElementsByPoint=function(E,S){var R=this.set();this.forEach(function(b){if(b.isPointInside(E,S)){R.push(b)}});return R};function X(){return this.x+Ap+this.y}function AS(){return this.x+Ap+this.y+Ap+this.width+" \xd7 "+this.height}BG.isPointInside=function(E,S){var R=this.realPath=this.realPath||p[this.type](this);return Aq.isPointInsidePath(R,E,S)};BG.getBBox=function(R){if(this.removed){return{}}var E=this._;if(R){if(E.dirty||!E.bboxwt){this.realPath=p[this.type](this);E.bboxwt=AM(this.realPath);E.bboxwt.toString=AS;E.dirty=0}return E.bboxwt}if(E.dirty||E.dirtyT||!E.bbox){if(E.dirty||!this.realPath){E.bboxwt=0;this.realPath=p[this.type](this)}E.bbox=AM(n(this.realPath,this.matrix));E.bbox.toString=AS;E.dirty=E.dirtyT=0}return E.bbox};BG.clone=function(){if(this.removed){return null}var E=this.paper[this.type]().attr(this.attr());this.__set__&&this.__set__.push(E);return E};BG.glow=function(Bk){if(this.type=="text"){return null}Bk=Bk||{};var S={width:(Bk.width||10)+(+this.attr("stroke-width")||1),fill:Bk.fill||false,opacity:Bk.opacity||0.5,offsetx:Bk.offsetx||0,offsety:Bk.offsety||0,color:Bk.color||"#000"},g=S.width/2,b=this.paper,E=b.set(),d=this.realPath||p[this.type](this);d=this.matrix?n(d,this.matrix):d;for(var R=1;R<g+1;R++){E.push(b.path(d).attr({stroke:S.color,fill:S.fill?S.color:"none","stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(S.width/g*R).toFixed(3),opacity:+(S.opacity/g).toFixed(3)}))}return E.insertBefore(this).translate(S.offsetx,S.offsety)};var A6={},H=function(R,E,d,b,Bl,Bk,i,g,S){if(S==null){return N(R,E,d,b,Bl,Bk,i,g)}else{return Aq.findDotsAtSegment(R,E,d,b,Bl,Bk,i,g,c(R,E,d,b,Bl,Bk,i,g,S))}},A5=function(E,R){return function(Bs,d,g){Bs=w(Bs);var Bo,Bn,S,Bk,b="",Br={},Bp,Bm=0;for(var Bl=0,Bq=Bs.length;Bl<Bq;Bl++){S=Bs[Bl];if(S[0]=="M"){Bo=+S[1];Bn=+S[2]}else{Bk=H(Bo,Bn,S[1],S[2],S[3],S[4],S[5],S[6]);if(Bm+Bk>d){if(R&&!Br.start){Bp=H(Bo,Bn,S[1],S[2],S[3],S[4],S[5],S[6],d-Bm);b+=["C"+Bp.start.x,Bp.start.y,Bp.m.x,Bp.m.y,Bp.x,Bp.y];if(g){return b}Br.start=b;b=["M"+Bp.x,Bp.y+"C"+Bp.n.x,Bp.n.y,Bp.end.x,Bp.end.y,S[5],S[6]].join();Bm+=Bk;Bo=+S[5];Bn=+S[6];continue}if(!E&&!R){Bp=H(Bo,Bn,S[1],S[2],S[3],S[4],S[5],S[6],d-Bm);return{x:Bp.x,y:Bp.y,alpha:Bp.alpha}}}Bm+=Bk;Bo=+S[5];Bn=+S[6]}b+=S.shift()+S}Br.end=b;Bp=E?Bm:R?Br:Aq.findDotsAtSegment(Bo,Bn,S[0],S[1],S[2],S[3],S[4],S[5],1);Bp.alpha&&(Bp={x:Bp.x,y:Bp.y,alpha:Bp.alpha});return Bp}};var Ar=A5(1),l=A5(),AD=A5(0,1);Aq.getTotalLength=Ar;Aq.getPointAtLength=l;Aq.getSubpath=function(R,b,S){if(this.getTotalLength(R)-S<0.000001){return AD(R,b).end}var E=AD(R,S,1);return b?AD(E,b).end:E};BG.getTotalLength=function(){if(this.type!="path"){return }if(this.node.getTotalLength){return this.node.getTotalLength()}return Ar(this.attrs.path)};BG.getPointAtLength=function(E){if(this.type!="path"){return }return l(this.attrs.path,E)};BG.getSubpath=function(R,E){if(this.type!="path"){return }return Aq.getSubpath(this.attrs.path,R,E)};var L=Aq.easing_formulas={linear:function(E){return E},"<":function(E){return BO(E,1.7)},">":function(E){return BO(E,0.48)},"<>":function(Bk){var b=0.48-Bk/1.04,S=AT.sqrt(0.1734+b*b),E=S-b,i=BO(AV(E),1/3)*(E<0?-1:1),g=-S-b,d=BO(AV(g),1/3)*(g<0?-1:1),R=i+d+0.5;return(1-R)*3*R*R+R*R*R},backIn:function(R){var E=1.70158;return R*R*((E+1)*R-E)},backOut:function(R){R=R-1;var E=1.70158;return R*R*((E+1)*R+E)+1},elastic:function(E){if(E==!!E){return E}return BO(2,-10*E)*AT.sin((E-0.075)*(2*Au)/0.3)+1},bounce:function(b){var R=7.5625,S=2.75,E;if(b<(1/S)){E=R*b*b}else{if(b<(2/S)){b-=(1.5/S);E=R*b*b+0.75}else{if(b<(2.5/S)){b-=(2.25/S);E=R*b*b+0.9375}else{b-=(2.625/S);E=R*b*b+0.984375}}}return E}};L.easeIn=L["ease-in"]=L["<"];L.easeOut=L["ease-out"]=L[">"];L.easeInOut=L["ease-in-out"]=L["<>"];L["back-in"]=L.backIn;L["back-out"]=L.backOut;var AB=[],Am=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(E){setTimeout(E,16)},Bb=function(){var Bk=+new Date,Bs=0;for(;Bs<AB.length;Bs++){var By=AB[Bs];if(By.el.removed||By.paused){continue}var b=Bk-By.start,Bq=By.ms,Bp=By.easing,Bt=By.from,Bn=By.diff,R=By.to,Bm=By.t,g=By.el,Bo={},E,Bw={},B0;if(By.initstatus){b=(By.initstatus*By.anim.top-By.prev)/(By.percent-By.prev)*Bq;By.status=By.initstatus;delete By.initstatus;By.stop&&AB.splice(Bs--,1)}else{By.status=(By.prev+(By.percent-By.prev)*(b/Bq))/By.anim.top}if(b<0){continue}if(b<Bq){var S=Bp(b/Bq);for(var Br in Bt){if(Bt[AK](Br)){switch(AR[Br]){case Ak:E=+Bt[Br]+S*Bq*Bn[Br];break;case"colour":E="rgb("+[j(AH(Bt[Br].r+S*Bq*Bn[Br].r)),j(AH(Bt[Br].g+S*Bq*Bn[Br].g)),j(AH(Bt[Br].b+S*Bq*Bn[Br].b))].join(",")+")";break;case"path":E=[];for(var Bv=0,Bl=Bt[Br].length;Bv<Bl;Bv++){E[Bv]=[Bt[Br][Bv][0]];for(var Bu=1,Bx=Bt[Br][Bv].length;Bu<Bx;Bu++){E[Bv][Bu]=+Bt[Br][Bv][Bu]+S*Bq*Bn[Br][Bv][Bu]}E[Bv]=E[Bv].join(Ap)}E=E.join(Ap);break;case"transform":if(Bn[Br].real){E=[];for(Bv=0,Bl=Bt[Br].length;Bv<Bl;Bv++){E[Bv]=[Bt[Br][Bv][0]];for(Bu=1,Bx=Bt[Br][Bv].length;Bu<Bx;Bu++){E[Bv][Bu]=Bt[Br][Bv][Bu]+S*Bq*Bn[Br][Bv][Bu]}}}else{var Bz=function(B1){return +Bt[Br][B1]+S*Bq*Bn[Br][B1]};E=[["m",Bz(0),Bz(1),Bz(2),Bz(3),Bz(4),Bz(5)]]}break;case"csv":if(Br=="clip-rect"){E=[];Bv=4;while(Bv--){E[Bv]=+Bt[Br][Bv]+S*Bq*Bn[Br][Bv]}}break;default:var d=[][Bd](Bt[Br]);E=[];Bv=g.paper.customAttributes[Br].length;while(Bv--){E[Bv]=+d[Bv]+S*Bq*Bn[Br][Bv]}break}Bo[Br]=E}}g.attr(Bo);(function(B2,i,B1){setTimeout(function(){eve("raphael.anim.frame."+B2,i,B1)})})(g.id,g,By.anim)}else{(function(B2,B1,i){setTimeout(function(){eve("raphael.anim.frame."+B1.id,B1,i);eve("raphael.anim.finish."+B1.id,B1,i);Aq.is(B2,"function")&&B2.call(B1)})})(By.callback,g,By.anim);g.attr(R);AB.splice(Bs--,1);if(By.repeat>1&&!By.next){for(B0 in R){if(R[AK](B0)){Bw[B0]=By.totalOrigin[B0]}}By.el.attr(Bw);Al(By.anim,By.el,By.anim.percents[0],null,By.totalOrigin,By.repeat-1)}if(By.next&&!By.stop){Al(By.anim,By.el,By.next,null,By.totalOrigin,By.repeat)}}}Aq.svg&&g&&g.paper&&g.paper.safari();AB.length&&Am(Bb)},j=function(E){return E>255?255:E<0?0:E};BG.animateWith=function(R,b,S,E,Bk,Bp){var g=this;if(g.removed){Bp&&Bp.call(g);return g}var Bn=S instanceof BZ?S:Aq.animation(S,E,Bk,Bp),Bm,Bl;Al(Bn,g,Bn.percents[0],null,g.attr());for(var d=0,Bo=AB.length;d<Bo;d++){if(AB[d].anim==b&&AB[d].el==R){AB[Bo-1].start=AB[d].start;break}}return g};function A2(Bq,b,R,Bp,Bo,Bk){var Bl=3*b,Bn=3*(Bp-b)-Bl,E=1-Bl-Bn,i=3*R,Bm=3*(Bo-R)-i,Br=1-i-Bm;function g(Bs){return((E*Bs+Bn)*Bs+Bl)*Bs}function S(Bs,Bu){var Bt=d(Bs,Bu);return((Br*Bt+Bm)*Bt+i)*Bt}function d(Bs,Bz){var By,Bx,Bv,Bt,Bw,Bu;for(Bv=Bs,Bu=0;Bu<8;Bu++){Bt=g(Bv)-Bs;if(AV(Bt)<Bz){return Bv}Bw=(3*E*Bv+2*Bn)*Bv+Bl;if(AV(Bw)<0.000001){break}Bv=Bv-Bt/Bw}By=0;Bx=1;Bv=Bs;if(Bv<By){return By}if(Bv>Bx){return Bx}while(By<Bx){Bt=g(Bv);if(AV(Bt-Bs)<Bz){return Bv}if(Bs>Bt){By=Bv}else{Bx=Bv}Bv=(Bx-By)/2+By}return Bv}return S(Bq,1/(200*Bk))}BG.onAnimation=function(E){E?eve.on("raphael.anim.frame."+this.id,E):eve.unbind("raphael.anim.frame."+this.id);return this};function BZ(d,S){var R=[],b={};this.ms=S;this.times=1;if(d){for(var E in d){if(d[AK](E)){b[AN(E)]=d[E];R.push(AN(E))}}R.sort(T)}this.anim=b;this.top=R[R.length-1];this.percents=R}BZ.prototype.delay=function(R){var E=new BZ(this.anim,this.ms);E.times=this.times;E.del=+R||0;return E};BZ.prototype.repeat=function(R){var E=new BZ(this.anim,this.ms);E.del=this.del;E.times=AT.floor(J(R,0))||1;return E};function Al(B2,S,E,B0,Bk,Bo){E=AN(E);var B9,g,Bn,CA=[],Bu,Bt,d,Bw=B2.ms,B1={},b={},Bq={};if(B0){for(B5=0,Bp=AB.length;B5<Bp;B5++){var B7=AB[B5];if(B7.el.id==S.id&&B7.anim==B2){if(B7.percent!=E){AB.splice(B5,1);Bn=1}else{g=B7}S.attr(B7.totalOrigin);break}}}else{B0=+b}for(var B5=0,Bp=B2.percents.length;B5<Bp;B5++){if(B2.percents[B5]==E||B2.percents[B5]>B0*B2.top){E=B2.percents[B5];Bt=B2.percents[B5-1]||0;Bw=Bw/B2.top*(E-Bt);Bu=B2.percents[B5+1];B9=B2.anim[E];break}else{if(B0){S.attr(B2.anim[B2.percents[B5]])}}}if(!B9){return }if(!g){for(var By in B9){if(B9[AK](By)){if(AR[AK](By)||S.paper.customAttributes[AK](By)){B1[By]=S.attr(By);(B1[By]==null)&&(B1[By]=O[By]);b[By]=B9[By];switch(AR[By]){case Ak:Bq[By]=(b[By]-B1[By])/Bw;break;case"colour":B1[By]=Aq.getRGB(B1[By]);var Bz=Aq.getRGB(b[By]);Bq[By]={r:(Bz.r-B1[By].r)/Bw,g:(Bz.g-B1[By].g)/Bw,b:(Bz.b-B1[By].b)/Bw};break;case"path":var Bl=w(B1[By],b[By]),Bs=Bl[1];B1[By]=Bl[0];Bq[By]=[];for(B5=0,Bp=B1[By].length;B5<Bp;B5++){Bq[By][B5]=[0];for(var B4=1,B6=B1[By][B5].length;B4<B6;B4++){Bq[By][B5][B4]=(Bs[B5][B4]-B1[By][B5][B4])/Bw}}break;case"transform":var CC=S._,CB=Aa(CC[By],b[By]);if(CB){B1[By]=CB.from;b[By]=CB.to;Bq[By]=[];Bq[By].real=true;for(B5=0,Bp=B1[By].length;B5<Bp;B5++){Bq[By][B5]=[B1[By][B5][0]];for(B4=1,B6=B1[By][B5].length;B4<B6;B4++){Bq[By][B5][B4]=(b[By][B5][B4]-B1[By][B5][B4])/Bw}}}else{var Bx=(S.matrix||new Ae),B8={_:{transform:CC.transform},getBBox:function(){return S.getBBox(1)}};B1[By]=[Bx.a,Bx.b,Bx.c,Bx.d,Bx.e,Bx.f];An(B8,b[By]);b[By]=B8._.transform;Bq[By]=[(B8.matrix.a-Bx.a)/Bw,(B8.matrix.b-Bx.b)/Bw,(B8.matrix.c-Bx.c)/Bw,(B8.matrix.d-Bx.d)/Bw,(B8.matrix.e-Bx.e)/Bw,(B8.matrix.f-Bx.f)/Bw]}break;case"csv":var R=Bg(B9[By])[f](A),Bm=Bg(B1[By])[f](A);if(By=="clip-rect"){B1[By]=Bm;Bq[By]=[];B5=Bm.length;while(B5--){Bq[By][B5]=(R[B5]-B1[By][B5])/Bw}}b[By]=R;break;default:R=[][Bd](B9[By]);Bm=[][Bd](B1[By]);Bq[By]=[];B5=S.paper.customAttributes[By].length;while(B5--){Bq[By][B5]=((R[B5]||0)-(Bm[B5]||0))/Bw}break}}}}var Bv=B9.easing,B3=Aq.easing_formulas[Bv];if(!B3){B3=Bg(Bv).match(B);if(B3&&B3.length==5){var Br=B3;B3=function(i){return A2(i,+Br[1],+Br[2],+Br[3],+Br[4],Bw)}}else{B3=Ba}}d=B9.start||B2.start||+new Date;B7={anim:B2,percent:E,timestamp:d,start:d+(B2.del||0),status:0,initstatus:B0||0,stop:false,ms:Bw,easing:B3,from:B1,diff:Bq,to:b,el:S,callback:B9.callback,prev:Bt,next:Bu,repeat:Bo||B2.times,origin:S.attr(),totalOrigin:Bk};AB.push(B7);if(B0&&!g&&!Bn){B7.stop=true;B7.start=new Date-Bw*B0;if(AB.length==1){return Bb()}}if(Bn){B7.start=new Date-B7.ms*B0}AB.length==1&&Am(Bb)}else{g.initstatus=B0;g.start=new Date-g.ms*B0}eve("raphael.anim.start."+S.id,S,B2)}Aq.animation=function(d,R,i,g){if(d instanceof BZ){return d}if(Aq.is(i,"function")||!i){g=g||i||null;i=null}d=Object(d);R=+R||0;var b={},S,E;for(E in d){if(d[AK](E)&&AN(E)!=E&&AN(E)+"%"!=E){S=true;b[E]=d[E]}}if(!S){return new BZ(d,R)}else{i&&(b.easing=i);g&&(b.callback=g);return new BZ({100:b},R)}};BG.animate=function(b,E,g,d){var R=this;if(R.removed){d&&d.call(R);return R}var S=b instanceof BZ?b:Aq.animation(b,E,g,d);Al(S,R,S.percents[0],null,R.attr());return R};BG.setTime=function(R,E){if(R&&E!=null){this.status(R,BL(E,R.ms)/R.ms)}return this};BG.status=function(d,b){var R=[],S=0,E,g;if(b!=null){Al(d,this,-1,BL(b,1));return this}else{E=AB.length;for(;S<E;S++){g=AB[S];if(g.el.id==this.id&&(!d||g.anim==d)){if(d){return g.status}R.push({anim:g.anim,status:g.status})}}if(d){return 0}return R}};BG.pause=function(R){for(var E=0;E<AB.length;E++){if(AB[E].el.id==this.id&&(!R||AB[E].anim==R)){if(eve("raphael.anim.pause."+this.id,this,AB[E].anim)!==false){AB[E].paused=true}}}return this};BG.resume=function(R){for(var E=0;E<AB.length;E++){if(AB[E].el.id==this.id&&(!R||AB[E].anim==R)){var S=AB[E];if(eve("raphael.anim.resume."+this.id,this,S.anim)!==false){delete S.paused;this.status(S.anim,S.status)}}}return this};BG.stop=function(R){for(var E=0;E<AB.length;E++){if(AB[E].el.id==this.id&&(!R||AB[E].anim==R)){if(eve("raphael.anim.stop."+this.id,this,AB[E].anim)!==false){AB.splice(E--,1)}}}return this};function AA(R){for(var E=0;E<AB.length;E++){if(AB[E].el.paper==R){AB.splice(E--,1)}}}eve.on("raphael.remove",AA);eve.on("raphael.clear",AA);BG.toString=function(){return"Rapha\xebl\u2019s object"};var AL=function(E){this.items=[];this.length=0;this.type="set";if(E){for(var R=0,S=E.length;R<S;R++){if(E[R]&&(E[R].constructor==BG.constructor||E[R].constructor==AL)){this[this.items.length]=this.items[this.items.length]=E[R];this.length++}}}},BB=AL.prototype;BB.push=function(){var b,E;for(var R=0,S=arguments.length;R<S;R++){b=arguments[R];if(b&&(b.constructor==BG.constructor||b.constructor==AL)){E=this.items.length;this[E]=this.items[E]=b;this.length++}}return this};BB.pop=function(){this.length&&delete this[this.length--];return this.items.pop()};BB.forEach=function(b,E){for(var R=0,S=this.items.length;R<S;R++){if(b.call(E,this.items[R],R)===false){return this}}return this};for(var a in BG){if(BG[AK](a)){BB[a]=(function(E){return function(){var R=arguments;return this.forEach(function(S){S[E][Bf](S,R)})}})(a)}}BB.attr=function(R,g){if(R&&Aq.is(R,BC)&&Aq.is(R[0],"object")){for(var E=0,d=R.length;E<d;E++){this.items[E].attr(R[E])}}else{for(var S=0,b=this.items.length;S<b;S++){this.items[S].attr(R,g)}}return this};BB.clear=function(){while(this.length){this.pop()}};BB.splice=function(b,Bk,Bl){b=b<0?J(this.length+b,0):b;Bk=J(0,BL(this.length-b,Bk));var S=[],E=[],R=[],d;for(d=2;d<arguments.length;d++){R.push(arguments[d])}for(d=0;d<Bk;d++){E.push(this[b+d])}for(;d<this.length-b;d++){S.push(this[b+d])}var g=R.length;for(d=0;d<g+S.length;d++){this.items[b+d]=this[b+d]=d<g?R[d]:S[d-g]}d=this.items.length=this.length-=Bk-g;while(this[d]){delete this[d++]}return new AL(E)};BB.exclude=function(S){for(var E=0,R=this.length;E<R;E++){if(this[E]==S){this.splice(E,1);return true}}};BB.animate=function(S,E,Bk,Bm){(Aq.is(Bk,"function")||!Bk)&&(Bm=Bk||null);var g=this.items.length,b=g,Bn,Bl=this,d;if(!g){return this}Bm&&(d=function(){!--g&&Bm.call(Bl)});Bk=Aq.is(Bk,AJ)?Bk:d;var R=Aq.animation(S,E,Bk,d);Bn=this.items[--b].animate(R);while(b--){this.items[b]&&!this.items[b].removed&&this.items[b].animateWith(Bn,R,R)}return this};BB.insertAfter=function(R){var E=this.items.length;while(E--){this.items[E].insertAfter(R)}return this};BB.getBBox=function(){var E=[],g=[],R=[],b=[];for(var S=this.items.length;S--;){if(!this.items[S].removed){var d=this.items[S].getBBox();E.push(d.x);g.push(d.y);R.push(d.x+d.width);b.push(d.y+d.height)}}E=BL[Bf](0,E);g=BL[Bf](0,g);R=J[Bf](0,R);b=J[Bf](0,b);return{x:E,y:g,x2:R,y2:b,width:R-E,height:b-g}};BB.clone=function(S){S=new AL;for(var E=0,R=this.items.length;E<R;E++){S.push(this.items[E].clone())}return S};BB.toString=function(){return"Rapha\xebl\u2018s set"};Aq.registerFont=function(R){if(!R.face){return R}this.fonts=this.fonts||{};var b={w:R.w,face:{},glyphs:{}},S=R.face["font-family"];for(var i in R.face){if(R.face[AK](i)){b.face[i]=R.face[i]}}if(this.fonts[S]){this.fonts[S].push(b)}else{this.fonts[S]=[b]}if(!R.svg){b.face["units-per-em"]=u(R.face["units-per-em"],10);for(var d in R.glyphs){if(R.glyphs[AK](d)){var g=R.glyphs[d];b.glyphs[d]={w:g.w,k:{},d:g.d&&"M"+g.d.replace(/[mlcxtrv]/g,function(Bk){return{l:"L",c:"C",x:"z",t:"m",r:"l",v:"c"}[Bk]||"M"})+"z"};if(g.k){for(var E in g.k){if(g[AK](E)){b.glyphs[d].k[E]=g.k[E]}}}}}}return R};A3.getFont=function(Bl,Bm,R,b){b=b||"normal";R=R||"normal";Bm=+Bm||{normal:400,bold:700,lighter:300,bolder:800}[Bm]||400;if(!Aq.fonts){return }var d=Aq.fonts[Bl];if(!d){var S=new RegExp("(^|\\s)"+Bl.replace(/[^\w\d\s+!~.:_-]/g,Aw)+"(\\s|$)","i");for(var E in Aq.fonts){if(Aq.fonts[AK](E)){if(S.test(E)){d=Aq.fonts[E];break}}}}var g;if(d){for(var Bk=0,Bn=d.length;Bk<Bn;Bk++){g=d[Bk];if(g.face["font-weight"]==Bm&&(g.face["font-style"]==R||!g.face["font-style"])&&g.face["font-stretch"]==b){break}}}return g};A3.print=function(Bk,g,E,Bn,Bo,Bx,R){Bx=Bx||"middle";R=J(BL(R||0,1),-1);var Bw=Bg(E)[f](Aw),Bt=0,Bv=0,Br=Aw,By;Aq.is(Bn,E)&&(Bn=this.getFont(Bn));if(Bn){By=(Bo||16)/Bn.face["units-per-em"];var b=Bn.face.bbox[f](A),Bm=+b[0],S=b[3]-b[1],d=0,Bp=+b[1]+(Bx=="baseline"?S+(+Bn.face.descent):S/2);for(var Bs=0,Bl=Bw.length;Bs<Bl;Bs++){if(Bw[Bs]=="\n"){Bt=0;Bu=0;Bv=0;d+=S}else{var Bq=Bv&&Bn.glyphs[Bw[Bs-1]]||{},Bu=Bn.glyphs[Bw[Bs]];Bt+=Bv?(Bq.w||Bn.w)+(Bq.k&&Bq.k[Bw[Bs]]||0)+(Bn.w*R):0;Bv=1}if(Bu&&Bu.d){Br+=Aq.transformPath(Bu.d,["t",Bt*By,d*By,"s",By,By,Bm,Bp,"t",(Bk-Bm)/By,(g-Bp)/By])}}}return this.path(Br).attr({fill:"#000",stroke:"none"})};A3.add=function(b){if(Aq.is(b,"array")){var S=this.set(),R=0,d=b.length,E;for(;R<d;R++){E=b[R]||{};BV[AK](E.type)&&S.push(this[E.type]().attr(E))}}return S};Aq.format=function(R,S){var E=Aq.is(S,BC)?[0][Bd](S):arguments;R&&Aq.is(R,AJ)&&E.length-1&&(R=R.replace(BQ,function(d,b){return E[++b]==null?Aw:E[b]}));return R||Aw};Aq.fullfill=(function(){var S=/\{([^\}]+)\}/g,E=/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,R=function(g,d,i){var b=i;d.replace(E,function(Bm,Bl,Bk,Bo,Bn){Bl=Bl||Bo;if(b){if(Bl in b){b=b[Bl]}typeof b=="function"&&Bn&&(b=b())}});b=(b==null||b==i?g:b)+"";return b};return function(d,b){return String(d).replace(S,function(i,g){return R(i,g,b)})}})();Aq.ninja=function(){P.was?(AZ.win.Raphael=P.is):delete Raphael;return Aq};Aq.st=BB;(function(b,R,S){if(b.readyState==null&&b.addEventListener){b.addEventListener(R,S=function(){b.removeEventListener(R,S,false);b.readyState="complete"},false);b.readyState="loading"}function E(){(/in/).test(b.readyState)?setTimeout(E,9):Aq.eve("raphael.DOMload")}E()})(document,"DOMContentLoaded");P.was?(AZ.win.Raphael=Aq):(Raphael=Aq);eve.on("raphael.DOMload",function(){AO=true})})();window.Raphael&&window.Raphael.svg&&function(M){var D="hasOwnProperty",e=String,O=parseFloat,T=parseInt,G=Math,f=G.max,V=G.abs,I=G.pow,H=/[, ]+/,c=M.eve,U="",K=" ";var P="http://www.w3.org/1999/xlink",b={block:"M5,0 0,2.5 5,5z",classic:"M5,0 0,2.5 5,5 3.5,3 3.5,2z",diamond:"M2.5,0 5,2.5 2.5,5 0,2.5z",open:"M6,1 1,3.5 6,6",oval:"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"},X={};M.toString=function(){return"Your browser supports SVG.\nYou are running Rapha\xebl "+this.version};var J=function(S,E){if(E){if(typeof S=="string"){S=J(S)}for(var R in E){if(E[D](R)){if(R.substring(0,6)=="xlink:"){S.setAttributeNS(P,R.substring(6),e(E[R]))}else{S.setAttribute(R,e(E[R]))}}}}else{S=M._g.doc.createElementNS("http://www.w3.org/2000/svg",S);S.style&&(S.style.webkitTapHighlightColor="rgba(0,0,0,0)")}return S},A=function(n,t){var q="linear",R=n.id+t,l=0.5,j=0.5,g=n.node,E=n.paper,v=g.style,S=M._g.doc.getElementById(R);if(!S){t=e(t).replace(M._radial_gradient,function(s,i,w){q="radial";if(i&&w){l=O(i);j=O(w);var o=((j>0.5)*2-1);I(l-0.5,2)+I(j-0.5,2)>0.25&&(j=G.sqrt(0.25-I(l-0.5,2))*o+0.5)&&j!=0.5&&(j=j.toFixed(5)-0.00001*o)}return U});t=t.split(/\s*\-\s*/);if(q=="linear"){var k=t.shift();k=-O(k);if(isNaN(k)){return null}var h=[0,0,G.cos(M.rad(k)),G.sin(M.rad(k))],r=1/(f(V(h[2]),V(h[3]))||1);h[2]*=r;h[3]*=r;if(h[2]<0){h[0]=-h[2];h[2]=0}if(h[3]<0){h[1]=-h[3];h[3]=0}}var p=M._parseDots(t);if(!p){return null}R=R.replace(/[\(\)\s,\xb0#]/g,"_");if(n.gradient&&R!=n.gradient.id){E.defs.removeChild(n.gradient);delete n.gradient}if(!n.gradient){S=J(q+"Gradient",{id:R});n.gradient=S;J(S,q=="radial"?{fx:l,fy:j}:{x1:h[0],y1:h[1],x2:h[2],y2:h[3],gradientTransform:n.matrix.invert()});E.defs.appendChild(S);for(var m=0,u=p.length;m<u;m++){S.appendChild(J("stop",{offset:p[m].offset?p[m].offset:m?"100%":"0%","stop-color":p[m].color||"#fff"}))}}}J(g,{fill:"url(#"+R+")",opacity:1,"fill-opacity":1});v.fill=U;v.opacity=1;v.fillOpacity=1;return 1},B=function(R){var E=R.getBBox(1);J(R.pattern,{patternTransform:R.matrix.invert()+" translate("+E.x+","+E.y+")"})},C=function(s,v,l){if(s.type=="path"){var E=e(v).toLowerCase().split("-"),r=s.paper,AH=l?"end":"start",y=s.node,u=s.attrs,k=u["stroke-width"],AC=E.length,g="classic",AB,S,n,z,x,m=3,AD=3,q=5;while(AC--){switch(E[AC]){case"block":case"classic":case"oval":case"diamond":case"open":case"none":g=E[AC];break;case"wide":AD=5;break;case"narrow":AD=2;break;case"long":m=5;break;case"short":m=2;break}}if(g=="open"){m+=2;AD+=2;q+=2;n=1;z=l?4:1;x={fill:"none",stroke:u.stroke}}else{z=n=m/2;x={fill:u.stroke,stroke:"none"}}if(s._.arrows){if(l){s._.arrows.endPath&&X[s._.arrows.endPath]--;s._.arrows.endMarker&&X[s._.arrows.endMarker]--}else{s._.arrows.startPath&&X[s._.arrows.startPath]--;s._.arrows.startMarker&&X[s._.arrows.startMarker]--}}else{s._.arrows={}}if(g!="none"){var R="raphael-marker-"+g,AG="raphael-marker-"+AH+g+m+AD;if(!M._g.doc.getElementById(R)){r.defs.appendChild(J(J("path"),{"stroke-linecap":"round",d:b[g],id:R}));X[R]=1}else{X[R]++}var j=M._g.doc.getElementById(AG),AA;if(!j){j=J(J("marker"),{id:AG,markerHeight:AD,markerWidth:m,orient:"auto",refX:z,refY:AD/2});AA=J(J("use"),{"xlink:href":"#"+R,transform:(l?"rotate(180 "+m/2+" "+AD/2+") ":U)+"scale("+m/q+","+AD/q+")","stroke-width":(1/((m/q+AD/q)/2)).toFixed(4)});j.appendChild(AA);r.defs.appendChild(j);X[AG]=1}else{X[AG]++;AA=j.getElementsByTagName("use")[0]}J(AA,x);var AF=n*(g!="diamond"&&g!="oval");if(l){AB=s._.arrows.startdx*k||0;S=M.getTotalLength(u.path)-AF*k}else{AB=AF*k;S=M.getTotalLength(u.path)-(s._.arrows.enddx*k||0)}x={};x["marker-"+AH]="url(#"+AG+")";if(S||AB){x.d=Raphael.getSubpath(u.path,AB,S)}J(y,x);s._.arrows[AH+"Path"]=R;s._.arrows[AH+"Marker"]=AG;s._.arrows[AH+"dx"]=AF;s._.arrows[AH+"Type"]=g;s._.arrows[AH+"String"]=v}else{if(l){AB=s._.arrows.startdx*k||0;S=M.getTotalLength(u.path)-AB}else{AB=0;S=M.getTotalLength(u.path)-(s._.arrows.enddx*k||0)}s._.arrows[AH+"Path"]&&J(y,{d:Raphael.getSubpath(u.path,AB,S)});delete s._.arrows[AH+"Path"];delete s._.arrows[AH+"Marker"];delete s._.arrows[AH+"dx"];delete s._.arrows[AH+"Type"];delete s._.arrows[AH+"String"]}for(x in X){if(X[D](x)&&!X[x]){var AE=M._g.doc.getElementById(x);AE&&AE.parentNode.removeChild(AE)}}}},Y={"":[0],none:[0],"-":[3,1],".":[1,1],"-.":[3,1,1,1],"-..":[3,1,1,1,1,1],". ":[1,3],"- ":[4,3],"--":[8,3],"- .":[4,3,1,3],"--.":[8,3,1,3],"--..":[8,3,1,3,1,3]},L=function(k,h,j){h=Y[e(h).toLowerCase()];if(h){var S=k.attrs["stroke-width"]||"1",E={round:S,square:S,butt:0}[k.attrs["stroke-linecap"]||j["stroke-linecap"]]||0,g=[],R=h.length;while(R--){g[R]=h[R]*S+((R%2)?1:-1)*E}J(k.node,{"stroke-dasharray":g.join(",")})}},Z=function(p,x){var t=p.node,q=p.attrs,m=t.style.visibility;t.style.visibility="hidden";for(var s in x){if(x[D](s)){if(!M._availableAttrs[D](s)){continue}var r=x[s];q[s]=r;switch(s){case"blur":p.blur(r);break;case"href":case"title":case"target":var v=t.parentNode;if(v.tagName.toLowerCase()!="a"){var h=J("a");v.insertBefore(h,t);h.appendChild(t);v=h}if(s=="target"){v.setAttributeNS(P,"show",r=="blank"?"new":r)}else{v.setAttributeNS(P,s,r)}break;case"cursor":t.style.cursor=r;break;case"transform":p.transform(r);break;case"arrow-start":C(p,r);break;case"arrow-end":C(p,r,1);break;case"clip-rect":var R=e(r).split(H);if(R.length==4){p.clip&&p.clip.parentNode.parentNode.removeChild(p.clip.parentNode);var S=J("clipPath"),u=J("rect");S.id=M.createUUID();J(u,{x:R[0],y:R[1],width:R[2],height:R[3]});S.appendChild(u);p.paper.defs.appendChild(S);J(t,{"clip-path":"url(#"+S.id+")"});p.clip=u}if(!r){var n=t.getAttribute("clip-path");if(n){var w=M._g.doc.getElementById(n.replace(/(^url\(#|\)$)/g,U));w&&w.parentNode.removeChild(w);J(t,{"clip-path":U});delete p.clip}}break;case"path":if(p.type=="path"){J(t,{d:r?q.path=M._pathToAbsolute(r):"M0,0"});p._.dirty=1;if(p._.arrows){"startString" in p._.arrows&&C(p,p._.arrows.startString);"endString" in p._.arrows&&C(p,p._.arrows.endString,1)}}break;case"width":t.setAttribute(s,r);p._.dirty=1;if(q.fx){s="x";r=q.x}else{break}case"x":if(q.fx){r=-q.x-(q.width||0)}case"rx":if(s=="rx"&&p.type=="rect"){break}case"cx":t.setAttribute(s,r);p.pattern&&B(p);p._.dirty=1;break;case"height":t.setAttribute(s,r);p._.dirty=1;if(q.fy){s="y";r=q.y}else{break}case"y":if(q.fy){r=-q.y-(q.height||0)}case"ry":if(s=="ry"&&p.type=="rect"){break}case"cy":t.setAttribute(s,r);p.pattern&&B(p);p._.dirty=1;break;case"r":if(p.type=="rect"){J(t,{rx:r,ry:r})}else{t.setAttribute(s,r)}p._.dirty=1;break;case"src":if(p.type=="image"){t.setAttributeNS(P,"href",r)}break;case"stroke-width":if(p._.sx!=1||p._.sy!=1){r/=f(V(p._.sx),V(p._.sy))||1}if(p.paper._vbSize){r*=p.paper._vbSize}t.setAttribute(s,r);if(q["stroke-dasharray"]){L(p,q["stroke-dasharray"],x)}if(p._.arrows){"startString" in p._.arrows&&C(p,p._.arrows.startString);"endString" in p._.arrows&&C(p,p._.arrows.endString,1)}break;case"stroke-dasharray":L(p,r,x);break;case"fill":var i=e(r).match(M._ISURL);if(i){S=J("pattern");var l=J("image");S.id=M.createUUID();J(S,{x:0,y:0,patternUnits:"userSpaceOnUse",height:1,width:1});J(l,{x:0,y:0,"xlink:href":i[1]});S.appendChild(l);(function(o){M._preload(i[1],function(){var y=this.offsetWidth,z=this.offsetHeight;J(o,{width:y,height:z});J(l,{width:y,height:z});p.paper.safari()})})(S);p.paper.defs.appendChild(S);J(t,{fill:"url(#"+S.id+")"});p.pattern=S;p.pattern&&B(p);break}var g=M.getRGB(r);if(!g.error){delete x.gradient;delete q.gradient;!M.is(q.opacity,"undefined")&&M.is(x.opacity,"undefined")&&J(t,{opacity:q.opacity});!M.is(q["fill-opacity"],"undefined")&&M.is(x["fill-opacity"],"undefined")&&J(t,{"fill-opacity":q["fill-opacity"]})}else{if((p.type=="circle"||p.type=="ellipse"||e(r).charAt()!="r")&&A(p,r)){if("opacity" in q||"fill-opacity" in q){var E=M._g.doc.getElementById(t.getAttribute("fill").replace(/^url\(#|\)$/g,U));if(E){var j=E.getElementsByTagName("stop");J(j[j.length-1],{"stop-opacity":("opacity" in q?q.opacity:1)*("fill-opacity" in q?q["fill-opacity"]:1)})}}q.gradient=r;q.fill="none";break}}g[D]("opacity")&&J(t,{"fill-opacity":g.opacity>1?g.opacity/100:g.opacity});case"stroke":g=M.getRGB(r);t.setAttribute(s,g.hex);s=="stroke"&&g[D]("opacity")&&J(t,{"stroke-opacity":g.opacity>1?g.opacity/100:g.opacity});if(s=="stroke"&&p._.arrows){"startString" in p._.arrows&&C(p,p._.arrows.startString);"endString" in p._.arrows&&C(p,p._.arrows.endString,1)}break;case"gradient":(p.type=="circle"||p.type=="ellipse"||e(r).charAt()!="r")&&A(p,r);break;case"opacity":if(q.gradient&&!q[D]("stroke-opacity")){J(t,{"stroke-opacity":r>1?r/100:r})}case"fill-opacity":if(q.gradient){E=M._g.doc.getElementById(t.getAttribute("fill").replace(/^url\(#|\)$/g,U));if(E){j=E.getElementsByTagName("stop");J(j[j.length-1],{"stop-opacity":r})}break}default:s=="font-size"&&(r=T(r,10)+"px");var k=s.replace(/(\-.)/g,function(o){return o.substring(1).toUpperCase()});t.style[k]=r;p._.dirty=1;t.setAttribute(s,r);break}}}Q(p,x);t.style.visibility=m},d=1.2,Q=function(E,h){if(E.type!="text"||!(h[D]("text")||h[D]("font")||h[D]("font-size")||h[D]("x")||h[D]("y"))){return }var n=E.attrs,S=E.node,p=S.firstChild?T(M._g.doc.defaultView.getComputedStyle(S.firstChild,U).getPropertyValue("font-size"),10):10;if(h[D]("text")){n.text=h.text;while(S.firstChild){S.removeChild(S.firstChild)}var g=e(h.text).split("\n"),R=[],l;for(var j=0,o=g.length;j<o;j++){l=J("tspan");j&&J(l,{dy:p*d,x:n.x});l.appendChild(M._g.doc.createTextNode(g[j]));S.appendChild(l);R[j]=l}}else{R=S.getElementsByTagName("tspan");for(j=0,o=R.length;j<o;j++){if(j){J(R[j],{dy:p*d,x:n.x})}else{J(R[0],{dy:0})}}}J(S,{x:n.x,y:n.y});E._.dirty=1;var k=E._getBBox(),m=n.y-(k.y+k.height/2);m&&M.is(m,"finite")&&J(R[0],{dy:m})},W=function(R,E){var g=0,S=0;this[0]=this.node=R;R.raphael=true;this.id=M._oid++;R.raphaelid=this.id;this.matrix=M.matrix();this.realPath=null;this.paper=E;this.attrs=this.attrs||{};this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1};!E.bottom&&(E.bottom=this);this.prev=E.top;E.top&&(E.top.next=this);E.top=this;this.next=null},N=M.el;W.prototype=N;N.constructor=W;M._engine.path=function(E,g){var R=J("path");g.canvas&&g.canvas.appendChild(R);var S=new W(R,g);S.type="path";Z(S,{fill:"none",stroke:"#000",path:E});return S};N.rotate=function(R,E,g){if(this.removed){return this}R=e(R).split(H);if(R.length-1){E=O(R[1]);g=O(R[2])}R=O(R[0]);(g==null)&&(E=g);if(E==null||g==null){var S=this.getBBox(1);E=S.x+S.width/2;g=S.y+S.height/2}this.transform(this._.transform.concat([["r",R,E,g]]));return this};N.scale=function(h,S,E,g){if(this.removed){return this}h=e(h).split(H);if(h.length-1){S=O(h[1]);E=O(h[2]);g=O(h[3])}h=O(h[0]);(S==null)&&(S=h);(g==null)&&(E=g);if(E==null||g==null){var R=this.getBBox(1)}E=E==null?R.x+R.width/2:E;g=g==null?R.y+R.height/2:g;this.transform(this._.transform.concat([["s",h,S,E,g]]));return this};N.translate=function(R,E){if(this.removed){return this}R=e(R).split(H);if(R.length-1){E=O(R[1])}R=O(R[0])||0;E=+E||0;this.transform(this._.transform.concat([["t",R,E]]));return this};N.transform=function(R){var S=this._;if(R==null){return S.transform}M._extractTransform(this,R);this.clip&&J(this.clip,{transform:this.matrix.invert()});this.pattern&&B(this);this.node&&J(this.node,{transform:this.matrix});if(S.sx!=1||S.sy!=1){var E=this.attrs[D]("stroke-width")?this.attrs["stroke-width"]:1;this.attr({"stroke-width":E})}return this};N.hide=function(){!this.removed&&this.paper.safari(this.node.style.display="none");return this};N.show=function(){!this.removed&&this.paper.safari(this.node.style.display="");return this};N.remove=function(){if(this.removed||!this.node.parentNode){return }var R=this.paper;R.__set__&&R.__set__.exclude(this);c.unbind("raphael.*.*."+this.id);if(this.gradient){R.defs.removeChild(this.gradient)}M._tear(this,R);if(this.node.parentNode.tagName.toLowerCase()=="a"){this.node.parentNode.parentNode.removeChild(this.node.parentNode)}else{this.node.parentNode.removeChild(this.node)}for(var E in this){this[E]=typeof this[E]=="function"?M._removedFactory(E):null}this.removed=true};N._getBBox=function(){if(this.node.style.display=="none"){this.show();var E=true}var S={};try{S=this.node.getBBox()}catch(R){}finally{S=S||{}}E&&this.hide();return S};N.attr=function(E,n){if(this.removed){return this}if(E==null){var k={};for(var m in this.attrs){if(this.attrs[D](m)){k[m]=this.attrs[m]}}k.gradient&&k.fill=="none"&&(k.fill=k.gradient)&&delete k.gradient;k.transform=this._.transform;return k}if(n==null&&M.is(E,"string")){if(E=="fill"&&this.attrs.fill=="none"&&this.attrs.gradient){return this.attrs.gradient}if(E=="transform"){return this._.transform}var l=E.split(H),g={};for(var h=0,p=l.length;h<p;h++){E=l[h];if(E in this.attrs){g[E]=this.attrs[E]}else{if(M.is(this.paper.customAttributes[E],"function")){g[E]=this.paper.customAttributes[E].def}else{g[E]=M._availableAttrs[E]}}}return p-1?g:g[l[0]]}if(n==null&&M.is(E,"array")){g={};for(h=0,p=E.length;h<p;h++){g[E[h]]=this.attr(E[h])}return g}if(n!=null){var R={};R[E]=n}else{if(E!=null&&M.is(E,"object")){R=E}}for(var o in R){c("raphael.attr."+o+"."+this.id,this,R[o])}for(o in this.paper.customAttributes){if(this.paper.customAttributes[D](o)&&R[D](o)&&M.is(this.paper.customAttributes[o],"function")){var j=this.paper.customAttributes[o].apply(this,[].concat(R[o]));this.attrs[o]=R[o];for(var S in j){if(j[D](S)){R[S]=j[S]}}}}Z(this,R);return this};N.toFront=function(){if(this.removed){return this}if(this.node.parentNode.tagName.toLowerCase()=="a"){this.node.parentNode.parentNode.appendChild(this.node.parentNode)}else{this.node.parentNode.appendChild(this.node)}var E=this.paper;E.top!=this&&M._tofront(this,E);return this};N.toBack=function(){if(this.removed){return this}var R=this.node.parentNode;if(R.tagName.toLowerCase()=="a"){R.parentNode.insertBefore(this.node.parentNode,this.node.parentNode.parentNode.firstChild)}else{if(R.firstChild!=this.node){R.insertBefore(this.node,this.node.parentNode.firstChild)}}M._toback(this,this.paper);var E=this.paper;return this};N.insertAfter=function(E){if(this.removed){return this}var R=E.node||E[E.length-1].node;if(R.nextSibling){R.parentNode.insertBefore(this.node,R.nextSibling)}else{R.parentNode.appendChild(this.node)}M._insertafter(this,E,this.paper);return this};N.insertBefore=function(E){if(this.removed){return this}var R=E.node||E[0].node;R.parentNode.insertBefore(this.node,R);M._insertbefore(this,E,this.paper);return this};N.blur=function(R){var E=this;if(+R!==0){var S=J("filter"),g=J("feGaussianBlur");E.attrs.blur=R;S.id=M.createUUID();J(g,{stdDeviation:+R||1.5});S.appendChild(g);E.paper.defs.appendChild(S);E._blur=S;J(E.node,{filter:"url(#"+S.id+")"})}else{if(E._blur){E._blur.parentNode.removeChild(E._blur);delete E._blur;delete E.attrs.blur}E.node.removeAttribute("filter")}};M._engine.circle=function(R,E,i,h){var g=J("circle");R.canvas&&R.canvas.appendChild(g);var S=new W(g,R);S.attrs={cx:E,cy:i,r:h,fill:"none",stroke:"#000"};S.type="circle";J(g,S.attrs);return S};M._engine.rect=function(S,E,l,R,j,k){var i=J("rect");S.canvas&&S.canvas.appendChild(i);var g=new W(i,S);g.attrs={x:E,y:l,width:R,height:j,r:k||0,rx:k||0,ry:k||0,fill:"none",stroke:"#000"};g.type="rect";J(i,g.attrs);return g};M._engine.ellipse=function(R,E,j,i,h){var g=J("ellipse");R.canvas&&R.canvas.appendChild(g);var S=new W(g,R);S.attrs={cx:E,cy:j,rx:i,ry:h,fill:"none",stroke:"#000"};S.type="ellipse";J(g,S.attrs);return S};M._engine.image=function(S,k,E,l,R,j){var i=J("image");J(i,{x:E,y:l,width:R,height:j,preserveAspectRatio:"none"});i.setAttributeNS(P,"href",k);S.canvas&&S.canvas.appendChild(i);var g=new W(i,S);g.attrs={x:E,y:l,width:R,height:j,src:k};g.type="image";return g};M._engine.text=function(R,E,i,h){var g=J("text");R.canvas&&R.canvas.appendChild(g);var S=new W(g,R);S.attrs={x:E,y:i,"text-anchor":"middle",text:h,font:M._availableAttrs.font,stroke:"none",fill:"#000"};S.type="text";Z(S,S.attrs);return S};M._engine.setSize=function(R,E){this.width=R||this.width;this.height=E||this.height;this.canvas.setAttribute("width",this.width);this.canvas.setAttribute("height",this.height);if(this._viewBox){this.setViewBox.apply(this,this._viewBox)}return this};M._engine.create=function(){var g=M._getContainer.apply(0,arguments),R=g&&g.container,k=g.x,j=g.y,S=g.width,l=g.height;if(!R){throw new Error("SVG container not found.")}var E=J("svg"),i="overflow:hidden;",h;k=k||0;j=j||0;S=S||512;l=l||342;J(E,{height:l,version:1.1,width:S,xmlns:"http://www.w3.org/2000/svg"});if(R==1){E.style.cssText=i+"position:absolute;left:"+k+"px;top:"+j+"px";M._g.doc.body.appendChild(E);h=1}else{E.style.cssText=i+"position:relative";if(R.firstChild){R.insertBefore(E,R.firstChild)}else{R.appendChild(E)}}R=new M._Paper;R.width=S;R.height=l;R.canvas=E;R.clear();R._left=R._top=0;h&&(R.renderfix=function(){});R.renderfix();return R};M._engine.setViewBox=function(j,g,l,E,R){c("raphael.setViewBox",this,this._viewBox,[j,g,l,E,R]);var n=f(l/this.width,E/this.height),i=this.top,m=R?"meet":"xMinYMin",S,k;if(j==null){if(this._vbSize){n=1}delete this._vbSize;S="0 0 "+this.width+K+this.height}else{this._vbSize=n;S=j+K+g+K+l+K+E}J(this.canvas,{viewBox:S,preserveAspectRatio:m});while(n&&i){k="stroke-width" in i.attrs?i.attrs["stroke-width"]:1;i.attr({"stroke-width":k});i._.dirty=1;i._.dirtyT=1;i=i.prev}this._viewBox=[j,g,l,E,!!R];return this};M.prototype.renderfix=function(){var i=this.canvas,E=i.style,h;try{h=i.getScreenCTM()||i.createSVGMatrix()}catch(g){h=i.createSVGMatrix()}var S=-h.e%1,R=-h.f%1;if(S||R){if(S){this._left=(this._left+S)%1;E.left=this._left+"px"}if(R){this._top=(this._top+R)%1;E.top=this._top+"px"}}};M.prototype.clear=function(){M.eve("raphael.clear",this);var E=this.canvas;while(E.firstChild){E.removeChild(E.firstChild)}this.bottom=this.top=null;(this.desc=J("desc")).appendChild(M._g.doc.createTextNode("Created with Rapha\xebl "+M.version));E.appendChild(this.desc);E.appendChild(this.defs=J("defs"))};M.prototype.remove=function(){c("raphael.remove",this);this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var E in this){this[E]=typeof this[E]=="function"?M._removedFactory(E):null}};var a=M.st;for(var F in N){if(N[D](F)&&!a[D](F)){a[F]=(function(E){return function(){var R=arguments;return this.forEach(function(S){S[E].apply(S,R)})}})(F)}}}(window.Raphael);window.Raphael&&window.Raphael.vml&&function(M){var F="hasOwnProperty",h=String,O=parseFloat,I=Math,e=I.round,k=I.max,f=I.min,V=I.abs,Y="fill",J=/[, ]+/,d=M.eve,Z=" progid:DXImageTransform.Microsoft",L=" ",T="",g={M:"m",L:"l",C:"c",Z:"x",m:"t",l:"r",c:"v",z:"x"},K=/([clmz]),?([^clmz]*)/gi,W=/ progid:\S+Blur\([^\)]+\)/g,j=/-?[^,\s-]+/g,D="position:absolute;left:0;top:0;width:1px;height:1px",B=21600,c={path:1,rect:1,image:1},U={circle:1,ellipse:1},G=function(u){var q=/[ahqstv]/ig,S=M._pathToAbsolute;h(u).match(q)&&(S=M._path2curve);q=/[clmz]/g;if(S==M._pathToAbsolute&&!h(u).match(q)){var o=h(u).replace(K,function(w,y,r){var x=[],p=y.toLowerCase()=="m",v=g[y];r.replace(j,function(z){if(p&&x.length==2){v+=x+g[y=="m"?"l":"L"];x=[]}x.push(e(z*B))});return v+x});return o}var s=S(u),R,E;o=[];for(var m=0,t=s.length;m<t;m++){R=s[m];E=s[m][0].toLowerCase();E=="z"&&(E="x");for(var l=1,n=R.length;l<n;l++){E+=e(R[l]*B)+(l!=n-1?",":T)}o.push(E)}return o.join(L)},P=function(l,S,R){var E=M.matrix();E.rotate(-l,0.5,0.5);return{dx:E.x(S,R),dy:E.y(S,R)}},Q=function(v,u,t,n,l,q){var AE=v._,x=v.matrix,E=AE.fillpos,w=v.node,r=w.style,S=1,R="",AA,AC=B/u,AB=B/t;r.visibility="hidden";if(!u||!t){return }w.coordsize=V(AC)+L+V(AB);r.rotation=q*(u*t<0?-1:1);if(q){var AD=P(q,n,l);n=AD.dx;l=AD.dy}u<0&&(R+="x");t<0&&(R+=" y")&&(S=-1);r.flip=R;w.coordorigin=(n*-AC)+L+(l*-AB);if(E||AE.fillsize){var z=w.getElementsByTagName(Y);z=z&&z[0];w.removeChild(z);if(E){AD=P(q,x.x(E[0],E[1]),x.y(E[0],E[1]));z.position=AD.dx*S+L+AD.dy*S}if(AE.fillsize){z.size=AE.fillsize[0]*V(u)+L+AE.fillsize[1]*V(t)}w.appendChild(z)}r.visibility="visible"};M.toString=function(){return"Your browser doesn\u2019t support SVG. Falling down to VML.\nYou are running Rapha\xebl "+this.version};var C=function(E,p,R){var r=h(p).toLowerCase().split("-"),m=R?"end":"start",S=r.length,n="classic",q="medium",l="medium";while(S--){switch(r[S]){case"block":case"classic":case"oval":case"diamond":case"open":case"none":n=r[S];break;case"wide":case"narrow":l=r[S];break;case"long":case"short":q=r[S];break}}var s=E.node.getElementsByTagName("stroke")[0];s[m+"arrow"]=n;s[m+"arrowlength"]=q;s[m+"arrowwidth"]=l},a=function(AC,AM){AC.attrs=AC.attrs||{};var AH=AC.node,AQ=AC.attrs,y=AH.style,u,AK=c[AC.type]&&(AM.x!=AQ.x||AM.y!=AQ.y||AM.width!=AQ.width||AM.height!=AQ.height||AM.cx!=AQ.cx||AM.cy!=AQ.cy||AM.rx!=AQ.rx||AM.ry!=AQ.ry||AM.r!=AQ.r),AB=U[AC.type]&&(AQ.cx!=AM.cx||AQ.cy!=AM.cy||AQ.r!=AM.r||AQ.rx!=AM.rx||AQ.ry!=AM.ry),AT=AC;for(var z in AM){if(AM[F](z)){AQ[z]=AM[z]}}if(AK){AQ.path=M._getPath[AC.type](AC);AC._.dirty=1}AM.href&&(AH.href=AM.href);AM.title&&(AH.title=AM.title);AM.target&&(AH.target=AM.target);AM.cursor&&(y.cursor=AM.cursor);"blur" in AM&&AC.blur(AM.blur);if(AM.path&&AC.type=="path"||AK){AH.path=G(~h(AQ.path).toLowerCase().indexOf("r")?M._pathToAbsolute(AQ.path):AQ.path);if(AC.type=="image"){AC._.fillpos=[AQ.x,AQ.y];AC._.fillsize=[AQ.width,AQ.height];Q(AC,1,1,0,0,0)}}"transform" in AM&&AC.transform(AM.transform);if(AB){var n=+AQ.cx,S=+AQ.cy,t=+AQ.rx||+AQ.r||0,r=+AQ.ry||+AQ.r||0;AH.path=M.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x",e((n-t)*B),e((S-r)*B),e((n+t)*B),e((S+r)*B),e(n*B))}if("clip-rect" in AM){var R=h(AM["clip-rect"]).split(J);if(R.length==4){R[2]=+R[2]+(+R[0]);R[3]=+R[3]+(+R[1]);var AA=AH.clipRect||M._g.doc.createElement("div"),AS=AA.style;AS.clip=M.format("rect({1}px {2}px {3}px {0}px)",R);if(!AH.clipRect){AS.position="absolute";AS.top=0;AS.left=0;AS.width=AC.paper.width+"px";AS.height=AC.paper.height+"px";AH.parentNode.insertBefore(AA,AH);AA.appendChild(AH);AH.clipRect=AA}}if(!AM["clip-rect"]){AH.clipRect&&(AH.clipRect.style.clip="auto")}}if(AC.textpath){var AO=AC.textpath.style;AM.font&&(AO.font=AM.font);AM["font-family"]&&(AO.fontFamily='"'+AM["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g,T)+'"');AM["font-size"]&&(AO.fontSize=AM["font-size"]);AM["font-weight"]&&(AO.fontWeight=AM["font-weight"]);AM["font-style"]&&(AO.fontStyle=AM["font-style"])}if("arrow-start" in AM){C(AT,AM["arrow-start"])}if("arrow-end" in AM){C(AT,AM["arrow-end"],1)}if(AM.opacity!=null||AM["stroke-width"]!=null||AM.fill!=null||AM.src!=null||AM.stroke!=null||AM["stroke-width"]!=null||AM["stroke-opacity"]!=null||AM["fill-opacity"]!=null||AM["stroke-dasharray"]!=null||AM["stroke-miterlimit"]!=null||AM["stroke-linejoin"]!=null||AM["stroke-linecap"]!=null){var AI=AH.getElementsByTagName(Y),AP=false;AI=AI&&AI[0];!AI&&(AP=AI=i(Y));if(AC.type=="image"&&AM.src){AI.src=AM.src}AM.fill&&(AI.on=true);if(AI.on==null||AM.fill=="none"||AM.fill===null){AI.on=false}if(AI.on&&AM.fill){var q=h(AM.fill).match(M._ISURL);if(q){AI.parentNode==AH&&AH.removeChild(AI);AI.rotate=true;AI.src=q[1];AI.type="tile";var E=AC.getBBox(1);AI.position=E.x+L+E.y;AC._.fillpos=[E.x,E.y];M._preload(q[1],function(){AC._.fillsize=[this.offsetWidth,this.offsetHeight]})}else{AI.color=M.getRGB(AM.fill).hex;AI.src=T;AI.type="solid";if(M.getRGB(AM.fill).error&&(AT.type in {circle:1,ellipse:1}||h(AM.fill).charAt()!="r")&&A(AT,AM.fill,AI)){AQ.fill="none";AQ.gradient=AM.fill;AI.rotate=false}}}if("fill-opacity" in AM||"opacity" in AM){var p=((+AQ["fill-opacity"]+1||2)-1)*((+AQ.opacity+1||2)-1)*((+M.getRGB(AM.fill).o+1||2)-1);p=f(k(p,0),1);AI.opacity=p;if(AI.src){AI.color="none"}}AH.appendChild(AI);var v=(AH.getElementsByTagName("stroke")&&AH.getElementsByTagName("stroke")[0]),AR=false;!v&&(AR=v=i("stroke"));if((AM.stroke&&AM.stroke!="none")||AM["stroke-width"]||AM["stroke-opacity"]!=null||AM["stroke-dasharray"]||AM["stroke-miterlimit"]||AM["stroke-linejoin"]||AM["stroke-linecap"]){v.on=true}(AM.stroke=="none"||AM.stroke===null||v.on==null||AM.stroke==0||AM["stroke-width"]==0)&&(v.on=false);var AG=M.getRGB(AM.stroke);v.on&&AM.stroke&&(v.color=AG.hex);p=((+AQ["stroke-opacity"]+1||2)-1)*((+AQ.opacity+1||2)-1)*((+AG.o+1||2)-1);var AD=(O(AM["stroke-width"])||1)*0.75;p=f(k(p,0),1);AM["stroke-width"]==null&&(AD=AQ["stroke-width"]);AM["stroke-width"]&&(v.weight=AD);AD&&AD<1&&(p*=AD)&&(v.weight=1);v.opacity=p;AM["stroke-linejoin"]&&(v.joinstyle=AM["stroke-linejoin"]||"miter");v.miterlimit=AM["stroke-miterlimit"]||8;AM["stroke-linecap"]&&(v.endcap=AM["stroke-linecap"]=="butt"?"flat":AM["stroke-linecap"]=="square"?"square":"round");if(AM["stroke-dasharray"]){var AF={"-":"shortdash",".":"shortdot","-.":"shortdashdot","-..":"shortdashdotdot",". ":"dot","- ":"dash","--":"longdash","- .":"dashdot","--.":"longdashdot","--..":"longdashdotdot"};v.dashstyle=AF[F](AM["stroke-dasharray"])?AF[AM["stroke-dasharray"]]:T}AR&&AH.appendChild(v)}if(AT.type=="text"){AT.paper.canvas.style.display=T;var AJ=AT.paper.span,AE=100,l=AQ.font&&AQ.font.match(/\d+(?:\.\d*)?(?=px)/);y=AJ.style;AQ.font&&(y.font=AQ.font);AQ["font-family"]&&(y.fontFamily=AQ["font-family"]);AQ["font-weight"]&&(y.fontWeight=AQ["font-weight"]);AQ["font-style"]&&(y.fontStyle=AQ["font-style"]);l=O(AQ["font-size"]||l&&l[0])||10;y.fontSize=l*AE+"px";AT.textpath.string&&(AJ.innerHTML=h(AT.textpath.string).replace(/</g,"&#60;").replace(/&/g,"&#38;").replace(/\n/g,"<br>"));var x=AJ.getBoundingClientRect();AT.W=AQ.w=(x.right-x.left)/AE;AT.H=AQ.h=(x.bottom-x.top)/AE;AT.X=AQ.x;AT.Y=AQ.y+AT.H/2;("x" in AM||"y" in AM)&&(AT.path.v=M.format("m{0},{1}l{2},{1}",e(AQ.x*B),e(AQ.y*B),e(AQ.x*B)+1));var w=["x","y","text","font","font-family","font-weight","font-style","font-size"];for(var AL=0,AN=w.length;AL<AN;AL++){if(w[AL] in AM){AT._.dirty=1;break}}switch(AQ["text-anchor"]){case"start":AT.textpath.style["v-text-align"]="left";AT.bbx=AT.W/2;break;case"end":AT.textpath.style["v-text-align"]="right";AT.bbx=-AT.W/2;break;default:AT.textpath.style["v-text-align"]="center";AT.bbx=0;break}AT.textpath.style["v-text-kern"]=true}},A=function(E,s,v){E.attrs=E.attrs||{};var t=E.attrs,l=Math.pow,m,n,q="linear",r=".5 .5";E.attrs.gradient=s;s=h(s).replace(M._radial_gradient,function(x,y,o){q="radial";if(y&&o){y=O(y);o=O(o);l(y-0.5,2)+l(o-0.5,2)>0.25&&(o=I.sqrt(0.25-l(y-0.5,2))*((o>0.5)*2-1)+0.5);r=y+L+o}return T});s=s.split(/\s*\-\s*/);if(q=="linear"){var R=s.shift();R=-O(R);if(isNaN(R)){return null}}var p=M._parseDots(s);if(!p){return null}E=E.shape||E.node;if(p.length){E.removeChild(v);v.on=true;v.method="none";v.color=p[0].color;v.color2=p[p.length-1].color;var w=[];for(var S=0,u=p.length;S<u;S++){p[S].offset&&w.push(p[S].offset+L+p[S].color)}v.colors=w.length?w.join():"0% "+v.color;if(q=="radial"){v.type="gradientTitle";v.focus="100%";v.focussize="0 0";v.focusposition=r;v.angle=0}else{v.type="gradient";v.angle=(270-R)%360}E.appendChild(v)}return 1},X=function(R,E){this[0]=this.node=R;R.raphael=true;this.id=M._oid++;R.raphaelid=this.id;this.X=0;this.Y=0;this.attrs={};this.paper=E;this.matrix=M.matrix();this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1};!E.bottom&&(E.bottom=this);this.prev=E.top;E.top&&(E.top.next=this);E.top=this;this.next=null};var N=M.el;X.prototype=N;N.constructor=X;N.transform=function(m){if(m==null){return this._.transform}var p=this.paper._viewBoxShift,n=p?"s"+[p.scale,p.scale]+"-1-1t"+[p.dx,p.dy]:T,s;if(p){s=m=h(m).replace(/\.{3}|\u2026/g,this._.transform||T)}M._extractTransform(this,n+m);var t=this.matrix.clone(),v=this.skew,S=this.node,r,l=~h(this.attrs.fill).indexOf("-"),E=!h(this.attrs.fill).indexOf("url(");t.translate(-0.5,-0.5);if(E||l||this.type=="image"){v.matrix="1 0 0 1";v.offset="0 0";r=t.split();if((l&&r.noRotation)||!r.isSimple){S.style.filter=t.toFilter();var q=this.getBBox(),R=this.getBBox(1),w=q.x-R.x,u=q.y-R.y;S.coordorigin=(w*-B)+L+(u*-B);Q(this,1,1,w,u,0)}else{S.style.filter=T;Q(this,r.scalex,r.scaley,r.dx,r.dy,r.rotate)}}else{S.style.filter=T;v.matrix=h(t);v.offset=t.offset()}s&&(this._.transform=s);return this};N.rotate=function(R,E,l){if(this.removed){return this}if(R==null){return }R=h(R).split(J);if(R.length-1){E=O(R[1]);l=O(R[2])}R=O(R[0]);(l==null)&&(E=l);if(E==null||l==null){var S=this.getBBox(1);E=S.x+S.width/2;l=S.y+S.height/2}this._.dirtyT=1;this.transform(this._.transform.concat([["r",R,E,l]]));return this};N.translate=function(R,E){if(this.removed){return this}R=h(R).split(J);if(R.length-1){E=O(R[1])}R=O(R[0])||0;E=+E||0;if(this._.bbox){this._.bbox.x+=R;this._.bbox.y+=E}this.transform(this._.transform.concat([["t",R,E]]));return this};N.scale=function(m,S,E,l){if(this.removed){return this}m=h(m).split(J);if(m.length-1){S=O(m[1]);E=O(m[2]);l=O(m[3]);isNaN(E)&&(E=null);isNaN(l)&&(l=null)}m=O(m[0]);(S==null)&&(S=m);(l==null)&&(E=l);if(E==null||l==null){var R=this.getBBox(1)}E=E==null?R.x+R.width/2:E;l=l==null?R.y+R.height/2:l;this.transform(this._.transform.concat([["s",m,S,E,l]]));this._.dirtyT=1;return this};N.hide=function(){!this.removed&&(this.node.style.display="none");return this};N.show=function(){!this.removed&&(this.node.style.display=T);return this};N._getBBox=function(){if(this.removed){return{}}return{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}};N.remove=function(){if(this.removed||!this.node.parentNode){return }this.paper.__set__&&this.paper.__set__.exclude(this);M.eve.unbind("raphael.*.*."+this.id);M._tear(this,this.paper);this.node.parentNode.removeChild(this.node);this.shape&&this.shape.parentNode.removeChild(this.shape);for(var E in this){this[E]=typeof this[E]=="function"?M._removedFactory(E):null}this.removed=true};N.attr=function(E,r){if(this.removed){return this}if(E==null){var o={};for(var q in this.attrs){if(this.attrs[F](q)){o[q]=this.attrs[q]}}o.gradient&&o.fill=="none"&&(o.fill=o.gradient)&&delete o.gradient;o.transform=this._.transform;return o}if(r==null&&M.is(E,"string")){if(E==Y&&this.attrs.fill=="none"&&this.attrs.gradient){return this.attrs.gradient}var p=E.split(J),l={};for(var m=0,t=p.length;m<t;m++){E=p[m];if(E in this.attrs){l[E]=this.attrs[E]}else{if(M.is(this.paper.customAttributes[E],"function")){l[E]=this.paper.customAttributes[E].def}else{l[E]=M._availableAttrs[E]}}}return t-1?l:l[p[0]]}if(this.attrs&&r==null&&M.is(E,"array")){l={};for(m=0,t=E.length;m<t;m++){l[E[m]]=this.attr(E[m])}return l}var R;if(r!=null){R={};R[E]=r}r==null&&M.is(E,"object")&&(R=E);for(var s in R){d("raphael.attr."+s+"."+this.id,this,R[s])}if(R){for(s in this.paper.customAttributes){if(this.paper.customAttributes[F](s)&&R[F](s)&&M.is(this.paper.customAttributes[s],"function")){var n=this.paper.customAttributes[s].apply(this,[].concat(R[s]));this.attrs[s]=R[s];for(var S in n){if(n[F](S)){R[S]=n[S]}}}}if(R.text&&this.type=="text"){this.textpath.string=R.text}a(this,R)}return this};N.toFront=function(){!this.removed&&this.node.parentNode.appendChild(this.node);this.paper&&this.paper.top!=this&&M._tofront(this,this.paper);return this};N.toBack=function(){if(this.removed){return this}if(this.node.parentNode.firstChild!=this.node){this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild);M._toback(this,this.paper)}return this};N.insertAfter=function(E){if(this.removed){return this}if(E.constructor==M.st.constructor){E=E[E.length-1]}if(E.node.nextSibling){E.node.parentNode.insertBefore(this.node,E.node.nextSibling)}else{E.node.parentNode.appendChild(this.node)}M._insertafter(this,E,this.paper);return this};N.insertBefore=function(E){if(this.removed){return this}if(E.constructor==M.st.constructor){E=E[0]}E.node.parentNode.insertBefore(this.node,E.node);M._insertbefore(this,E,this.paper);return this};N.blur=function(E){var R=this.node.runtimeStyle,S=R.filter;S=S.replace(W,T);if(+E!==0){this.attrs.blur=E;R.filter=S+L+Z+".Blur(pixelradius="+(+E||1.5)+")";R.margin=M.format("-{0}px 0 0 -{0}px",e(+E||1.5))}else{R.filter=S;R.margin=0;delete this.attrs.blur}};M._engine.path=function(l,R){var m=i("shape");m.style.cssText=D;m.coordsize=B+L+B;m.coordorigin=R.coordorigin;var n=new X(m,R),E={fill:"none",stroke:"#000"};l&&(E.path=l);n.type="path";n.path=[];n.Path=T;a(n,E);R.canvas.appendChild(m);var S=i("skew");S.on=true;m.appendChild(S);n.skew=S;n.transform(T);return n};M._engine.rect=function(R,o,m,p,S,E){var q=M._rectPath(o,m,p,S,E),l=R.path(q),n=l.attrs;l.X=n.x=o;l.Y=n.y=m;l.W=n.width=p;l.H=n.height=S;n.r=E;n.path=q;l.type="rect";return l};M._engine.ellipse=function(R,E,o,n,m){var l=R.path(),S=l.attrs;l.X=E-n;l.Y=o-m;l.W=n*2;l.H=m*2;l.type="ellipse";a(l,{cx:E,cy:o,rx:n,ry:m});return l};M._engine.circle=function(R,E,n,m){var l=R.path(),S=l.attrs;l.X=E-m;l.Y=n-m;l.W=l.H=m*2;l.type="circle";a(l,{cx:E,cy:n,r:m});return l};M._engine.image=function(R,E,p,n,q,l){var s=M._rectPath(p,n,q,l),m=R.path(s).attr({stroke:"none"}),o=m.attrs,S=m.node,r=S.getElementsByTagName(Y)[0];o.src=E;m.X=o.x=p;m.Y=o.y=n;m.W=o.width=q;m.H=o.height=l;o.path=s;m.type="image";r.parentNode==S&&S.removeChild(r);r.rotate=true;r.src=E;r.type="tile";m._.fillpos=[p,n];m._.fillsize=[q,l];S.appendChild(r);Q(m,1,1,0,0,0);return m};M._engine.text=function(E,q,n,r){var l=i("shape"),t=i("path"),S=i("textpath");q=q||0;n=n||0;r=r||"";t.v=M.format("m{0},{1}l{2},{1}",e(q*B),e(n*B),e(q*B)+1);t.textpathok=true;S.string=h(r);S.on=true;l.style.cssText=D;l.coordsize=B+L+B;l.coordorigin="0 0";var R=new X(l,E),m={fill:"#000",stroke:"none",font:M._availableAttrs.font,text:r};R.shape=l;R.path=t;R.textpath=S;R.type="text";R.attrs.text=h(r);R.attrs.x=q;R.attrs.y=n;R.attrs.w=1;R.attrs.h=1;a(R,m);l.appendChild(S);l.appendChild(t);E.canvas.appendChild(l);var s=i("skew");s.on=true;l.appendChild(s);R.skew=s;R.transform(T);return R};M._engine.setSize=function(S,E){var R=this.canvas.style;this.width=S;this.height=E;S==+S&&(S+="px");E==+E&&(E+="px");R.width=S;R.height=E;R.clip="rect(0 "+S+" "+E+" 0)";if(this._viewBox){M._engine.setViewBox.apply(this,this._viewBox)}return this};M._engine.setViewBox=function(n,m,o,S,l){M.eve("raphael.setViewBox",this,this._viewBox,[n,m,o,S,l]);var E=this.width,q=this.height,r=1/k(o/E,S/q),p,R;if(l){p=q/S;R=E/o;if(o*p<E){n-=(E-o*p)/2/p}if(S*R<q){m-=(q-S*R)/2/R}}this._viewBox=[n,m,o,S,!!l];this._viewBoxShift={dx:-n,dy:-m,scale:r};this.forEach(function(s){s.transform("...")});return this};var i;M._engine.initWin=function(S){var R=S.document;R.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)");try{!R.namespaces.rvml&&R.namespaces.add("rvml","urn:schemas-microsoft-com:vml");i=function(l){return R.createElement("<rvml:"+l+' class="rvml">')}}catch(E){i=function(l){return R.createElement("<"+l+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')}}};M._engine.initWin(M._g.win);M._engine.create=function(){var S=M._getContainer.apply(0,arguments),E=S.container,q=S.height,r,R=S.width,p=S.x,o=S.y;if(!E){throw new Error("VML container not found.")}var m=new M._Paper,n=m.canvas=M._g.doc.createElement("div"),l=n.style;p=p||0;o=o||0;R=R||512;q=q||342;m.width=R;m.height=q;R==+R&&(R+="px");q==+q&&(q+="px");m.coordsize=B*1000+L+B*1000;m.coordorigin="0 0";m.span=M._g.doc.createElement("span");m.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;";n.appendChild(m.span);l.cssText=M.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden",R,q);if(E==1){M._g.doc.body.appendChild(n);l.left=p+"px";l.top=o+"px";l.position="absolute"}else{if(E.firstChild){E.insertBefore(n,E.firstChild)}else{E.appendChild(n)}}m.renderfix=function(){};return m};M.prototype.clear=function(){M.eve("raphael.clear",this);this.canvas.innerHTML=T;this.span=M._g.doc.createElement("span");this.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";this.canvas.appendChild(this.span);this.bottom=this.top=null};M.prototype.remove=function(){M.eve("raphael.remove",this);this.canvas.parentNode.removeChild(this.canvas);for(var E in this){this[E]=typeof this[E]=="function"?M._removedFactory(E):null}return true};var b=M.st;for(var H in N){if(N[F](H)&&!b[F](H)){b[H]=(function(E){return function(){var R=arguments;return this.forEach(function(S){S[E].apply(S,R)})}})(H)}}}(window.Raphael);
/* module-key = 'com.atlassian.auiplugin:ajs-contextpath', location = 'js/context-path.cp.js' */
AJS=AJS||{};(function(){var A="";A=(A.indexOf("%CONTEXT_PATH")===0?false:A);AJS.contextPath=function(){var B=null;var D=[A,window.contextPath,window.Confluence&&Confluence.getContextPath(),window.BAMBOO&&BAMBOO.contextPath,window.FECRU&&FECRU.pageContext];for(var C=0;C<D.length;C++){if(typeof D[C]==="string"){B=D[C];break}}return B}})();
/* module-key = 'com.atlassian.auiplugin:internal-aui-widget', location = 'js/internal/widget.js' */
(function(A){AJS._internal=AJS._internal||{};AJS._internal.widget=function(C,B){var D="_aui-widget-"+C;return function(J,H){var E;var F;if(A.isPlainObject(J)){F=J}else{E=J;F=H}var G=E&&A(E);var I;if(!G||!G.data(D)){I=new B(G,F||{});G=I.$el;G.data(D,I)}else{I=G.data(D)}return I}}}(AJS.$));
/* module-key = 'com.atlassian.auiplugin:aui-navigation', location = 'js/aui-navigation.js' */
(function(C,A){function B(D){this.$el=C(D).closest(".aui-nav");if(this.$el.length>1){return this.$el.map(function(F,G){return new B(G)})[0]}if(this.$el.data("aui-navigation")){return this.$el.data("aui-navigation")}this.$el.data("aui-navigation",this);this.$treeParent=this.$el.parent("li[aria-expanded]");this.$subtreeToggleIcon=this.$treeParent.children(".aui-nav-subtree-toggle").children("span.aui-icon");this.hideMoreItems();this.$el.children("li:has(.aui-nav-selected)").addClass("aui-nav-child-selected");var E=this.$el.children(".aui-nav-selected");E.parents(".aui-nav > [aria-expanded=false]").add(E.filter("[aria-expanded=false]")).each(function(){var F=AJS.navigation(C(this).children(".aui-nav"));F.expand()});this.$el.find("> li[aria-expanded] > .aui-nav-subtree-toggle").on("click",function(F){var G=AJS.navigation(C(this).siblings(".aui-nav"));G.toggle()});return this}B.prototype.isNested=function(){return this.$treeParent.length===1};B.prototype.isCollapsed=function(){return this.$treeParent.attr("aria-expanded")==="false"};B.prototype.expand=function(){this.$treeParent.attr("aria-expanded","true");this.$subtreeToggleIcon.removeClass("aui-iconfont-collapsed").addClass("aui-iconfont-expanded");this.hideMoreItems();return this};B.prototype.collapse=function(){this.$treeParent.attr("aria-expanded","false");this.$subtreeToggleIcon.removeClass("aui-iconfont-expanded").addClass("aui-iconfont-collapsed");return this};B.prototype.toggle=function(){if(this.isCollapsed()){this.expand()}else{this.collapse()}return this};B.prototype.hideMoreItems=function(){if(this.$el.is(".aui-nav:not([aria-expanded=false]) [data-more]")){var G=this.$el.attr("data-more")||"More\u2026";var F=Math.abs(parseInt(this.$el.attr("data-more-limit")))||5;var H=this.$el.children("li");var E=H.length<=F+1;var I=H.filter(".aui-nav-selected").length;var D=H.filter(".aui-nav-more").length;if(E||I||D){return this}C("<li>",{"class":"aui-nav-more","aria-hidden":"true"}).append(C("<a>",{href:"#","class":"aui-nav-item",text:G,click:function(J){J.preventDefault();C(this).parent().remove()}})).insertAfter(H.eq(F-1))}return this};AJS.navigation=AJS._internal.widget("navigation",B);C(function(){A("aui-nav",function(D){AJS.navigation(D)})})})(AJS.$,window.skate||require("skate"));
/* module-key = 'com.atlassian.auiplugin:aui-header', location = 'js/aui-header-responsive.js' */
(function(A){AJS.responsiveheader={};AJS.responsiveheader.setup=function(){var C=A(".aui-header");if(!C.length){return }C.each(function(D,E){B(A(E),D)});function B(J,O){function F(Y){var X;R();if(E>H){M(Y)}else{L.show();X=E-P;for(var W=0;X>=0;W++){X-=U[W].itemWidth}W=W-1;K(W,Y);G(W,I,Y);return W}}function R(){var X=T.length!==0?T.offset().left:A(window).width();var W=Q.offset().left+Q.outerWidth(true)+S;E=X-W}function D(X){var W=A("<li>"+aui.dropdown2.trigger({menu:{id:"aui-responsive-header-dropdown-content-"+X},text:"More",extraAttributes:{href:"#"},id:"aui-responsive-header-dropdown-trigger-"+X})+"</li>");W.append(aui.dropdown2.contents({id:"aui-responsive-header-dropdown-content-"+X,extraClasses:"aui-style-default",content:aui.dropdown2.section({content:"<ul id='aui-responsive-header-dropdown-list-"+X+"'></ul>"})}));if(S===0){W.appendTo(N(".aui-nav"))}else{W.insertBefore(N(".aui-nav > li > .aui-button").first().parent())}L=W;P=L.outerWidth(true)}function G(W,b,d){if(W<0||b<0||W===b){return }var Z=A("#aui-responsive-header-dropdown-trigger-"+d);var c=Z.parent();var a;var X;if(Z.hasClass("active")){Z.trigger("aui-button-invoke")}var Y=N(".aui-nav > li > a:not(.aui-button):not(#aui-responsive-header-dropdown-trigger-"+d+")").length;while(W>b){a=U[b];if(a&&a.itemElement){X=a.itemElement;if(Y===0){X.prependTo(N(".aui-nav"))}else{X.insertBefore(c)}X.children("a").removeClass("aui-dropdown2-sub-trigger active");b=b+1;Y=Y+1}}}function K(W,a){if(W<0){return }var Y=A("#aui-responsive-header-dropdown-list-"+a);for(var X=W;X<U.length;X++){U[X].itemElement.appendTo(Y);var Z=U[X].itemElement.children("a");if(Z.hasClass("aui-dropdown2-trigger")){Z.addClass("aui-dropdown2-sub-trigger")}}}function M(W){L.hide();G(U.length,I,W)}var T=J.find(".aui-header-secondary .aui-nav").first();A(".aui-header").attr("data-aui-responsive","true");var U=[];var E=0;var H=0;var L;var I;var Q=J.find("#logo");var P=0;var N=(function(){var W=J.find(".aui-header-primary").first();return function(X){return W.find(X)}})();var S=0;N(".aui-button").parent().each(function(W,X){S+=A(X).outerWidth(true)});N(".aui-nav > li > a:not(.aui-button)").each(function(X,Y){var W=A(Y).parent();var Z=W.outerWidth(true);U.push({itemElement:W,itemWidth:Z});H+=Z});I=U.length;A(window).resize(function(){I=F(O)});D(O);var V=Q.find("img");if(V.length!==0){V.attr("data-aui-responsive-header-index",O);V.load(function(W){I=F(O)})}I=F(O);N(".aui-nav").css("width","auto")}}})(AJS.$);AJS.$(AJS.responsiveheader.setup);
/* module-key = 'com.atlassian.auiplugin:aui-dropdown2', location = 'js/dropdown2.js' */
(function(G){var E=G(document);var C=null;function H(L){L.preventDefault()}var B=(function(){var N=false;function L(P){if(!N&&P.which===1){N=true;E.bind("mouseup mouseleave",M);G(this).trigger("aui-button-invoke")}}function M(){E.unbind("mouseup mouseleave",M);setTimeout(function(){N=false},0)}function O(){if(!N){G(this).trigger("aui-button-invoke")}}if(typeof document.addEventListener==="undefined"){return{click:O,"click selectstart":H,mousedown:function(R){var S=this;var Q=document.activeElement;function P(T){switch(T.toElement){case null:case S:case document.body:case document.documentElement:T.returnValue=false}}L.call(this,R);if(Q!==null){Q.attachEvent("onbeforedeactivate",P);setTimeout(function(){Q.detachEvent("onbeforedeactivate",P)},0)}}}}return{click:O,"click mousedown":H,mousedown:L}})();var A={"aui-button-invoke":function(h,R){R=G.extend({selectFirst:true},R);var O=J(this);var N=G(this).addClass("active aui-dropdown2-active");var r=N.hasClass("aui-dropdown2-sub-trigger");var m=O.parent()[0];var p=O.next()[0];var d=G(this).attr("data-dropdown2-hide-location");if(d){var Z=document.getElementById(d);if(Z){m=G(Z);p=undefined}else{throw new Error("The specified data-dropdown2-hide-location id doesn't exist")}}var T=R.$menu||N.closest(".aui-dropdown2-trigger-group");if(r){var e=N.closest(".aui-dropdown2");O.addClass(e.attr("class")).addClass("aui-dropdown2-sub-menu")}var S={click:function(t){var s=G(this);if(!P(s)){return }if(!s.hasClass("interactive")&&!s.hasClass("aui-dropdown2-interactive")){l()}if(V(s)){f(s,{selectFirst:false});H(t)}},mousemove:function(){var t=G(this);var s=U(t);if(s){f(t,{selectFirst:false})}}};var n={"click focusin mousedown":function(s){var t=s.target;if(document===t&&s.type==="focusin"){return }if(!D(t,O[0])&&!D(t,N[0])){l()}},keydown:function(u){var t;if(u.shiftKey&&u.keyCode==9){j(-1)}else{switch(u.keyCode){case 13:t=Y();if(V(t)){f(t)}else{K(t[0])}break;case 27:a();break;case 37:t=Y();if(V(t)){var s=J(t);if(s.is(":visible")){O.trigger("aui-dropdown2-step-out");return }}if(r){a()}else{q(-1)}break;case 38:j(-1);break;case 39:t=Y();if(V(t)){f(t)}else{q(1)}break;case 40:j(1);break;case 9:j(1);break;default:return }}H(u)}};function c(s,t){s.each(function(){var u=G(this);u.attr("role",t);if(u.hasClass("checked")||u.hasClass("aui-dropdown2-checked")){u.attr("aria-checked","true");if(t=="radio"){u.closest("ul").attr("role","radiogroup")}}else{u.attr("aria-checked","false")}})}N.attr("aria-controls",N.attr("aria-owns"));O.find(".disabled,.aui-dropdown2-disabled").attr("aria-disabled","true");O.find("li.hidden > a,li.aui-dropdown2-hidden > a").addClass("disabled aui-dropdown2-disabled").attr("aria-disabled","true");c(O.find(".aui-dropdown2-checkbox"),"checkbox");c(O.find(".aui-dropdown2-radio"),"radio");function Q(){var AB=N.offset();var AF=N.outerWidth();O.css({left:0,top:0});var AE=O.outerWidth();var AA=G("body").outerWidth(true);var t=Math.max(parseInt(O.css("min-width"),10),AF);var u=N.data("container")||false;var AD="left";var v;if(!r){O.css("min-width",t+"px")}var w=AB.left,AC=AB.top+N.outerHeight();if(r){var y=3;w=AB.left+e.outerWidth()-y;AC=AB.top}if(AA<w+AE&&AE<=w+AF){w=AB.left+AF-AE;if(r){w=AB.left-AE}AD="right"}if(u){var s=N.closest(u),z=N.offset().left+N.outerWidth(),x=z+AE;if(t>=AE){AE=t}if(x>z){w=z-AE;AD="right"}}O.attr({"data-dropdown2-alignment":AD,"aria-hidden":"false"}).css({display:"block",left:w+"px",top:AC+"px"});O.appendTo(document.body)}Q();if(N.hasClass("toolbar-trigger")){O.addClass("aui-dropdown2-in-toolbar")}if(N.parent().hasClass("aui-buttons")){O.addClass("aui-dropdown2-in-buttons")}if(N.parents().hasClass("aui-header")){O.addClass("aui-dropdown2-in-header")}O.trigger("aui-dropdown2-show",R);if(R.selectFirst){M()}i("on");function a(){L();i("off");setTimeout(function(){O.css("display","none").css("min-width","").insertAfter(N).attr("aria-hidden","true");if(!r){N.removeClass("active aui-dropdown2-active")}Y().removeClass("active aui-dropdown2-active");O.removeClass("aui-dropdown2-in-toolbar");O.removeClass("aui-dropdown2-in-buttons");if(p){O.insertBefore(p)}else{O.appendTo(m)}O.trigger("aui-dropdown2-hide")},0)}function l(){a();if(r){e.trigger("aui-dropdown2-hide-all")}}function g(s){if(r&&s.target===e[0]){a()}}function P(s){return !s.is(".disabled, .aui-dropdown2-disabled, [aria-disabled=true]")}function V(s){return s.hasClass("aui-dropdown2-sub-trigger")}function f(s,t){if(!V(s)){return }t=G.extend({},t,{$menu:T});var u=J(s);if(u.is(":visible")){u.trigger("aui-dropdown2-select-first")}else{s.trigger("aui-button-invoke",t)}}function Y(){return O.find("a.active,a.aui-dropdown2-active")}var W=null;function U(s){if(W&&W[0]===s[0]){return false}W=s;Y().removeClass("active aui-dropdown2-active");if(P(s)){s.addClass("active aui-dropdown2-active")}O.trigger("aui-dropdown2-item-selected");X();return true}function M(){U(O.find("a:not(.disabled):not(.aui-dropdown2-disabled)").first())}function j(t){var s=O.find("> ul > li > a, > .aui-dropdown2-section > ul > li > a").not(".disabled,.aui-dropdown2-disabled");U(k(s,t,true))}function b(s){if(s.length>0){l();s.trigger("aui-button-invoke")}}function q(s){b(k(T.find(".aui-dropdown2-trigger").not(".disabled, .aui-dropdown2-disabled, [aria-disabled=true], .aui-dropdown2-sub-trigger"),s,false))}function k(u,v,t){var s=u.index(u.filter(".active,.aui-dropdown2-active"));s+=(s<0&&v<0)?1:0;s+=v;if(t){s%=u.length}else{if(s<0){s=u.length}}return u.eq(s)}function o(){b(G(this))}function L(){if(C===n){E.unbind(n);C=null}}function X(){if(C===n){return }E.unbind(C);E.bind(n);C=n}function i(t){var u="bind";var s="delegate";if(t!=="on"){u="unbind";s="undelegate"}if(!r){T[s](".aui-dropdown2-trigger:not(.active):not(.aui-dropdown2-active)","mousemove",o);N[u]("aui-button-invoke",a)}else{e[u]("aui-dropdown2-hide aui-dropdown2-item-selected aui-dropdown2-step-out",g)}O[u]("aui-dropdown2-hide-all",l);O[s]("a",S);O[u]("aui-dropdown2-hide",X);O[u]("aui-dropdown2-select-first",M)}},mousedown:function(L){if(L.which===1){G(this).bind(F)}}};var F={mouseleave:function(){E.bind(I)},"mouseup mouseleave":function(){G(this).unbind(F)}};var I={mouseup:function(L){var M=G(L.target).closest(".aui-dropdown2 a, .aui-dropdown2-trigger")[0];if(M){setTimeout(function(){K(M)},0)}},"mouseup mouseleave":function(){G(this).unbind(I)}};function K(L){if(L.click){L.click()}else{var M=document.createEvent("MouseEvents");M.initMouseEvent("click",true,true,window,0,0,0,0,0,false,false,false,false,0,null);L.dispatchEvent(M)}}function D(M,L){return(M===L)||G.contains(L,M)}function J(N){if(!(N instanceof AJS.$)){N=G(N)}var O=N.attr("aria-owns"),L=N.attr("aria-haspopup"),M=document.getElementById(O);if(M){return G(M)}else{if(!O){throw new Error("Dropdown 2 trigger required attribute not set: aria-owns")}if(!L){throw new Error("Dropdown 2 trigger required attribute not set: aria-haspopup")}if(!M){throw new Error("Dropdown 2 trigger aria-owns attr set to nonexistent id: "+O)}throw new Error("Dropdown 2 trigger unknown error. I don't know what you did, but there's smoke everywhere. Consult the documentation.")}}E.delegate(".aui-dropdown2-trigger",B);E.delegate(".aui-dropdown2-trigger:not(.active):not(.aui-dropdown2-active):not([aria-disabled=true]),.aui-dropdown2-sub-trigger:not([aria-disabled=true])",A);E.delegate(".aui-dropdown2-checkbox:not(.disabled):not(.aui-dropdown2-disabled)","click",function(){var L=G(this);if(L.hasClass("checked")||L.hasClass("aui-dropdown2-checked")){L.removeClass("checked aui-dropdown2-checked").attr("aria-checked","false");L.trigger("aui-dropdown2-item-uncheck")}else{L.addClass("checked aui-dropdown2-checked").attr("aria-checked","true");L.trigger("aui-dropdown2-item-check")}});E.delegate(".aui-dropdown2-radio:not(.checked):not(.aui-dropdown2-checked):not(.disabled):not(.aui-dropdown2-disabled)","click",function(){var L=G(this);var M=L.closest("ul").find(".checked,.aui-dropdown2-checked");M.removeClass("checked aui-dropdown2-checked").attr("aria-checked","false").trigger("aui-dropdown2-item-uncheck");L.addClass("checked aui-dropdown2-checked").attr("aria-checked","true").trigger("aui-dropdown2-item-check")});E.delegate(".aui-dropdown2 a.disabled,.aui-dropdown2 a.aui-dropdown2-disabled","click",function(L){H(L)})})(AJS.$);
/* module-key = 'com.atlassian.auiplugin:fancy-file-input', location = 'fancy-file-input/dist/fancy-file-input.js' */
/* jQuery Fancy File Input plugin - v0.2.0 - 2014-04-29
* http://seancurtis.com/experiments/fancy-file-input/
* Copyright (c) 2014 Sean Curtis <scurtis@atlassian.com>; Licensed http://www.apache.org/licenses/LICENSE-2.0 */
(function(A){if(typeof define==="function"&&define.amd){define(["jquery"],A)}else{A(jQuery)}}(function(D){var F=/^.*[\\\/]/;var B=/\{0\}/gi;var E=(function(){var G=3;var I=document.createElement("div");var H=I.getElementsByTagName("i");do{I.innerHTML="<!--[if gt IE "+(++G)+"]><i></i><![endif]-->"}while(H[0]);return G>4?G:document.documentMode}());D.fn.fancyFileInput=function(G){return this.each(function(){var H=new A(this,G);D(this).data("FancyFileInput",H)})};function A(I,H){var G=D(I).data("FancyFileInput");if(G){return G}H=D.extend({},A.defaults,H);this.el=I;this.$el=D(I);this.$label=this.createLabel(H.buttonText);this._addLabelText();this.$clearButton=D("<button>",{text:(this.$label.attr("data-ffi-clearButtonText")||H.clearButtonText),"class":"ffi-clear",type:"button",tabindex:"-1"});this.multipleFileTextPattern=this.$label.attr("data-ffi-multipleFileTextPattern")||H.multipleFileTextPattern;this._eventNamespace=".ffi";this.CLASSES={disabled:"is-disabled",focused:"is-focused",active:"is-active",valid:"is-valid",invalid:"is-invalid"};this[this.isDisabled()?"disable":"enable"]();this.isFocused=false}A.defaults={buttonText:"Browse\u2026",clearButtonText:"Clear",multipleFileTextPattern:"{0} files"};A.prototype._addLabelText=function C(){var G=D('label[for="'+this.el.id+'"]');if(G.length){this.$el.attr("aria-label",G.text())}};A.prototype.createLabel=function(H){var G=this.$el.parent(".ffi[data-ffi-button-text]");if(!G.length){G=this.$el.wrap(D("<label>",{"class":"ffi","data-ffi-button-text":H})).parent()}return G};A.prototype.isDisabled=function(){return this.$el.is(":disabled")};A.prototype.formatMultipleFileText=function(G){return this.multipleFileTextPattern.replace(B,G)};A.prototype.bindEvents=function(){this.$el.on("invalid"+this._eventNamespace,D.proxy(this.checkValidity,this)).on("change"+this._eventNamespace,D.proxy(this.change,this)).on("keydown"+this._eventNamespace,D.proxy(this.keydown,this)).on("mousedown"+this._eventNamespace,D.proxy(this.mousedown,this)).on("mouseup"+this._eventNamespace,D.proxy(this.mouseup,this)).on("focus"+this._eventNamespace,D.proxy(this.focus,this)).on("blur"+this._eventNamespace,D.proxy(this.blur,this));this.$clearButton.on("click"+this._eventNamespace,D.proxy(this.clear,this))};A.prototype.unbindEvents=function(){this.$el.off(this._eventNamespace);this.$clearButton.off(this._eventNamespace)};A.prototype.fireEvent=function(G){this.$el.trigger(G+this._eventNamespace)};A.prototype.enable=function(){this.bindEvents();this.$el.prop("disabled",false);this.$label.removeClass(this.CLASSES.disabled)};A.prototype.disable=function(){this.unbindEvents();this.$el.prop("disabled",true);this.$label.addClass(this.CLASSES.disabled)};A.prototype.clear=function(){this.el.value="";this.cloneAndReplaceField();this.change();return false};A.prototype.cloneAndReplaceField=function(){var G=this.$el.clone();this.$el.replaceWith(G);this.unbindEvents();this.$el=G;this.el=G[0];this.bindEvents()};A.prototype.focus=function(){var G=this;this.$label.addClass(this.CLASSES.focused);if(E&&!this.isFocused){this.isFocused=true;setTimeout(function(){G.$el.blur();G.$el.focus()},0)}};A.prototype.blur=function(){if(!E||!this.isFocused){this.$label.removeClass(this.CLASSES.focused);this.isFocused=false}};A.prototype.mousedown=function(){this.$label.addClass(this.CLASSES.active)};A.prototype.mouseup=function(){this.$label.removeClass(this.CLASSES.active)};A.prototype.keydown=function(L){var K=L.which;var J=8;var H=9;var I=46;if(K===J||K===I){this.clear();L.preventDefault()}if(E&&K===H){var G=this;this.isFocused=false;this.$el.prop("disabled",true);setTimeout(function(){G.$el.prop("disabled",false).blur()},0)}};A.prototype.checkValidity=function(){if(!this.el.required){return }var G=this.$el.is(":invalid");this.$label.toggleClass(this.CLASSES.invalid,G).toggleClass(this.CLASSES.valid,!G)};A.prototype.change=function(){var G;var H="";this.checkValidity();if(this.el.multiple&&this.el.files.length>1){G=this.formatMultipleFileText(this.el.files.length)}else{G=this.el.value}if(G.length){H=G.replace(F,"");this.$clearButton.appendTo(this.$label)}else{this.$clearButton.detach()}this.$el.focus();this.setFieldText(H);this.fireEvent("value-changed")};A.prototype.setFieldText=function(H){var G="data-ffi-value";if(H.length){this.$label.attr(G,H);this.fireEvent("value-added")}else{this.$label.removeAttr(G);this.fireEvent("value-cleared")}};return A}));
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/raphael/raphael.shadow.js' */
if(window.Raphael){Raphael.shadow=function(K,J,L,F,Q){Q=Q||{};var B=jQuery(Q.target),N=jQuery("<div/>",{"class":"aui-shadow"}),A=Q.shadow||Q.color||"#000",P=Q.size*10||0,O=Q.offsetSize||3,M=Q.zindex||0,H=Q.radius||0,G="0.4",D=Q.blur||3,C,I,E;L+=P+2*D;F+=P+2*D;if(Raphael.shadow.BOX_SHADOW_SUPPORT){B.addClass("aui-box-shadow");return N.addClass("hidden")}if(K===0&&J===0&&B.length>0){E=B.offset();K=O-D+E.left;J=O-D+E.top}if(jQuery.browser.msie&&jQuery.browser.version<"9"){A="#f0f0f0";G="0.2"}N.css({position:"absolute",left:K,top:J,width:L,height:F,zIndex:M});if(B.length>0){N.appendTo(document.body);C=Raphael(N[0],L,F,H)}else{C=Raphael(K,J,L,F,H)}C.canvas.style.position="absolute";I=C.rect(D,D,L-2*D,F-2*D).attr({fill:A,stroke:A,blur:""+D,opacity:G});return N};Raphael.shadow.BOX_SHADOW_SUPPORT=(function(){var C=document.documentElement.style;var A=["boxShadow","MozBoxShadow","WebkitBoxShadow","msBoxShadow"];for(var B=0;B<A.length;B++){if(A[B] in C){return true}}return false})()};
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/jquery/jquery.os.js' */
jQuery.os={};var jQueryOSplatform=navigator.platform.toLowerCase();jQuery.os.windows=(jQueryOSplatform.indexOf("win")!=-1);jQuery.os.mac=(jQueryOSplatform.indexOf("mac")!=-1);jQuery.os.linux=(jQueryOSplatform.indexOf("linux")!=-1);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js-vendor/jquery/jquery-ui/jquery.ui.core.js' */
/*
 * jQuery UI 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI
 */
(function(A,D){A.ui=A.ui||{};if(A.ui.version){return }A.extend(A.ui,{version:"1.8.24",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});A.fn.extend({propAttr:A.fn.prop||A.fn.attr,_focus:A.fn.focus,focus:function(E,F){return typeof E==="number"?this.each(function(){var G=this;setTimeout(function(){A(G).focus();if(F){F.call(G)}},E)}):this._focus.apply(this,arguments)},scrollParent:function(){var E;if((A.browser.msie&&(/(static|relative)/).test(this.css("position")))||(/absolute/).test(this.css("position"))){E=this.parents().filter(function(){return(/(relative|absolute|fixed)/).test(A.curCSS(this,"position",1))&&(/(auto|scroll)/).test(A.curCSS(this,"overflow",1)+A.curCSS(this,"overflow-y",1)+A.curCSS(this,"overflow-x",1))}).eq(0)}else{E=this.parents().filter(function(){return(/(auto|scroll)/).test(A.curCSS(this,"overflow",1)+A.curCSS(this,"overflow-y",1)+A.curCSS(this,"overflow-x",1))}).eq(0)}return(/fixed/).test(this.css("position"))||!E.length?A(document):E},zIndex:function(H){if(H!==D){return this.css("zIndex",H)}if(this.length){var F=A(this[0]),E,G;while(F.length&&F[0]!==document){E=F.css("position");if(E==="absolute"||E==="relative"||E==="fixed"){G=parseInt(F.css("zIndex"),10);if(!isNaN(G)&&G!==0){return G}}F=F.parent()}}return 0},disableSelection:function(){return this.bind((A.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(E){E.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});if(!A("<a>").outerWidth(1).jquery){A.each(["Width","Height"],function(G,E){var F=E==="Width"?["Left","Right"]:["Top","Bottom"],H=E.toLowerCase(),J={innerWidth:A.fn.innerWidth,innerHeight:A.fn.innerHeight,outerWidth:A.fn.outerWidth,outerHeight:A.fn.outerHeight};function I(M,L,K,N){A.each(F,function(){L-=parseFloat(A.curCSS(M,"padding"+this,true))||0;if(K){L-=parseFloat(A.curCSS(M,"border"+this+"Width",true))||0}if(N){L-=parseFloat(A.curCSS(M,"margin"+this,true))||0}});return L}A.fn["inner"+E]=function(K){if(K===D){return J["inner"+E].call(this)}return this.each(function(){A(this).css(H,I(this,K)+"px")})};A.fn["outer"+E]=function(K,L){if(typeof K!=="number"){return J["outer"+E].call(this,K)}return this.each(function(){A(this).css(H,I(this,K,true,L)+"px")})}})}function C(G,E){var J=G.nodeName.toLowerCase();if("area"===J){var I=G.parentNode,H=I.name,F;if(!G.href||!H||I.nodeName.toLowerCase()!=="map"){return false}F=A("img[usemap=#"+H+"]")[0];return !!F&&B(F)}return(/input|select|textarea|button|object/.test(J)?!G.disabled:"a"==J?G.href||E:E)&&B(G)}function B(E){return !A(E).parents().andSelf().filter(function(){return A.curCSS(this,"visibility")==="hidden"||A.expr.filters.hidden(this)}).length}A.extend(A.expr[":"],{data:A.expr.createPseudo?A.expr.createPseudo(function(E){return function(F){return !!A.data(F,E)}}):function(G,F,E){return !!A.data(G,E[3])},focusable:function(E){return C(E,!isNaN(A.attr(E,"tabindex")))},tabbable:function(G){var E=A.attr(G,"tabindex"),F=isNaN(E);return(F||E>=0)&&C(G,!F)}});A(function(){var E=document.body,F=E.appendChild(F=document.createElement("div"));F.offsetHeight;A.extend(F.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});A.support.minHeight=F.offsetHeight===100;A.support.selectstart="onselectstart" in F;E.removeChild(F).style.display="none"});if(!A.curCSS){A.curCSS=A.css}A.extend(A.ui,{plugin:{add:function(F,G,I){var H=A.ui[F].prototype;for(var E in I){H.plugins[E]=H.plugins[E]||[];H.plugins[E].push([G,I[E]])}},call:function(E,G,F){var I=E.plugins[G];if(!I||!E.element[0].parentNode){return }for(var H=0;H<I.length;H++){if(E.options[I[H][0]]){I[H][1].apply(E.element,F)}}}},contains:function(F,E){return document.compareDocumentPosition?F.compareDocumentPosition(E)&16:F!==E&&F.contains(E)},hasScroll:function(H,F){if(A(H).css("overflow")==="hidden"){return false}var E=(F&&F==="left")?"scrollLeft":"scrollTop",G=false;if(H[E]>0){return true}H[E]=1;G=(H[E]>0);H[E]=0;return G},isOverAxis:function(F,E,G){return(F>E)&&(F<(E+G))},isOver:function(J,F,I,H,E,G){return A.ui.isOverAxis(J,I,E)&&A.ui.isOverAxis(F,H,G)}})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js-vendor/jquery/jquery-ui/jquery.ui.widget.js' */
/*
 * jQuery UI Widget 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Widget
 */
(function(B,D){if(B.cleanData){var C=B.cleanData;B.cleanData=function(E){for(var F=0,G;(G=E[F])!=null;F++){try{B(G).triggerHandler("remove")}catch(H){}}C(E)}}else{var A=B.fn.remove;B.fn.remove=function(E,F){return this.each(function(){if(!F){if(!E||B.filter(E,[this]).length){B("*",this).add([this]).each(function(){try{B(this).triggerHandler("remove")}catch(G){}})}}return A.call(B(this),E,F)})}}B.widget=function(F,H,E){var G=F.split(".")[0],J;F=F.split(".")[1];J=G+"-"+F;if(!E){E=H;H=B.Widget}B.expr[":"][J]=function(K){return !!B.data(K,F)};B[G]=B[G]||{};B[G][F]=function(K,L){if(arguments.length){this._createWidget(K,L)}};var I=new H();I.options=B.extend(true,{},I.options);B[G][F].prototype=B.extend(true,I,{namespace:G,widgetName:F,widgetEventPrefix:B[G][F].prototype.widgetEventPrefix||F,widgetBaseClass:J},E);B.widget.bridge(F,B[G][F])};B.widget.bridge=function(F,E){B.fn[F]=function(I){var G=typeof I==="string",H=Array.prototype.slice.call(arguments,1),J=this;I=!G&&H.length?B.extend.apply(null,[true,I].concat(H)):I;if(G&&I.charAt(0)==="_"){return J}if(G){this.each(function(){var K=B.data(this,F),L=K&&B.isFunction(K[I])?K[I].apply(K,H):K;if(L!==K&&L!==D){J=L;return false}})}else{this.each(function(){var K=B.data(this,F);if(K){K.option(I||{})._init()}else{B.data(this,F,new E(I,this))}})}return J}};B.Widget=function(E,F){if(arguments.length){this._createWidget(E,F)}};B.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(F,G){B.data(G,this.widgetName,this);this.element=B(G);this.options=B.extend(true,{},this.options,this._getCreateOptions(),F);var E=this;this.element.bind("remove."+this.widgetName,function(){E.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return B.metadata&&B.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled ui-state-disabled")},widget:function(){return this.element},option:function(F,G){var E=F;if(arguments.length===0){return B.extend({},this.options)}if(typeof F==="string"){if(G===D){return this.options[F]}E={};E[F]=G}this._setOptions(E);return this},_setOptions:function(F){var E=this;B.each(F,function(G,H){E._setOption(G,H)});return this},_setOption:function(E,F){this.options[E]=F;if(E==="disabled"){this.widget()[F?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",F)}return this},enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(E,F,G){var J,I,H=this.options[E];G=G||{};F=B.Event(F);F.type=(E===this.widgetEventPrefix?E:this.widgetEventPrefix+E).toLowerCase();F.target=this.element[0];I=F.originalEvent;if(I){for(J in I){if(!(J in F)){F[J]=I[J]}}}this.element.trigger(F,G);return !(B.isFunction(H)&&H.call(this.element[0],F,G)===false||F.isDefaultPrevented())}}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js-vendor/jquery/jquery-ui/jquery.ui.mouse.js' */
/*
 * jQuery UI Mouse 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Mouse
 *
 * Depends:
 *	jquery.ui.widget.js
 */
(function(B,C){var A=false;B(document).mouseup(function(D){A=false});B.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var D=this;this.element.bind("mousedown."+this.widgetName,function(E){return D._mouseDown(E)}).bind("click."+this.widgetName,function(E){if(true===B.data(E.target,D.widgetName+".preventClickEvent")){B.removeData(E.target,D.widgetName+".preventClickEvent");E.stopImmediatePropagation();return false}});this.started=false},_mouseDestroy:function(){this.element.unbind("."+this.widgetName);if(this._mouseMoveDelegate){B(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)}},_mouseDown:function(F){if(A){return }(this._mouseStarted&&this._mouseUp(F));this._mouseDownEvent=F;var E=this,G=(F.which==1),D=(typeof this.options.cancel=="string"&&F.target.nodeName?B(F.target).closest(this.options.cancel).length:false);if(!G||D||!this._mouseCapture(F)){return true}this.mouseDelayMet=!this.options.delay;if(!this.mouseDelayMet){this._mouseDelayTimer=setTimeout(function(){E.mouseDelayMet=true},this.options.delay)}if(this._mouseDistanceMet(F)&&this._mouseDelayMet(F)){this._mouseStarted=(this._mouseStart(F)!==false);if(!this._mouseStarted){F.preventDefault();return true}}if(true===B.data(F.target,this.widgetName+".preventClickEvent")){B.removeData(F.target,this.widgetName+".preventClickEvent")}this._mouseMoveDelegate=function(H){return E._mouseMove(H)};this._mouseUpDelegate=function(H){return E._mouseUp(H)};B(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate);F.preventDefault();A=true;return true},_mouseMove:function(D){if(B.browser.msie&&!(document.documentMode>=9)&&!D.button){return this._mouseUp(D)}if(this._mouseStarted){this._mouseDrag(D);return D.preventDefault()}if(this._mouseDistanceMet(D)&&this._mouseDelayMet(D)){this._mouseStarted=(this._mouseStart(this._mouseDownEvent,D)!==false);(this._mouseStarted?this._mouseDrag(D):this._mouseUp(D))}return !this._mouseStarted},_mouseUp:function(D){B(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate);if(this._mouseStarted){this._mouseStarted=false;if(D.target==this._mouseDownEvent.target){B.data(D.target,this.widgetName+".preventClickEvent",true)}this._mouseStop(D)}return false},_mouseDistanceMet:function(D){return(Math.max(Math.abs(this._mouseDownEvent.pageX-D.pageX),Math.abs(this._mouseDownEvent.pageY-D.pageY))>=this.options.distance)},_mouseDelayMet:function(D){return this.mouseDelayMet},_mouseStart:function(D){},_mouseDrag:function(D){},_mouseStop:function(D){},_mouseCapture:function(D){return true}})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js-vendor/jquery/jquery-ui/jquery.ui.draggable.js' */
/*
 * jQuery UI Draggable 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Draggables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(A,B){A.widget("ui.draggable",A.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:true,appendTo:"parent",axis:false,connectToSortable:false,containment:false,cursor:"auto",cursorAt:false,grid:false,handle:false,helper:"original",iframeFix:false,opacity:false,refreshPositions:false,revert:false,revertDuration:500,scope:"default",scroll:true,scrollSensitivity:20,scrollSpeed:20,snap:false,snapMode:"both",snapTolerance:20,stack:false,zIndex:false},_create:function(){if(this.options.helper=="original"&&!(/^(?:r|a|f)/).test(this.element.css("position"))){this.element[0].style.position="relative"}(this.options.addClasses&&this.element.addClass("ui-draggable"));(this.options.disabled&&this.element.addClass("ui-draggable-disabled"));this._mouseInit()},destroy:function(){if(!this.element.data("draggable")){return }this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");this._mouseDestroy();return this},_mouseCapture:function(C){var D=this.options;if(this.helper||D.disabled||A(C.target).is(".ui-resizable-handle")){return false}this.handle=this._getHandle(C);if(!this.handle){return false}if(D.iframeFix){A(D.iframeFix===true?"iframe":D.iframeFix).each(function(){A('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1000}).css(A(this).offset()).appendTo("body")})}return true},_mouseStart:function(C){var D=this.options;this.helper=this._createHelper(C);this.helper.addClass("ui-draggable-dragging");this._cacheHelperProportions();if(A.ui.ddmanager){A.ui.ddmanager.current=this}this._cacheMargins();this.cssPosition=this.helper.css("position");this.scrollParent=this.helper.scrollParent();this.offset=this.positionAbs=this.element.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};A.extend(this.offset,{click:{left:C.pageX-this.offset.left,top:C.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this.position=this._generatePosition(C);this.originalPageX=C.pageX;this.originalPageY=C.pageY;(D.cursorAt&&this._adjustOffsetFromHelper(D.cursorAt));if(D.containment){this._setContainment()}if(this._trigger("start",C)===false){this._clear();return false}this._cacheHelperProportions();if(A.ui.ddmanager&&!D.dropBehaviour){A.ui.ddmanager.prepareOffsets(this,C)}this._mouseDrag(C,true);if(A.ui.ddmanager){A.ui.ddmanager.dragStart(this,C)}return true},_mouseDrag:function(C,E){this.position=this._generatePosition(C);this.positionAbs=this._convertPositionTo("absolute");if(!E){var D=this._uiHash();if(this._trigger("drag",C,D)===false){this._mouseUp({});return false}this.position=D.position}if(!this.options.axis||this.options.axis!="y"){this.helper[0].style.left=this.position.left+"px"}if(!this.options.axis||this.options.axis!="x"){this.helper[0].style.top=this.position.top+"px"}if(A.ui.ddmanager){A.ui.ddmanager.drag(this,C)}return false},_mouseStop:function(E){var G=false;if(A.ui.ddmanager&&!this.options.dropBehaviour){G=A.ui.ddmanager.drop(this,E)}if(this.dropped){G=this.dropped;this.dropped=false}var D=this.element[0],F=false;while(D&&(D=D.parentNode)){if(D==document){F=true}}if(!F&&this.options.helper==="original"){return false}if((this.options.revert=="invalid"&&!G)||(this.options.revert=="valid"&&G)||this.options.revert===true||(A.isFunction(this.options.revert)&&this.options.revert.call(this.element,G))){var C=this;A(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){if(C._trigger("stop",E)!==false){C._clear()}})}else{if(this._trigger("stop",E)!==false){this._clear()}}return false},_mouseUp:function(C){A("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)});if(A.ui.ddmanager){A.ui.ddmanager.dragStop(this,C)}return A.ui.mouse.prototype._mouseUp.call(this,C)},cancel:function(){if(this.helper.is(".ui-draggable-dragging")){this._mouseUp({})}else{this._clear()}return this},_getHandle:function(C){var D=!this.options.handle||!A(this.options.handle,this.element).length?true:false;A(this.options.handle,this.element).find("*").andSelf().each(function(){if(this==C.target){D=true}});return D},_createHelper:function(D){var E=this.options;var C=A.isFunction(E.helper)?A(E.helper.apply(this.element[0],[D])):(E.helper=="clone"?this.element.clone().removeAttr("id"):this.element);if(!C.parents("body").length){C.appendTo((E.appendTo=="parent"?this.element[0].parentNode:E.appendTo))}if(C[0]!=this.element[0]&&!(/(fixed|absolute)/).test(C.css("position"))){C.css("position","absolute")}return C},_adjustOffsetFromHelper:function(C){if(typeof C=="string"){C=C.split(" ")}if(A.isArray(C)){C={left:+C[0],top:+C[1]||0}}if("left" in C){this.offset.click.left=C.left+this.margins.left}if("right" in C){this.offset.click.left=this.helperProportions.width-C.right+this.margins.left}if("top" in C){this.offset.click.top=C.top+this.margins.top}if("bottom" in C){this.offset.click.top=this.helperProportions.height-C.bottom+this.margins.top}},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var C=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&A.ui.contains(this.scrollParent[0],this.offsetParent[0])){C.left+=this.scrollParent.scrollLeft();C.top+=this.scrollParent.scrollTop()}if((this.offsetParent[0]==document.body)||(this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&A.browser.msie)){C={top:0,left:0}}return{top:C.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:C.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var C=this.element.position();return{top:C.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:C.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else{return{top:0,left:0}}},_cacheMargins:function(){this.margins={left:(parseInt(this.element.css("marginLeft"),10)||0),top:(parseInt(this.element.css("marginTop"),10)||0),right:(parseInt(this.element.css("marginRight"),10)||0),bottom:(parseInt(this.element.css("marginBottom"),10)||0)}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var F=this.options;if(F.containment=="parent"){F.containment=this.helper[0].parentNode}if(F.containment=="document"||F.containment=="window"){this.containment=[F.containment=="document"?0:A(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,F.containment=="document"?0:A(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(F.containment=="document"?0:A(window).scrollLeft())+A(F.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(F.containment=="document"?0:A(window).scrollTop())+(A(F.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]}if(!(/^(document|window|parent)$/).test(F.containment)&&F.containment.constructor!=Array){var G=A(F.containment);var D=G[0];if(!D){return }var E=G.offset();var C=(A(D).css("overflow")!="hidden");this.containment=[(parseInt(A(D).css("borderLeftWidth"),10)||0)+(parseInt(A(D).css("paddingLeft"),10)||0),(parseInt(A(D).css("borderTopWidth"),10)||0)+(parseInt(A(D).css("paddingTop"),10)||0),(C?Math.max(D.scrollWidth,D.offsetWidth):D.offsetWidth)-(parseInt(A(D).css("borderLeftWidth"),10)||0)-(parseInt(A(D).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(C?Math.max(D.scrollHeight,D.offsetHeight):D.offsetHeight)-(parseInt(A(D).css("borderTopWidth"),10)||0)-(parseInt(A(D).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom];this.relative_container=G}else{if(F.containment.constructor==Array){this.containment=F.containment}}},_convertPositionTo:function(F,H){if(!H){H=this.position}var D=F=="absolute"?1:-1;var E=this.options,C=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&A.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,G=(/(html|body)/i).test(C[0].tagName);return{top:(H.top+this.offset.relative.top*D+this.offset.parent.top*D-(A.browser.safari&&A.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():(G?0:C.scrollTop()))*D)),left:(H.left+this.offset.relative.left*D+this.offset.parent.left*D-(A.browser.safari&&A.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():G?0:C.scrollLeft())*D))}},_generatePosition:function(D){var E=this.options,L=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&A.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,I=(/(html|body)/i).test(L[0].tagName);var H=D.pageX;var G=D.pageY;if(this.originalPosition){var C;if(this.containment){if(this.relative_container){var K=this.relative_container.offset();C=[this.containment[0]+K.left,this.containment[1]+K.top,this.containment[2]+K.left,this.containment[3]+K.top]}else{C=this.containment}if(D.pageX-this.offset.click.left<C[0]){H=C[0]+this.offset.click.left}if(D.pageY-this.offset.click.top<C[1]){G=C[1]+this.offset.click.top}if(D.pageX-this.offset.click.left>C[2]){H=C[2]+this.offset.click.left}if(D.pageY-this.offset.click.top>C[3]){G=C[3]+this.offset.click.top}}if(E.grid){var J=E.grid[1]?this.originalPageY+Math.round((G-this.originalPageY)/E.grid[1])*E.grid[1]:this.originalPageY;G=C?(!(J-this.offset.click.top<C[1]||J-this.offset.click.top>C[3])?J:(!(J-this.offset.click.top<C[1])?J-E.grid[1]:J+E.grid[1])):J;var F=E.grid[0]?this.originalPageX+Math.round((H-this.originalPageX)/E.grid[0])*E.grid[0]:this.originalPageX;H=C?(!(F-this.offset.click.left<C[0]||F-this.offset.click.left>C[2])?F:(!(F-this.offset.click.left<C[0])?F-E.grid[0]:F+E.grid[0])):F}}return{top:(G-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(A.browser.safari&&A.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():(I?0:L.scrollTop())))),left:(H-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(A.browser.safari&&A.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():I?0:L.scrollLeft())))}},_clear:function(){this.helper.removeClass("ui-draggable-dragging");if(this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval){this.helper.remove()}this.helper=null;this.cancelHelperRemoval=false},_trigger:function(C,D,E){E=E||this._uiHash();A.ui.plugin.call(this,C,[D,E]);if(C=="drag"){this.positionAbs=this._convertPositionTo("absolute")}return A.Widget.prototype._trigger.call(this,C,D,E)},plugins:{},_uiHash:function(C){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}});A.extend(A.ui.draggable,{version:"1.8.24"});A.ui.plugin.add("draggable","connectToSortable",{start:function(D,F){var E=A(this).data("draggable"),G=E.options,C=A.extend({},F,{item:E.element});E.sortables=[];A(G.connectToSortable).each(function(){var H=A.data(this,"sortable");if(H&&!H.options.disabled){E.sortables.push({instance:H,shouldRevert:H.options.revert});H.refreshPositions();H._trigger("activate",D,C)}})},stop:function(D,F){var E=A(this).data("draggable"),C=A.extend({},F,{item:E.element});A.each(E.sortables,function(){if(this.instance.isOver){this.instance.isOver=0;E.cancelHelperRemoval=true;this.instance.cancelHelperRemoval=false;if(this.shouldRevert){this.instance.options.revert=true}this.instance._mouseStop(D);this.instance.options.helper=this.instance.options._helper;if(E.options.helper=="original"){this.instance.currentItem.css({top:"auto",left:"auto"})}}else{this.instance.cancelHelperRemoval=false;this.instance._trigger("deactivate",D,C)}})},drag:function(D,G){var F=A(this).data("draggable"),C=this;var E=function(J){var O=this.offset.click.top,N=this.offset.click.left;var H=this.positionAbs.top,L=this.positionAbs.left;var K=J.height,M=J.width;var P=J.top,I=J.left;return A.ui.isOver(H+O,L+N,P,I,K,M)};A.each(F.sortables,function(H){this.instance.positionAbs=F.positionAbs;this.instance.helperProportions=F.helperProportions;this.instance.offset.click=F.offset.click;if(this.instance._intersectsWith(this.instance.containerCache)){if(!this.instance.isOver){this.instance.isOver=1;this.instance.currentItem=A(C).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",true);this.instance.options._helper=this.instance.options.helper;this.instance.options.helper=function(){return G.helper[0]};D.target=this.instance.currentItem[0];this.instance._mouseCapture(D,true);this.instance._mouseStart(D,true,true);this.instance.offset.click.top=F.offset.click.top;this.instance.offset.click.left=F.offset.click.left;this.instance.offset.parent.left-=F.offset.parent.left-this.instance.offset.parent.left;this.instance.offset.parent.top-=F.offset.parent.top-this.instance.offset.parent.top;F._trigger("toSortable",D);F.dropped=this.instance.element;F.currentItem=F.element;this.instance.fromOutside=F}if(this.instance.currentItem){this.instance._mouseDrag(D)}}else{if(this.instance.isOver){this.instance.isOver=0;this.instance.cancelHelperRemoval=true;this.instance.options.revert=false;this.instance._trigger("out",D,this.instance._uiHash(this.instance));this.instance._mouseStop(D,true);this.instance.options.helper=this.instance.options._helper;this.instance.currentItem.remove();if(this.instance.placeholder){this.instance.placeholder.remove()}F._trigger("fromSortable",D);F.dropped=false}}})}});A.ui.plugin.add("draggable","cursor",{start:function(D,E){var C=A("body"),F=A(this).data("draggable").options;if(C.css("cursor")){F._cursor=C.css("cursor")}C.css("cursor",F.cursor)},stop:function(C,D){var E=A(this).data("draggable").options;if(E._cursor){A("body").css("cursor",E._cursor)}}});A.ui.plugin.add("draggable","opacity",{start:function(D,E){var C=A(E.helper),F=A(this).data("draggable").options;if(C.css("opacity")){F._opacity=C.css("opacity")}C.css("opacity",F.opacity)},stop:function(C,D){var E=A(this).data("draggable").options;if(E._opacity){A(D.helper).css("opacity",E._opacity)}}});A.ui.plugin.add("draggable","scroll",{start:function(D,E){var C=A(this).data("draggable");if(C.scrollParent[0]!=document&&C.scrollParent[0].tagName!="HTML"){C.overflowOffset=C.scrollParent.offset()}},drag:function(E,F){var D=A(this).data("draggable"),G=D.options,C=false;if(D.scrollParent[0]!=document&&D.scrollParent[0].tagName!="HTML"){if(!G.axis||G.axis!="x"){if((D.overflowOffset.top+D.scrollParent[0].offsetHeight)-E.pageY<G.scrollSensitivity){D.scrollParent[0].scrollTop=C=D.scrollParent[0].scrollTop+G.scrollSpeed}else{if(E.pageY-D.overflowOffset.top<G.scrollSensitivity){D.scrollParent[0].scrollTop=C=D.scrollParent[0].scrollTop-G.scrollSpeed}}}if(!G.axis||G.axis!="y"){if((D.overflowOffset.left+D.scrollParent[0].offsetWidth)-E.pageX<G.scrollSensitivity){D.scrollParent[0].scrollLeft=C=D.scrollParent[0].scrollLeft+G.scrollSpeed}else{if(E.pageX-D.overflowOffset.left<G.scrollSensitivity){D.scrollParent[0].scrollLeft=C=D.scrollParent[0].scrollLeft-G.scrollSpeed}}}}else{if(!G.axis||G.axis!="x"){if(E.pageY-A(document).scrollTop()<G.scrollSensitivity){C=A(document).scrollTop(A(document).scrollTop()-G.scrollSpeed)}else{if(A(window).height()-(E.pageY-A(document).scrollTop())<G.scrollSensitivity){C=A(document).scrollTop(A(document).scrollTop()+G.scrollSpeed)}}}if(!G.axis||G.axis!="y"){if(E.pageX-A(document).scrollLeft()<G.scrollSensitivity){C=A(document).scrollLeft(A(document).scrollLeft()-G.scrollSpeed)}else{if(A(window).width()-(E.pageX-A(document).scrollLeft())<G.scrollSensitivity){C=A(document).scrollLeft(A(document).scrollLeft()+G.scrollSpeed)}}}}if(C!==false&&A.ui.ddmanager&&!G.dropBehaviour){A.ui.ddmanager.prepareOffsets(D,E)}}});A.ui.plugin.add("draggable","snap",{start:function(D,E){var C=A(this).data("draggable"),F=C.options;C.snapElements=[];A(F.snap.constructor!=String?(F.snap.items||":data(draggable)"):F.snap).each(function(){var H=A(this);var G=H.offset();if(this!=C.element[0]){C.snapElements.push({item:this,width:H.outerWidth(),height:H.outerHeight(),top:G.top,left:G.left})}})},drag:function(O,L){var F=A(this).data("draggable"),M=F.options;var S=M.snapTolerance;var R=L.offset.left,Q=R+F.helperProportions.width,E=L.offset.top,D=E+F.helperProportions.height;for(var P=F.snapElements.length-1;P>=0;P--){var N=F.snapElements[P].left,K=N+F.snapElements[P].width,J=F.snapElements[P].top,U=J+F.snapElements[P].height;if(!((N-S<R&&R<K+S&&J-S<E&&E<U+S)||(N-S<R&&R<K+S&&J-S<D&&D<U+S)||(N-S<Q&&Q<K+S&&J-S<E&&E<U+S)||(N-S<Q&&Q<K+S&&J-S<D&&D<U+S))){if(F.snapElements[P].snapping){(F.options.snap.release&&F.options.snap.release.call(F.element,O,A.extend(F._uiHash(),{snapItem:F.snapElements[P].item})))}F.snapElements[P].snapping=false;continue}if(M.snapMode!="inner"){var C=Math.abs(J-D)<=S;var T=Math.abs(U-E)<=S;var H=Math.abs(N-Q)<=S;var I=Math.abs(K-R)<=S;if(C){L.position.top=F._convertPositionTo("relative",{top:J-F.helperProportions.height,left:0}).top-F.margins.top}if(T){L.position.top=F._convertPositionTo("relative",{top:U,left:0}).top-F.margins.top}if(H){L.position.left=F._convertPositionTo("relative",{top:0,left:N-F.helperProportions.width}).left-F.margins.left}if(I){L.position.left=F._convertPositionTo("relative",{top:0,left:K}).left-F.margins.left}}var G=(C||T||H||I);if(M.snapMode!="outer"){var C=Math.abs(J-E)<=S;var T=Math.abs(U-D)<=S;var H=Math.abs(N-R)<=S;var I=Math.abs(K-Q)<=S;if(C){L.position.top=F._convertPositionTo("relative",{top:J,left:0}).top-F.margins.top}if(T){L.position.top=F._convertPositionTo("relative",{top:U-F.helperProportions.height,left:0}).top-F.margins.top}if(H){L.position.left=F._convertPositionTo("relative",{top:0,left:N}).left-F.margins.left}if(I){L.position.left=F._convertPositionTo("relative",{top:0,left:K-F.helperProportions.width}).left-F.margins.left}}if(!F.snapElements[P].snapping&&(C||T||H||I||G)){(F.options.snap.snap&&F.options.snap.snap.call(F.element,O,A.extend(F._uiHash(),{snapItem:F.snapElements[P].item})))}F.snapElements[P].snapping=(C||T||H||I||G)}}});A.ui.plugin.add("draggable","stack",{start:function(D,E){var G=A(this).data("draggable").options;var F=A.makeArray(A(G.stack)).sort(function(I,H){return(parseInt(A(I).css("zIndex"),10)||0)-(parseInt(A(H).css("zIndex"),10)||0)});if(!F.length){return }var C=parseInt(F[0].style.zIndex)||0;A(F).each(function(H){this.style.zIndex=C+H});this[0].style.zIndex=C+F.length}});A.ui.plugin.add("draggable","zIndex",{start:function(D,E){var C=A(E.helper),F=A(this).data("draggable").options;if(C.css("zIndex")){F._zIndex=C.css("zIndex")}C.css("zIndex",F.zIndex)},stop:function(C,D){var E=A(this).data("draggable").options;if(E._zIndex){A(D.helper).css("zIndex",E._zIndex)}}})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js-vendor/jquery/jquery-ui/jquery.ui.sortable.js' */
/*
 * jQuery UI Sortable 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Sortables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(A,B){A.widget("ui.sortable",A.ui.mouse,{widgetEventPrefix:"sort",ready:false,options:{appendTo:"parent",axis:false,connectWith:false,containment:false,cursor:"auto",cursorAt:false,dropOnEmpty:true,forcePlaceholderSize:false,forceHelperSize:false,grid:false,handle:false,helper:"original",items:"> *",opacity:false,placeholder:false,revert:false,scroll:true,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1000},_create:function(){var C=this.options;this.containerCache={};this.element.addClass("ui-sortable");this.refresh();this.floating=this.items.length?C.axis==="x"||(/left|right/).test(this.items[0].item.css("float"))||(/inline|table-cell/).test(this.items[0].item.css("display")):false;this.offset=this.element.offset();this._mouseInit();this.ready=true},destroy:function(){A.Widget.prototype.destroy.call(this);this.element.removeClass("ui-sortable ui-sortable-disabled");this._mouseDestroy();for(var C=this.items.length-1;C>=0;C--){this.items[C].item.removeData(this.widgetName+"-item")}return this},_setOption:function(C,D){if(C==="disabled"){this.options[C]=D;this.widget()[D?"addClass":"removeClass"]("ui-sortable-disabled")}else{A.Widget.prototype._setOption.apply(this,arguments)}},_mouseCapture:function(G,H){var F=this;if(this.reverting){return false}if(this.options.disabled||this.options.type=="static"){return false}this._refreshItems(G);var E=null,D=this,C=A(G.target).parents().each(function(){if(A.data(this,F.widgetName+"-item")==D){E=A(this);return false}});if(A.data(G.target,F.widgetName+"-item")==D){E=A(G.target)}if(!E){return false}if(this.options.handle&&!H){var I=false;A(this.options.handle,E).find("*").andSelf().each(function(){if(this==G.target){I=true}});if(!I){return false}}this.currentItem=E;this._removeCurrentsFromItems();return true},_mouseStart:function(F,G,C){var H=this.options,D=this;this.currentContainer=this;this.refreshPositions();this.helper=this._createHelper(F);this._cacheHelperProportions();this._cacheMargins();this.scrollParent=this.helper.scrollParent();this.offset=this.currentItem.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};A.extend(this.offset,{click:{left:F.pageX-this.offset.left,top:F.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.helper.css("position","absolute");this.cssPosition=this.helper.css("position");this.originalPosition=this._generatePosition(F);this.originalPageX=F.pageX;this.originalPageY=F.pageY;(H.cursorAt&&this._adjustOffsetFromHelper(H.cursorAt));this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]};if(this.helper[0]!=this.currentItem[0]){this.currentItem.hide()}this._createPlaceholder();if(H.containment){this._setContainment()}if(H.cursor){if(A("body").css("cursor")){this._storedCursor=A("body").css("cursor")}A("body").css("cursor",H.cursor)}if(H.opacity){if(this.helper.css("opacity")){this._storedOpacity=this.helper.css("opacity")}this.helper.css("opacity",H.opacity)}if(H.zIndex){if(this.helper.css("zIndex")){this._storedZIndex=this.helper.css("zIndex")}this.helper.css("zIndex",H.zIndex)}if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"){this.overflowOffset=this.scrollParent.offset()}this._trigger("start",F,this._uiHash());if(!this._preserveHelperProportions){this._cacheHelperProportions()}if(!C){for(var E=this.containers.length-1;E>=0;E--){this.containers[E]._trigger("activate",F,D._uiHash(this))}}if(A.ui.ddmanager){A.ui.ddmanager.current=this}if(A.ui.ddmanager&&!H.dropBehaviour){A.ui.ddmanager.prepareOffsets(this,F)}this.dragging=true;this.helper.addClass("ui-sortable-helper");this._mouseDrag(F);return true},_mouseDrag:function(G){this.position=this._generatePosition(G);this.positionAbs=this._convertPositionTo("absolute");if(!this.lastPositionAbs){this.lastPositionAbs=this.positionAbs}if(this.options.scroll){var H=this.options,C=false;if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"){if((this.overflowOffset.top+this.scrollParent[0].offsetHeight)-G.pageY<H.scrollSensitivity){this.scrollParent[0].scrollTop=C=this.scrollParent[0].scrollTop+H.scrollSpeed}else{if(G.pageY-this.overflowOffset.top<H.scrollSensitivity){this.scrollParent[0].scrollTop=C=this.scrollParent[0].scrollTop-H.scrollSpeed}}if((this.overflowOffset.left+this.scrollParent[0].offsetWidth)-G.pageX<H.scrollSensitivity){this.scrollParent[0].scrollLeft=C=this.scrollParent[0].scrollLeft+H.scrollSpeed}else{if(G.pageX-this.overflowOffset.left<H.scrollSensitivity){this.scrollParent[0].scrollLeft=C=this.scrollParent[0].scrollLeft-H.scrollSpeed}}}else{if(G.pageY-A(document).scrollTop()<H.scrollSensitivity){C=A(document).scrollTop(A(document).scrollTop()-H.scrollSpeed)}else{if(A(window).height()-(G.pageY-A(document).scrollTop())<H.scrollSensitivity){C=A(document).scrollTop(A(document).scrollTop()+H.scrollSpeed)}}if(G.pageX-A(document).scrollLeft()<H.scrollSensitivity){C=A(document).scrollLeft(A(document).scrollLeft()-H.scrollSpeed)}else{if(A(window).width()-(G.pageX-A(document).scrollLeft())<H.scrollSensitivity){C=A(document).scrollLeft(A(document).scrollLeft()+H.scrollSpeed)}}}if(C!==false&&A.ui.ddmanager&&!H.dropBehaviour){A.ui.ddmanager.prepareOffsets(this,G)}}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y"){this.helper[0].style.left=this.position.left+"px"}if(!this.options.axis||this.options.axis!="x"){this.helper[0].style.top=this.position.top+"px"}for(var E=this.items.length-1;E>=0;E--){var F=this.items[E],D=F.item[0],I=this._intersectsWithPointer(F);if(!I){continue}if(F.instance!==this.currentContainer){continue}if(D!=this.currentItem[0]&&this.placeholder[I==1?"next":"prev"]()[0]!=D&&!A.ui.contains(this.placeholder[0],D)&&(this.options.type=="semi-dynamic"?!A.ui.contains(this.element[0],D):true)){this.direction=I==1?"down":"up";if(this.options.tolerance=="pointer"||this._intersectsWithSides(F)){this._rearrange(G,F)}else{break}this._trigger("change",G,this._uiHash());break}}this._contactContainers(G);if(A.ui.ddmanager){A.ui.ddmanager.drag(this,G)}this._trigger("sort",G,this._uiHash());this.lastPositionAbs=this.positionAbs;return false},_mouseStop:function(D,E){if(!D){return }if(A.ui.ddmanager&&!this.options.dropBehaviour){A.ui.ddmanager.drop(this,D)}if(this.options.revert){var C=this;var F=C.placeholder.offset();C.reverting=true;A(this.helper).animate({left:F.left-this.offset.parent.left-C.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:F.top-this.offset.parent.top-C.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){C._clear(D)})}else{this._clear(D,E)}return false},cancel:function(){var C=this;if(this.dragging){this._mouseUp({target:null});if(this.options.helper=="original"){this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else{this.currentItem.show()}for(var D=this.containers.length-1;D>=0;D--){this.containers[D]._trigger("deactivate",null,C._uiHash(this));if(this.containers[D].containerCache.over){this.containers[D]._trigger("out",null,C._uiHash(this));this.containers[D].containerCache.over=0}}}if(this.placeholder){if(this.placeholder[0].parentNode){this.placeholder[0].parentNode.removeChild(this.placeholder[0])}if(this.options.helper!="original"&&this.helper&&this.helper[0].parentNode){this.helper.remove()}A.extend(this,{helper:null,dragging:false,reverting:false,_noFinalSort:null});if(this.domPosition.prev){A(this.domPosition.prev).after(this.currentItem)}else{A(this.domPosition.parent).prepend(this.currentItem)}}return this},serialize:function(E){var C=this._getItemsAsjQuery(E&&E.connected);var D=[];E=E||{};A(C).each(function(){var F=(A(E.item||this).attr(E.attribute||"id")||"").match(E.expression||(/(.+)[-=_](.+)/));if(F){D.push((E.key||F[1]+"[]")+"="+(E.key&&E.expression?F[1]:F[2]))}});if(!D.length&&E.key){D.push(E.key+"=")}return D.join("&")},toArray:function(E){var C=this._getItemsAsjQuery(E&&E.connected);var D=[];E=E||{};C.each(function(){D.push(A(E.item||this).attr(E.attribute||"id")||"")});return D},_intersectsWith:function(L){var E=this.positionAbs.left,D=E+this.helperProportions.width,K=this.positionAbs.top,J=K+this.helperProportions.height;var F=L.left,C=F+L.width,M=L.top,I=M+L.height;var N=this.offset.click.top,H=this.offset.click.left;var G=(K+N)>M&&(K+N)<I&&(E+H)>F&&(E+H)<C;if(this.options.tolerance=="pointer"||this.options.forcePointerForContainers||(this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>L[this.floating?"width":"height"])){return G}else{return(F<E+(this.helperProportions.width/2)&&D-(this.helperProportions.width/2)<C&&M<K+(this.helperProportions.height/2)&&J-(this.helperProportions.height/2)<I)}},_intersectsWithPointer:function(E){var F=(this.options.axis==="x")||A.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,E.top,E.height),D=(this.options.axis==="y")||A.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,E.left,E.width),H=F&&D,C=this._getDragVerticalDirection(),G=this._getDragHorizontalDirection();if(!H){return false}return this.floating?(((G&&G=="right")||C=="down")?2:1):(C&&(C=="down"?2:1))},_intersectsWithSides:function(F){var D=A.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,F.top+(F.height/2),F.height),E=A.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,F.left+(F.width/2),F.width),C=this._getDragVerticalDirection(),G=this._getDragHorizontalDirection();if(this.floating&&G){return((G=="right"&&E)||(G=="left"&&!E))}else{return C&&((C=="down"&&D)||(C=="up"&&!D))}},_getDragVerticalDirection:function(){var C=this.positionAbs.top-this.lastPositionAbs.top;return C!=0&&(C>0?"down":"up")},_getDragHorizontalDirection:function(){var C=this.positionAbs.left-this.lastPositionAbs.left;return C!=0&&(C>0?"right":"left")},refresh:function(C){this._refreshItems(C);this.refreshPositions();return this},_connectWith:function(){var C=this.options;return C.connectWith.constructor==String?[C.connectWith]:C.connectWith},_getItemsAsjQuery:function(C){var K=this;var H=[];var F=[];var I=this._connectWith();if(I&&C){for(var E=I.length-1;E>=0;E--){var J=A(I[E]);for(var D=J.length-1;D>=0;D--){var G=A.data(J[D],this.widgetName);if(G&&G!=this&&!G.options.disabled){F.push([A.isFunction(G.options.items)?G.options.items.call(G.element):A(G.options.items,G.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),G])}}}}F.push([A.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):A(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(var E=F.length-1;E>=0;E--){F[E][0].each(function(){H.push(this)})}return A(H)},_removeCurrentsFromItems:function(){var E=this.currentItem.find(":data("+this.widgetName+"-item)");for(var D=0;D<this.items.length;D++){for(var C=0;C<E.length;C++){if(E[C]==this.items[D].item[0]){this.items.splice(D,1)}}}},_refreshItems:function(C){this.items=[];this.containers=[this];var I=this.items;var O=this;var G=[[A.isFunction(this.options.items)?this.options.items.call(this.element[0],C,{item:this.currentItem}):A(this.options.items,this.element),this]];var K=this._connectWith();if(K&&this.ready){for(var F=K.length-1;F>=0;F--){var L=A(K[F]);for(var E=L.length-1;E>=0;E--){var H=A.data(L[E],this.widgetName);if(H&&H!=this&&!H.options.disabled){G.push([A.isFunction(H.options.items)?H.options.items.call(H.element[0],C,{item:this.currentItem}):A(H.options.items,H.element),H]);this.containers.push(H)}}}}for(var F=G.length-1;F>=0;F--){var J=G[F][1];var D=G[F][0];for(var E=0,M=D.length;E<M;E++){var N=A(D[E]);N.data(this.widgetName+"-item",J);I.push({item:N,instance:J,width:0,height:0,left:0,top:0})}}},refreshPositions:function(C){if(this.offsetParent&&this.helper){this.offset.parent=this._getParentOffset()}for(var E=this.items.length-1;E>=0;E--){var F=this.items[E];if(F.instance!=this.currentContainer&&this.currentContainer&&F.item[0]!=this.currentItem[0]){continue}var D=this.options.toleranceElement?A(this.options.toleranceElement,F.item):F.item;if(!C){F.width=D.outerWidth();F.height=D.outerHeight()}var G=D.offset();F.left=G.left;F.top=G.top}if(this.options.custom&&this.options.custom.refreshContainers){this.options.custom.refreshContainers.call(this)}else{for(var E=this.containers.length-1;E>=0;E--){var G=this.containers[E].element.offset();this.containers[E].containerCache.left=G.left;this.containers[E].containerCache.top=G.top;this.containers[E].containerCache.width=this.containers[E].element.outerWidth();this.containers[E].containerCache.height=this.containers[E].element.outerHeight()}}return this},_createPlaceholder:function(E){var C=E||this,F=C.options;if(!F.placeholder||F.placeholder.constructor==String){var D=F.placeholder;F.placeholder={element:function(){var G=A(document.createElement(C.currentItem[0].nodeName)).addClass(D||C.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];if(!D){G.style.visibility="hidden"}return G},update:function(G,H){if(D&&!F.forcePlaceholderSize){return }if(!H.height()){H.height(C.currentItem.innerHeight()-parseInt(C.currentItem.css("paddingTop")||0,10)-parseInt(C.currentItem.css("paddingBottom")||0,10))}if(!H.width()){H.width(C.currentItem.innerWidth()-parseInt(C.currentItem.css("paddingLeft")||0,10)-parseInt(C.currentItem.css("paddingRight")||0,10))}}}}C.placeholder=A(F.placeholder.element.call(C.element,C.currentItem));C.currentItem.after(C.placeholder);F.placeholder.update(C,C.placeholder)},_contactContainers:function(C){var E=null,J=null;for(var G=this.containers.length-1;G>=0;G--){if(A.ui.contains(this.currentItem[0],this.containers[G].element[0])){continue}if(this._intersectsWith(this.containers[G].containerCache)){if(E&&A.ui.contains(this.containers[G].element[0],E.element[0])){continue}E=this.containers[G];J=G}else{if(this.containers[G].containerCache.over){this.containers[G]._trigger("out",C,this._uiHash(this));this.containers[G].containerCache.over=0}}}if(!E){return }if(this.containers.length===1){this.containers[J]._trigger("over",C,this._uiHash(this));this.containers[J].containerCache.over=1}else{if(this.currentContainer!=this.containers[J]){var I=10000;var H=null;var D=this.positionAbs[this.containers[J].floating?"left":"top"];for(var F=this.items.length-1;F>=0;F--){if(!A.ui.contains(this.containers[J].element[0],this.items[F].item[0])){continue}var K=this.containers[J].floating?this.items[F].item.offset().left:this.items[F].item.offset().top;if(Math.abs(K-D)<I){I=Math.abs(K-D);H=this.items[F];this.direction=(K-D>0)?"down":"up"}}if(!H&&!this.options.dropOnEmpty){return }this.currentContainer=this.containers[J];H?this._rearrange(C,H,null,true):this._rearrange(C,null,this.containers[J].element,true);this._trigger("change",C,this._uiHash());this.containers[J]._trigger("change",C,this._uiHash(this));this.options.placeholder.update(this.currentContainer,this.placeholder);this.containers[J]._trigger("over",C,this._uiHash(this));this.containers[J].containerCache.over=1}}},_createHelper:function(D){var E=this.options;var C=A.isFunction(E.helper)?A(E.helper.apply(this.element[0],[D,this.currentItem])):(E.helper=="clone"?this.currentItem.clone():this.currentItem);if(!C.parents("body").length){A(E.appendTo!="parent"?E.appendTo:this.currentItem[0].parentNode)[0].appendChild(C[0])}if(C[0]==this.currentItem[0]){this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}}if(C[0].style.width==""||E.forceHelperSize){C.width(this.currentItem.width())}if(C[0].style.height==""||E.forceHelperSize){C.height(this.currentItem.height())}return C},_adjustOffsetFromHelper:function(C){if(typeof C=="string"){C=C.split(" ")}if(A.isArray(C)){C={left:+C[0],top:+C[1]||0}}if("left" in C){this.offset.click.left=C.left+this.margins.left}if("right" in C){this.offset.click.left=this.helperProportions.width-C.right+this.margins.left}if("top" in C){this.offset.click.top=C.top+this.margins.top}if("bottom" in C){this.offset.click.top=this.helperProportions.height-C.bottom+this.margins.top}},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var C=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&A.ui.contains(this.scrollParent[0],this.offsetParent[0])){C.left+=this.scrollParent.scrollLeft();C.top+=this.scrollParent.scrollTop()}if((this.offsetParent[0]==document.body)||(this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&A.browser.msie)){C={top:0,left:0}}return{top:C.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:C.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var C=this.currentItem.position();return{top:C.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:C.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else{return{top:0,left:0}}},_cacheMargins:function(){this.margins={left:(parseInt(this.currentItem.css("marginLeft"),10)||0),top:(parseInt(this.currentItem.css("marginTop"),10)||0)}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var F=this.options;if(F.containment=="parent"){F.containment=this.helper[0].parentNode}if(F.containment=="document"||F.containment=="window"){this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,A(F.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(A(F.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]}if(!(/^(document|window|parent)$/).test(F.containment)){var D=A(F.containment)[0];var E=A(F.containment).offset();var C=(A(D).css("overflow")!="hidden");this.containment=[E.left+(parseInt(A(D).css("borderLeftWidth"),10)||0)+(parseInt(A(D).css("paddingLeft"),10)||0)-this.margins.left,E.top+(parseInt(A(D).css("borderTopWidth"),10)||0)+(parseInt(A(D).css("paddingTop"),10)||0)-this.margins.top,E.left+(C?Math.max(D.scrollWidth,D.offsetWidth):D.offsetWidth)-(parseInt(A(D).css("borderLeftWidth"),10)||0)-(parseInt(A(D).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,E.top+(C?Math.max(D.scrollHeight,D.offsetHeight):D.offsetHeight)-(parseInt(A(D).css("borderTopWidth"),10)||0)-(parseInt(A(D).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(F,H){if(!H){H=this.position}var D=F=="absolute"?1:-1;var E=this.options,C=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&A.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,G=(/(html|body)/i).test(C[0].tagName);return{top:(H.top+this.offset.relative.top*D+this.offset.parent.top*D-(A.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():(G?0:C.scrollTop()))*D)),left:(H.left+this.offset.relative.left*D+this.offset.parent.left*D-(A.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():G?0:C.scrollLeft())*D))}},_generatePosition:function(F){var I=this.options,C=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&A.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,J=(/(html|body)/i).test(C[0].tagName);if(this.cssPosition=="relative"&&!(this.scrollParent[0]!=document&&this.scrollParent[0]!=this.offsetParent[0])){this.offset.relative=this._getRelativeOffset()}var E=F.pageX;var D=F.pageY;if(this.originalPosition){if(this.containment){if(F.pageX-this.offset.click.left<this.containment[0]){E=this.containment[0]+this.offset.click.left}if(F.pageY-this.offset.click.top<this.containment[1]){D=this.containment[1]+this.offset.click.top}if(F.pageX-this.offset.click.left>this.containment[2]){E=this.containment[2]+this.offset.click.left}if(F.pageY-this.offset.click.top>this.containment[3]){D=this.containment[3]+this.offset.click.top}}if(I.grid){var H=this.originalPageY+Math.round((D-this.originalPageY)/I.grid[1])*I.grid[1];D=this.containment?(!(H-this.offset.click.top<this.containment[1]||H-this.offset.click.top>this.containment[3])?H:(!(H-this.offset.click.top<this.containment[1])?H-I.grid[1]:H+I.grid[1])):H;var G=this.originalPageX+Math.round((E-this.originalPageX)/I.grid[0])*I.grid[0];E=this.containment?(!(G-this.offset.click.left<this.containment[0]||G-this.offset.click.left>this.containment[2])?G:(!(G-this.offset.click.left<this.containment[0])?G-I.grid[0]:G+I.grid[0])):G}}return{top:(D-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(A.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():(J?0:C.scrollTop())))),left:(E-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(A.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():J?0:C.scrollLeft())))}},_rearrange:function(H,G,D,F){D?D[0].appendChild(this.placeholder[0]):G.item[0].parentNode.insertBefore(this.placeholder[0],(this.direction=="down"?G.item[0]:G.item[0].nextSibling));this.counter=this.counter?++this.counter:1;var E=this,C=this.counter;window.setTimeout(function(){if(C==E.counter){E.refreshPositions(!F)}},0)},_clear:function(E,F){this.reverting=false;var G=[],C=this;if(!this._noFinalSort&&this.currentItem.parent().length){this.placeholder.before(this.currentItem)}this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var D in this._storedCSS){if(this._storedCSS[D]=="auto"||this._storedCSS[D]=="static"){this._storedCSS[D]=""}}this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else{this.currentItem.show()}if(this.fromOutside&&!F){G.push(function(H){this._trigger("receive",H,this._uiHash(this.fromOutside))})}if((this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!F){G.push(function(H){this._trigger("update",H,this._uiHash())})}if(this!==this.currentContainer){if(!F){G.push(function(H){this._trigger("remove",H,this._uiHash())});G.push((function(H){return function(I){H._trigger("receive",I,this._uiHash(this))}}).call(this,this.currentContainer));G.push((function(H){return function(I){H._trigger("update",I,this._uiHash(this))}}).call(this,this.currentContainer))}}for(var D=this.containers.length-1;D>=0;D--){if(!F){G.push((function(H){return function(I){H._trigger("deactivate",I,this._uiHash(this))}}).call(this,this.containers[D]))}if(this.containers[D].containerCache.over){G.push((function(H){return function(I){H._trigger("out",I,this._uiHash(this))}}).call(this,this.containers[D]));this.containers[D].containerCache.over=0}}if(this._storedCursor){A("body").css("cursor",this._storedCursor)}if(this._storedOpacity){this.helper.css("opacity",this._storedOpacity)}if(this._storedZIndex){this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex)}this.dragging=false;if(this.cancelHelperRemoval){if(!F){this._trigger("beforeStop",E,this._uiHash());for(var D=0;D<G.length;D++){G[D].call(this,E)}this._trigger("stop",E,this._uiHash())}this.fromOutside=false;return false}if(!F){this._trigger("beforeStop",E,this._uiHash())}this.placeholder[0].parentNode.removeChild(this.placeholder[0]);if(this.helper[0]!=this.currentItem[0]){this.helper.remove()}this.helper=null;if(!F){for(var D=0;D<G.length;D++){G[D].call(this,E)}this._trigger("stop",E,this._uiHash())}this.fromOutside=false;return true},_trigger:function(){if(A.Widget.prototype._trigger.apply(this,arguments)===false){this.cancel()}},_uiHash:function(D){var C=D||this;return{helper:C.helper,placeholder:C.placeholder||A([]),position:C.position,originalPosition:C.originalPosition,offset:C.positionAbs,item:C.currentItem,sender:D?D.element:null}}});A.extend(A.ui.sortable,{version:"1.8.24"})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js-vendor/jquery/plugins/jquery.form.js' */
/*
 * jQuery Form Plugin
 * version: 2.67 (12-MAR-2011)
 * @requires jQuery v1.3.2 or later
 *
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */
(function(B){B.fn.ajaxSubmit=function(Q){if(!this.length){A("ajaxSubmit: skipping submit process - no element selected");return this}if(typeof Q=="function"){Q={success:Q}}var H=this.attr("action");var D=(typeof H==="string")?B.trim(H):"";if(D){D=(D.match(/^([^#]+)/)||[])[1]}D=D||window.location.href||"";Q=B.extend(true,{url:D,type:this[0].getAttribute("method")||"GET",iframeSrc:/^https/i.test(window.location.href||"")?"javascript:false":"about:blank"},Q);var R={};this.trigger("form-pre-serialize",[this,Q,R]);if(R.veto){A("ajaxSubmit: submit vetoed via form-pre-serialize trigger");return this}if(Q.beforeSerialize&&Q.beforeSerialize(this,Q)===false){A("ajaxSubmit: submit aborted via beforeSerialize callback");return this}var F,N,L=this.formToArray(Q.semantic);if(Q.data){Q.extraData=Q.data;for(F in Q.data){if(Q.data[F] instanceof Array){for(var I in Q.data[F]){L.push({name:F,value:Q.data[F][I]})}}else{N=Q.data[F];N=B.isFunction(N)?N():N;L.push({name:F,value:N})}}}if(Q.beforeSubmit&&Q.beforeSubmit(L,this,Q)===false){A("ajaxSubmit: submit aborted via beforeSubmit callback");return this}this.trigger("form-submit-validate",[L,this,Q,R]);if(R.veto){A("ajaxSubmit: submit vetoed via form-submit-validate trigger");return this}var C=B.param(L);if(Q.type.toUpperCase()=="GET"){Q.url+=(Q.url.indexOf("?")>=0?"&":"?")+C;Q.data=null}else{Q.data=C}var P=this,K=[];if(Q.resetForm){K.push(function(){P.resetForm()})}if(Q.clearForm){K.push(function(){P.clearForm()})}if(!Q.dataType&&Q.target){var O=Q.success||function(){};K.push(function(T){var S=Q.replaceTarget?"replaceWith":"html";B(Q.target)[S](T).each(O,arguments)})}else{if(Q.success){K.push(Q.success)}}Q.success=function(W,T,X){var V=Q.context||Q;for(var U=0,S=K.length;U<S;U++){K[U].apply(V,[W,T,X||P,P])}};var G=B("input:file",this).length>0;var E="multipart/form-data";var J=(P.attr("enctype")==E||P.attr("encoding")==E);if(Q.iframe!==false&&(G||Q.iframe||J)){if(Q.closeKeepAlive){B.get(Q.closeKeepAlive,M)}else{M()}}else{B.ajax(Q)}this.trigger("form-submit-notify",[this,Q]);return this;function M(){var U=P[0];if(B(":input[name=submit],:input[id=submit]",U).length){alert('Error: Form elements must not have name or id of "submit".');return }var a=B.extend(true,{},B.ajaxSettings,Q);a.context=a.context||a;var d="jqFormIO"+(new Date().getTime()),Y="_"+d;var V=B('<iframe id="'+d+'" name="'+d+'" src="'+a.iframeSrc+'" />');var Z=V[0];V.css({position:"absolute",top:"-1000px",left:"-1000px"});var W={aborted:0,responseText:null,responseXML:null,status:0,statusText:"n/a",getAllResponseHeaders:function(){},getResponseHeader:function(){},setRequestHeader:function(){},abort:function(){A("aborting upload...");var g="aborted";this.aborted=1;V.attr("src",a.iframeSrc);W.error=g;a.error&&a.error.call(a.context,W,"error",g);i&&B.event.trigger("ajaxError",[W,a,g]);a.complete&&a.complete.call(a.context,W,"error")}};var i=a.global;if(i&&!B.active++){B.event.trigger("ajaxStart")}if(i){B.event.trigger("ajaxSend",[W,a])}if(a.beforeSend&&a.beforeSend.call(a.context,W,a)===false){if(a.global){B.active--}return }if(W.aborted){return }var h=0;var X=U.clk;if(X){var e=X.name;if(e&&!X.disabled){a.extraData=a.extraData||{};a.extraData[e]=X.value;if(X.type=="image"){a.extraData[e+".x"]=U.clk_x;a.extraData[e+".y"]=U.clk_y}}}function f(){var o=P.attr("target"),g=P.attr("action");U.setAttribute("target",d);if(U.getAttribute("method")!="POST"){U.setAttribute("method","POST")}if(U.getAttribute("action")!=a.url){U.setAttribute("action",a.url)}if(!a.skipEncodingOverride){P.attr({encoding:"multipart/form-data",enctype:"multipart/form-data"})}if(a.timeout){setTimeout(function(){h=true;c()},a.timeout)}var m=[];try{if(a.extraData){for(var p in a.extraData){m.push(B('<input type="hidden" name="'+p+'" value="'+a.extraData[p]+'" />').appendTo(U)[0])}}V.appendTo("body");Z.attachEvent?Z.attachEvent("onload",c):Z.addEventListener("load",c,false);U.submit()}finally{U.setAttribute("action",g);if(o){U.setAttribute("target",o)}else{P.removeAttr("target")}B(m).remove()}}if(a.forceSync){f()}else{setTimeout(f,10)}var k,l,j=50;function c(){if(W.aborted){return }var r=Z.contentWindow?Z.contentWindow.document:Z.contentDocument?Z.contentDocument:Z.document;if(!r||r.location.href==a.iframeSrc){return }Z.detachEvent?Z.detachEvent("onload",c):Z.removeEventListener("load",c,false);var n=true;try{if(h){throw"timeout"}var s=a.dataType=="xml"||r.XMLDocument||B.isXMLDoc(r);A("isXml="+s);if(!s&&window.opera&&(r.body==null||r.body.innerHTML=="")){if(--j){A("requeing onLoad callback, DOM not available");setTimeout(c,250);return }}W.responseText=r.body?r.body.innerHTML:r.documentElement?r.documentElement.innerHTML:null;W.responseXML=r.XMLDocument?r.XMLDocument:r;W.getResponseHeader=function(u){var t={"content-type":a.dataType};return t[u]};var q=/(json|script)/.test(a.dataType);if(q||a.textarea){var m=r.getElementsByTagName("textarea")[0];if(m){W.responseText=m.value}else{if(q){var p=r.getElementsByTagName("pre")[0];var g=r.getElementsByTagName("body")[0];if(p){W.responseText=p.textContent}else{if(g){W.responseText=g.innerHTML}}}}}else{if(a.dataType=="xml"&&!W.responseXML&&W.responseText!=null){W.responseXML=b(W.responseText)}}k=S(W,a.dataType,a)}catch(o){A("error caught:",o);n=false;W.error=o;a.error&&a.error.call(a.context,W,"error",o);i&&B.event.trigger("ajaxError",[W,a,o])}if(W.aborted){A("upload aborted");n=false}if(n){a.success&&a.success.call(a.context,k,"success",W);i&&B.event.trigger("ajaxSuccess",[W,a])}i&&B.event.trigger("ajaxComplete",[W,a]);if(i&&!--B.active){B.event.trigger("ajaxStop")}a.complete&&a.complete.call(a.context,W,n?"success":"error");setTimeout(function(){V.removeData("form-plugin-onload");V.remove();W.responseXML=null},100)}var b=B.parseXML||function(g,m){if(window.ActiveXObject){m=new ActiveXObject("Microsoft.XMLDOM");m.async="false";m.loadXML(g)}else{m=(new DOMParser()).parseFromString(g,"text/xml")}return(m&&m.documentElement&&m.documentElement.nodeName!="parsererror")?m:null};var T=B.parseJSON||function(g){return window["eval"]("("+g+")")};var S=function(q,o,n){var m=q.getResponseHeader("content-type")||"",g=o==="xml"||!o&&m.indexOf("xml")>=0,p=g?q.responseXML:q.responseText;if(g&&p.documentElement.nodeName==="parsererror"){B.error&&B.error("parsererror")}if(n&&n.dataFilter){p=n.dataFilter(p,o)}if(typeof p==="string"){if(o==="json"||!o&&m.indexOf("json")>=0){p=T(p)}else{if(o==="script"||!o&&m.indexOf("javascript")>=0){B.globalEval(p)}}}return p}}};B.fn.ajaxForm=function(C){if(this.length===0){var D={s:this.selector,c:this.context};if(!B.isReady&&D.s){A("DOM not ready, queuing ajaxForm");B(function(){B(D.s,D.c).ajaxForm(C)});return this}A("terminating; zero elements found by selector"+(B.isReady?"":" (DOM not ready)"));return this}return this.ajaxFormUnbind().bind("submit.form-plugin",function(E){if(!E.isDefaultPrevented()){E.preventDefault();B(this).ajaxSubmit(C)}}).bind("click.form-plugin",function(I){var H=I.target;var F=B(H);if(!(F.is(":submit,input:image"))){var E=F.closest(":submit");if(E.length==0){return }H=E[0]}var G=this;G.clk=H;if(H.type=="image"){if(I.offsetX!=undefined){G.clk_x=I.offsetX;G.clk_y=I.offsetY}else{if(typeof B.fn.offset=="function"){var J=F.offset();G.clk_x=I.pageX-J.left;G.clk_y=I.pageY-J.top}else{G.clk_x=I.pageX-H.offsetLeft;G.clk_y=I.pageY-H.offsetTop}}}setTimeout(function(){G.clk=G.clk_x=G.clk_y=null},100)})};B.fn.ajaxFormUnbind=function(){return this.unbind("submit.form-plugin click.form-plugin")};B.fn.formToArray=function(N){var M=[];if(this.length===0){return M}var D=this[0];var G=N?D.getElementsByTagName("*"):D.elements;if(!G){return M}var I,H,F,O,E,K,C;for(I=0,K=G.length;I<K;I++){E=G[I];F=E.name;if(!F){continue}if(N&&D.clk&&E.type=="image"){if(!E.disabled&&D.clk==E){M.push({name:F,value:B(E).val()});M.push({name:F+".x",value:D.clk_x},{name:F+".y",value:D.clk_y})}continue}O=B.fieldValue(E,true);if(O&&O.constructor==Array){for(H=0,C=O.length;H<C;H++){M.push({name:F,value:O[H]})}}else{if(O!==null&&typeof O!="undefined"){M.push({name:F,value:O})}}}if(!N&&D.clk){var J=B(D.clk),L=J[0];F=L.name;if(F&&!L.disabled&&L.type=="image"){M.push({name:F,value:J.val()});M.push({name:F+".x",value:D.clk_x},{name:F+".y",value:D.clk_y})}}return M};B.fn.formSerialize=function(C){return B.param(this.formToArray(C))};B.fn.fieldSerialize=function(D){var C=[];this.each(function(){var H=this.name;if(!H){return }var F=B.fieldValue(this,D);if(F&&F.constructor==Array){for(var G=0,E=F.length;G<E;G++){C.push({name:H,value:F[G]})}}else{if(F!==null&&typeof F!="undefined"){C.push({name:this.name,value:F})}}});return B.param(C)};B.fn.fieldValue=function(H){for(var G=[],E=0,C=this.length;E<C;E++){var F=this[E];var D=B.fieldValue(F,H);if(D===null||typeof D=="undefined"||(D.constructor==Array&&!D.length)){continue}D.constructor==Array?B.merge(G,D):G.push(D)}return G};B.fieldValue=function(C,I){var E=C.name,N=C.type,O=C.tagName.toLowerCase();if(I===undefined){I=true}if(I&&(!E||C.disabled||N=="reset"||N=="button"||(N=="checkbox"||N=="radio")&&!C.checked||(N=="submit"||N=="image")&&C.form&&C.form.clk!=C||O=="select"&&C.selectedIndex==-1)){return null}if(O=="select"){var J=C.selectedIndex;if(J<0){return null}var L=[],D=C.options;var G=(N=="select-one");var K=(G?J+1:D.length);for(var F=(G?J:0);F<K;F++){var H=D[F];if(H.selected){var M=H.value;if(!M){M=(H.attributes&&H.attributes.value&&!(H.attributes.value.specified))?H.text:H.value}if(G){return M}L.push(M)}}return L}return B(C).val()};B.fn.clearForm=function(){return this.each(function(){B("input,select,textarea",this).clearFields()})};B.fn.clearFields=B.fn.clearInputs=function(){return this.each(function(){var D=this.type,C=this.tagName.toLowerCase();if(D=="text"||D=="password"||C=="textarea"){this.value=""}else{if(D=="checkbox"||D=="radio"){this.checked=false}else{if(C=="select"){this.selectedIndex=-1}}}})};B.fn.resetForm=function(){return this.each(function(){if(typeof this.reset=="function"||(typeof this.reset=="object"&&!this.reset.nodeType)){this.reset()}})};B.fn.enable=function(C){if(C===undefined){C=true}return this.each(function(){this.disabled=!C})};B.fn.selected=function(C){if(C===undefined){C=true}return this.each(function(){var D=this.type;if(D=="checkbox"||D=="radio"){this.checked=C}else{if(this.tagName.toLowerCase()=="option"){var E=B(this).parent("select");if(C&&E[0]&&E[0].type=="select-one"){E.find("option").selected(false)}this.selected=C}}})};function A(){if(B.fn.ajaxSubmit.debug){var C="[jquery.form] "+Array.prototype.join.call(arguments,"");if(window.console&&window.console.log){window.console.log(C)}else{if(window.opera&&window.opera.postError){window.opera.postError(C)}}}}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/jquery/jquery.hotkeys.js' */
(function(D){D.hotkeys={version:"0.8",specialKeys:{8:"backspace",9:"tab",13:"return",16:"shift",17:"ctrl",18:"alt",19:"pause",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"insert",46:"del",91:"meta",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9",106:"*",107:"+",109:"-",110:".",111:"/",112:"f1",113:"f2",114:"f3",115:"f4",116:"f5",117:"f6",118:"f7",119:"f8",120:"f9",121:"f10",122:"f11",123:"f12",144:"numlock",145:"scroll",188:",",190:".",191:"/",224:"meta",219:"[",221:"]"},keypressKeys:["<",">","?"],shiftNums:{"`":"~","1":"!","2":"@","3":"#","4":"$","5":"%","6":"^","7":"&","8":"*","9":"(","0":")","-":"_","=":"+",";":":","'":'"',",":"<",".":">","/":"?","\\":"|"}};D.each(D.hotkeys.keypressKeys,function(E,F){D.hotkeys.shiftNums[F]=F});function A(E){this.num=0;this.timer=E>0?E:false}A.prototype.val=function(){return this.num};A.prototype.inc=function(){if(this.timer){clearTimeout(this.timeout);this.timeout=setTimeout(D.proxy(A.prototype.reset,this),this.timer)}this.num++};A.prototype.reset=function(){if(this.timer){clearTimeout(this.timeout)}this.num=0};function C(G){if(!(D.isPlainObject(G.data)||D.isArray(G.data)||typeof G.data==="string")){return }var F=G.handler,E={timer:700};(function(H){if(typeof H==="string"){E.combo=[H]}else{if(D.isArray(H)){E.combo=H}else{D.extend(E,H)}}E.combo=D.map(E.combo,function(I){return I.toLowerCase()})})(G.data);G.index=new A(E.timer);G.handler=function(M){if(this!==M.target&&(/textarea|select|input/i.test(M.target.nodeName))){return }var J=M.type!=="keypress"?D.hotkeys.specialKeys[M.which]:null,N=String.fromCharCode(M.which).toLowerCase(),K,L="",I={};if(M.altKey&&J!=="alt"){L+="alt+"}if(M.ctrlKey&&J!=="ctrl"){L+="ctrl+"}if(M.metaKey&&!M.ctrlKey&&J!=="meta"){L+="meta+"}if(M.shiftKey&&J!=="shift"){L+="shift+"}if(M.metaKey&&N==="["){N=null}if(J){I[L+J]=true}if(N){I[L+N]=true}if(/shift+/.test(L)){I[L.replace("shift+","")+D.hotkeys.shiftNums[(J||N)]]=true}var H=G.index,O=E.combo;if(B(O[H.val()],I)){if(H.val()===O.length-1){H.reset();return F.apply(this,arguments)}else{H.inc()}}else{H.reset();if(B(O[0],I)){H.inc()}}}}function B(H,F){var I=H.split(" ");for(var G=0,E=I.length;G<E;G++){if(F[I[G]]){return true}}return false}D.each(["keydown","keyup","keypress"],function(){D.event.special[this]={add:C}})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/jquery/jquery.moveto.js' */
jQuery.fn.moveTo=function(C){var G={transition:false,scrollOffset:35};var E=jQuery.extend(G,C),A=this,D=A.offset().top,B;if((jQuery(window).scrollTop()+jQuery(window).height()-this.outerHeight()<D||jQuery(window).scrollTop()+E.scrollOffset>D)&&jQuery(window).height()>E.scrollOffset){if(jQuery(window).scrollTop()+E.scrollOffset>D){B=D-(jQuery(window).height()-this.outerHeight())+E.scrollOffset}else{B=D-E.scrollOffset}if(!jQuery.fn.moveTo.animating&&E.transition){jQuery(document).trigger("moveToStarted",this);jQuery.fn.moveTo.animating=true;jQuery("html,body").animate({scrollTop:B},1000,function(){jQuery(document).trigger("moveToFinished",A);delete jQuery.fn.moveTo.animating});return this}else{var F=jQuery("html, body");if(F.is(":animated")){F.stop();delete jQuery.fn.moveTo.animating}jQuery(document).trigger("moveToStarted");jQuery(window).scrollTop(B);setTimeout(function(){jQuery(document).trigger("moveToFinished",A)},100);return this}}jQuery(document).trigger("moveToFinished",this);return this};
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/event.js' */
AJS.bind=function(A,C,B){try{if(typeof B==="function"){return AJS.$(window).bind(A,C,B)}else{return AJS.$(window).bind(A,C)}}catch(D){AJS.log("error while binding: "+D.message)}};AJS.unbind=function(A,B){try{return AJS.$(window).unbind(A,B)}catch(C){AJS.log("error while unbinding: "+C.message)}};AJS.trigger=function(A,C){try{return AJS.$(window).trigger(A,C)}catch(B){AJS.log("error while triggering: "+B.message)}};
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/cookie.js' */
(function(){var B="AJS.conglomerate.cookie",F=/(\\|^"|"$)/g,G=/\|\|+/g,I=/"/g,C=/[.*+?|^$()[\]{\\]/g;function E(L,O){O=O||"";var N=new RegExp(D(L)+"=([^|]+)"),M=O.match(N);return M&&M[1]}function J(L,N,P){var M=new RegExp("(\\s|\\|)*\\b"+D(L)+"=[^|]*[|]*");P=P||"";P=P.replace(M,"|");if(N!==""){var O=L+"="+N;if(P.length+O.length<4020){P+="|"+O}}return P.replace(G,"|")}function H(L){return L.replace(F,"")}function K(L){var N=new RegExp("\\b"+D(L)+"=((?:[^\\\\;]+|\\\\.)*)(?:;|$)"),M=document.cookie.match(N);return M&&H(M[1])}function A(M,O,Q){var N="",P,L='"'+O.replace(I,'\\"')+'"';if(Q){P=new Date();P.setTime(+P+Q*24*60*60*1000);N="; expires="+P.toGMTString()}document.cookie=M+"="+L+N+";path=/"}function D(L){return L.replace(C,"\\$&")}AJS.Cookie={save:function(M,N,L){var O=K(B);O=J(M,N,O);A(B,O,L||365)},read:function(M,L){var O=K(B);var N=E(M,O);if(N!=null){return N}return L},erase:function(L){this.save(L,"")}}})();
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/dialog.js' */
AJS.popup=function(I){var D={width:800,height:600,closeOnOutsideClick:false,keypressListener:function(J){if(J.keyCode===27&&B.is(":visible")){F.hide()}}};if(typeof I!="object"){I={width:arguments[0],height:arguments[1],id:arguments[2]};I=AJS.$.extend({},I,arguments[3])}I=AJS.$.extend({},D,I);var B=AJS("div").addClass("aui-popup");if(I.id){B.attr("id",I.id)}var E=3000;AJS.$(".aui-dialog").each(function(){var J=AJS.$(this);E=(J.css("z-index")>E)?J.css("z-index"):E});var G=(function(K,J){I.width=(K=(K||I.width));I.height=(J=(J||I.height));B.css({marginTop:-Math.round(J/2)+"px",marginLeft:-Math.round(K/2)+"px",width:K,height:J,"z-index":parseInt(E,10)+2});return arguments.callee})(I.width,I.height);AJS.$("body").append(B);B.hide();AJS.enable(B);var C=AJS.$(".aui-blanket"),A=function(J,K){var L=AJS.$(J,K);if(L.length){L.focus();return true}return false},H=function(J){if(AJS.$(".dialog-page-body",J).find(":focus").length!==0){return }if(I.focusSelector){return A(I.focusSelector,J)}var K=":input:visible:enabled:first";if(A(K,AJS.$(".dialog-page-body",J))){return }if(A(K,AJS.$(".dialog-button-panel",J))){return }A(K,AJS.$(".dialog-page-menu",J))};var F={changeSize:function(J,K){if((J&&J!=I.width)||(K&&K!=I.height)){G(J,K)}this.show()},show:function(){var J=function(){AJS.$(document).off("keydown",I.keypressListener).on("keydown",I.keypressListener);AJS.dim();C=AJS.$(".aui-blanket");if(C.size()!=0&&I.closeOnOutsideClick){C.click(function(){if(B.is(":visible")){F.hide()}})}B.show();AJS.popup.current=this;H(B);AJS.$(document).trigger("showLayer",["popup",this])};J.call(this);this.show=J},hide:function(){AJS.$(document).unbind("keydown",I.keypressListener);C.unbind();this.element.hide();if(AJS.$(".aui-dialog:visible").size()==0){AJS.undim()}var J=document.activeElement;if(this.element.has(J).length){J.blur()}AJS.$(document).trigger("hideLayer",["popup",this]);AJS.popup.current=null;this.enable()},element:B,remove:function(){B.remove();this.element=null},disable:function(){if(!this.disabled){this.popupBlanket=AJS.$("<div class='dialog-blanket'> </div>").css({height:B.height(),width:B.width()});B.append(this.popupBlanket);this.disabled=true}},enable:function(){if(this.disabled){this.disabled=false;this.popupBlanket.remove();this.popupBlanket=null}}};return F};(function(){function F(N,L,K,M){if(!N.buttonpanel){N.addButtonPanel()}this.page=N;this.onclick=K;this._onclick=function(O){return K.call(this,N.dialog,N,O)===true};this.item=AJS("button",L).addClass("button-panel-button");if(M){this.item.addClass(M)}if(typeof K=="function"){this.item.click(this._onclick)}N.buttonpanel.append(this.item);this.id=N.button.length;N.button[this.id]=this}function A(O,M,L,N,K){if(!O.buttonpanel){O.addButtonPanel()}if(!K){K="#"}this.page=O;this.onclick=L;this._onclick=function(P){return L.call(this,O.dialog,O,P)===true};this.item=AJS("a",M).attr("href",K).addClass("button-panel-link");if(N){this.item.addClass(N)}if(typeof L=="function"){this.item.click(this._onclick)}O.buttonpanel.append(this.item);this.id=O.button.length;O.button[this.id]=this}function B(M,L){var K=M=="left"?-1:1;return function(Q){var O=this.page[L];if(this.id!=((K==1)?O.length-1:0)){K*=(Q||1);O[this.id+K].item[(K<0?"before":"after")](this.item);O.splice(this.id,1);O.splice(this.id+K,0,this);for(var N=0,P=O.length;N<P;N++){if(L=="panel"&&this.page.curtab==O[N].id){this.page.curtab=N}O[N].id=N}}return this}}function G(K){return function(){this.page[K].splice(this.id,1);for(var L=0,M=this.page[K].length;L<M;L++){this.page[K][L].id=L}this.item.remove()}}F.prototype.moveUp=F.prototype.moveLeft=B("left","button");F.prototype.moveDown=F.prototype.moveRight=B("right","button");F.prototype.remove=G("button");F.prototype.html=function(K){return this.item.html(K)};F.prototype.onclick=function(K){if(typeof K=="undefined"){return this.onclick}else{this.item.unbind("click",this._onclick);this._onclick=function(L){return K.call(this,page.dialog,page,L)===true};if(typeof K=="function"){this.item.click(this._onclick)}}};var D=20;var H=function(Q,R,K,P,N){if(!(K instanceof AJS.$)){K=AJS.$(K)}this.dialog=Q.dialog;this.page=Q;this.id=Q.panel.length;this.button=AJS("button").html(R).addClass("item-button");if(N){this.button[0].id=N}this.item=AJS("li").append(this.button).addClass("page-menu-item");this.body=AJS("div").append(K).addClass("dialog-panel-body").css("height",Q.dialog.height+"px");this.padding=D;if(P){this.body.addClass(P)}var M=Q.panel.length,O=this;Q.menu.append(this.item);Q.body.append(this.body);Q.panel[M]=this;var L=function(){var S;if(Q.curtab+1){S=Q.panel[Q.curtab];S.body.hide();S.item.removeClass("selected");(typeof S.onblur=="function")&&S.onblur()}Q.curtab=O.id;O.body.show();O.item.addClass("selected");(typeof O.onselect=="function")&&O.onselect();(typeof Q.ontabchange=="function")&&Q.ontabchange(O,S)};if(!this.button.click){AJS.log("atlassian-dialog:Panel:constructor - this.button.click false");this.button.onclick=L}else{this.button.click(L)}L();if(M==0){Q.menu.css("display","none")}else{Q.menu.show()}};H.prototype.select=function(){this.button.click()};H.prototype.moveUp=H.prototype.moveLeft=B("left","panel");H.prototype.moveDown=H.prototype.moveRight=B("right","panel");H.prototype.remove=G("panel");H.prototype.html=function(K){if(K){this.body.html(K);return this}else{return this.body.html()}};H.prototype.setPadding=function(K){if(!isNaN(+K)){this.body.css("padding",+K);this.padding=+K;this.page.recalcSize()}return this};var E=56;var C=51;var I=50;var J=function(K,L){this.dialog=K;this.id=K.page.length;this.element=AJS("div").addClass("dialog-components");this.body=AJS("div").addClass("dialog-page-body");this.menu=AJS("ul").addClass("dialog-page-menu").css("height",K.height+"px");this.body.append(this.menu);this.curtab;this.panel=[];this.button=[];if(L){this.body.addClass(L)}K.popup.element.append(this.element.append(this.menu).append(this.body));K.page[K.page.length]=this};J.prototype.recalcSize=function(){var K=this.header?E:0;var N=this.buttonpanel?C:0;for(var M=this.panel.length;M--;){var L=this.dialog.height-K-N;this.panel[M].body.css("height",L);this.menu.css("height",L)}};J.prototype.addButtonPanel=function(){this.buttonpanel=AJS("div").addClass("dialog-button-panel");this.element.append(this.buttonpanel)};J.prototype.addPanel=function(N,K,M,L){new H(this,N,K,M,L);this.recalcSize();return this};J.prototype.addHeader=function(L,K){if(this.header){this.header.remove()}this.header=AJS("h2").text(L||"").addClass("dialog-title");K&&this.header.addClass(K);this.element.prepend(this.header);this.recalcSize();return this};J.prototype.addButton=function(L,K,M){new F(this,L,K,M);this.recalcSize();return this};J.prototype.addLink=function(M,L,N,K){new A(this,M,L,N,K);this.recalcSize();return this};J.prototype.gotoPanel=function(K){this.panel[K.id||K].select()};J.prototype.getCurrentPanel=function(){return this.panel[this.curtab]};J.prototype.hide=function(){this.element.hide()};J.prototype.show=function(){this.element.show()};J.prototype.remove=function(){this.element.remove()};AJS.Dialog=function(M,K,N){var L={};if(!+M){L=Object(M);M=L.width;K=L.height;N=L.id}this.height=K||480;this.width=M||640;this.id=N;L=AJS.$.extend({},L,{width:this.width,height:this.height,id:this.id});this.popup=AJS.popup(L);this.popup.element.addClass("aui-dialog");this.page=[];this.curpage=0;new J(this)};AJS.Dialog.prototype.addHeader=function(L,K){this.page[this.curpage].addHeader(L,K);return this};AJS.Dialog.prototype.addButton=function(L,K,M){this.page[this.curpage].addButton(L,K,M);return this};AJS.Dialog.prototype.addLink=function(M,L,N,K){this.page[this.curpage].addLink(M,L,N,K);return this};AJS.Dialog.prototype.addSubmit=function(L,K){this.page[this.curpage].addButton(L,K,"button-panel-submit-button");return this};AJS.Dialog.prototype.addCancel=function(L,K){this.page[this.curpage].addLink(L,K,"button-panel-cancel-link");return this};AJS.Dialog.prototype.addButtonPanel=function(){this.page[this.curpage].addButtonPanel();return this};AJS.Dialog.prototype.addPanel=function(N,K,M,L){this.page[this.curpage].addPanel(N,K,M,L);return this};AJS.Dialog.prototype.addPage=function(K){new J(this,K);this.page[this.curpage].hide();this.curpage=this.page.length-1;return this};AJS.Dialog.prototype.nextPage=function(){this.page[this.curpage++].hide();if(this.curpage>=this.page.length){this.curpage=0}this.page[this.curpage].show();return this};AJS.Dialog.prototype.prevPage=function(){this.page[this.curpage--].hide();if(this.curpage<0){this.curpage=this.page.length-1}this.page[this.curpage].show();return this};AJS.Dialog.prototype.gotoPage=function(K){this.page[this.curpage].hide();this.curpage=K;if(this.curpage<0){this.curpage=this.page.length-1}else{if(this.curpage>=this.page.length){this.curpage=0}}this.page[this.curpage].show();return this};AJS.Dialog.prototype.getPanel=function(L,M){var K=(M==null)?this.curpage:L;if(M==null){M=L}return this.page[K].panel[M]};AJS.Dialog.prototype.getPage=function(K){return this.page[K]};AJS.Dialog.prototype.getCurrentPanel=function(){return this.page[this.curpage].getCurrentPanel()};AJS.Dialog.prototype.gotoPanel=function(M,L){if(L!=null){var K=M.id||M;this.gotoPage(K)}this.page[this.curpage].gotoPanel(typeof L=="undefined"?M:L)};AJS.Dialog.prototype.show=function(){this.popup.show();AJS.trigger("show.dialog",{dialog:this});return this};AJS.Dialog.prototype.hide=function(){this.popup.hide();AJS.trigger("hide.dialog",{dialog:this});return this};AJS.Dialog.prototype.remove=function(){this.popup.hide();this.popup.remove();AJS.trigger("remove.dialog",{dialog:this})};AJS.Dialog.prototype.disable=function(){this.popup.disable();return this};AJS.Dialog.prototype.enable=function(){this.popup.enable();return this};AJS.Dialog.prototype.get=function(S){var L=[],R=this;var T='#([^"][^ ]*|"[^"]*")';var U=":(\\d+)";var M="page|panel|button|header";var N="(?:("+M+")(?:"+T+"|"+U+")?|"+T+")";var P=new RegExp("(?:^|,)\\s*"+N+"(?:\\s+"+N+")?\\s*(?=,|$)","ig");(S+"").replace(P,function(f,V,e,W,c,b,Y,g,d){V=V&&V.toLowerCase();var X=[];if(V=="page"&&R.page[W]){X.push(R.page[W]);V=b;V=V&&V.toLowerCase();e=Y;W=g;c=d}else{X=R.page}e=e&&(e+"").replace(/"/g,"");Y=Y&&(Y+"").replace(/"/g,"");c=c&&(c+"").replace(/"/g,"");d=d&&(d+"").replace(/"/g,"");if(V||c){for(var a=X.length;a--;){if(c||(V=="panel"&&(e||(!e&&W==null)))){for(var Z=X[a].panel.length;Z--;){if(X[a].panel[Z].button.html()==c||X[a].panel[Z].button.html()==e||(V=="panel"&&!e&&W==null)){L.push(X[a].panel[Z])}}}if(c||(V=="button"&&(e||(!e&&W==null)))){for(var Z=X[a].button.length;Z--;){if(X[a].button[Z].item.html()==c||X[a].button[Z].item.html()==e||(V=="button"&&!e&&W==null)){L.push(X[a].button[Z])}}}if(X[a][V]&&X[a][V][W]){L.push(X[a][V][W])}if(V=="header"&&X[a].header){L.push(X[a].header)}}}else{L=L.concat(X)}});var Q={length:L.length};for(var O=L.length;O--;){Q[O]=L[O];for(var K in L[O]){if(!(K in Q)){(function(V){Q[V]=function(){for(var W=this.length;W--;){if(typeof this[W][V]=="function"){this[W][V].apply(this[W],arguments)}}}})(K)}}}return Q};AJS.Dialog.prototype.updateHeight=function(){var K=0;var M=AJS.$(window).height()-E-C-(I*2);for(var L=0;this.getPanel(L);L++){if(this.getPanel(L).body.css({height:"auto",display:"block"}).outerHeight()>K){K=Math.min(M,this.getPanel(L).body.outerHeight())}if(L!==this.page[this.curpage].curtab){this.getPanel(L).body.css({display:"none"})}}for(L=0;this.getPanel(L);L++){this.getPanel(L).body.css({height:K||this.height})}this.page[0].menu.height(K);this.height=K+E+C+1;this.popup.changeSize(undefined,this.height)};AJS.Dialog.prototype.isMaximised=function(){return this.popup.element.outerHeight()>=AJS.$(window).height()-(I*2)};AJS.Dialog.prototype.getCurPanel=function(){return this.getPanel(this.page[this.curpage].curtab)};AJS.Dialog.prototype.getCurPanelButton=function(){return this.getCurPanel().button}})();
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/inline-dialog.js' */
(function(D){AJS.InlineDialog=function(b,N,R,P){if(P&&P.getArrowAttributes){AJS.log("DEPRECATED: getArrowAttributes - See https://ecosystem.atlassian.net/browse/AUI-1362")}if(P&&P.getArrowPath){AJS.log("DEPRECATED: getArrowPath - See https://ecosystem.atlassian.net/browse/AUI-1362");if(P.gravity!==undefined){AJS.log("DEPRECATED: getArrowPath does not support gravity - See https://ecosystem.atlassian.net/browse/AUI-2197")}}if(P&&P.onTop!==undefined){AJS.log("DEPRECATED: onTop has been replaced with gravity - See https://ecosystem.atlassian.net/browse/AUI-2197");if(P.onTop&&P.gravity===undefined){P.gravity="s"}}if(typeof N==="undefined"){N=String(Math.random()).replace(".","");if(D("#inline-dialog-"+N+", #arrow-"+N+", #inline-dialog-shim-"+N).length){throw"GENERATED_IDENTIFIER_NOT_UNIQUE"}}var Z=D.extend(false,AJS.InlineDialog.opts,P);if(Z.gravity==="w"){Z.offsetX=P.offsetX===undefined?10:P.offsetX;Z.offsetY=P.offsetY===undefined?0:P.offsetY}var V=function(){return window.Raphael&&P&&(P.getArrowPath||P.getArrowAttributes)};var J;var Q;var k;var U=false;var a=false;var i=false;var j;var X;var G=D('<div id="inline-dialog-'+N+'" class="aui-inline-dialog"><div class="aui-inline-dialog-contents contents"></div><div id="arrow-'+N+'" class="aui-inline-dialog-arrow arrow"></div></div>');var M=D("#arrow-"+N,G);var g=G.find(".contents");if(!V()){G.find(".aui-inline-dialog-arrow").addClass("aui-css-arrow")}if(!Z.displayShadow){g.addClass("aui-inline-dialog-no-shadow")}if(Z.autoWidth){g.addClass("aui-inline-dialog-auto-width")}else{g.css("width",Z.width+"px")}g.on({mouseenter:function(){clearTimeout(Q);G.unbind("mouseenter")},mouseleave:function(){e()}});var d=function(){if(!J){J={popup:G,hide:function(){e(0)},id:N,show:function(){Y()},persistent:Z.persistent?true:false,reset:function(){function s(u,t){u.css(t.popupCss);if(V()){if(t.gravity==="s"){t.arrowCss.top-=D.browser.msie?10:9}if(!u.arrowCanvas){u.arrowCanvas=Raphael("arrow-"+N,16,16)}var v=Z.getArrowPath,w=D.isFunction(v)?v(t):v;u.arrowCanvas.path(w).attr(Z.getArrowAttributes())}else{M.removeClass("aui-bottom-arrow aui-left-arrow aui-right-arrow");if(t.gravity==="s"&&!M.hasClass("aui-bottom-arrow")){M.addClass("aui-bottom-arrow")}else{if(t.gravity==="n"){}else{if(t.gravity==="w"){M.addClass("aui-left-arrow")}else{if(t.gravity==="e"){M.addClass("aui-right-arrow")}}}}}M.css(t.arrowCss)}var p=AJS.$(window).height();var q=Math.round(p*0.75);G.children(".aui-inline-dialog-contents").css("max-height",q);var o=Z.calculatePositions(G,X,j,Z);if(o.displayAbove!==undefined){AJS.log("DEPRECATED: displayAbove has been replaced with gravity - See https://ecosystem.atlassian.net/browse/AUI-2197");o.gravity=o.displayAbove?"s":"n"}s(G,o);G.fadeIn(Z.fadeTime,function(){});if(D.browser.msie&&~~(D.browser.version)<10){var r=D("#inline-dialog-shim-"+N);if(!r.length){D(G).prepend(D('<iframe class = "inline-dialog-shim" id="inline-dialog-shim-'+N+'" frameBorder="0" src="javascript:false;"></iframe>'))}r.css({width:g.outerWidth(),height:g.outerHeight()})}}}}return J};var Y=function(){if(G.is(":visible")){return }clearTimeout(k);k=setTimeout(function(){if(!i||!a){return }Z.addActiveClass&&D(b).addClass("active");U=true;if(!Z.persistent){h()}AJS.InlineDialog.current=d();D(document).trigger("showLayer",["inlineDialog",d()]);d().reset()},Z.showDelay)};var e=function(o){if(typeof o=="undefined"&&Z.persistent){return }if(G.data("_datePickerPopup")){return }a=false;if(U&&Z.preHideCallback.call(G[0].popup)){o=(o==null)?Z.hideDelay:o;clearTimeout(Q);clearTimeout(k);if(o!=null){Q=setTimeout(function(){L();Z.addActiveClass&&D(b).removeClass("active");G.fadeOut(Z.fadeTime,function(){Z.hideCallback.call(G[0].popup)});if(G.arrowCanvas){G.arrowCanvas.remove();G.arrowCanvas=null}U=false;a=false;D(document).trigger("hideLayer",["inlineDialog",d()]);AJS.InlineDialog.current=null;if(!Z.cacheContent){i=false;W=false}},o)}}};var f=function(r,p){var o=D(p);Z.upfrontCallback.call({popup:G,hide:function(){e(0)},id:N,show:function(){Y()}});G.each(function(){if(typeof this.popup!="undefined"){this.popup.hide()}});if(Z.closeOthers){D(".aui-inline-dialog").each(function(){!this.popup.persistent&&this.popup.hide()})}X={target:o};if(!r){j={x:o.offset().left,y:o.offset().top}}else{j={x:r.pageX,y:r.pageY}}if(!U){clearTimeout(k)}a=true;var q=function(){W=false;i=true;Z.initCallback.call({popup:G,hide:function(){e(0)},id:N,show:function(){Y()}});Y()};if(!W){W=true;if(D.isFunction(R)){R(g,p,q)}else{D.get(R,function(t,s,u){g.html(Z.responseHandler(t,s,u));i=true;Z.initCallback.call({popup:G,hide:function(){e(0)},id:N,show:function(){Y()}});Y()})}}clearTimeout(Q);if(!U){Y()}return false};G[0].popup=d();var W=false;var T=false;var S=function(){if(!T){D(Z.container).append(G);T=true}};var O=D(b);if(Z.onHover){if(Z.useLiveEvents){if(O.selector){D(document).on("mouseenter",O.selector,function(o){S();f(o,this)}).on("mouseleave",O.selector,function(){e()})}else{AJS.log("Warning: inline dialog trigger elements must have a jQuery selector when the useLiveEvents option is enabled.")}}else{O.on({mouseenter:function(o){S();f(o,this)},mouseleave:function(){e()}})}}else{if(!Z.noBind){if(Z.useLiveEvents){if(O.selector){D(document).on("click",O.selector,function(o){S();if(m()){G.hide()}else{f(o,this)}return false}).on("mouseleave",O.selector,function(){e()})}else{AJS.log("Warning: inline dialog trigger elements must have a jQuery selector when the useLiveEvents option is enabled.")}}else{O.on("click",function(o){S();if(m()){G.hide()}else{f(o,this)}return false}).on("mouseleave",function(){e()})}}}var m=function(){return U&&Z.closeOnTriggerClick};var h=function(){K();F()};var L=function(){c();n()};var I=false;var H=N+".inline-dialog-check";var K=function(){if(!I){D("body").bind("click."+H,function(p){var o=D(p.target);if(o.closest("#inline-dialog-"+N+" .contents").length===0){e(0)}});I=true}};var c=function(){if(I){D("body").unbind("click."+H)}I=false};var l=function(o){if(o.keyCode===27){e(0)}};var F=function(){D(document).on("keydown",l)};var n=function(){D(document).off("keydown",l)};G.show=function(p,o){if(p){p.stopPropagation()}S();if(Z.noBind&&!(b&&b.length)){f(p,o===undefined?p.target:o)}else{f(p,b)}};G.hide=function(){e(0)};G.refresh=function(){if(U){d().reset()}};G.getOptions=function(){return Z};return G};function C(G){var F=D(G);var H=D.extend({left:0,top:0},F.offset());return{left:H.left,top:H.top,width:F.outerWidth(),height:F.outerHeight()}}function B(H,J,T,F){var M=AJS.$.isFunction(F.offsetX)?F.offsetX(H,J,T,F):F.offsetX;var L=AJS.$.isFunction(F.offsetY)?F.offsetY(H,J,T,F):F.offsetY;var Q=AJS.$.isFunction(F.arrowOffsetX)?F.arrowOffsetX(H,J,T,F):F.arrowOffsetX;var P=AJS.$.isFunction(F.arrowOffsetY)?F.arrowOffsetY(H,J,T,F):F.arrowOffsetY;var S=F.container.toLowerCase()!=="body";var G=AJS.$(F.container);var O=S?AJS.$(F.container).parent():AJS.$(window);var R=S?G.offset():{left:0,top:0};var K=S?O.offset():{left:0,top:0};var I=J.target;var U=I.offset();var N=I[0].getBBox&&I[0].getBBox();return{screenPadding:10,arrowMargin:5,window:{top:K.top,left:K.left,scrollTop:O.scrollTop(),scrollLeft:O.scrollLeft(),width:O.width(),height:O.height()},scrollContainer:{width:G.width(),height:G.height()},trigger:{top:U.top-R.top,left:U.left-R.left,width:N?N.width:I.outerWidth(),height:N?N.height:I.outerHeight()},dialog:{width:H.width(),height:H.height(),offset:{top:L,left:M}},arrow:{height:H.find(".arrow").outerHeight(),offset:{top:P,left:Q}}}}function E(F,P,g,R){var N=B(F,P,g,R);var J=N.screenPadding;var K=N.window;var T=N.trigger;var d=N.dialog;var I=N.arrow;var Z=N.scrollContainer;var e={top:T.top-K.scrollTop,left:T.left-K.scrollLeft};var a=Math.floor(T.height/2);var V=Math.floor(d.height/2);var U=Math.floor(I.height/2);var c=e.left-d.offset.left-J;var h=Z.width-e.left-T.width-d.offset.left-J;var b=c>=d.width;var H=h>=d.width;var L=!H&&b?"e":"w";var O=e.top+a-U;var Q=K.height-O-I.height;J=Math.min(J,O-N.arrowMargin);J=Math.min(J,Q-N.arrowMargin);var G=e.top+a;var X=Math.max(G-J,0);var f=Math.max(K.height-G-J,0);var Y=V-d.offset.top>X;var M=V+d.offset.top>f;var W;var S;if(Y){W={top:K.scrollTop+J,left:L==="w"?T.left+T.width+d.offset.left:T.left-d.width-d.offset.left};S={top:(T.top+a)-(W.top+U)}}else{if(M){W={top:K.scrollTop+K.height-d.height-J,left:L==="w"?T.left+T.width+d.offset.left:T.left-d.width-d.offset.left};S={top:(T.top+a)-(W.top+U)}}else{W={top:T.top+a-V+d.offset.top,left:L==="w"?T.left+T.width+d.offset.left:T.left-d.width-d.offset.left};S={top:V-U+I.offset.top}}}return{gravity:L,popupCss:W,arrowCss:S}}function A(G,O,Z,S){var X=AJS.$.isFunction(S.offsetX)?S.offsetX(G,O,Z,S):S.offsetX;var V=AJS.$.isFunction(S.offsetY)?S.offsetY(G,O,Z,S):S.offsetY;var M=AJS.$.isFunction(S.arrowOffsetX)?S.arrowOffsetX(G,O,Z,S):S.arrowOffsetX;var L=AJS.$.isFunction(S.arrowOffsetY)?S.arrowOffsetY(G,O,Z,S):S.arrowOffsetY;var F=C(window);var P=C(O.target);var Y=C(G);var J=C(G.find(".aui-inline-dialog-arrow"));var I=P.left+P.width/2;var U=(window.pageYOffset||document.documentElement.scrollTop)+F.height;var K=10;Y.top=P.top+P.height+~~V;Y.left=P.left+~~X;var R=F.width-(Y.left+Y.width+K);J.left=I-Y.left+~~M;J.top=-(J.height/2);var N=P.top>Y.height;var H=(Y.top+Y.height)<U;var Q=(!H&&N)||(N&&S.gravity==="s");if(Q){Y.top=P.top-Y.height-(J.height/2);J.top=Y.height}if(S.isRelativeToMouse){if(R<0){Y.right=K;Y.left="auto";J.left=Z.x-(F.width-Y.width)}else{Y.left=Z.x-20;J.left=Z.x-Y.left}}else{if(R<0){Y.right=K;Y.left="auto";var W=F.width-Y.right;var T=W-Y.width;J.right="auto";J.left=I-T-J.width/2}else{if(Y.width<=P.width/2){J.left=Y.width/2;Y.left=I-Y.width/2}}}return{gravity:Q?"s":"n",displayAbove:Q,popupCss:{left:Y.left,top:Y.top,right:Y.right},arrowCss:{left:J.left,top:J.top,right:J.right}}}AJS.InlineDialog.opts={onTop:false,responseHandler:function(G,F,H){return G},closeOthers:true,isRelativeToMouse:false,addActiveClass:true,onHover:false,useLiveEvents:false,noBind:false,fadeTime:100,persistent:false,hideDelay:10000,showDelay:0,width:300,offsetX:0,offsetY:10,arrowOffsetX:0,arrowOffsetY:0,container:"body",cacheContent:true,displayShadow:true,autoWidth:false,gravity:"n",closeOnTriggerClick:false,preHideCallback:function(){return true},hideCallback:function(){},initCallback:function(){},upfrontCallback:function(){},calculatePositions:function(F,I,J,H){H=H||{};var G=H.gravity==="w"?E:A;return G(F,I,J,H)},getArrowPath:function(F){if(F.gravity==="s"){return"M0,8L8,16,16,8"}else{return"M0,8L8,0,16,8"}},getArrowAttributes:function(){return{fill:"#fff",stroke:"#ccc"}}}})(AJS.$);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/firebug.js' */
AJS.warnAboutFirebug=function(A){AJS.log("DEPRECATED: please remove all uses of AJS.warnAboutFirebug")};
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/forms.js' */
AJS.inlineHelp=function(){AJS.$(".icon-inline-help").click(function(){var A=AJS.$(this).siblings(".field-help");if(A.hasClass("hidden")){A.removeClass("hidden")}else{A.addClass("hidden")}})};
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/keyCode.js' */
(function(A){AJS.keyCode={ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}}(AJS.$));
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/messages.js' */
(function(){var A=500;var C=5000;var B=100;AJS.messages={setup:function(){AJS.messages.createMessage("generic");AJS.messages.createMessage("error");AJS.messages.createMessage("warning");AJS.messages.createMessage("info");AJS.messages.createMessage("success");AJS.messages.createMessage("hint");AJS.messages.makeCloseable();AJS.messages.makeFadeout()},makeCloseable:function(D){AJS.$(D||"div.aui-message.closeable").each(function(){var F=AJS.$(this),E=AJS.$('<span class="aui-icon icon-close" role="button" tabindex="0"></span>').click(function(){F.closeMessage()}).keypress(function(G){if((G.which===AJS.keyCode.ENTER)||(G.which===AJS.keyCode.SPACE)){F.closeMessage();G.preventDefault()}});F.append(E)})},makeFadeout:function(E,D,F){D=(typeof D!="undefined")?D:C;F=(typeof F!="undefined")?F:A;AJS.$(E||"div.aui-message.fadeout").each(function(){var J=AJS.$(this);var L=false;var H=false;function G(){J.stop(true,false).delay(D).fadeOut(F,function(){J.closeMessage()})}function K(){J.stop(true,false).fadeTo(B,1)}function I(){return !L&&!H}J.focusin(function(){L=true;K()}).focusout(function(){L=false;if(I()){G()}}).hover(function(){H=true;K()},function(){H=false;if(I()){G()}});G()})},template:'<div class="aui-message aui-message-{type} {type} {closeable} {shadowed} {fadeout}"><p class="title"><strong>{title}</strong></p>{body}<!-- .aui-message --></div>',createMessage:function(D){AJS.messages[D]=function(G,I){var H=this.template,F,E;if(!I){I=G;G="#aui-message-bar"}I.closeable=(I.closeable!==false);I.shadowed=(I.shadowed!==false);F=AJS.$(AJS.template(H).fill({type:D,closeable:I.closeable?"closeable":"",shadowed:I.shadowed?"shadowed":"",fadeout:I.fadeout?"fadeout":"",title:I.title||"","body:html":I.body||""}).toString());if(I.id){if(/[#\'\"\.\s]/g.test(I.id)){AJS.log("AJS.Messages error: ID rejected, must not include spaces, hashes, dots or quotes.")}else{F.attr("id",I.id)}}E=I.insert||"append";if(E==="prepend"){F.prependTo(G)}else{F.appendTo(G)}I.closeable&&AJS.messages.makeCloseable(F);I.fadeout&&AJS.messages.makeFadeout(F,I.delay,I.duration);return F}}};AJS.$.fn.closeMessage=function(){var D=AJS.$(this);if(D.hasClass("aui-message","closeable")){D.stop(true);D.trigger("messageClose",[this]).remove();AJS.$(document).trigger("aui-message-close",[this])}};AJS.$(function(){AJS.messages.setup()})})();
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/tabs.js' */
(function(C){var J=/#.*/;var M="active-tab";var R="active-pane";var F="aria-selected";var G="aria-hidden";var L="data-aui-persist";var B="_internal-aui-tabs-";var A=".aui-tabs.horizontal-tabs[data-aui-responsive]:not([data-aui-responsive='false'])";function K(){var T=C(this);AJS._addID(T);T.attr("role","tab");var S=T.attr("href");C(S).attr("aria-labelledby",T.attr("id"));if(T.parent().hasClass(M)){T.attr(F,"true")}else{T.attr(F,"false")}}var E={totalTabsWidth:function(S,U){var V=this.totalVisibleTabWidth(S);var T=0;U.find("li").each(function(W,X){T+=parseInt(X.getAttribute("data-aui-tab-width"))});return V+T},totalVisibleTabWidth:function(T){var S=0;T.each(function(U,V){S+=C(V).outerWidth()});return S},removeResponsiveDropdown:function(T,S){T.remove();S.remove()},createResponsiveDropdownTrigger:function(T,V){var U='<li class="menu-item aui-tabs-responsive-trigger-item"><a class="aui-dropdown2-trigger aui-tabs-responsive-trigger" id="aui-tabs-responsive-trigger-'+V+'" aria-haspopup="true" aria-owns="aui-tabs-responsive-dropdown-'+V+'" href="aui-tabs-responsive-dropdown-'+V+'">...</a></li>';T.append(U);var S=T.find(".aui-tabs-responsive-trigger-item");return S},createResponsiveDropdown:function(S,V){var T='<div class="aui-dropdown2 aui-style-default aui-tabs-responsive-dropdown" id="aui-tabs-responsive-dropdown-'+V+'"><ul></ul></div>';S.append(T);var U=S.find("#aui-tabs-responsive-dropdown-"+V);return U},findNewVisibleTabs:function(V,W,Z){function Y(a,c,b){return a+c<=b}var T=0;for(var U=0;Y(T,Z,W)&&U<V.length;U++){var X=C(V[U]);var S=X.outerWidth(true);T+=S}return V.slice(0,U-1)},processVisibleTabs:function(T,a,V){var S=V.find("a").attr("aria-owns");var Y=C("#"+S);var X=this.findNewVisibleTabs(T,a.outerWidth(),V.parent().outerWidth(true));var W=X.length-1;for(var U=T.length-1;U>=W;U--){var Z=C(T[U]);this.moveTabToResponsiveDropdown(Z,Y,V)}return C(X)},moveTabToResponsiveDropdown:function(U,V,S){var T=U.find("a");U.attr("data-aui-tab-width",U.outerWidth(true));T.addClass("aui-dropdown2-radio aui-tabs-responsive-item");if(U.hasClass("active-tab")){T.addClass("aui-dropdown2-checked");S.addClass("active-tab")}V.find("ul").prepend(U)},processInvisibleTabs:function(W,Y,T){for(var V=0;Z(Y)&&V<W.length;V++){var X=C(W[V]);var S=parseInt(X.attr("data-aui-tab-width"),10);var U=S<Y;if(U){this.moveTabOutOfDropdown(X,T)}Y-=S}function Z(a){return a>0}},moveTabOutOfDropdown:function(U,T){var S=U.find("a").hasClass("aui-dropdown2-checked");if(S){U.addClass("active-tab");T.removeClass("active-tab")}U.children("a").removeClass("aui-dropdown2-radio aui-tabs-responsive-item aui-dropdown2-checked");T.before(U)}};function P(Y,X){var i=C(Y);var S=i.parent();var V=i.find(".tabs-menu").first();var T=V.find("li:not(.aui-tabs-responsive-trigger-item)");var f=V.find(".aui-tabs-responsive-trigger").parent();var d=f.find("a");var j=d.attr("aria-owns");var U=C(document).find("#"+j).attr("aria-checked",false);var c=U.length>0;var e=E.totalTabsWidth(T,U);var g=e>S.outerWidth();if(!c&&g){f=E.createResponsiveDropdownTrigger(V,X);U=E.createResponsiveDropdown(i,X)}d.attr("aria-owns","aui-tabs-responsive-dropdown-"+X);d.attr("id","aui-tabs-responsive-trigger-"+X);d.attr("href","aui-tabs-responsive-trigger-"+X);U.attr("id","aui-tabs-responsive-dropdown-"+X);if(g){var h=E.processVisibleTabs(T.toArray(),S,f);var W=E.totalVisibleTabWidth(h);var a=S.outerWidth()-W-f.outerWidth(true);var Z=a>0;if(Z){var b=U.find("li");E.processInvisibleTabs(b.toArray(),a,f)}U.on("click","a",O)}if(c&&!g){U.find("li").each(function(){E.moveTabOutOfDropdown(C(this),f)});E.removeResponsiveDropdown(U,f)}}function I(W){if(!W.hasClass("aui-tabs-responsive-trigger")){var V=C(W.attr("href").match(J)[0]);V.addClass(R).attr(G,"false").siblings(".tabs-pane").removeClass(R).attr(G,"true");var T=W.parents(".aui-tabs").find(".aui-tabs-responsive-trigger-item a");var U=T.attr("aria-owns");var X=C(document).find("#"+U);X.find("li a").attr("aria-checked",false).removeClass("checked aui-dropdown2-checked");X.find("li").removeClass("active-tab")}W.parent("li.menu-item").addClass(M).siblings(".menu-item").removeClass(M);if(W.hasClass("aui-tabs-responsive-item")){var S=V.parent(".aui-tabs").find("li.menu-item:not(.aui-tabs-responsive-trigger-item)");S.removeClass(M);S.find("a").removeClass("checked").removeAttr("aria-checked")}W.closest(".tabs-menu").find("a").attr(F,"false");W.attr(F,"true");W.trigger("tabSelect",{tab:W,pane:V})}function D(S){return S.attr(L)!==undefined&&S.attr(L)!=="false"}function H(S){var T=S.attr("id");var U=S.attr(L);return B+(T?T:"")+(U&&U!=="true"?"-"+U:"")}function N(S){for(var X=0,Y=S.length;X<Y;X++){var V=S.eq(X);if(D(V)&&window.localStorage){var W=V.attr("id");if(W){var U=window.localStorage.getItem(H(V));if(U){var T=V.find("#"+U);if(T.length){I(T)}}}else{AJS.warn("A tab group must specify an id attribute if it specifies data-aui-persist")}}}}function Q(V){var T=V.closest(".aui-tabs");var U=T.attr("id");if(U){var S=V.attr("id");if(S){window.localStorage.setItem(H(T),S)}}else{AJS.warn("A tab group must specify an id attribute if it specifies data-aui-persist")}}function O(S){AJS.tabs.change(C(this),S);S&&S.preventDefault()}AJS.tabs={setup:function(){var S=C(".aui-tabs:not(.aui-tabs-disabled)");var U=C(A).toArray();T(U);function T(a){a.forEach(function(b){P(b,W)})}var V=AJS.debounce(T,200);C(window).resize(function(){V(U)});S.attr("role","application");S.find(".tabs-pane").each(function(){var a=C(this);a.attr("role","tabpanel");if(a.hasClass(R)){a.attr(G,"false")}else{a.attr(G,"true")}});for(var W=0,X=S.length;W<X;W++){var Y=S.eq(W);if(!Y.data("aui-tab-events-bound")){var Z=Y.children("ul.tabs-menu");Z.attr("role","tablist");Z.children("li").attr("role","presentation");Z.find("> .menu-item a").each(K);Z.delegate("a","click",O);Y.data("aui-tab-events-bound",true)}}N(S);C(".aui-tabs.vertical-tabs").find("a").each(function(){var a=C(this);if(!a.attr("title")){if(AJS.isClipped(a)){a.attr("title",a.text())}}})},change:function(T,U){I(T);var S=T.closest(".aui-tabs");if(D(S)&&window.localStorage){Q(T)}}};C(AJS.tabs.setup)})(AJS.$);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/template.js' */
AJS.template=(function(G){var J=/\{([^\}]+)\}/g,D=/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,H=/([^\\])'/g,F=function(O,N,P,L){var M=P;N.replace(D,function(S,R,Q,U,T){R=R||U;if(M){if(R+":html" in M){M=M[R+":html"];L=true}else{if(R in M){M=M[R]}}if(T&&typeof M=="function"){M=M()}}});if(M==null||M==P){M=O}M=String(M);if(!L){M=E.escape(M)}return M},B=function(L){this.template=this.template.replace(J,function(N,M){return F(N,M,L,true)});return this},K=function(L){this.template=this.template.replace(J,function(N,M){return F(N,M,L)});return this},C=function(){return this.template};var E=function(M){function L(){return L.template}L.template=String(M);L.toString=L.valueOf=C;L.fill=K;L.fillHtml=B;return L},A={},I=[];E.load=function(L){L=String(L);if(!A.hasOwnProperty(L)){I.length>=1000&&delete A[I.shift()];I.push(L);A[L]=G("script[title='"+L.replace(H,"$1\\'")+"']")[0].text}return this(A[L])};E.escape=AJS.escapeHtml;return E})(AJS.$);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/whenitype.js' */
(function(A,D){var C=navigator.platform.indexOf("Mac")!==-1;var B=/^(backspace|tab|r(ight|eturn)|s(hift|pace|croll)|c(trl|apslock)|alt|pa(use|ge(up|down))|e(sc|nd)|home|left|up|d(el|own)|insert|f\d\d?|numlock|meta)/i;A.whenIType=function(P){var O=[],I=D.Callbacks();function F(Q){if(!AJS.popup.current&&I){I.fire(Q)}}function G(Q){Q.preventDefault()}function N(Q){var R=Q&&Q.split?D.trim(Q).split(" "):[Q];R.forEach(function(S){H(S)})}function K(R){var Q=R.length;while(Q--){if(R[Q].length>1&&R[Q]!=="space"){return true}}return false}function H(S){var R=S instanceof Array?S:M(S.toString());var Q=K(R)?"keydown":"keypress";O.push(R);D(document).bind(Q,R,F);D(document).bind(Q+" keyup",R,G)}function M(S){var U=[],T="";while(S.length){var R=S.match(/^(ctrl|meta|shift|alt)\+/i);var Q=S.match(B);if(R){T+=R[0];S=S.substring(R[0].length)}else{if(Q){U.push(T+Q[0]);S=S.substring(Q[0].length);T=""}else{U.push(T+S[0]);S=S.substring(1);T=""}}}return U}function J(S){var U=D(S),W=U.attr("title")||"",V=O.slice();var R=U.data("kbShortcutAppended")||"";var Q=!R;var T=Q?W:W.substring(0,W.length-R.length);while(V.length){R=E(V.shift().slice(),R,Q);Q=false}if(C){R=R.replace(/Meta/ig,"\u2318").replace(/Shift/ig,"\u21E7")}U.attr("title",T+R);U.data("kbShortcutAppended",R)}function L(R){var S=D(R);var Q=S.data("kbShortcutAppended");if(!Q){return }var T=S.attr("title");S.attr("title",T.replace(Q,""));S.removeData("kbShortcutAppended")}function E(S,R,Q){if(Q){R+=" ("+AJS.format("Type \'\'{0}\'\'",S.shift())}else{R=R.replace(/\)$/,"");R+=AJS.format("OR \'\'{0}\'\'",S.shift())}S.forEach(function(T){R+=" "+AJS.format("then \'\'{0}\'\'",T)});R+=")";return R}N(P);return A.whenIType.makeShortcut({executor:I,bindKeys:N,addShortcutsToTitle:J,removeShortcutsFromTitle:L,keypressHandler:F,defaultPreventionHandler:G})};A.whenIType.makeShortcut=function(M){var H=M.executor;var K=M.bindKeys;var I=M.addShortcutsToTitle;var J=M.removeShortcutsFromTitle;var F=M.keypressHandler;var G=M.defaultPreventionHandler;var L=[];function E(N){return function(O,Q){Q=Q||{};var P=Q.focusedClass||"focused";var R=Q.hasOwnProperty("wrapAround")?Q.wrapAround:true;var S=Q.hasOwnProperty("escToCancel")?Q.escToCancel:true;H.add(function(){var V=D(O),U=V.filter("."+P),T=U.length===0?undefined:{transition:true};if(S){D(document).one("keydown",function(W){if(W.keyCode===AJS.keyCode.ESCAPE&&U){U.removeClass(P)}})}if(U.length){U.removeClass(P)}U=N(U,V,R);if(U&&U.length>0){U.addClass(P);U.moveTo(T);if(U.is("a")){U.focus()}else{U.find("a:first").focus()}}});return this}}return{moveToNextItem:E(function(P,Q,O){var N;if(O&&P.length===0){return Q.eq(0)}else{N=D.inArray(P.get(0),Q);if(N<Q.length-1){N=N+1;return Q.eq(N)}else{if(O){return Q.eq(0)}}}return P}),moveToPrevItem:E(function(P,Q,O){var N;if(O&&P.length===0){return Q.filter(":last")}else{N=D.inArray(P.get(0),Q);if(N>0){N=N-1;return Q.eq(N)}else{if(O){return Q.filter(":last")}}}return P}),click:function(N){L.push(N);I(N);H.add(function(){var O=D(N);if(O.length>0){O.click()}});return this},goTo:function(N){H.add(function(){window.location.href=N});return this},followLink:function(N){L.push(N);I(N);H.add(function(){var O=D(N)[0];if(O&&{a:true,link:true}[O.nodeName.toLowerCase()]){window.location.href=O.href}});return this},execute:function(O){var N=this;H.add(function(){O.apply(N,arguments)});return this},evaluate:function(N){N.call(this)},moveToAndClick:function(N){L.push(N);I(N);H.add(function(){var O=D(N);if(O.length>0){O.click();O.moveTo()}});return this},moveToAndFocus:function(N){L.push(N);I(N);H.add(function(P){var O=AJS.$(N);if(O.length>0){O.focus();if(O.moveTo){O.moveTo()}if(O.is(":input")){P.preventDefault()}}});return this},or:function(N){K(N);return this},unbind:function(){D(document).unbind("keydown keypress",F).unbind("keydown keypress keyup",G);for(var O=0,N=L.length;O<N;O++){J(L[O])}L=[]}}};A.whenIType.fromJSON=function(G,F){var E=[];if(G){D.each(G,function(I,J){var H=J.op,M=J.param,L;if(H==="execute"||H==="evaluate"){L=[new Function(M)]}else{if(/^\[[^\]\[]*,[^\]\[]*\]$/.test(M)){try{L=JSON.parse(M)}catch(K){AJS.error("When using a parameter array, array must be in strict JSON format: "+M)}if(!D.isArray(L)){AJS.error("Badly formatted shortcut parameter. String or JSON Array of parameters required: "+M)}}else{L=[M]}}D.each(J.keys,function(){var N=this;if(F&&C){N=D.map(N,function(P){return P.replace(/ctrl/i,"meta")})}var O=AJS.whenIType(N);O[H].apply(O,L);E.push(O)})})}return E};D(document).bind("iframeAppended",function(F,E){D(E).load(function(){var G=D(E).contents();G.bind("keyup keydown keypress",function(H){if(D.browser.safari&&H.type==="keypress"){return }if(!D(H.target).is(":input")){D.event.trigger(H,arguments,document,true)}})})})})(AJS,AJS.$);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/jquery/jquery.is-dirty.js' */
jQuery.fn.isDirty=function(){var B,A=[];window.onbeforeunload=function(){var C=window.onbeforeunload;if(B!==false){jQuery.each(A,function(){if(this.initVal!==AJS.$(this).val()){B=true;return false}})}if(B){window.onbeforeunload=null;window.setTimeout(function(){jQuery(document).bind("mousemove",function(){window.onbeforeunload=C;jQuery(document).unbind("mousemove",arguments.callee)})},1000);B=void (0);return AJS.params.dirtyMessage||""}};return function(D){if(this.length===0){return }function C(F){var E=jQuery(this);jQuery.fn.isDirty.fieldInFocus=E;if(jQuery.inArray(this,A)===-1){this.initVal=E.val();A.push(this);E.die(F.type,C)}}jQuery(":not(:input)").live("click",function(){delete jQuery.fn.isDirty.fieldInFocus});jQuery(":input[type != hidden]",this.selector).bind("keydown",C).bind("keypress",C).bind("click",C);jQuery(D.ignoreUnloadFromElems).live("mousedown",function(){B=false});this.each(function(){this.onsubmit=function(E){return function(){B=false;if(E){return E.apply(this,arguments)}}}(this.onsubmit);AJS.$(this).submit(function(){B=false})});return this}}();
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/jquery/jquery.progressbar.js' */
(function(A){A.fn.progressBar=function(I,L){var C=this;var F={height:"1em",showPercentage:true};var B=A.extend(F,L);var J=C.attr("id")+"-incomplete-bar";var D=C.attr("id")+"-complete-bar";var K=C.attr("id")+"-percent-complete-text";if(A("#"+J).length==0){var E=A(document.createElement("div"));E.attr("id",J);E.css({width:"90%",border:"solid 1px #ccc","float":"left","margin-right":"0.5em"});E.addClass("progress-background-color");var G=A(document.createElement("div"));G.attr("id",D);G.addClass("progress-fill-color");G.css({height:B.height,width:I+"%"});var H=A(document.createElement("span"));H.attr("id",K);H.addClass("percent-complete-text");H.html(I+"%");E.append(G);C.append(E);if(B.showPercentage){C.append(H)}}else{A("#"+D).css("width",I+"%");A("#"+K).html(I+"%")}}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/jquery/jquery.selection.js' */
(function(A){if(document.selection){var B=function(C){return C.replace(/\u000D/g,"")};A.fn.selection=function(F){var E=this[0];this.focus();if(!E){return false}if(F==null){return document.selection.createRange().text}else{var D=E.scrollTop;var C=document.selection.createRange();C.text=F;C.select();E.focus();E.scrollTop=D}};A.fn.selectionRange=function(C,F){var G=this[0];this.focus();var I=document.selection.createRange();if(C==null){var K=this.val(),J=K.length,E=I.duplicate();E.moveToElementText(G);E.setEndPoint("StartToEnd",I);var D=J-B(E.text).length;E.setEndPoint("StartToStart",I);var H=J-B(E.text).length;if(D!=H&&K.charAt(D+1)=="\n"){D+=1}return{end:D,start:H,text:K.substring(H,D),textBefore:K.substring(0,H),textAfter:K.substring(D)}}else{I.moveToElementText(G);I.collapse(true);I.moveStart("character",C);I.moveEnd("character",F-C);I.select()}}}else{A.fn.selection=function(E){var D=this[0];if(!D){return false}if(E==null){if(D.setSelectionRange){return D.value.substring(D.selectionStart,D.selectionEnd)}else{return false}}else{var C=D.scrollTop;if(!!D.setSelectionRange){var F=D.selectionStart;D.value=D.value.substring(0,F)+E+D.value.substring(D.selectionEnd);D.selectionStart=F;D.selectionEnd=F+E.length}D.focus();D.scrollTop=C}};A.fn.selectionRange=function(F,C){if(F==null){var D={start:this[0].selectionStart,end:this[0].selectionEnd};var E=this.val();D.text=E.substring(D.start,D.end);D.textBefore=E.substring(0,D.start);D.textAfter=E.substring(D.end);return D}else{this[0].selectionStart=F;this[0].selectionEnd=C}}}A.fn.wrapSelection=function(C,D){this.selection(C+this.selection()+(D||""))}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs', location = 'js/jquery/jquery.throbber.js' */
jQuery.fn.throbber=function(A){return function(){var C=[],B={isLatentThreshold:100,minThrobberDisplay:200,loadingClass:"loading"};A(document).ajaxComplete(function(E,D){A(C).each(function(F){if(D===this.get(0)){this.hideThrobber();C.splice(F,1)}})});return function(F){var E,G,D=function(I,H){D.t=setTimeout(function(){clearTimeout(D.t);D.t=undefined;I()},H)};F=A.extend(B,F||{});if(!F.target){return this}G=jQuery(F.target);C.push(A.extend(this,{showThrobber:function(){D(function(){if(!E){G.addClass(F.loadingClass);D(function(){if(E){E()}},F.minThrobberDisplay)}},F.isLatentThreshold)},hideThrobber:function(){E=function(){G.removeClass(F.loadingClass);if(F.end){F.end()}};if(!D.t){E()}}}));this.showThrobber();return this}}()}(jQuery);
/* module-key = 'com.atlassian.analytics.analytics-client:js-events', location = 'js/store-1.3.1.js' */
(function(){var l={},h=window,k=h.document,c="localStorage",n="globalStorage",d="__storejs__",g;l.disabled=false;l.set=function(e,o){};l.get=function(e){};l.remove=function(e){};l.clear=function(){};l.transact=function(e,o){var p=l.get(e);if(typeof p=="undefined"){p={}}o(p);l.set(e,p)};l.serialize=function(e){return JSON.stringify(e)};l.deserialize=function(e){if(typeof e!="string"){return undefined}return JSON.parse(e)};function b(){try{return(c in h&&h[c])}catch(e){return false}}function m(){try{return(n in h&&h[n]&&h[n][h.location.hostname])}catch(e){return false}}if(b()){g=h[c];l.set=function(e,o){if(o===undefined){return l.remove(e)}g.setItem(e,l.serialize(o))};l.get=function(e){return l.deserialize(g.getItem(e))};l.remove=function(e){g.removeItem(e)};l.clear=function(){g.clear()}}else{if(m()){g=h[n][h.location.hostname];l.set=function(e,o){if(o===undefined){return l.remove(e)}g[e]=l.serialize(o)};l.get=function(e){return l.deserialize(g[e]&&g[e].value)};l.remove=function(e){delete g[e]};l.clear=function(){for(var e in g){delete g[e]}}}else{if(k.documentElement.addBehavior){var j,f;try{f=new ActiveXObject("htmlfile");f.open();f.write('<script>document.w=window<\/script><iframe src="/favicon.ico"></frame>');f.close();j=f.w.frames[0].document;g=j.createElement("div")}catch(i){g=k.createElement("div");j=k.body}function a(e){return function(){var p=Array.prototype.slice.call(arguments,0);p.unshift(g);j.appendChild(g);g.addBehavior("#default#userData");g.load(c);var o=e.apply(l,p);j.removeChild(g);return o}}l.set=a(function(p,e,o){if(o===undefined){return l.remove(e)}p.setAttribute(e,l.serialize(o));p.save(c)});l.get=a(function(o,e){return l.deserialize(o.getAttribute(e))});l.remove=a(function(o,e){o.removeAttribute(e);o.save(c)});l.clear=a(function(q){var o=q.XMLDocument.documentElement.attributes;q.load(c);for(var p=0,e;e=o[p];p++){q.removeAttribute(e.name)}q.save(c)})}}}try{l.set(d,d);if(l.get(d)!=d){l.disabled=true}l.remove(d)}catch(i){l.disabled=true}if(typeof module!="undefined"){module.exports=l}else{if(typeof define==="function"&&define.amd){define(l)}else{this.store=l}}})();
/* module-key = 'com.atlassian.analytics.analytics-client:js-events', location = 'js/atlassian-analytics.js' */
(function(b){var m=AJS.$.ajax;var h="atlassian-analytics";var g=typeof AJS.contextPath=="function"?AJS.contextPath():typeof AJS.Confluence!="undefined"?AJS.Confluence.getContextPath():window.contextPath!=null?window.contextPath:"";var l=null;var i=null;var d=null;var n="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(u){var t=Math.random()*16|0,s=u=="x"?t:(t&3|8);return s.toString(16)});var p=function(){var s="unknown";if(document.body.id=="jira"){s="jira"}else{if(document.body.id=="com-atlassian-confluence"){s="confluence"}}i=h+"."+s;d=i+".lock"};var c=function(){if(store.get(d)){return false}store.set(d,n);return(store.get(d)===n)};var q=function(){store.set(d,null)};var f=function(){var t=[],v,w,s,u;if(AJS.EventQueue.length==0){return}t=store.get(i)||t;for(s=0,u=AJS.EventQueue.length;s<u;++s){w=AJS.EventQueue[s];if(w.name){v={name:w.name,properties:w.properties,time:w.time||0};t.push(v)}}AJS.EventQueue.length=0;store.set(i,t)};var e=function(){var t;if(!c()){return}f();t=store.get(i);if(t&&t.length){store.remove(i);q();if(k(t)){var u=new Date().getTime();for(var s=0;s<t.length;s++){if(t[s].time>0){t[s].timeDelta=t[s].time-u}else{t[s].timeDelta=s-t.length}delete t[s].time}l=m({type:"POST",url:g+"/rest/analytics/1.0/publish/bulk",data:JSON.stringify(t),contentType:"application/json",dataType:"json"});l.fail(function(){AJS.EventQueue.concat(t);f()})}}else{q()}};var k=function(u){for(var t=u.length-1;t>=0;t--){var w="";var v=u[t];var s=v.properties;if(typeof v.name==="undefined"){w="you must provide a name for the event."}else{if(typeof s!=="undefined"&&s!==null){if(s.constructor!==Object){w="properties must be an object with key value pairs."}else{a(s)}}}if(w!==""){AJS.log("WARN: Invalid analytics event detected and ignored, "+w+"\nEvent: "+JSON.stringify(v));u.splice(t,1)}}return u.length};var a=function(u){for(var t in u){if(u.hasOwnProperty(t)){var s=u[t];if(typeof s!=="undefined"&&s!==null&&s.toString){u[t]=s.toString()}else{u[t]=""}}}};var j=function(){if(l&&!(l.state()==="resolved"||l.state()==="rejected")){l.abort()}};AJS.EventQueue=AJS.EventQueue||[];var o=Array.prototype.push;AJS.EventQueue.push=function(s){s.time=new Date().getTime();o.call(AJS.EventQueue,s)};AJS.toInit(function(){p();setTimeout(e,500);setInterval(e,5000);r()});b(window).unload(function(){j();f()});AJS.Analytics={triggerPrivacyPolicySafeEvent:function(s,t){AJS.log("WARN: 'triggerPrivacyPolicySafeEvent' has been deprecated");AJS.EventQueue.push({name:s,properties:t})}};AJS.bind("analytics",function(s,t){AJS.EventQueue.push({name:t.name,properties:t.data})});AJS.bind("analyticsEvent",function(s,t){AJS.EventQueue.push({name:t.name,properties:t.data})});var r=function(){if(window.location.pathname.indexOf("/secure/admin/ViewApplicationProperties")>-1){AJS.$("[data-property-id='analytics-enabled']").remove()}else{if(window.location.pathname.indexOf("/secure/admin/EditApplicationProperties")>-1){var t=AJS.$(":contains(Enable Atlassian analytics)");if(t.size()>0){var s=t[t.size()-2];if(s){s.remove()}}}}}}(AJS.$));
/* module-key = 'com.atlassian.analytics.analytics-client:policy-update', location = 'js/policy-update.js' */

/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:application-header-administration-cog-resource', location = 'header/cog.js' */
var NavLinks=(function(a){a.ApplicationHeader=function(b){b.Cog=(function(){var c=function(){var d=AJS.$("#system-admin-menu-content");if(d.length>0){return d}var e=AJS.$("#admin-menu-link-content");if(e.length>0){return e}return AJS.$("#bamboo\\.global\\.header-admin\\.menu")};return{getDropdown:c}}());return b}(a.ApplicationHeader||{});return a}(NavLinks||{}));
/* module-key = 'com.atlassian.soy.soy-template-plugin:soy-deps', location = 'js/soyutils.js' */
/*!
 * Copyright 2008 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var goog=goog||{};goog.inherits=function(b,a){function c(){}c.prototype=a.prototype;b.superClass_=a.prototype;b.prototype=new c();b.prototype.constructor=b};if(!goog.userAgent){goog.userAgent=(function(){var b="";if("undefined"!==typeof navigator&&navigator&&"string"==typeof navigator.userAgent){b=navigator.userAgent}var a=b.indexOf("Opera")==0;return{HAS_JSCRIPT:typeof"ScriptEngine" in this,IS_OPERA:a,IS_IE:!a&&b.indexOf("MSIE")!=-1,IS_WEBKIT:!a&&b.indexOf("WebKit")!=-1}})()}if(!goog.asserts){goog.asserts={fail:function(a){}}}if(!goog.dom){goog.dom={};goog.dom.DomHelper=function(a){this.document_=a||document};goog.dom.DomHelper.prototype.getDocument=function(){return this.document_};goog.dom.DomHelper.prototype.createElement=function(a){return this.document_.createElement(a)};goog.dom.DomHelper.prototype.createDocumentFragment=function(){return this.document_.createDocumentFragment()}}if(!goog.format){goog.format={insertWordBreaks:function(j,a){j=String(j);var f=[];var h=0;var b=false;var k=false;var g=0;var d=0;for(var e=0,c=j.length;e<c;++e){var l=j.charCodeAt(e);if(g>=a&&l!=32){f[h++]=j.substring(d,e);d=e;f[h++]=goog.format.WORD_BREAK;g=0}if(b){if(l==62){b=false}}else{if(k){switch(l){case 59:k=false;++g;break;case 60:k=false;b=true;break;case 32:k=false;g=0;break}}else{switch(l){case 60:b=true;break;case 38:k=true;break;case 32:g=0;break;default:++g;break}}}}f[h++]=j.substring(d);return f.join("")},WORD_BREAK:goog.userAgent.IS_WEBKIT?"<wbr></wbr>":goog.userAgent.IS_OPERA?"&shy;":"<wbr>"}}if(!goog.i18n){goog.i18n={bidi:{detectRtlDirectionality:function(b,a){b=soyshim.$$bidiStripHtmlIfNecessary_(b,a);return soyshim.$$bidiRtlWordRatio_(b)>soyshim.$$bidiRtlDetectionThreshold_}}}}goog.i18n.bidi.Dir={RTL:-1,UNKNOWN:0,LTR:1};goog.i18n.bidi.toDir=function(a){if(typeof a=="number"){return a>0?goog.i18n.bidi.Dir.LTR:a<0?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.UNKNOWN}else{return a?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR}};goog.i18n.BidiFormatter=function(a){this.dir_=goog.i18n.bidi.toDir(a)};goog.i18n.BidiFormatter.prototype.dirAttr=function(c,a){var b=soy.$$bidiTextDir(c,a);return b&&b!=this.dir_?b<0?"dir=rtl":"dir=ltr":""};goog.i18n.BidiFormatter.prototype.endEdge=function(){return this.dir_<0?"left":"right"};goog.i18n.BidiFormatter.prototype.mark=function(){return((this.dir_>0)?"\u200E":(this.dir_<0)?"\u200F":"")};goog.i18n.BidiFormatter.prototype.markAfter=function(c,a){var b=soy.$$bidiTextDir(c,a);return soyshim.$$bidiMarkAfterKnownDir_(this.dir_,b,c,a)};goog.i18n.BidiFormatter.prototype.spanWrap=function(d,c){d=String(d);var b=soy.$$bidiTextDir(d,true);var a=soyshim.$$bidiMarkAfterKnownDir_(this.dir_,b,d,true);if(b>0&&this.dir_<=0){d="<span dir=ltr>"+d+"</span>"}else{if(b<0&&this.dir_>=0){d="<span dir=rtl>"+d+"</span>"}}return d+a};goog.i18n.BidiFormatter.prototype.startEdge=function(){return this.dir_<0?"right":"left"};goog.i18n.BidiFormatter.prototype.unicodeWrap=function(d,c){d=String(d);var b=soy.$$bidiTextDir(d,true);var a=soyshim.$$bidiMarkAfterKnownDir_(this.dir_,b,d,true);if(b>0&&this.dir_<=0){d="\u202A"+d+"\u202C"}else{if(b<0&&this.dir_>=0){d="\u202B"+d+"\u202C"}}return d+a};goog.string={newLineToBr:function(b,a){b=String(b);if(!goog.string.NEWLINE_TO_BR_RE_.test(b)){return b}return b.replace(/(\r\n|\r|\n)/g,a?"<br />":"<br>")},urlEncode:encodeURIComponent,NEWLINE_TO_BR_RE_:/[\r\n]/};goog.string.StringBuffer=function(a,b){this.buffer_=goog.userAgent.HAS_JSCRIPT?[]:"";if(a!=null){this.append.apply(this,arguments)}};goog.string.StringBuffer.prototype.bufferLength_=0;goog.string.StringBuffer.prototype.append=function(c,b,e){if(goog.userAgent.HAS_JSCRIPT){if(b==null){this.buffer_[this.bufferLength_++]=c}else{var a=this.buffer_;a.push.apply(a,arguments);this.bufferLength_=this.buffer_.length}}else{this.buffer_+=c;if(b!=null){for(var d=1;d<arguments.length;d++){this.buffer_+=arguments[d]}}}return this};goog.string.StringBuffer.prototype.clear=function(){if(goog.userAgent.HAS_JSCRIPT){this.buffer_.length=0;this.bufferLength_=0}else{this.buffer_=""}};goog.string.StringBuffer.prototype.toString=function(){if(goog.userAgent.HAS_JSCRIPT){var a=this.buffer_.join("");this.clear();if(a){this.append(a)}return a}else{return(this.buffer_)}};if(!goog.soy){goog.soy={renderAsElement:function(c,a,b,d){return(soyshim.$$renderWithWrapper_(c,a,d,true,b))},renderAsFragment:function(c,a,b,d){return soyshim.$$renderWithWrapper_(c,a,d,false,b)},renderElement:function(c,d,a,b){c.innerHTML=d(a,null,b)}}}var soy={esc:{}};var soydata={};var soyshim={$$DEFAULT_TEMPLATE_DATA_:{}};soyshim.$$renderWithWrapper_=function(h,f,b,c,i){var d=b||document;var a=d.createElement("div");a.innerHTML=h(f||soyshim.$$DEFAULT_TEMPLATE_DATA_,undefined,i);if(a.childNodes.length==1){var g=a.firstChild;if(!c||g.nodeType==1){return(g)}}if(c){return a}var e=d.createDocumentFragment();while(a.firstChild){e.appendChild(a.firstChild)}return e};soyshim.$$bidiMarkAfterKnownDir_=function(c,b,d,a){return(c>0&&(b<0||soyshim.$$bidiIsRtlExitText_(d,a))?"\u200E":c<0&&(b>0||soyshim.$$bidiIsLtrExitText_(d,a))?"\u200F":"")};soyshim.$$bidiStripHtmlIfNecessary_=function(b,a){return a?b.replace(soyshim.$$BIDI_HTML_SKIP_RE_," "):b};soyshim.$$BIDI_HTML_SKIP_RE_=/<[^>]*>|&[^;]+;/g;soyshim.$$bidiLtrChars_="A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02B8\u0300-\u0590\u0800-\u1FFF\u2C00-\uFB1C\uFDFE-\uFE6F\uFEFD-\uFFFF";soyshim.$$bidiNeutralChars_="\u0000-\u0020!-@[-`{-\u00BF\u00D7\u00F7\u02B9-\u02FF\u2000-\u2BFF";soyshim.$$bidiRtlChars_="\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC";soyshim.$$bidiRtlDirCheckRe_=new RegExp("^[^"+soyshim.$$bidiLtrChars_+"]*["+soyshim.$$bidiRtlChars_+"]");soyshim.$$bidiNeutralDirCheckRe_=new RegExp("^["+soyshim.$$bidiNeutralChars_+"]*$|^http://");soyshim.$$bidiIsRtlText_=function(a){return soyshim.$$bidiRtlDirCheckRe_.test(a)};soyshim.$$bidiIsNeutralText_=function(a){return soyshim.$$bidiNeutralDirCheckRe_.test(a)};soyshim.$$bidiRtlDetectionThreshold_=0.4;soyshim.$$bidiRtlWordRatio_=function(e){var b=0;var a=0;var d=e.split(" ");for(var c=0;c<d.length;c++){if(soyshim.$$bidiIsRtlText_(d[c])){b++;a++}else{if(!soyshim.$$bidiIsNeutralText_(d[c])){a++}}}return a==0?0:b/a};soyshim.$$bidiLtrExitDirCheckRe_=new RegExp("["+soyshim.$$bidiLtrChars_+"][^"+soyshim.$$bidiRtlChars_+"]*$");soyshim.$$bidiRtlExitDirCheckRe_=new RegExp("["+soyshim.$$bidiRtlChars_+"][^"+soyshim.$$bidiLtrChars_+"]*$");soyshim.$$bidiIsLtrExitText_=function(b,a){b=soyshim.$$bidiStripHtmlIfNecessary_(b,a);return soyshim.$$bidiLtrExitDirCheckRe_.test(b)};soyshim.$$bidiIsRtlExitText_=function(b,a){b=soyshim.$$bidiStripHtmlIfNecessary_(b,a);return soyshim.$$bidiRtlExitDirCheckRe_.test(b)};soy.StringBuilder=goog.string.StringBuffer;soydata.SanitizedContentKind={HTML:0,JS_STR_CHARS:1,URI:2,HTML_ATTRIBUTE:3};soydata.SanitizedContent=function(a){this.content=a};soydata.SanitizedContent.prototype.contentKind;soydata.SanitizedContent.prototype.toString=function(){return this.content};soydata.SanitizedHtml=function(a){soydata.SanitizedContent.call(this,a)};goog.inherits(soydata.SanitizedHtml,soydata.SanitizedContent);soydata.SanitizedHtml.prototype.contentKind=soydata.SanitizedContentKind.HTML;soydata.SanitizedJsStrChars=function(a){soydata.SanitizedContent.call(this,a)};goog.inherits(soydata.SanitizedJsStrChars,soydata.SanitizedContent);soydata.SanitizedJsStrChars.prototype.contentKind=soydata.SanitizedContentKind.JS_STR_CHARS;soydata.SanitizedUri=function(a){soydata.SanitizedContent.call(this,a)};goog.inherits(soydata.SanitizedUri,soydata.SanitizedContent);soydata.SanitizedUri.prototype.contentKind=soydata.SanitizedContentKind.URI;soydata.SanitizedHtmlAttribute=function(a){soydata.SanitizedContent.call(this,a)};goog.inherits(soydata.SanitizedHtmlAttribute,soydata.SanitizedContent);soydata.SanitizedHtmlAttribute.prototype.contentKind=soydata.SanitizedContentKind.HTML_ATTRIBUTE;soy.renderElement=goog.soy.renderElement;soy.renderAsFragment=function(d,b,a,c){return goog.soy.renderAsFragment(d,b,c,new goog.dom.DomHelper(a))};soy.renderAsElement=function(d,b,a,c){return goog.soy.renderAsElement(d,b,c,new goog.dom.DomHelper(a))};soy.$$augmentData=function(d,a){function e(){}e.prototype=d;var c=new e();for(var b in a){c[b]=a[b]}return c};soy.$$getMapKeys=function(c){var b=[];for(var a in c){b.push(a)}return b};soy.$$getDelegateId=function(a){return a};soy.$$DELEGATE_REGISTRY_PRIORITIES_={};soy.$$DELEGATE_REGISTRY_FUNCTIONS_={};soy.$$registerDelegateFn=function(e,c,b){var d="key_"+e;var a=soy.$$DELEGATE_REGISTRY_PRIORITIES_[d];if(a===undefined||c>a){soy.$$DELEGATE_REGISTRY_PRIORITIES_[d]=c;soy.$$DELEGATE_REGISTRY_FUNCTIONS_[d]=b}else{if(c==a){throw Error('Encountered two active delegates with same priority (id/name "'+e+'").')}else{}}};soy.$$getDelegateFn=function(b){var a=soy.$$DELEGATE_REGISTRY_FUNCTIONS_["key_"+b];return a?a:soy.$$EMPTY_TEMPLATE_FN_};soy.$$EMPTY_TEMPLATE_FN_=function(a,c,b){return""};soy.$$escapeHtml=function(a){if(typeof a==="object"&&a&&a.contentKind===soydata.SanitizedContentKind.HTML){return a.content}return soy.esc.$$escapeHtmlHelper(a)};soy.$$escapeHtmlRcdata=function(a){if(typeof a==="object"&&a&&a.contentKind===soydata.SanitizedContentKind.HTML){return soy.esc.$$normalizeHtmlHelper(a.content)}return soy.esc.$$escapeHtmlHelper(a)};soy.$$stripHtmlTags=function(a){return String(a).replace(soy.esc.$$HTML_TAG_REGEX_,"")};soy.$$escapeHtmlAttribute=function(a){if(typeof a==="object"&&a&&a.contentKind===soydata.SanitizedContentKind.HTML){return soy.esc.$$normalizeHtmlHelper(soy.$$stripHtmlTags(a.content))}return soy.esc.$$escapeHtmlHelper(a)};soy.$$escapeHtmlAttributeNospace=function(a){if(typeof a==="object"&&a&&a.contentKind===soydata.SanitizedContentKind.HTML){return soy.esc.$$normalizeHtmlNospaceHelper(soy.$$stripHtmlTags(a.content))}return soy.esc.$$escapeHtmlNospaceHelper(a)};soy.$$filterHtmlAttribute=function(a){if(typeof a==="object"&&a&&a.contentKind===soydata.SanitizedContentKind.HTML_ATTRIBUTE){return a.content.replace(/=([^"']*)$/,'="$1"')}return soy.esc.$$filterHtmlAttributeHelper(a)};soy.$$filterHtmlElementName=function(a){return soy.esc.$$filterHtmlElementNameHelper(a)};soy.$$escapeJs=function(a){return soy.$$escapeJsString(a)};soy.$$escapeJsString=function(a){if(typeof a==="object"&&a.contentKind===soydata.SanitizedContentKind.JS_STR_CHARS){return a.content}return soy.esc.$$escapeJsStringHelper(a)};soy.$$escapeJsValue=function(a){if(a==null){return" null "}switch(typeof a){case"boolean":case"number":return" "+a+" ";default:return"'"+soy.esc.$$escapeJsStringHelper(String(a))+"'"}};soy.$$escapeJsRegex=function(a){return soy.esc.$$escapeJsRegexHelper(a)};soy.$$problematicUriMarks_=/['()]/g;soy.$$pctEncode_=function(a){return"%"+a.charCodeAt(0).toString(16)};soy.$$escapeUri=function(a){if(typeof a==="object"&&a.contentKind===soydata.SanitizedContentKind.URI){return soy.$$normalizeUri(a)}var b=soy.esc.$$escapeUriHelper(a);soy.$$problematicUriMarks_.lastIndex=0;if(soy.$$problematicUriMarks_.test(b)){return b.replace(soy.$$problematicUriMarks_,soy.$$pctEncode_)}return b};soy.$$normalizeUri=function(a){return soy.esc.$$normalizeUriHelper(a)};soy.$$filterNormalizeUri=function(a){return soy.esc.$$filterNormalizeUriHelper(a)};soy.$$escapeCssString=function(a){return soy.esc.$$escapeCssStringHelper(a)};soy.$$filterCssValue=function(a){if(a==null){return""}return soy.esc.$$filterCssValueHelper(a)};soy.$$changeNewlineToBr=function(a){return goog.string.newLineToBr(String(a),false)};soy.$$insertWordBreaks=function(b,a){return goog.format.insertWordBreaks(String(b),a)};soy.$$truncate=function(c,a,b){c=String(c);if(c.length<=a){return c}if(b){if(a>3){a-=3}else{b=false}}if(soy.$$isHighSurrogate_(c.charAt(a-1))&&soy.$$isLowSurrogate_(c.charAt(a))){a-=1}c=c.substring(0,a);if(b){c+="..."}return c};soy.$$isHighSurrogate_=function(a){return 55296<=a&&a<=56319};soy.$$isLowSurrogate_=function(a){return 56320<=a&&a<=57343};soy.$$bidiFormatterCache_={};soy.$$getBidiFormatterInstance_=function(a){return soy.$$bidiFormatterCache_[a]||(soy.$$bidiFormatterCache_[a]=new goog.i18n.BidiFormatter(a))};soy.$$bidiTextDir=function(b,a){if(!b){return 0}return goog.i18n.bidi.detectRtlDirectionality(b,a)?-1:1};soy.$$bidiDirAttr=function(b,c,a){return new soydata.SanitizedHtmlAttribute(soy.$$getBidiFormatterInstance_(b).dirAttr(c,a))};soy.$$bidiMarkAfter=function(b,d,a){var c=soy.$$getBidiFormatterInstance_(b);return c.markAfter(d,a)};soy.$$bidiSpanWrap=function(a,c){var b=soy.$$getBidiFormatterInstance_(a);return b.spanWrap(c+"",true)};soy.$$bidiUnicodeWrap=function(a,c){var b=soy.$$getBidiFormatterInstance_(a);return b.unicodeWrap(c+"",true)};soy.esc.$$escapeUriHelper=function(a){return encodeURIComponent(String(a))};soy.esc.$$ESCAPE_MAP_FOR_ESCAPE_HTML__AND__NORMALIZE_HTML__AND__ESCAPE_HTML_NOSPACE__AND__NORMALIZE_HTML_NOSPACE_={"\x00":"\x26#0;","\x22":"\x26quot;","\x26":"\x26amp;","\x27":"\x26#39;","\x3c":"\x26lt;","\x3e":"\x26gt;","\x09":"\x26#9;","\x0a":"\x26#10;","\x0b":"\x26#11;","\x0c":"\x26#12;","\x0d":"\x26#13;"," ":"\x26#32;","-":"\x26#45;","/":"\x26#47;","\x3d":"\x26#61;","`":"\x26#96;","\x85":"\x26#133;","\xa0":"\x26#160;","\u2028":"\x26#8232;","\u2029":"\x26#8233;"};soy.esc.$$REPLACER_FOR_ESCAPE_HTML__AND__NORMALIZE_HTML__AND__ESCAPE_HTML_NOSPACE__AND__NORMALIZE_HTML_NOSPACE_=function(a){return soy.esc.$$ESCAPE_MAP_FOR_ESCAPE_HTML__AND__NORMALIZE_HTML__AND__ESCAPE_HTML_NOSPACE__AND__NORMALIZE_HTML_NOSPACE_[a]};soy.esc.$$ESCAPE_MAP_FOR_ESCAPE_JS_STRING__AND__ESCAPE_JS_REGEX_={"\x00":"\\x00","\x08":"\\x08","\x09":"\\t","\x0a":"\\n","\x0b":"\\x0b","\x0c":"\\f","\x0d":"\\r","\x22":"\\x22","\x26":"\\x26","\x27":"\\x27","/":"\\/","\x3c":"\\x3c","\x3d":"\\x3d","\x3e":"\\x3e","\\":"\\\\","\x85":"\\x85","\u2028":"\\u2028","\u2029":"\\u2029","$":"\\x24","(":"\\x28",")":"\\x29","*":"\\x2a","+":"\\x2b",",":"\\x2c","-":"\\x2d",".":"\\x2e",":":"\\x3a","?":"\\x3f","[":"\\x5b","]":"\\x5d","^":"\\x5e","{":"\\x7b","|":"\\x7c","}":"\\x7d"};soy.esc.$$REPLACER_FOR_ESCAPE_JS_STRING__AND__ESCAPE_JS_REGEX_=function(a){return soy.esc.$$ESCAPE_MAP_FOR_ESCAPE_JS_STRING__AND__ESCAPE_JS_REGEX_[a]};soy.esc.$$ESCAPE_MAP_FOR_ESCAPE_CSS_STRING_={"\x00":"\\0 ","\x08":"\\8 ","\x09":"\\9 ","\x0a":"\\a ","\x0b":"\\b ","\x0c":"\\c ","\x0d":"\\d ","\x22":"\\22 ","\x26":"\\26 ","\x27":"\\27 ","(":"\\28 ",")":"\\29 ","*":"\\2a ","/":"\\2f ",":":"\\3a ",";":"\\3b ","\x3c":"\\3c ","\x3d":"\\3d ","\x3e":"\\3e ","@":"\\40 ","\\":"\\5c ","{":"\\7b ","}":"\\7d ","\x85":"\\85 ","\xa0":"\\a0 ","\u2028":"\\2028 ","\u2029":"\\2029 "};soy.esc.$$REPLACER_FOR_ESCAPE_CSS_STRING_=function(a){return soy.esc.$$ESCAPE_MAP_FOR_ESCAPE_CSS_STRING_[a]};soy.esc.$$ESCAPE_MAP_FOR_NORMALIZE_URI__AND__FILTER_NORMALIZE_URI_={"\x00":"%00","\x01":"%01","\x02":"%02","\x03":"%03","\x04":"%04","\x05":"%05","\x06":"%06","\x07":"%07","\x08":"%08","\x09":"%09","\x0a":"%0A","\x0b":"%0B","\x0c":"%0C","\x0d":"%0D","\x0e":"%0E","\x0f":"%0F","\x10":"%10","\x11":"%11","\x12":"%12","\x13":"%13","\x14":"%14","\x15":"%15","\x16":"%16","\x17":"%17","\x18":"%18","\x19":"%19","\x1a":"%1A","\x1b":"%1B","\x1c":"%1C","\x1d":"%1D","\x1e":"%1E","\x1f":"%1F"," ":"%20","\x22":"%22","\x27":"%27","(":"%28",")":"%29","\x3c":"%3C","\x3e":"%3E","\\":"%5C","{":"%7B","}":"%7D","\x7f":"%7F","\x85":"%C2%85","\xa0":"%C2%A0","\u2028":"%E2%80%A8","\u2029":"%E2%80%A9","\uff01":"%EF%BC%81","\uff03":"%EF%BC%83","\uff04":"%EF%BC%84","\uff06":"%EF%BC%86","\uff07":"%EF%BC%87","\uff08":"%EF%BC%88","\uff09":"%EF%BC%89","\uff0a":"%EF%BC%8A","\uff0b":"%EF%BC%8B","\uff0c":"%EF%BC%8C","\uff0f":"%EF%BC%8F","\uff1a":"%EF%BC%9A","\uff1b":"%EF%BC%9B","\uff1d":"%EF%BC%9D","\uff1f":"%EF%BC%9F","\uff20":"%EF%BC%A0","\uff3b":"%EF%BC%BB","\uff3d":"%EF%BC%BD"};soy.esc.$$REPLACER_FOR_NORMALIZE_URI__AND__FILTER_NORMALIZE_URI_=function(a){return soy.esc.$$ESCAPE_MAP_FOR_NORMALIZE_URI__AND__FILTER_NORMALIZE_URI_[a]};soy.esc.$$MATCHER_FOR_ESCAPE_HTML_=/[\x00\x22\x26\x27\x3c\x3e]/g;soy.esc.$$MATCHER_FOR_NORMALIZE_HTML_=/[\x00\x22\x27\x3c\x3e]/g;soy.esc.$$MATCHER_FOR_ESCAPE_HTML_NOSPACE_=/[\x00\x09-\x0d \x22\x26\x27\x2d\/\x3c-\x3e`\x85\xa0\u2028\u2029]/g;soy.esc.$$MATCHER_FOR_NORMALIZE_HTML_NOSPACE_=/[\x00\x09-\x0d \x22\x27\x2d\/\x3c-\x3e`\x85\xa0\u2028\u2029]/g;soy.esc.$$MATCHER_FOR_ESCAPE_JS_STRING_=/[\x00\x08-\x0d\x22\x26\x27\/\x3c-\x3e\\\x85\u2028\u2029]/g;soy.esc.$$MATCHER_FOR_ESCAPE_JS_REGEX_=/[\x00\x08-\x0d\x22\x24\x26-\/\x3a\x3c-\x3f\x5b-\x5e\x7b-\x7d\x85\u2028\u2029]/g;soy.esc.$$MATCHER_FOR_ESCAPE_CSS_STRING_=/[\x00\x08-\x0d\x22\x26-\x2a\/\x3a-\x3e@\\\x7b\x7d\x85\xa0\u2028\u2029]/g;soy.esc.$$MATCHER_FOR_NORMALIZE_URI__AND__FILTER_NORMALIZE_URI_=/[\x00- \x22\x27-\x29\x3c\x3e\\\x7b\x7d\x7f\x85\xa0\u2028\u2029\uff01\uff03\uff04\uff06-\uff0c\uff0f\uff1a\uff1b\uff1d\uff1f\uff20\uff3b\uff3d]/g;soy.esc.$$FILTER_FOR_FILTER_CSS_VALUE_=/^(?!-*(?:expression|(?:moz-)?binding))(?:[.#]?-?(?:[_a-z0-9-]+)(?:-[_a-z0-9-]+)*-?|-?(?:[0-9]+(?:\.[0-9]*)?|\.[0-9]+)(?:[a-z]{1,2}|%)?|!important|)$/i;soy.esc.$$FILTER_FOR_FILTER_NORMALIZE_URI_=/^(?:(?:https?|mailto):|[^&:\/?#]*(?:[\/?#]|$))/i;soy.esc.$$FILTER_FOR_FILTER_HTML_ATTRIBUTE_=/^(?!style|on|action|archive|background|cite|classid|codebase|data|dsync|href|longdesc|src|usemap)(?:[a-z0-9_$:-]*)$/i;soy.esc.$$FILTER_FOR_FILTER_HTML_ELEMENT_NAME_=/^(?!script|style|title|textarea|xmp|no)[a-z0-9_$:-]*$/i;soy.esc.$$escapeHtmlHelper=function(a){var b=String(a);return b.replace(soy.esc.$$MATCHER_FOR_ESCAPE_HTML_,soy.esc.$$REPLACER_FOR_ESCAPE_HTML__AND__NORMALIZE_HTML__AND__ESCAPE_HTML_NOSPACE__AND__NORMALIZE_HTML_NOSPACE_)};soy.esc.$$normalizeHtmlHelper=function(a){var b=String(a);return b.replace(soy.esc.$$MATCHER_FOR_NORMALIZE_HTML_,soy.esc.$$REPLACER_FOR_ESCAPE_HTML__AND__NORMALIZE_HTML__AND__ESCAPE_HTML_NOSPACE__AND__NORMALIZE_HTML_NOSPACE_)};soy.esc.$$escapeHtmlNospaceHelper=function(a){var b=String(a);return b.replace(soy.esc.$$MATCHER_FOR_ESCAPE_HTML_NOSPACE_,soy.esc.$$REPLACER_FOR_ESCAPE_HTML__AND__NORMALIZE_HTML__AND__ESCAPE_HTML_NOSPACE__AND__NORMALIZE_HTML_NOSPACE_)};soy.esc.$$normalizeHtmlNospaceHelper=function(a){var b=String(a);return b.replace(soy.esc.$$MATCHER_FOR_NORMALIZE_HTML_NOSPACE_,soy.esc.$$REPLACER_FOR_ESCAPE_HTML__AND__NORMALIZE_HTML__AND__ESCAPE_HTML_NOSPACE__AND__NORMALIZE_HTML_NOSPACE_)};soy.esc.$$escapeJsStringHelper=function(a){var b=String(a);return b.replace(soy.esc.$$MATCHER_FOR_ESCAPE_JS_STRING_,soy.esc.$$REPLACER_FOR_ESCAPE_JS_STRING__AND__ESCAPE_JS_REGEX_)};soy.esc.$$escapeJsRegexHelper=function(a){var b=String(a);return b.replace(soy.esc.$$MATCHER_FOR_ESCAPE_JS_REGEX_,soy.esc.$$REPLACER_FOR_ESCAPE_JS_STRING__AND__ESCAPE_JS_REGEX_)};soy.esc.$$escapeCssStringHelper=function(a){var b=String(a);return b.replace(soy.esc.$$MATCHER_FOR_ESCAPE_CSS_STRING_,soy.esc.$$REPLACER_FOR_ESCAPE_CSS_STRING_)};soy.esc.$$filterCssValueHelper=function(a){var b=String(a);if(!soy.esc.$$FILTER_FOR_FILTER_CSS_VALUE_.test(b)){return"zSoyz"}return b};soy.esc.$$normalizeUriHelper=function(a){var b=String(a);return b.replace(soy.esc.$$MATCHER_FOR_NORMALIZE_URI__AND__FILTER_NORMALIZE_URI_,soy.esc.$$REPLACER_FOR_NORMALIZE_URI__AND__FILTER_NORMALIZE_URI_)};soy.esc.$$filterNormalizeUriHelper=function(a){var b=String(a);if(!soy.esc.$$FILTER_FOR_FILTER_NORMALIZE_URI_.test(b)){return"zSoyz"}return b.replace(soy.esc.$$MATCHER_FOR_NORMALIZE_URI__AND__FILTER_NORMALIZE_URI_,soy.esc.$$REPLACER_FOR_NORMALIZE_URI__AND__FILTER_NORMALIZE_URI_)};soy.esc.$$filterHtmlAttributeHelper=function(a){var b=String(a);if(!soy.esc.$$FILTER_FOR_FILTER_HTML_ATTRIBUTE_.test(b)){return"zSoyz"}return b};soy.esc.$$filterHtmlElementNameHelper=function(a){var b=String(a);if(!soy.esc.$$FILTER_FOR_FILTER_HTML_ELEMENT_NAME_.test(b)){return"zSoyz"}return b};soy.esc.$$HTML_TAG_REGEX_=/<(?:!|\/?[a-zA-Z])(?:[^>'"]|"[^"]*"|'[^']*')*>/g;
/* module-key = 'com.atlassian.soy.soy-template-plugin:soy-deps', location = 'js/atlassian-deps.js' */
window.atl_soy=window.atl_soy||{};atl_soy.concat=function(d,c){if(d.concat){return d.concat(c)}var e={};for(var f in d){if(d.hasOwnProperty(f)){e[f]=d[f]}}for(var f in c){if(c.hasOwnProperty(f)){e[f]=c[f]}}return e};
/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/atlassian.soy' */
// This file was automatically generated from atlassian.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }


aui.renderExtraAttributes = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data != null && opt_data.extraAttributes) {
    if (Object.prototype.toString.call(opt_data.extraAttributes) === '[object Object]') {
      var attrList7 = soy.$$getMapKeys(opt_data.extraAttributes);
      var attrListLen7 = attrList7.length;
      for (var attrIndex7 = 0; attrIndex7 < attrListLen7; attrIndex7++) {
        var attrData7 = attrList7[attrIndex7];
        output.append(' ', soy.$$escapeHtml(attrData7), '="', soy.$$escapeHtml(opt_data.extraAttributes[attrData7]), '"');
      }
    } else {
      output.append(' ', opt_data.extraAttributes);
    }
  }
  return opt_sb ? '' : output.toString();
};


aui.renderExtraClasses = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data != null && opt_data.extraClasses) {
    if ((opt_data.extraClasses) instanceof Array) {
      var classList23 = opt_data.extraClasses;
      var classListLen23 = classList23.length;
      for (var classIndex23 = 0; classIndex23 < classListLen23; classIndex23++) {
        var classData23 = classList23[classIndex23];
        output.append(' ', soy.$$escapeHtml(classData23));
      }
    } else {
      output.append(' ', soy.$$escapeHtml(opt_data.extraClasses));
    }
  }
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/badges.soy' */
// This file was automatically generated from badges.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.badges == 'undefined') { aui.badges = {}; }


aui.badges.badge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'span'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-badge');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', soy.$$escapeHtml(opt_data.text), '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'span'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/buttons.soy' */
// This file was automatically generated from buttons.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.buttons == 'undefined') { aui.buttons = {}; }


aui.buttons.button = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.href) {
    output.append('<a href="', soy.$$escapeHtml(opt_data.href), '"');
    aui.buttons.buttonAttributes(soy.$$augmentData(opt_data, {tagName: 'a'}), output);
    output.append('>');
    aui.buttons.buttonIcon(opt_data, output);
    output.append((opt_data.hasLabel) ? '<span class="aui-button-label">' : '', soy.$$escapeHtml(opt_data.text), (opt_data.hasLabel) ? '</span>' : '', '</a>');
  } else if (opt_data.tagName == 'input') {
    output.append('<input type="', soy.$$escapeHtml(opt_data.inputType ? opt_data.inputType : 'button'), '" ');
    aui.buttons.buttonAttributes(opt_data, output);
    output.append(' value="', soy.$$escapeHtml(opt_data.text), '" />');
  } else {
    output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'button'));
    aui.buttons.buttonAttributes(soy.$$augmentData(opt_data, {tagName: opt_data.tagName ? opt_data.tagName : 'button'}), output);
    output.append('>');
    aui.buttons.buttonIcon(opt_data, output);
    output.append((opt_data.hasLabel) ? '<span class="aui-button-label">' : '', soy.$$escapeHtml(opt_data.text), (opt_data.hasLabel) ? '</span>' : '', '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'button'), '>');
  }
  return opt_sb ? '' : output.toString();
};


aui.buttons.buttons = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-buttons');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};


aui.buttons.buttonAttributes = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-button', (opt_data.splitButtonType == 'main') ? ' aui-button-split-main' : '', (opt_data.dropdown2Target) ? ' aui-dropdown2-trigger' + ((opt_data.splitButtonType == 'more') ? ' aui-button-split-more' : '') : '');
  switch (opt_data.type) {
    case 'primary':
      output.append(' aui-button-primary');
      break;
    case 'link':
      output.append(' aui-button-link');
      break;
    case 'subtle':
      output.append(' aui-button-subtle');
      break;
  }
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append((opt_data.isPressed) ? ' aria-pressed="' + soy.$$escapeHtml(opt_data.isPressed) + '"' : '', (opt_data.isDisabled) ? ' aria-disabled="' + soy.$$escapeHtml(opt_data.isDisabled) + '"' + ((opt_data.isDisabled == true) ? (opt_data.tagName == 'button' || opt_data.tagName == 'input') ? ' disabled="disabled" ' : '' : '') : '', (opt_data.dropdown2Target) ? ' aria-owns="' + soy.$$escapeHtml(opt_data.dropdown2Target) + '" aria-haspopup="true"' : '', (opt_data.tagName == 'a') ? ' tabindex="0"' : '');
  return opt_sb ? '' : output.toString();
};


aui.buttons.buttonIcon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.iconType) ? '<span class="' + ((opt_data.iconType == 'aui') ? 'aui-icon' : '') + ((opt_data.iconClass) ? ' ' + soy.$$escapeHtml(opt_data.iconClass) : '') + '">' + ((opt_data.iconText) ? soy.$$escapeHtml(opt_data.iconText) + ' ' : '') + '</span>' : '');
  return opt_sb ? '' : output.toString();
};


aui.buttons.splitButton = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.buttons.button(soy.$$augmentData(opt_data.splitButtonMain, {splitButtonType: 'main'}), output);
  aui.buttons.button(soy.$$augmentData(opt_data.splitButtonMore, {splitButtonType: 'more'}), output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/dropdown.soy' */
// This file was automatically generated from dropdown.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.dropdown == 'undefined') { aui.dropdown = {}; }


aui.dropdown.trigger = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-dd-trigger');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><span class="dropdown-text">', (opt_data.accessibilityText) ? soy.$$escapeHtml(opt_data.accessibilityText) : '', '</span>', (! (opt_data.showIcon == false)) ? '<span class="icon icon-dropdown"></span>' : '', '</a>');
  return opt_sb ? '' : output.toString();
};


aui.dropdown.menu = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'ul'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-dropdown hidden');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'ul'), '>');
  return opt_sb ? '' : output.toString();
};


aui.dropdown.parent = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-dd-parent');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};


aui.dropdown.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'li'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="dropdown-item');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><a href="', soy.$$escapeHtml(opt_data.url ? opt_data.url : '#'), '">', soy.$$escapeHtml(opt_data.text), '</a></', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'li'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/dropdown2.soy' */
// This file was automatically generated from dropdown2.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.dropdown2 == 'undefined') { aui.dropdown2 = {}; }


aui.dropdown2.dropdown2 = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.dropdown2.trigger(soy.$$augmentData(opt_data.trigger, {menu: opt_data.menu}), output);
  aui.dropdown2.contents(opt_data.menu, output);
  return opt_sb ? '' : output.toString();
};


aui.dropdown2.trigger = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'a'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-dropdown2-trigger');
  aui.renderExtraClasses(opt_data, output);
  output.append('" aria-owns="', soy.$$escapeHtml(opt_data.menu.id), '" aria-haspopup="true"', (opt_data.title) ? ' title="' + soy.$$escapeHtml(opt_data.title) + '"' : '', (opt_data.container) ? ' data-container="' + soy.$$escapeHtml(opt_data.container) + '"' : '', ((! opt_data.tagName || opt_data.tagName == 'a') && (! opt_data.extraAttributes || Object.prototype.toString.call(opt_data.extraAttributes) === '[object Object]' && ! opt_data.extraAttributes.href && ! opt_data.extraAttributes.tabindex)) ? ' tabindex="0"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', (opt_data.content) ? opt_data.content : '', (opt_data.text) ? soy.$$escapeHtml(opt_data.text) : '', (! (opt_data.showIcon == false)) ? '<span class="icon ' + soy.$$escapeHtml(opt_data.iconClasses ? opt_data.iconClasses : 'aui-icon-dropdown') + '">' + ((opt_data.iconText) ? soy.$$escapeHtml(opt_data.iconText) : '') + '</span>' : '', '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'a'), '>');
  return opt_sb ? '' : output.toString();
};


aui.dropdown2.contents = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div id="', soy.$$escapeHtml(opt_data.id), '" class="aui-dropdown2');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', (opt_data.content) ? opt_data.content : '', '</div>');
  return opt_sb ? '' : output.toString();
};


aui.dropdown2.section = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-dropdown2-section');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', (opt_data.label) ? '<strong>' + soy.$$escapeHtml(opt_data.label) + '</strong>' : '', opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/form.soy' */
// This file was automatically generated from form.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.form == 'undefined') { aui.form = {}; }


aui.form.form = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<form', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui', (opt_data.isUnsectioned) ? ' unsectioned' : '', (opt_data.isLongLabels) ? ' long-label' : '', (opt_data.isTopLabels) ? ' top-label' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('" action="', soy.$$escapeHtml(opt_data.action), '" method="', soy.$$escapeHtml(opt_data.method ? opt_data.method : 'post'), '"', (opt_data.enctype) ? ' enctype="' + soy.$$escapeHtml(opt_data.enctype) + '"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</form>');
  return opt_sb ? '' : output.toString();
};


aui.form.formDescription = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="field-group');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};


aui.form.fieldset = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var hasClass__soy51 = opt_data.isInline || opt_data.isDateSelect || opt_data.isGroup || opt_data.extraClasses;
  output.append('<fieldset', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  if (hasClass__soy51) {
    output.append(' class="', soy.$$escapeHtml(opt_data.isInline ? 'inline' : opt_data.isDateSelect ? 'date-select' : opt_data.isGroup ? 'group' : ''));
    aui.renderExtraClasses(opt_data, output);
    output.append('"');
  }
  aui.renderExtraAttributes(opt_data, output);
  output.append('><legend><span>', opt_data.legendContent, '</span></legend>', opt_data.content, '</fieldset>');
  return opt_sb ? '' : output.toString();
};


aui.form.fieldGroup = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="field-group');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};


aui.form.buttons = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="buttons-container', (opt_data.alignment) ? ' ' + soy.$$escapeHtml(opt_data.alignment) : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><div class="buttons">', opt_data.content, '</div></div>');
  return opt_sb ? '' : output.toString();
};


aui.form.label = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<label', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', (opt_data.forField) ? ' for="' + soy.$$escapeHtml(opt_data.forField) + '"' : '');
  if (opt_data.extraClasses) {
    output.append(' class="');
    aui.renderExtraClasses(opt_data, output);
    output.append('"');
  }
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, (opt_data.isRequired) ? '<span class="aui-icon icon-required"></span>' : '', '</label>');
  return opt_sb ? '' : output.toString();
};


aui.form.input = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<input', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="', soy.$$escapeHtml(opt_data.type == 'password' ? 'text' : opt_data.type == 'submit' ? 'button' : opt_data.type));
  aui.renderExtraClasses(opt_data, output);
  output.append((opt_data.icon && (opt_data.type == 'text' || opt_data.type == 'password')) ? ' aui-field-has-icon ' : '', '" type="', soy.$$escapeHtml(opt_data.type), '" name="', (opt_data.name) ? soy.$$escapeHtml(opt_data.name) : soy.$$escapeHtml(opt_data.id), '"', (opt_data.value) ? ' value="' + soy.$$escapeHtml(opt_data.value) + '"' : '', ((opt_data.type == 'checkbox' || opt_data.type == 'radio') && opt_data.isChecked) ? ' checked="checked"' : '', (opt_data.type == 'text' && opt_data.maxLength) ? ' maxlength="' + soy.$$escapeHtml(opt_data.maxLength) + '"' : '', (opt_data.type == 'text' && opt_data.size) ? ' size="' + soy.$$escapeHtml(opt_data.size) + '"' : '', ((opt_data.type == 'text' || opt_data.type == 'password') && opt_data.autocomplete) ? ' autocomplete="' + soy.$$escapeHtml(opt_data.autocomplete) + '"' : '', (opt_data.isDisabled) ? ' disabled' : '', (opt_data.isAutofocus) ? ' autofocus' : '');
  aui.renderExtraAttributes(opt_data, output);
  aui.form.renderValidationArguments(opt_data, output);
  aui.form.renderTooltipArguments(opt_data, output);
  output.append('/>');
  if (opt_data.icon && (opt_data.type == 'text' || opt_data.type == 'password')) {
    aui.icons.icon({icon: opt_data.icon, useIconFont: true, size: 'small'}, output);
  }
  return opt_sb ? '' : output.toString();
};


aui.form.renderValidationArguments = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.validationArguments) {
    var argumentList189 = soy.$$getMapKeys(opt_data.validationArguments);
    var argumentListLen189 = argumentList189.length;
    for (var argumentIndex189 = 0; argumentIndex189 < argumentListLen189; argumentIndex189++) {
      var argumentData189 = argumentList189[argumentIndex189];
      output.append(' ', soy.$$escapeHtml('data-aui-validate-' + argumentData189), '="', soy.$$escapeHtml(opt_data.validationArguments[argumentData189]), '"');
    }
    output.append(' data-aui-field');
  }
  return opt_sb ? '' : output.toString();
};


aui.form.renderTooltipArguments = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.tooltipArguments) {
    var argumentList201 = soy.$$getMapKeys(opt_data.tooltipArguments);
    var argumentListLen201 = argumentList201.length;
    for (var argumentIndex201 = 0; argumentIndex201 < argumentListLen201; argumentIndex201++) {
      var argumentData201 = argumentList201[argumentIndex201];
      output.append(' ', soy.$$escapeHtml('data-aui-form-notification-' + argumentData201), '="', soy.$$escapeHtml(opt_data.tooltipArguments[argumentData201]), '"');
    }
  }
  return opt_sb ? '' : output.toString();
};


aui.form.submit = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param223 = new soy.StringBuilder((opt_data.name) ? 'name="' + soy.$$escapeHtml(opt_data.name) + '"' : '');
  aui.renderExtraAttributes(opt_data, param223);
  aui.buttons.button({id: opt_data.id, tagName: 'input', inputType: 'submit', text: opt_data.text, type: opt_data.type, href: opt_data.href, isDisabled: opt_data.isDisabled, isPressed: opt_data.isPressed, iconType: opt_data.iconType, iconText: opt_data.iconText, iconClass: opt_data.iconClass, dropdown2Target: opt_data.dropdown2Target, splitButtonType: opt_data.splitButtonType, extraClasses: opt_data.extraClasses, extraAttributes: param223.toString()}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.button = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param247 = new soy.StringBuilder((opt_data.name) ? 'name="' + soy.$$escapeHtml(opt_data.name) + '"' : '');
  aui.renderExtraAttributes(opt_data, param247);
  aui.buttons.button({id: opt_data.id, tagName: opt_data.tagName, inputType: opt_data.inputType, text: opt_data.text, type: opt_data.type, href: opt_data.href, isDisabled: opt_data.isDisabled, isPressed: opt_data.isPressed, iconType: opt_data.iconType, iconText: opt_data.iconText, iconClass: opt_data.iconClass, dropdown2Target: opt_data.dropdown2Target, splitButtonType: opt_data.splitButtonType, extraClasses: opt_data.extraClasses, extraAttributes: param247.toString()}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.linkButton = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param270 = new soy.StringBuilder('cancel');
  aui.renderExtraClasses(opt_data, param270);
  var param274 = new soy.StringBuilder((opt_data.name) ? 'name="' + soy.$$escapeHtml(opt_data.name) + '"' : '');
  aui.renderExtraAttributes(opt_data, param274);
  aui.buttons.button({id: opt_data.id, tagName: 'a', inputType: opt_data.inputType, text: opt_data.text, type: 'link', href: opt_data.href ? opt_data.href : opt_data.url, isDisabled: opt_data.isDisabled, isPressed: opt_data.isPressed, iconType: opt_data.iconType, iconText: opt_data.iconText, iconClass: opt_data.iconClass, dropdown2Target: opt_data.dropdown2Target, splitButtonType: opt_data.splitButtonType, extraClasses: param270.toString(), extraAttributes: param274.toString()}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.textarea = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<textarea', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' name="', (opt_data.name) ? soy.$$escapeHtml(opt_data.name) : soy.$$escapeHtml(opt_data.id), '" class="textarea');
  aui.renderExtraClasses(opt_data, output);
  output.append(' ', (opt_data.icon) ? 'aui-field-has-icon' : '', '"', (opt_data.rows) ? ' rows="' + soy.$$escapeHtml(opt_data.rows) + '"' : '', (opt_data.cols) ? ' cols="' + soy.$$escapeHtml(opt_data.cols) + '"' : '', (opt_data.autocomplete) ? ' autocomplete="' + soy.$$escapeHtml(opt_data.autocomplete) + '"' : '', (opt_data.isDisabled) ? ' disabled' : '', (opt_data.isAutofocus) ? ' autofocus' : '');
  aui.renderExtraAttributes(opt_data, output);
  aui.form.renderValidationArguments(opt_data, output);
  aui.form.renderTooltipArguments(opt_data, output);
  output.append('>', (opt_data.value) ? soy.$$escapeHtml(opt_data.value) : '', '</textarea>');
  if (opt_data.icon) {
    aui.icons.icon({icon: opt_data.icon, useIconFont: true, size: 'small'}, output);
  }
  return opt_sb ? '' : output.toString();
};


aui.form.select = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<select', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' name="', (opt_data.name) ? soy.$$escapeHtml(opt_data.name) : soy.$$escapeHtml(opt_data.id), '" class="', soy.$$escapeHtml(opt_data.isMultiple ? 'multi-select' : 'select'));
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.size) ? ' size="' + soy.$$escapeHtml(opt_data.size) + '"' : '', (opt_data.isDisabled) ? ' disabled' : '', (opt_data.isAutofocus) ? ' autofocus' : '', (opt_data.isMultiple) ? ' multiple' : '');
  aui.renderExtraAttributes(opt_data, output);
  aui.form.renderValidationArguments(opt_data, output);
  aui.form.renderTooltipArguments(opt_data, output);
  output.append('>');
  var optionList373 = opt_data.options;
  var optionListLen373 = optionList373.length;
  for (var optionIndex373 = 0; optionIndex373 < optionListLen373; optionIndex373++) {
    var optionData373 = optionList373[optionIndex373];
    aui.form.optionOrOptgroup(soy.$$augmentData(optionData373, {defaultValue: opt_data.value}), output);
  }
  output.append('</select>');
  return opt_sb ? '' : output.toString();
};


aui.form.optionOrOptgroup = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.options) {
    output.append('<optgroup label="', soy.$$escapeHtml(opt_data.text), '"', (opt_data.disabled) ? ' disabled' : '', '>');
    var optionList388 = opt_data.options;
    var optionListLen388 = optionList388.length;
    for (var optionIndex388 = 0; optionIndex388 < optionListLen388; optionIndex388++) {
      var optionData388 = optionList388[optionIndex388];
      aui.form.optionOrOptgroup(soy.$$augmentData(optionData388, {defaultValue: opt_data.defaultValue}), output);
    }
    output.append('</optgroup>');
  } else {
    output.append('<option value="', soy.$$escapeHtml(opt_data.value), '"', (opt_data.selected || opt_data.defaultValue == opt_data.value) ? ' selected' : '', (opt_data.disabled) ? ' disabled' : '', '>', soy.$$escapeHtml(opt_data.text), '</option>');
  }
  return opt_sb ? '' : output.toString();
};


aui.form.value = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="field-value');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</span>');
  return opt_sb ? '' : output.toString();
};


aui.form.field = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var isCheckboxOrRadio__soy422 = opt_data.type == 'checkbox' || opt_data.type == 'radio';
  var fieldWidthClass__soy423 = opt_data.fieldWidth ? opt_data.fieldWidth + '-field' : '';
  output.append('<div class="', (isCheckboxOrRadio__soy422) ? soy.$$escapeHtml(opt_data.type) : 'field-group');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>');
  if (opt_data.labelContent && ! isCheckboxOrRadio__soy422) {
    aui.form.label({forField: opt_data.id, isRequired: opt_data.isRequired, content: opt_data.labelContent}, output);
  }
  switch (opt_data.type) {
    case 'textarea':
      aui.form.textarea({id: opt_data.id, name: opt_data.name, value: opt_data.value, rows: opt_data.rows, cols: opt_data.cols, autocomplete: opt_data.autocomplete, isDisabled: opt_data.isDisabled ? true : false, isAutofocus: opt_data.isAutofocus, extraClasses: fieldWidthClass__soy423, icon: opt_data.icon, validationArguments: opt_data.validationArguments, tooltipArguments: opt_data.tooltipArguments}, output);
      break;
    case 'select':
      aui.form.select({id: opt_data.id, name: opt_data.name, value: opt_data.value, options: opt_data.options, isMultiple: opt_data.isMultiple, size: opt_data.size, isDisabled: opt_data.isDisabled ? true : false, isAutofocus: opt_data.isAutofocus, extraClasses: fieldWidthClass__soy423, validationArguments: opt_data.validationArguments, tooltipArguments: opt_data.tooltipArguments}, output);
      break;
    case 'value':
      aui.form.value({id: opt_data.id, content: soy.$$escapeHtml(opt_data.value)}, output);
      break;
    case 'text':
    case 'password':
    case 'file':
    case 'radio':
    case 'checkbox':
    case 'button':
    case 'submit':
    case 'reset':
      aui.form.input({id: opt_data.id, name: opt_data.name, type: opt_data.type, value: opt_data.value, maxLength: opt_data.maxLength, size: opt_data.size, autocomplete: opt_data.autocomplete, isChecked: opt_data.isChecked, isDisabled: opt_data.isDisabled ? true : false, isAutofocus: opt_data.isAutofocus, extraClasses: fieldWidthClass__soy423, icon: opt_data.icon, validationArguments: opt_data.validationArguments, tooltipArguments: opt_data.tooltipArguments}, output);
      break;
  }
  if (opt_data.labelContent && isCheckboxOrRadio__soy422) {
    aui.form.label({forField: opt_data.id, isRequired: opt_data.isRequired, content: opt_data.labelContent}, output);
  }
  if (opt_data.descriptionText || opt_data.descriptionContent) {
    aui.form.fieldDescription({text: opt_data.descriptionText, content: opt_data.descriptionContent}, output);
  }
  if (opt_data.errorTexts) {
    var errorList503 = opt_data.errorTexts;
    var errorListLen503 = errorList503.length;
    for (var errorIndex503 = 0; errorIndex503 < errorListLen503; errorIndex503++) {
      var errorData503 = errorList503[errorIndex503];
      aui.form.fieldError({message: errorData503}, output);
    }
  }
  output.append('</div>');
  return opt_sb ? '' : output.toString();
};


aui.form.fieldError = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="error');
  aui.renderExtraClasses(opt_data, output);
  output.append('">', soy.$$escapeHtml(opt_data.message), '</div>');
  return opt_sb ? '' : output.toString();
};


aui.form.fieldDescription = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="description');
  aui.renderExtraClasses(opt_data, output);
  output.append('">', (opt_data.text) ? soy.$$escapeHtml(opt_data.text) : (opt_data.message) ? soy.$$escapeHtml(opt_data.message) : opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};


aui.form.textField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.form.field({id: opt_data.id, name: opt_data.name, type: 'text', labelContent: opt_data.labelContent, value: opt_data.value, maxLength: opt_data.maxLength, size: opt_data.size, autocomplete: opt_data.autocomplete, isRequired: opt_data.isRequired, isDisabled: opt_data.isDisabled, isAutofocus: opt_data.isAutofocus, descriptionText: opt_data.descriptionText, descriptionContent: opt_data.descriptionContent, errorTexts: opt_data.errorTexts, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, fieldWidth: opt_data.fieldWidth, validationArguments: opt_data.validationArguments, tooltipArguments: opt_data.tooltipArguments}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.textareaField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.form.field({id: opt_data.id, name: opt_data.name, type: 'textarea', labelContent: opt_data.labelContent, value: opt_data.value, rows: opt_data.rows, cols: opt_data.cols, autocomplete: opt_data.autocomplete, isRequired: opt_data.isRequired, isDisabled: opt_data.isDisabled, isAutofocus: opt_data.isAutofocus, descriptionText: opt_data.descriptionText, descriptionContent: opt_data.descriptionContent, errorTexts: opt_data.errorTexts, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, fieldWidth: opt_data.fieldWidth, validationArguments: opt_data.validationArguments, tooltipArguments: opt_data.tooltipArguments}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.passwordField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.form.field({id: opt_data.id, name: opt_data.name, type: 'password', labelContent: opt_data.labelContent, value: opt_data.value, autocomplete: opt_data.autocomplete, isRequired: opt_data.isRequired, isDisabled: opt_data.isDisabled, isAutofocus: opt_data.isAutofocus, descriptionText: opt_data.descriptionText, descriptionContent: opt_data.descriptionContent, errorTexts: opt_data.errorTexts, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, fieldWidth: opt_data.fieldWidth, validationArguments: opt_data.validationArguments, tooltipArguments: opt_data.tooltipArguments}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.fileField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.form.field({id: opt_data.id, name: opt_data.name, type: 'file', labelContent: opt_data.labelContent, value: opt_data.value, isRequired: opt_data.isRequired, isDisabled: opt_data.isDisabled, isAutofocus: opt_data.isAutofocus, descriptionText: opt_data.descriptionText, descriptionContent: opt_data.descriptionContent, errorTexts: opt_data.errorTexts, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, validationArguments: opt_data.validationArguments, tooltipArguments: opt_data.tooltipArguments}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.selectField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.form.field({id: opt_data.id, name: opt_data.name, type: 'select', value: opt_data.value, labelContent: opt_data.labelContent, options: opt_data.options, isMultiple: opt_data.isMultiple, size: opt_data.size, isRequired: opt_data.isRequired, isDisabled: opt_data.isDisabled, isAutofocus: opt_data.isAutofocus, descriptionText: opt_data.descriptionText, descriptionContent: opt_data.descriptionContent, errorTexts: opt_data.errorTexts, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, fieldWidth: opt_data.fieldWidth, validationArguments: opt_data.validationArguments, tooltipArguments: opt_data.tooltipArguments}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.checkboxField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param632 = new soy.StringBuilder((opt_data.isMatrix) ? '<div class="matrix">' : '');
  var fieldList636 = opt_data.fields;
  var fieldListLen636 = fieldList636.length;
  for (var fieldIndex636 = 0; fieldIndex636 < fieldListLen636; fieldIndex636++) {
    var fieldData636 = fieldList636[fieldIndex636];
    aui.form.field(soy.$$augmentData(fieldData636, {type: 'checkbox', labelContent: soy.$$escapeHtml(fieldData636.labelText)}), param632);
  }
  param632.append((opt_data.isMatrix) ? '</div>' : '');
  if (opt_data.descriptionText || opt_data.descriptionContent || opt_data.errorTexts && opt_data.errorTexts.length) {
    aui.form.field({descriptionText: opt_data.descriptionText, descriptionContent: opt_data.descriptionContent, errorTexts: opt_data.errorTexts, isDisabled: false}, param632);
  }
  aui.form.fieldset({legendContent: opt_data.legendContent + (opt_data.isRequired ? '<span class="aui-icon icon-required"></span>' : ''), isGroup: true, id: opt_data.id, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, content: param632.toString()}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.radioField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param659 = new soy.StringBuilder((opt_data.isMatrix) ? '<div class="matrix">' : '');
  var fieldList663 = opt_data.fields;
  var fieldListLen663 = fieldList663.length;
  for (var fieldIndex663 = 0; fieldIndex663 < fieldListLen663; fieldIndex663++) {
    var fieldData663 = fieldList663[fieldIndex663];
    aui.form.field(soy.$$augmentData(fieldData663, {type: 'radio', name: opt_data.name ? opt_data.name : opt_data.id, labelContent: soy.$$escapeHtml(fieldData663.labelText)}), param659);
  }
  param659.append((opt_data.isMatrix) ? '</div>' : '');
  if (opt_data.descriptionText || opt_data.descriptionContent || opt_data.errorTexts && opt_data.errorTexts.length) {
    aui.form.field({descriptionText: opt_data.descriptionText, descriptionContent: opt_data.descriptionContent, errorTexts: opt_data.errorTexts, isDisabled: false}, param659);
  }
  aui.form.fieldset({legendContent: opt_data.legendContent + (opt_data.isRequired ? '<span class="aui-icon icon-required"></span>' : ''), isGroup: true, id: opt_data.id, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, content: param659.toString()}, output);
  return opt_sb ? '' : output.toString();
};


aui.form.valueField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.form.field({id: opt_data.id, type: 'value', value: opt_data.value, labelContent: opt_data.labelContent, isRequired: opt_data.isRequired, descriptionText: opt_data.descriptionText, descriptionContent: opt_data.descriptionContent, errorTexts: opt_data.errorTexts, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes}, output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/group.soy' */
// This file was automatically generated from group.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.group == 'undefined') { aui.group = {}; }


aui.group.group = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-group', (opt_data.isSplit) ? ' aui-group-split' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};


aui.group.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-item');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/labels.soy' */
// This file was automatically generated from labels.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.labels == 'undefined') { aui.labels = {}; }


aui.labels.label = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.url && opt_data.isCloseable == true) {
    output.append('<span', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-label aui-label-closeable aui-label-split');
    aui.renderExtraClasses(opt_data, output);
    output.append('"');
    aui.renderExtraAttributes(opt_data, output);
    output.append('><a class="aui-label-split-main" href="', soy.$$escapeHtml(opt_data.url), '">', soy.$$escapeHtml(opt_data.text), '</a><span class="aui-label-split-close" >');
    aui.labels.closeIcon(opt_data, output);
    output.append('</span></span>');
  } else {
    output.append('<', soy.$$escapeHtml(opt_data.url ? 'a' : 'span'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-label', (opt_data.isCloseable) ? ' aui-label-closeable' : '');
    aui.renderExtraClasses(opt_data, output);
    output.append('"');
    aui.renderExtraAttributes(opt_data, output);
    output.append((opt_data.url) ? ' href="' + soy.$$escapeHtml(opt_data.url) + '"' : '', '>', soy.$$escapeHtml(opt_data.text));
    if (opt_data.isCloseable) {
      aui.labels.closeIcon(opt_data, output);
    }
    output.append('</', soy.$$escapeHtml(opt_data.url ? 'a' : 'span'), '>');
  }
  return opt_sb ? '' : output.toString();
};


aui.labels.closeIcon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span tabindex="0" class="aui-icon aui-icon-close"');
  if (opt_data.hasTitle != false) {
    output.append(' title="');
    aui.labels.closeIconText(opt_data, output);
    output.append('"');
  }
  output.append('>');
  aui.labels.closeIconText(opt_data, output);
  output.append('</span>');
  return opt_sb ? '' : output.toString();
};


aui.labels.closeIconText = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.closeIconText) ? soy.$$escapeHtml(opt_data.closeIconText) : '(' + soy.$$escapeHtml("Remove") + ' ' + soy.$$escapeHtml(opt_data.text) + ')');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/message.soy' */
// This file was automatically generated from message.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.message == 'undefined') { aui.message = {}; }


aui.message.info = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.message(soy.$$augmentData(opt_data, {type: 'info'}), output);
  return opt_sb ? '' : output.toString();
};


aui.message.warning = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.message(soy.$$augmentData(opt_data, {type: 'warning'}), output);
  return opt_sb ? '' : output.toString();
};


aui.message.error = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.message(soy.$$augmentData(opt_data, {type: 'error'}), output);
  return opt_sb ? '' : output.toString();
};


aui.message.success = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.message(soy.$$augmentData(opt_data, {type: 'success'}), output);
  return opt_sb ? '' : output.toString();
};


aui.message.hint = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.message(soy.$$augmentData(opt_data, {type: 'hint'}), output);
  return opt_sb ? '' : output.toString();
};


aui.message.generic = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.message(soy.$$augmentData(opt_data, {type: 'generic'}), output);
  return opt_sb ? '' : output.toString();
};


aui.message.message = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var theTagName__soy21 = opt_data.tagName ? opt_data.tagName : 'div';
  var theType__soy22 = opt_data.type ? opt_data.type : 'generic';
  output.append('<', soy.$$escapeHtml(theTagName__soy21), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-message aui-message-', soy.$$escapeHtml(theType__soy22), ' ', soy.$$escapeHtml(theType__soy22), (opt_data.isCloseable) ? ' closeable' : '', (opt_data.isShadowed) ? ' shadowed' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', (opt_data.titleContent) ? '<p class="title"><strong>' + opt_data.titleContent + '</strong></p>' : '', opt_data.content, (opt_data.isCloseable) ? '<span class="aui-icon icon-close" role="button" tabindex="0"></span>' : '', '</', soy.$$escapeHtml(theTagName__soy21), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/page.soy' */
// This file was automatically generated from page.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.page == 'undefined') { aui.page = {}; }


aui.page.document = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<!DOCTYPE html><html lang="', soy.$$escapeHtml(opt_ijData.language ? opt_ijData.language : 'en'), '"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><title>', soy.$$escapeHtml(opt_data.windowTitle), '</title>', (opt_data.headContent) ? opt_data.headContent : '', '</head><body');
  if (opt_data.pageType) {
    if (opt_data.pageType == 'generic') {
      if (opt_data.extraClasses) {
        output.append(' class="');
        aui.renderExtraClasses(opt_data, output, opt_ijData);
        output.append('"');
      }
    } else if (opt_data.pageType == 'focused') {
      output.append(' class="aui-page-focused aui-page-focused-', soy.$$escapeHtml(opt_data.focusedPageSize ? opt_data.focusedPageSize : 'xlarge'));
      aui.renderExtraClasses(opt_data, output, opt_ijData);
      output.append('"');
    } else if (opt_data.pageType == 'sidebar') {
      output.append(' class="aui-page-sidebar', soy.$$escapeHtml(opt_data.sidebarState ? ' aui-sidebar-' + opt_data.sidebarState : ''));
      aui.renderExtraClasses(opt_data, output, opt_ijData);
      output.append('"');
    } else {
      output.append(' class="aui-page-', soy.$$escapeHtml(opt_data.pageType));
      aui.renderExtraClasses(opt_data, output, opt_ijData);
      output.append('"');
    }
  } else {
    output.append(' class="');
    aui.renderExtraClasses(opt_data, output, opt_ijData);
    output.append('"');
  }
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('>', opt_data.content, '</body></html>');
  return opt_sb ? '' : output.toString();
};


aui.page.page = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div id="page"><header id="header" role="banner">', opt_data.headerContent, '</header><!-- #header --><section id="content" role="main">', opt_data.contentContent, '</section><!-- #content --><footer id="footer" role="contentinfo">', opt_data.footerContent, '</footer><!-- #footer --></div><!-- #page -->');
  return opt_sb ? '' : output.toString();
};


aui.page.header = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<nav', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-header aui-dropdown2-trigger-group');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append(' role="navigation"><div class="aui-header-inner">', (opt_data.headerBeforeContent) ? '<div class="aui-header-before">' + opt_data.headerBeforeContent + '</div>' : '', '<div class="aui-header-primary"><h1 id="logo" class="aui-header-logo', (opt_data.headerLogoImageUrl) ? ' aui-header-logo-custom' : (opt_data.logo) ? ' aui-header-logo-' + soy.$$escapeHtml(opt_data.logo) : '', '"><a href="', soy.$$escapeHtml(opt_data.headerLink ? opt_data.headerLink : '/'), '">', (opt_data.headerLogoImageUrl) ? '<img src="' + soy.$$escapeHtml(opt_data.headerLogoImageUrl) + '" alt="' + soy.$$escapeHtml(opt_data.headerLogoText) + '" />' : '<span class="aui-header-logo-device">' + soy.$$escapeHtml(opt_data.headerLogoText ? opt_data.headerLogoText : '') + '</span>', (opt_data.headerText) ? '<span class="aui-header-logo-text">' + soy.$$escapeHtml(opt_data.headerText) + '</span>' : '', '</a></h1>', (opt_data.primaryNavContent) ? opt_data.primaryNavContent : '', '</div>', (opt_data.secondaryNavContent) ? '<div class="aui-header-secondary">' + opt_data.secondaryNavContent + '</div>' : '', (opt_data.headerAfterContent) ? '<div class="aui-header-after">' + opt_data.headerAfterContent + '</div>' : '', '</div><!-- .aui-header-inner--></nav><!-- .aui-header -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pagePanel = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), ' class="aui-page-panel');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('><div class="aui-page-panel-inner">', opt_data.content, '</div><!-- .aui-page-panel-inner --></', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '><!-- .aui-page-panel -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pagePanelNav = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), ' class="aui-page-panel-nav');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '><!-- .aui-page-panel-nav -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pagePanelContent = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'section'), ' class="aui-page-panel-content');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'section'), '><!-- .aui-page-panel-content -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pagePanelSidebar = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'aside'), ' class="aui-page-panel-sidebar');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'aside'), '><!-- .aui-page-panel-sidebar -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pagePanelItem = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'section'), ' class="aui-page-panel-item');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'section'), '><!-- .aui-page-panel-item -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pageHeader = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<header class="aui-page-header');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('><div class="aui-page-header-inner">', opt_data.content, '</div><!-- .aui-page-header-inner --></header><!-- .aui-page-header -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pageHeaderImage = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="aui-page-header-image');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('>', opt_data.content, '</div><!-- .aui-page-header-image -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pageHeaderMain = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="aui-page-header-main');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('>', opt_data.content, '</div><!-- .aui-page-header-main -->');
  return opt_sb ? '' : output.toString();
};


aui.page.pageHeaderActions = function(opt_data, opt_sb, opt_ijData) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="aui-page-header-actions');
  aui.renderExtraClasses(opt_data, output, opt_ijData);
  output.append('"', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  aui.renderExtraAttributes(opt_data, output, opt_ijData);
  output.append('>', opt_data.content, '</div><!-- .aui-page-header-actions -->');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/panel.soy' */
// This file was automatically generated from panel.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }


aui.panel = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-panel');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/table.soy' */
// This file was automatically generated from table.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }


aui.table = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<table', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', (opt_data.columnsContent) ? opt_data.columnsContent : '', (opt_data.captionContent) ? '<caption>' + opt_data.captionContent + '</caption>' : '', (opt_data.theadContent) ? '<thead>' + opt_data.theadContent + '</thead>' : '', (opt_data.tfootContent) ? '<tfoot>' + opt_data.tfootContent + '</tfoot>' : '', (! opt_data.contentIncludesTbody) ? '<tbody>' : '', opt_data.content, (! opt_data.contentIncludesTbody) ? '</tbody>' : '', '</table>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/tabs.soy' */
// This file was automatically generated from tabs.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }


aui.tabs = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-tabs ', soy.$$escapeHtml(opt_data.isVertical ? 'vertical-tabs' : 'horizontal-tabs'), (opt_data.isDisabled) ? ' aui-tabs-disabled' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><ul class="tabs-menu">');
  var itemList19 = opt_data.menuItems;
  var itemListLen19 = itemList19.length;
  for (var itemIndex19 = 0; itemIndex19 < itemListLen19; itemIndex19++) {
    var itemData19 = itemList19[itemIndex19];
    aui.tabMenuItem(itemData19, output);
  }
  output.append('</ul>', opt_data.paneContent, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};


aui.tabMenuItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="menu-item', (opt_data.isActive) ? ' active-tab' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><a href="', soy.$$escapeHtml(opt_data.url), '"><strong>', soy.$$escapeHtml(opt_data.text), '</strong></a></li>');
  return opt_sb ? '' : output.toString();
};


aui.tabPane = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="tabs-pane', (opt_data.isActive) ? ' active-pane' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/toolbar.soy' */
// This file was automatically generated from toolbar.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.toolbar == 'undefined') { aui.toolbar = {}; }


aui.toolbar.toolbar = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-toolbar');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};


aui.toolbar.split = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="toolbar-split toolbar-split-', soy.$$escapeHtml(opt_data.split));
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};


aui.toolbar.group = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="toolbar-group');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</ul>');
  return opt_sb ? '' : output.toString();
};


aui.toolbar.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li ', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="toolbar-item', (opt_data.isPrimary) ? ' primary' : '', (opt_data.isActive) ? ' active' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</li>');
  return opt_sb ? '' : output.toString();
};


aui.toolbar.trigger = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="toolbar-trigger');
  aui.renderExtraClasses(opt_data, output);
  output.append('" href="', soy.$$escapeHtml(opt_data.url ? opt_data.url : '#'), '"', (opt_data.title) ? ' title="' + soy.$$escapeHtml(opt_data.title) + '"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</a>');
  return opt_sb ? '' : output.toString();
};


aui.toolbar.button = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (! (opt_data != null)) {
    output.append('Either $text or both $title and $iconClass must be provided.');
  } else {
    var param107 = new soy.StringBuilder();
    aui.toolbar.trigger({url: opt_data.url, title: opt_data.title, content: ((opt_data.iconClass) ? '<span class="icon ' + soy.$$escapeHtml(opt_data.iconClass) + '"></span>' : '') + ((opt_data.text) ? '<span class="trigger-text">' + soy.$$escapeHtml(opt_data.text) + '</span>' : '')}, param107);
    aui.toolbar.item({isActive: opt_data.isActive, isPrimary: opt_data.isPrimary, id: opt_data.id, extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, content: param107.toString()}, output);
  }
  return opt_sb ? '' : output.toString();
};


aui.toolbar.link = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param125 = new soy.StringBuilder('toolbar-item-link');
  aui.renderExtraClasses(opt_data, param125);
  var param129 = new soy.StringBuilder();
  aui.toolbar.trigger({url: opt_data.url, content: soy.$$escapeHtml(opt_data.text)}, param129);
  aui.toolbar.item({id: opt_data.id, extraClasses: param125.toString(), extraAttributes: opt_data.extraAttributes, content: param129.toString()}, output);
  return opt_sb ? '' : output.toString();
};


aui.toolbar.dropdownInternal = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param138 = new soy.StringBuilder(opt_data.itemClass);
  aui.renderExtraClasses(opt_data, param138);
  var param143 = new soy.StringBuilder((opt_data.splitButtonContent) ? opt_data.splitButtonContent : '');
  var param148 = new soy.StringBuilder();
  aui.dropdown.trigger({extraClasses: 'toolbar-trigger', accessibilityText: opt_data.text}, param148);
  aui.dropdown.menu({content: opt_data.dropdownItemsContent}, param148);
  aui.dropdown.parent({content: param148.toString()}, param143);
  aui.toolbar.item({isPrimary: opt_data.isPrimary, id: opt_data.id, extraClasses: param138.toString(), extraAttributes: opt_data.extraAttributes, content: param143.toString()}, output);
  return opt_sb ? '' : output.toString();
};


aui.toolbar.dropdown = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.toolbar.dropdownInternal({isPrimary: opt_data.isPrimary, id: opt_data.id, itemClass: 'toolbar-dropdown', extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, text: opt_data.text, dropdownItemsContent: opt_data.dropdownItemsContent}, output);
  return opt_sb ? '' : output.toString();
};


aui.toolbar.splitButton = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param172 = new soy.StringBuilder();
  aui.toolbar.trigger({url: opt_data.url, content: soy.$$escapeHtml(opt_data.text)}, param172);
  aui.toolbar.dropdownInternal({isPrimary: opt_data.isPrimary, id: opt_data.id, itemClass: 'toolbar-splitbutton', extraClasses: opt_data.extraClasses, extraAttributes: opt_data.extraAttributes, dropdownItemsContent: opt_data.dropdownItemsContent, splitButtonContent: param172.toString()}, output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/toolbar2.soy' */
// This file was automatically generated from toolbar2.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.toolbar2 == 'undefined') { aui.toolbar2 = {}; }


aui.toolbar2.toolbar2 = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-toolbar2');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append(' role="toolbar"><div class="aui-toolbar2-inner">', opt_data.content, '</div></div>');
  return opt_sb ? '' : output.toString();
};


aui.toolbar2.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-toolbar2-', soy.$$escapeHtml(opt_data.item));
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};


aui.toolbar2.group = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-toolbar2-group');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/progress-tracker.soy' */
// This file was automatically generated from progress-tracker.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.progressTracker == 'undefined') { aui.progressTracker = {}; }


aui.progressTracker.progressTracker = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ol', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-progress-tracker', (opt_data.isInverted) ? ' aui-progress-tracker-inverted' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>');
  var param18 = new soy.StringBuilder();
  var currentStepList19 = opt_data.steps;
  var currentStepListLen19 = currentStepList19.length;
  for (var currentStepIndex19 = 0; currentStepIndex19 < currentStepListLen19; currentStepIndex19++) {
    var currentStepData19 = currentStepList19[currentStepIndex19];
    if (currentStepData19['isCurrent']) {
      var stepList22 = opt_data.steps;
      var stepListLen22 = stepList22.length;
      for (var stepIndex22 = 0; stepIndex22 < stepListLen22; stepIndex22++) {
        var stepData22 = stepList22[stepIndex22];
        aui.progressTracker.step(soy.$$augmentData(stepData22, {width: Math.round(100 / opt_data.steps.length * 10000) / 10000, href: stepIndex22 < currentStepIndex19 ? stepData22['href'] : null}), param18);
      }
    }
  }
  aui.progressTracker.content({steps: opt_data.steps, content: param18.toString()}, output);
  output.append('</ol>');
  return opt_sb ? '' : output.toString();
};


aui.progressTracker.content = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.content != '') {
    output.append(opt_data.content);
  } else {
    var stepList36 = opt_data.steps;
    var stepListLen36 = stepList36.length;
    for (var stepIndex36 = 0; stepIndex36 < stepListLen36; stepIndex36++) {
      var stepData36 = stepList36[stepIndex36];
      aui.progressTracker.step(soy.$$augmentData(stepData36, {isCurrent: stepIndex36 == 0, width: Math.round(100 / opt_data.steps.length * 10000) / 10000, href: null}), output);
    }
  }
  return opt_sb ? '' : output.toString();
};


aui.progressTracker.step = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-progress-tracker-step', (opt_data.isCurrent) ? ' aui-progress-tracker-step-current' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('" style="width: ', soy.$$escapeHtml(opt_data.width), '%;"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><', soy.$$escapeHtml(opt_data.href ? 'a' : 'span'), (opt_data.href) ? ' href="' + soy.$$escapeHtml(opt_data.href) + '"' : '', '>', soy.$$escapeHtml(opt_data.text), '</', soy.$$escapeHtml(opt_data.href ? 'a' : 'span'), '></li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/expander.soy' */
// This file was automatically generated from expander.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.expander == 'undefined') { aui.expander = {}; }


aui.expander.content = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-expander-content');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append((opt_data.initiallyExpanded) ? ' aria-expanded="' + soy.$$escapeHtml(opt_data.initiallyExpanded) + '"' : '', '>', (opt_data.content) ? opt_data.content : '', '</div>');
  return opt_sb ? '' : output.toString();
};


aui.expander.trigger = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tag ? opt_data.tag : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', (opt_data.replaceText) ? ' data-replace-text="' + soy.$$escapeHtml(opt_data.replaceText) + '"' : '', (opt_data.replaceSelector) ? ' data-replace-selector="' + soy.$$escapeHtml(opt_data.replaceSelector) + '"' : '', ' class="aui-expander-trigger');
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append(' aria-controls="', soy.$$escapeHtml(opt_data.contentId), '"', (opt_data.collapsible) ? ' data-collapsible="' + soy.$$escapeHtml(opt_data.collapsible) + '"' : '', '>', (opt_data.content) ? opt_data.content : '', '</', soy.$$escapeHtml(opt_data.tag ? opt_data.tag : 'div'), '>');
  return opt_sb ? '' : output.toString();
};


aui.expander.revealText = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param64 = new soy.StringBuilder(soy.$$escapeHtml(opt_data.contentContent));
  aui.expander.trigger({id: opt_data.triggerId, contentId: opt_data.contentId, tag: 'a', content: '<span class=\'reveal-text-trigger-text\'>Show more</span>', replaceSelector: '.reveal-text-trigger-text', replaceText: 'Show less', extraAttributes: opt_data.triggerExtraAttributes, extraClasses: ((opt_data.triggerExtraClasses) ? soy.$$escapeHtml(opt_data.triggerExtraClasses) + '  ' : '') + ' aui-expander-reveal-text'}, param64);
  aui.expander.content({id: opt_data.contentId, content: param64.toString(), extraAttributes: opt_data.contentExtraAttributes, extraClasses: opt_data.contentExtraClasses}, output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/avatar.soy' */
// This file was automatically generated from avatar.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.avatar == 'undefined') { aui.avatar = {}; }


aui.avatar.avatar = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'span'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-avatar aui-avatar-', soy.$$escapeHtml(opt_data.size), soy.$$escapeHtml(opt_data.isProject ? ' aui-avatar-project' : ''), soy.$$escapeHtml(opt_data.badgeContent ? ' aui-avatar-badged' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><span class="aui-avatar-inner"><img src="', soy.$$escapeHtml(opt_data.avatarImageUrl), '"', (opt_data.accessibilityText) ? ' alt="' + soy.$$escapeHtml(opt_data.accessibilityText) + '"' : '', (opt_data.title) ? ' title="' + soy.$$escapeHtml(opt_data.title) + '"' : '', (opt_data.imageClasses) ? ' class="' + soy.$$escapeHtml(opt_data.imageClasses) + '"' : '', ' /></span>', (opt_data.badgeContent) ? opt_data.badgeContent : '', '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'span'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/icons.soy' */
// This file was automatically generated from icons.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.icons == 'undefined') { aui.icons = {}; }


aui.icons.icon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'span'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-icon', (opt_data.useIconFont) ? ' aui-icon-' + soy.$$escapeHtml(opt_data.size ? opt_data.size : 'small') : '', ' aui', soy.$$escapeHtml(opt_data.useIconFont ? '-iconfont' : '-icon'), soy.$$escapeHtml(opt_data.iconFontSet ? '-' + opt_data.iconFontSet : ''), '-', soy.$$escapeHtml(opt_data.icon));
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', (opt_data.accessibilityText) ? soy.$$escapeHtml(opt_data.accessibilityText) : '', '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'span'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/lozenges.soy' */
// This file was automatically generated from lozenges.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.lozenges == 'undefined') { aui.lozenges = {}; }


aui.lozenges.lozenge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'span'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', (opt_data.title) ? ' title="' + soy.$$escapeHtml(opt_data.title) + '"' : '', ' class="aui-lozenge', soy.$$escapeHtml(opt_data.type ? ' aui-lozenge-' + opt_data.type : ''), soy.$$escapeHtml(opt_data.isSubtle ? ' aui-lozenge-subtle' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', (opt_data.maxLength) ? soy.$$truncate(soy.$$escapeHtml(opt_data.text), opt_data.maxLength, true) : soy.$$escapeHtml(opt_data.text), '</', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'span'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.auiplugin:aui-experimental-soy-templates', location = 'soy/sidebar.soy' */
// This file was automatically generated from sidebar.soy.
// Please don't edit this file by hand.

if (typeof aui == 'undefined') { var aui = {}; }
if (typeof aui.sidebar == 'undefined') { aui.sidebar = {}; }


aui.sidebar.sidebar = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', (opt_data.state) ? ' aria-expanded="' + ((opt_data.state == 'collapsed') ? 'false' : 'true') + '"' : '', ' class="aui-sidebar ', (opt_data.isAnimated) ? 'aui-is-animated' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('" ', (opt_data.isResponsive == false) ? 'data-aui-responsive="false"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><div class="aui-sidebar-wrapper"><div class="aui-sidebar-body">', opt_data.headerContent, opt_data.content, '</div><div class="aui-sidebar-footer">', (opt_data.footerContent) ? opt_data.footerContent : (opt_data.settingsButtonUrl && opt_data.settingsText) ? '<a href="' + soy.$$escapeHtml(opt_data.settingsButtonUrl) + '" class="aui-button aui-button-subtle aui-sidebar-settings-button' + ((opt_data.isSettingsButtonSelected) ? ' aui-sidebar-settings-selected' : '') + '" data-tooltip="' + soy.$$escapeHtml(opt_data.settingsTooltip ? opt_data.settingsTooltip : opt_data.settingsText) + '"><span class="aui-icon aui-icon-small aui-iconfont-configure"></span><span class="aui-button-label">' + soy.$$escapeHtml(opt_data.settingsText) + '</span></a>' : '', '<a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="', soy.$$escapeHtml("Expand sidebar ( [ )"), '" href="#"><span class="aui-icon aui-icon-small"></span></a></div>', (opt_data.isResizable) ? '<div class="aui-sidebar-handle"></div>' : '', '</div></', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'div'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:administration-shortcuts-resources', location = 'adminshortcuts/adminshortcuts.soy' */
// This file was automatically generated from adminshortcuts.soy.
// Please don't edit this file by hand.

if (typeof navlinks == 'undefined') { var navlinks = {}; }
if (typeof navlinks.templates == 'undefined') { navlinks.templates = {}; }
if (typeof navlinks.templates.adminshortcuts == 'undefined') { navlinks.templates.adminshortcuts = {}; }


navlinks.templates.adminshortcuts.section = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param5 = new soy.StringBuilder('<ul class="aui-list-truncate">');
  var linkList7 = opt_data.links;
  var linkListLen7 = linkList7.length;
  for (var linkIndex7 = 0; linkIndex7 < linkListLen7; linkIndex7++) {
    var linkData7 = linkList7[linkIndex7];
    param5.append('<li><a href="', soy.$$escapeHtml(linkData7.link), '">', soy.$$escapeHtml(linkData7.label), '</a></li>');
  }
  param5.append('</ul>');
  aui.dropdown2.section({id: 'nl-remote-admin-section', label: "Other applications", content: param5.toString()}, output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:administration-shortcuts-resources', location = 'adminshortcuts/adminnavlinks.js' */
var NavLinks=(function(a){a.AdminShortcuts=(function(){var c=function(){return AJS.$.ajax({url:AJS.contextPath()+"/rest/menu/latest/admin",cache:false,dataType:"json"})};var b=function(){AJS.$("#nl-remote-admin-section").on("click","a",function(){NL.trackEvent("remoteAdminItemSelected",NL.getCurrentApplication(),$(this).attr("href"))})};return{render:function(){c().done(function(e){e=_.reject(e,function(f){return f.local===true});if(e.length){var d=navlinks.templates.adminshortcuts.section({links:e});a.ApplicationHeader.Cog.getDropdown().append(d);b()}})}}}());return a}(NavLinks||{}));
/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:rotp-projectshortcuts', location = 'projectshortcuts/projectshortcuts.soy' */
// This file was automatically generated from projectshortcuts.soy.
// Please don't edit this file by hand.

if (typeof navlinks == 'undefined') { var navlinks = {}; }
if (typeof navlinks.templates == 'undefined') { navlinks.templates = {}; }
if (typeof navlinks.templates.projectshortcuts == 'undefined') { navlinks.templates.projectshortcuts = {}; }


navlinks.templates.projectshortcuts.dialogContent = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.localShortcuts && opt_data.localShortcuts.length > 0) {
    navlinks.templates.projectshortcuts.dialogContentShortcuts({shortcuts: opt_data.localShortcuts, listClass: 'projectshortcut-links'}, output);
  }
  if (opt_data.remoteShortcuts != null) {
    if (opt_data.remoteShortcuts.length > 0) {
      output.append('<h2 class="projectshortcuts-heading">Related Links</h2>');
      navlinks.templates.projectshortcuts.dialogContentShortcuts(soy.$$augmentData(opt_data.remoteShortcuts, {shortcuts: opt_data.remoteShortcuts, listClass: 'projectshortcut-links'}), output);
    }
  } else {
    navlinks.templates.projectshortcuts.dialogLoading(null, output);
  }
  return opt_sb ? '' : output.toString();
};


navlinks.templates.projectshortcuts.headingWrapper = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="project-dialog-header-wrapper"><div class="project-header"><img class="project-img" src="', soy.$$escapeHtml(opt_data.logoUrl), '"><h2 class="dialog-title">', soy.$$escapeHtml(opt_data.title), '</h2></div><div class="project-content-wrapper">', opt_data.contentHtml, '</div></div>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.projectshortcuts.dialogContentShortcuts = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul', (opt_data.listClass) ? ' class="' + soy.$$escapeHtml(opt_data.listClass) + '"' : '', '>');
  var shortcutList35 = opt_data.shortcuts;
  var shortcutListLen35 = shortcutList35.length;
  for (var shortcutIndex35 = 0; shortcutIndex35 < shortcutListLen35; shortcutIndex35++) {
    var shortcutData35 = shortcutList35[shortcutIndex35];
    output.append('<li', (shortcutIndex35 == shortcutListLen35 - 1) ? ' class="last"' : '', '>');
    navlinks.templates.projectshortcuts.dialogContentShortcut(shortcutData35, output);
    output.append('</li>');
  }
  output.append('</ul>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.projectshortcuts.dialogContentShortcut = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', soy.$$escapeHtml(opt_data.link), '"', (opt_data.tooltip) ? ' title="' + soy.$$escapeHtml(opt_data.tooltip) + '"' : '', '>', soy.$$escapeHtml(opt_data.label), '</a>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.projectshortcuts.dialogLoading = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="projectshortcuts-loading">', (opt_data != null && opt_data.text) ? soy.$$escapeHtml(opt_data.text) : '', '</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:rotp-projectshortcuts', location = 'projectshortcuts/projectshortcuts.js' */
(function(e,g){var i,k={},m="key",b="name",j="entity-type";function f(s){var n=e(this),o=n.data(m),q=n.data(b),p=n.data(j);if(typeof o==="undefined"){return}s.preventDefault();i=new AJS.Dialog({width:600,keypressListener:function(u){if(u.which==jQuery.ui.keyCode.ESCAPE){i.remove()}},id:"project-shortcuts-dialog"}).addCancel("Close",function(){i.remove()}).addPanel("",navlinks.templates.projectshortcuts.headingWrapper({title:q,logoUrl:h(),contentHtml:navlinks.templates.projectshortcuts.dialogLoading({text:"Retrieving links…"})})).show();c(i);if(!k[o]){k[o]={entity:{title:q},localShortcuts:null,remoteShortcuts:null};d(AJS.contextPath()+"/rest/project-shortcuts/1.0/local/"+o,{entityType:p}).done(t);d(AJS.contextPath()+"/rest/project-shortcuts/1.0/remote/"+o,{entityType:p}).done(r).fail(function(){var u=i.getCurrentPanel().body.find(".project-content-wrapper");u.find(".projectshortcuts-loading").remove();AJS.messages.error(u,{body:"Could not retrieve remote project shortcuts",closeable:false});c(i)})}else{l(k[o])}function t(u){k[o].localShortcuts=u.shortcuts;l(k[o])}function r(u){k[o].remoteShortcuts=u.shortcuts;l(k[o])}}function h(){return e(".project-shortcut-dialog-trigger img").attr("src")}function l(n){if(n.localShortcuts){i.getCurrentPanel().html(navlinks.templates.projectshortcuts.headingWrapper({title:n.entity.title,logoUrl:h(),contentHtml:navlinks.templates.projectshortcuts.dialogContent(n)}));c(i)}}function a(p){var o=210;if(!p||p.length<=o){return p}var n=o;while(n>0&&p.charAt(n)!=" "){n--}if(n==0){n=o}p=p.substring(0,n);if(p.length>=n){p=p+"..."}return p}function c(n){var q=n.popup.element,p=q.find(".dialog-panel-body"),o=q.find(".dialog-components");p.height("auto");q.height(o.outerHeight()-1);e(".aui-shadow").remove()}function d(n,o){return e.ajax({url:n,cache:false,data:o,dataType:"json"})}e(document).on("click",".project-shortcut-dialog-trigger",f)}(jQuery,window.NL=(window.NL||{})));
/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:atlassian-ui-popup-display-controller', location = 'popups/DisplayController.js' */
AJS.Popups=AJS.Popups||{};AJS.Popups.DisplayController=function(){var c=[];var a=false;var b=false;AJS.toInit(function(){setTimeout(function(){AJS.Popups.DisplayController.render()},0)});return{request:function(d){c.push(d);if(a&&b===false){this.render()}},render:function(){c.sort(function(e,d){return e.weight-d.weight});a=true;if(c.length!==0){b=true;c[0].show()}}}}();
/* module-key = 'com.atlassian.auiplugin:ajs-underscorejs', location = 'js-vendor/underscorejs/underscore.js' */
(function(){var W=this;var K=W._;var d={};var c=Array.prototype,F=Object.prototype,R=Function.prototype;var h=c.push,O=c.slice,Y=c.concat,D=F.toString,J=F.hasOwnProperty;var l=c.forEach,Q=c.map,e=c.reduce,C=c.reduceRight,B=c.filter,b=c.every,P=c.some,N=c.indexOf,L=c.lastIndexOf,U=Array.isArray,E=Object.keys,f=R.bind;var m=function(n){if(n instanceof m){return n}if(!(this instanceof m)){return new m(n)}this._wrapped=n};if(typeof exports!=="undefined"){if(typeof module!=="undefined"&&module.exports){exports=module.exports=m}exports._=m}else{W._=m}m.VERSION="1.5.2";var i=m.each=m.forEach=function(s,p,o){if(s==null){return }if(l&&s.forEach===l){s.forEach(p,o)}else{if(s.length===+s.length){for(var n=0,r=s.length;n<r;n++){if(p.call(o,s[n],n,s)===d){return }}}else{var q=m.keys(s);for(var n=0,r=q.length;n<r;n++){if(p.call(o,s[q[n]],q[n],s)===d){return }}}}};m.map=m.collect=function(q,p,o){var n=[];if(q==null){return n}if(Q&&q.map===Q){return q.map(p,o)}i(q,function(t,r,s){n.push(p.call(o,t,r,s))});return n};var G="Reduce of empty array with no initial value";m.reduce=m.foldl=m.inject=function(r,q,n,p){var o=arguments.length>2;if(r==null){r=[]}if(e&&r.reduce===e){if(p){q=m.bind(q,p)}return o?r.reduce(q,n):r.reduce(q)}i(r,function(u,s,t){if(!o){n=u;o=true}else{n=q.call(p,n,u,s,t)}});if(!o){throw new TypeError(G)}return n};m.reduceRight=m.foldr=function(t,q,n,p){var o=arguments.length>2;if(t==null){t=[]}if(C&&t.reduceRight===C){if(p){q=m.bind(q,p)}return o?t.reduceRight(q,n):t.reduceRight(q)}var s=t.length;if(s!==+s){var r=m.keys(t);s=r.length}i(t,function(w,u,v){u=r?r[--s]:--s;if(!o){n=t[u];o=true}else{n=q.call(p,n,t[u],u,v)}});if(!o){throw new TypeError(G)}return n};m.find=m.detect=function(q,p,o){var n;a(q,function(t,r,s){if(p.call(o,t,r,s)){n=t;return true}});return n};m.filter=m.select=function(q,p,o){var n=[];if(q==null){return n}if(B&&q.filter===B){return q.filter(p,o)}i(q,function(t,r,s){if(p.call(o,t,r,s)){n.push(t)}});return n};m.reject=function(p,o,n){return m.filter(p,function(s,q,r){return !o.call(n,s,q,r)},n)};m.every=m.all=function(q,p,o){p||(p=m.identity);var n=true;if(q==null){return n}if(b&&q.every===b){return q.every(p,o)}i(q,function(t,r,s){if(!(n=n&&p.call(o,t,r,s))){return d}});return !!n};var a=m.some=m.any=function(q,p,o){p||(p=m.identity);var n=false;if(q==null){return n}if(P&&q.some===P){return q.some(p,o)}i(q,function(t,r,s){if(n||(n=p.call(o,t,r,s))){return d}});return !!n};m.contains=m.include=function(o,n){if(o==null){return false}if(N&&o.indexOf===N){return o.indexOf(n)!=-1}return a(o,function(p){return p===n})};m.invoke=function(p,q){var n=O.call(arguments,2);var o=m.isFunction(q);return m.map(p,function(r){return(o?q:r[q]).apply(r,n)})};m.pluck=function(o,n){return m.map(o,function(p){return p[n]})};m.where=function(o,n,p){if(m.isEmpty(n)){return p?void 0:[]}return m[p?"find":"filter"](o,function(r){for(var q in n){if(n[q]!==r[q]){return false}}return true})};m.findWhere=function(o,n){return m.where(o,n,true)};m.max=function(q,p,o){if(!p&&m.isArray(q)&&q[0]===+q[0]&&q.length<65535){return Math.max.apply(Math,q)}if(!p&&m.isEmpty(q)){return -Infinity}var n={computed:-Infinity,value:-Infinity};i(q,function(u,r,t){var s=p?p.call(o,u,r,t):u;s>n.computed&&(n={value:u,computed:s})});return n.value};m.min=function(q,p,o){if(!p&&m.isArray(q)&&q[0]===+q[0]&&q.length<65535){return Math.min.apply(Math,q)}if(!p&&m.isEmpty(q)){return Infinity}var n={computed:Infinity,value:Infinity};i(q,function(u,r,t){var s=p?p.call(o,u,r,t):u;s<n.computed&&(n={value:u,computed:s})});return n.value};m.shuffle=function(q){var p;var o=0;var n=[];i(q,function(r){p=m.random(o++);n[o-1]=n[p];n[p]=r});return n};m.sample=function(p,q,o){if(arguments.length<2||o){return p[m.random(p.length-1)]}return m.shuffle(p).slice(0,Math.max(0,q))};var A=function(n){return m.isFunction(n)?n:function(o){return o[n]}};m.sortBy=function(q,p,n){var o=A(p);return m.pluck(m.map(q,function(t,r,s){return{value:t,index:r,criteria:o.call(n,t,r,s)}}).sort(function(u,t){var s=u.criteria;var r=t.criteria;if(s!==r){if(s>r||s===void 0){return 1}if(s<r||r===void 0){return -1}}return u.index-t.index}),"value")};var T=function(n){return function(s,r,p){var o={};var q=r==null?m.identity:A(r);i(s,function(v,t){var u=q.call(p,v,t,s);n(o,u,v)});return o}};m.groupBy=T(function(n,o,p){(m.has(n,o)?n[o]:(n[o]=[])).push(p)});m.indexBy=T(function(n,o,p){n[o]=p});m.countBy=T(function(n,o){m.has(n,o)?n[o]++:n[o]=1});m.sortedIndex=function(u,t,q,p){q=q==null?m.identity:A(q);var s=q.call(p,t);var n=0,r=u.length;while(n<r){var o=(n+r)>>>1;q.call(p,u[o])<s?n=o+1:r=o}return n};m.toArray=function(n){if(!n){return[]}if(m.isArray(n)){return O.call(n)}if(n.length===+n.length){return m.map(n,m.identity)}return m.values(n)};m.size=function(n){if(n==null){return 0}return(n.length===+n.length)?n.length:m.keys(n).length};m.first=m.head=m.take=function(q,p,o){if(q==null){return void 0}return(p==null)||o?q[0]:O.call(q,0,p)};m.initial=function(q,p,o){return O.call(q,0,q.length-((p==null)||o?1:p))};m.last=function(q,p,o){if(q==null){return void 0}if((p==null)||o){return q[q.length-1]}else{return O.call(q,Math.max(q.length-p,0))}};m.rest=m.tail=m.drop=function(q,p,o){return O.call(q,(p==null)||o?1:p)};m.compact=function(n){return m.filter(n,m.identity)};var X=function(o,p,n){if(p&&m.every(o,m.isArray)){return Y.apply(n,o)}i(o,function(q){if(m.isArray(q)||m.isArguments(q)){p?h.apply(n,q):X(q,p,n)}else{n.push(q)}});return n};m.flatten=function(o,n){return X(o,n,[])};m.without=function(n){return m.difference(n,O.call(arguments,1))};m.uniq=m.unique=function(t,s,r,q){if(m.isFunction(s)){q=r;r=s;s=false}var o=r?m.map(t,r,q):t;var p=[];var n=[];i(o,function(v,u){if(s?(!u||n[n.length-1]!==v):!m.contains(n,v)){n.push(v);p.push(t[u])}});return p};m.union=function(){return m.uniq(m.flatten(arguments,true))};m.intersection=function(o){var n=O.call(arguments,1);return m.filter(m.uniq(o),function(p){return m.every(n,function(q){return m.indexOf(q,p)>=0})})};m.difference=function(o){var n=Y.apply(c,O.call(arguments,1));return m.filter(o,function(p){return !m.contains(n,p)})};m.zip=function(){var p=m.max(m.pluck(arguments,"length").concat(0));var o=new Array(p);for(var n=0;n<p;n++){o[n]=m.pluck(arguments,""+n)}return o};m.object=function(r,o){if(r==null){return{}}var n={};for(var p=0,q=r.length;p<q;p++){if(o){n[r[p]]=o[p]}else{n[r[p][0]]=r[p][1]}}return n};m.indexOf=function(r,p,q){if(r==null){return -1}var n=0,o=r.length;if(q){if(typeof q=="number"){n=(q<0?Math.max(0,o+q):q)}else{n=m.sortedIndex(r,p);return r[n]===p?n:-1}}if(N&&r.indexOf===N){return r.indexOf(p,q)}for(;n<o;n++){if(r[n]===p){return n}}return -1};m.lastIndexOf=function(r,p,q){if(r==null){return -1}var n=q!=null;if(L&&r.lastIndexOf===L){return n?r.lastIndexOf(p,q):r.lastIndexOf(p)}var o=(n?q:r.length);while(o--){if(r[o]===p){return o}}return -1};m.range=function(s,p,r){if(arguments.length<=1){p=s||0;s=0}r=arguments[2]||1;var q=Math.max(Math.ceil((p-s)/r),0);var n=0;var o=new Array(q);while(n<q){o[n++]=s;s+=r}return o};var g=function(){};m.bind=function(q,o){var n,p;if(f&&q.bind===f){return f.apply(q,O.call(arguments,1))}if(!m.isFunction(q)){throw new TypeError}n=O.call(arguments,2);return p=function(){if(!(this instanceof p)){return q.apply(o,n.concat(O.call(arguments)))}g.prototype=q.prototype;var s=new g;g.prototype=null;var r=q.apply(s,n.concat(O.call(arguments)));if(Object(r)===r){return r}return s}};m.partial=function(o){var n=O.call(arguments,1);return function(){return o.apply(this,n.concat(O.call(arguments)))}};m.bindAll=function(o){var n=O.call(arguments,1);if(n.length===0){throw new Error("bindAll must be passed function names")}i(n,function(p){o[p]=m.bind(o[p],o)});return o};m.memoize=function(p,o){var n={};o||(o=m.identity);return function(){var q=o.apply(this,arguments);return m.has(n,q)?n[q]:(n[q]=p.apply(this,arguments))}};m.delay=function(o,p){var n=O.call(arguments,2);return setTimeout(function(){return o.apply(null,n)},p)};m.defer=function(n){return m.delay.apply(m,[n,1].concat(O.call(arguments,1)))};m.throttle=function(o,q,u){var n,s,v;var t=null;var r=0;u||(u={});var p=function(){r=u.leading===false?0:new Date;t=null;v=o.apply(n,s)};return function(){var w=new Date;if(!r&&u.leading===false){r=w}var x=q-(w-r);n=this;s=arguments;if(x<=0){clearTimeout(t);t=null;r=w;v=o.apply(n,s)}else{if(!t&&u.trailing!==false){t=setTimeout(p,x)}}return v}};m.debounce=function(r,u,o){var t,p,q,s,n;return function(){q=this;p=arguments;s=new Date();var w=function(){var x=(new Date())-s;if(x<u){t=setTimeout(w,u-x)}else{t=null;if(!o){n=r.apply(q,p)}}};var v=o&&!t;if(!t){t=setTimeout(w,u)}if(v){n=r.apply(q,p)}return n}};m.once=function(p){var n=false,o;return function(){if(n){return o}n=true;o=p.apply(this,arguments);p=null;return o}};m.wrap=function(n,o){return function(){var p=[n];h.apply(p,arguments);return o.apply(this,p)}};m.compose=function(){var n=arguments;return function(){var o=arguments;for(var p=n.length-1;p>=0;p--){o=[n[p].apply(this,o)]}return o[0]}};m.after=function(o,n){return function(){if(--o<1){return n.apply(this,arguments)}}};m.keys=E||function(p){if(p!==Object(p)){throw new TypeError("Invalid object")}var o=[];for(var n in p){if(m.has(p,n)){o.push(n)}}return o};m.values=function(r){var q=m.keys(r);var p=q.length;var n=new Array(p);for(var o=0;o<p;o++){n[o]=r[q[o]]}return n};m.pairs=function(r){var p=m.keys(r);var o=p.length;var q=new Array(o);for(var n=0;n<o;n++){q[n]=[p[n],r[p[n]]]}return q};m.invert=function(r){var n={};var q=m.keys(r);for(var o=0,p=q.length;o<p;o++){n[r[q[o]]]=q[o]}return n};m.functions=m.methods=function(p){var o=[];for(var n in p){if(m.isFunction(p[n])){o.push(n)}}return o.sort()};m.extend=function(n){i(O.call(arguments,1),function(o){if(o){for(var p in o){n[p]=o[p]}}});return n};m.pick=function(o){var p={};var n=Y.apply(c,O.call(arguments,1));i(n,function(q){if(q in o){p[q]=o[q]}});return p};m.omit=function(p){var q={};var o=Y.apply(c,O.call(arguments,1));for(var n in p){if(!m.contains(o,n)){q[n]=p[n]}}return q};m.defaults=function(n){i(O.call(arguments,1),function(o){if(o){for(var p in o){if(n[p]===void 0){n[p]=o[p]}}}});return n};m.clone=function(n){if(!m.isObject(n)){return n}return m.isArray(n)?n.slice():m.extend({},n)};m.tap=function(o,n){n(o);return o};var j=function(u,t,o,p){if(u===t){return u!==0||1/u==1/t}if(u==null||t==null){return u===t}if(u instanceof m){u=u._wrapped}if(t instanceof m){t=t._wrapped}var r=D.call(u);if(r!=D.call(t)){return false}switch(r){case"[object String]":return u==String(t);case"[object Number]":return u!=+u?t!=+t:(u==0?1/u==1/t:u==+t);case"[object Date]":case"[object Boolean]":return +u==+t;case"[object RegExp]":return u.source==t.source&&u.global==t.global&&u.multiline==t.multiline&&u.ignoreCase==t.ignoreCase}if(typeof u!="object"||typeof t!="object"){return false}var n=o.length;while(n--){if(o[n]==u){return p[n]==t}}var s=u.constructor,q=t.constructor;if(s!==q&&!(m.isFunction(s)&&(s instanceof s)&&m.isFunction(q)&&(q instanceof q))){return false}o.push(u);p.push(t);var x=0,w=true;if(r=="[object Array]"){x=u.length;w=x==t.length;if(w){while(x--){if(!(w=j(u[x],t[x],o,p))){break}}}}else{for(var v in u){if(m.has(u,v)){x++;if(!(w=m.has(t,v)&&j(u[v],t[v],o,p))){break}}}if(w){for(v in t){if(m.has(t,v)&&!(x--)){break}}w=!x}}o.pop();p.pop();return w};m.isEqual=function(o,n){return j(o,n,[],[])};m.isEmpty=function(o){if(o==null){return true}if(m.isArray(o)||m.isString(o)){return o.length===0}for(var n in o){if(m.has(o,n)){return false}}return true};m.isElement=function(n){return !!(n&&n.nodeType===1)};m.isArray=U||function(n){return D.call(n)=="[object Array]"};m.isObject=function(n){return n===Object(n)};i(["Arguments","Function","String","Number","Date","RegExp"],function(n){m["is"+n]=function(o){return D.call(o)=="[object "+n+"]"}});if(!m.isArguments(arguments)){m.isArguments=function(n){return !!(n&&m.has(n,"callee"))}}if(typeof (/./)!=="function"){m.isFunction=function(n){return typeof n==="function"}}m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))};m.isNaN=function(n){return m.isNumber(n)&&n!=+n};m.isBoolean=function(n){return n===true||n===false||D.call(n)=="[object Boolean]"};m.isNull=function(n){return n===null};m.isUndefined=function(n){return n===void 0};m.has=function(o,n){return J.call(o,n)};m.noConflict=function(){W._=K;return this};m.identity=function(n){return n};m.times=function(s,r,q){var o=Array(Math.max(0,s));for(var p=0;p<s;p++){o[p]=r.call(q,p)}return o};m.random=function(o,n){if(n==null){n=o;o=0}return o+Math.floor(Math.random()*(n-o+1))};var M={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;"}};M.unescape=m.invert(M.escape);var k={escape:new RegExp("["+m.keys(M.escape).join("")+"]","g"),unescape:new RegExp("("+m.keys(M.unescape).join("|")+")","g")};m.each(["escape","unescape"],function(n){m[n]=function(o){if(o==null){return""}return(""+o).replace(k[n],function(p){return M[n][p]})}});m.result=function(n,p){if(n==null){return void 0}var o=n[p];return m.isFunction(o)?o.call(n):o};m.mixin=function(n){i(m.functions(n),function(o){var p=m[o]=n[o];m.prototype[o]=function(){var q=[this._wrapped];h.apply(q,arguments);return S.call(this,p.apply(m,q))}})};var Z=0;m.uniqueId=function(n){var o=++Z+"";return n?n+o:o};m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var V=/(.)^/;var H={"'":"'","\\":"\\","\r":"r","\n":"n","\t":"t","\u2028":"u2028","\u2029":"u2029"};var I=/\\|'|\r|\n|\t|\u2028|\u2029/g;m.template=function(v,q,p){var o;p=m.defaults({},p,m.templateSettings);var r=new RegExp([(p.escape||V).source,(p.interpolate||V).source,(p.evaluate||V).source].join("|")+"|$","g");var s=0;var n="__p+='";v.replace(r,function(x,y,w,AA,z){n+=v.slice(s,z).replace(I,function(AB){return"\\"+H[AB]});if(y){n+="'+\n((__t=("+y+"))==null?'':_.escape(__t))+\n'"}if(w){n+="'+\n((__t=("+w+"))==null?'':__t)+\n'"}if(AA){n+="';\n"+AA+"\n__p+='"}s=z+x.length;return x});n+="';\n";if(!p.variable){n="with(obj||{}){\n"+n+"}\n"}n="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+n+"return __p;\n";try{o=new Function(p.variable||"obj","_",n)}catch(t){t.source=n;throw t}if(q){return o(q,m)}var u=function(w){return o.call(this,w,m)};u.source="function("+(p.variable||"obj")+"){\n"+n+"}";return u};m.chain=function(n){return m(n).chain()};var S=function(n){return this._chain?m(n).chain():n};m.mixin(m);i(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var o=c[n];m.prototype[n]=function(){var p=this._wrapped;o.apply(p,arguments);if((n=="shift"||n=="splice")&&p.length===0){delete p[0]}return S.call(this,p)}});i(["concat","join","slice"],function(n){var o=c[n];m.prototype[n]=function(){return S.call(this,o.apply(this._wrapped,arguments))}});m.extend(m.prototype,{chain:function(){this._chain=true;return this},value:function(){return this._wrapped}})}).call(this);
/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:rotp-menu', location = 'appswitcher/appswitcher.soy' */
// This file was automatically generated from appswitcher.soy.
// Please don't edit this file by hand.

if (typeof navlinks == 'undefined') { var navlinks = {}; }
if (typeof navlinks.templates == 'undefined') { navlinks.templates = {}; }
if (typeof navlinks.templates.appswitcher == 'undefined') { navlinks.templates.appswitcher = {}; }


navlinks.templates.appswitcher.linkSection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.list.length > 0) {
    output.append('<div class="aui-nav-heading sidebar-section-header">', soy.$$escapeHtml(opt_data.title), '</div><ul class="aui-nav nav-links">');
    var linkList8 = opt_data.list;
    var linkListLen8 = linkList8.length;
    for (var linkIndex8 = 0; linkIndex8 < linkListLen8; linkIndex8++) {
      var linkData8 = linkList8[linkIndex8];
      navlinks.templates.appswitcher.applicationsItem(linkData8, output);
    }
    output.append('</ul>');
  }
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.applicationsItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li class="nav-link"><a href="', soy.$$escapeHtml(opt_data.link), '" class="interactive', (opt_data.self) ? ' checked' : '', '" title="', soy.$$escapeHtml(opt_data.link), '"><span class="nav-link-label">', soy.$$escapeHtml(opt_data.label), '</span></a></li>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.shortcutsItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li class="nav-link"><a href="', soy.$$escapeHtml(opt_data.link), '" class="interactive', (opt_data.self) ? ' checked' : '', '" title="', soy.$$escapeHtml(opt_data.link), '"><span class="nav-link-label">', soy.$$escapeHtml(opt_data.label), '</span>', (opt_data.showDescription && opt_data.description) ? '<span class="nav-link-description">' + soy.$$escapeHtml(opt_data.description) + '</span>' : '', '</a></li>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.error = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="app-switcher-error">', "Something went wrong, please \x3cspan class\x3d\x22app-switcher-retry\x22\x3etry again\x3c/span\x3e.", '</div>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.sidebarContents = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="aui-page-panel-nav"><nav class="aui-navgroup aui-navgroup-vertical"><div class="app-switcher-section app-switcher-applications"><div class="aui-nav-heading">', soy.$$escapeHtml("Application Links"), '</div><div class="app-switcher-loading">', "Loading\x26hellip;", '</div></div><div class="app-switcher-section app-switcher-shortcuts"><div class="aui-nav-heading">', soy.$$escapeHtml("Shortcuts"), '</div><div class="app-switcher-loading">', "Loading\x26hellip;", '</div></div></nav></div>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.trigger = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="aui-icon aui-icon-small aui-iconfont-appswitcher">', soy.$$escapeHtml("Linked Applications"), '</span>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.projectHeaderSection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="app-switcher-title">');
  aui.avatar.avatar({size: 'large', avatarImageUrl: opt_data.avatarUrl, isProject: true, title: opt_data.name}, output);
  output.append('<div class="sidebar-project-name">', soy.$$escapeHtml(opt_data.name), '</div></div>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.cogDropdown = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var dropdownList__soy74 = new soy.StringBuilder();
  navlinks.templates.appswitcher.dropdownList({list: opt_data.links}, dropdownList__soy74);
  dropdownList__soy74 = dropdownList__soy74.toString();
  aui.dropdown2.dropdown2({menu: {'id': opt_data.id, 'content': dropdownList__soy74, 'extraClasses': 'aui-style-default sidebar-customize-section'}, trigger: {'showIcon': false, 'content': '<span class="aui-icon aui-icon-small aui-iconfont-configure"></span>', 'container': '#app-switcher'}}, output);
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.dropdownList = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul class="sidebar-admin-links">');
  var linkList82 = opt_data.list;
  var linkListLen82 = linkList82.length;
  for (var linkIndex82 = 0; linkIndex82 < linkListLen82; linkIndex82++) {
    var linkData82 = linkList82[linkIndex82];
    output.append('<li class="nav-link"><a href="', soy.$$escapeHtml(linkData82.href), '" title="', soy.$$escapeHtml(linkData82.title), '"><span class="nav-link-label">', soy.$$escapeHtml(linkData82.label), '</span></a></li>');
  }
  output.append('</ul>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.switcher = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (true) {
    if (AJS.DarkFeatures.isEnabled('rotp.sidebar')) {
      var sidebarContents__soy97 = new soy.StringBuilder();
      navlinks.templates.appswitcher.sidebarContents(null, sidebarContents__soy97);
      sidebarContents__soy97 = sidebarContents__soy97.toString();
      var triggerContent__soy99 = new soy.StringBuilder();
      navlinks.templates.appswitcher.trigger(null, triggerContent__soy99);
      triggerContent__soy99 = triggerContent__soy99.toString();
      navlinks.templates.appswitcher.sidebar({sidebar: {'id': 'app-switcher', 'content': sidebarContents__soy97}, trigger: {'showIcon': false, 'content': triggerContent__soy99}}, output);
      output.append('<script>\n                (function (NL) {\n                    var initialise = function () {\n                        new NL.SideBar({\n                            sidebarContents: \'#app-switcher\'\n                        });\n                    };\n                    if (NL.SideBar) {\n                        initialise();\n                    } else {\n                        NL.onInit = initialise;\n                    }\n                }(window.NL = (window.NL || {})));\n                window.NL.isUserAdmin = ', soy.$$escapeHtml(false), '<\/script>');
    } else {
      navlinks.templates.appswitcher_old.switcher(null, output);
    }
  }
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher.sidebar = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', soy.$$escapeHtml(opt_data.sidebar.id), '" class="sidebar-trigger app-switcher-trigger" aria-owns="', soy.$$escapeHtml(opt_data.sidebar.id), '" aria-haspopup="true">', opt_data.trigger.content, '</a><div id=', soy.$$escapeHtml(opt_data.sidebar.id), ' class="app-switcher-sidebar aui-style-default sidebar-offscreen">', opt_data.sidebar.content, '</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:rotp-menu', location = 'appswitcher/appswitcher.js' */
(function(c,a){a.SideBar=function(d){var e=this;this.$sidebar=null;d=c.extend({sidebarContents:null},d);this.getLinks=function(){return c.ajax({url:AJS.contextPath()+"/rest/menu/latest/appswitcher",cache:false,dataType:"json"}).done(this.updateAppLinks).fail(this.showAppSwitcherError)};this.populateProjectHeader=function(g,f){e.getSidebar().find(".app-switcher-shortcuts .aui-nav-heading").after(navlinks.templates.appswitcher.projectHeaderSection({avatarUrl:f,name:g}))};this.getProjectData=function(){var f=c(".project-shortcut-dialog-trigger"),g=f.data("key"),h=f.data("entity-type");if(f.size()==0||!g||!h){c(".app-switcher-shortcuts").remove();return}var j,i;i=c.ajax({url:AJS.contextPath()+"/rest/project-shortcuts/1.0/local/"+g,cache:false,data:{entityType:h},dataType:"json"});j=c.ajax({url:AJS.contextPath()+"/rest/project-shortcuts/1.0/remote/"+g,cache:false,data:{entityType:h},dataType:"json"});c.when(i,j).then(function(l,k){e.updateProjectShortcuts(l,k,{key:g,entityType:h,name:f.data("name"),avatarUrl:f.find("img").prop("src")})},e.showProjectShortcutsError)};this.getSidebar=function(){if(!this.$sidebar){this.$sidebar=c(d.sidebarContents)}return this.$sidebar};this.addApplicationsCog=function(){c(".app-switcher-applications .aui-nav-heading").before(navlinks.templates.appswitcher.cogDropdown({id:"sidebar-applications-admin-dropdown",links:[{href:AJS.contextPath()+"/plugins/servlet/customize-application-navigator",label:"Customize navigator",title:"Add new entries, hide existing or restrict who sees what"},{href:AJS.contextPath()+"/plugins/servlet/applinks/listApplicationLinks",label:"Manage application links",title:"Link to more Atlassian applications"}]}))};this.addProjectShortcutsCog=function(f,h){var g=[{href:AJS.contextPath()+"/plugins/servlet/custom-content-links-admin?entityKey="+f,label:"Customize shortcuts",title:""}];if(e.entityMappings[h]){g.push({href:e.generateEntityLinksUrl(f,e.entityMappings[h]),label:"Manage product links",title:""})}e.getSidebar().find(".app-switcher-shortcuts .aui-nav-heading").before(navlinks.templates.appswitcher.cogDropdown({id:"sidebar-project-shortcuts-admin-dropdown",links:g}))};this.updateAppLinks=function(f){c(function(){e.getSidebar().find(".app-switcher-applications").html(navlinks.templates.appswitcher.linkSection({title:"Application Links",list:f}));if(a.isUserAdmin){e.addApplicationsCog()}e.bindAnalyticsHandlers(e.getSidebar(),f)})};this.updateProjectShortcuts=function(i,g,h){var j=i[0].shortcuts,f=g[0].shortcuts;e.getSidebar().find(".app-switcher-shortcuts").html(navlinks.templates.appswitcher.linkSection({title:"Shortcuts",list:j.concat(f)}));if(a.isUserAdmin){e.addProjectShortcutsCog(h.key,h.entityType)}e.populateProjectHeader(h.name,h.avatarUrl);e.bindAnalyticsHandlers(e.getSidebar(),data)};this.entityMappings={"confluence.space":"com.atlassian.applinks.api.application.confluence.ConfluenceSpaceEntityType","jira.project":"com.atlassian.applinks.api.application.jira.JiraProjectEntityType","bamboo.project":"com.atlassian.applinks.api.application.bamboo.BambooProjectEntityType","stash.project":"com.atlassian.applinks.api.application.stash.StashProjectEntityType"};this.generateEntityLinksUrl=function(f,g){if(g===e.entityMappings["confluence.space"]){return AJS.contextPath()+"/spaces/listentitylinks.action?typeId="+g+"&key="+f}else{return AJS.contextPath()+"/plugins/servlet/applinks/listEntityLinks/"+g+"/"+f}};this.showAppSwitcherError=function(){c(function(){var f=e.getSidebar();f.find(".app-switcher-applications .app-switcher-loading").replaceWith(navlinks.templates.appswitcher.error());f.off(".appswitcher").on("click.appswitcher",".app-switcher-retry",c.proxy(e.retryLoading,e))})};this.showProjectShortcutsError=function(){c(function(){var f=e.getSidebar();f.find(".app-switcher-shortcuts .app-switcher-loading").replaceWith(navlinks.templates.appswitcher.error());f.off(".appswitcher").on("click.appswitcher",".app-switcher-retry",c.proxy(e.retryLoading,e))})};this.retryLoading=function(f){this.getSidebar().html(navlinks.templates.appswitcher.sidebarContents());this.getLinks();this.getProjectData();f&&f.stopPropagation()};this.bindAnalyticsHandlers=function(f,g){};this.getLinks();c(this.getProjectData);this.toggleSidebar=function(h){var i=e.getSidebar(),g=c("body"),f=c(window.document);if(!g.hasClass("app-switcher-open")){var k=c("#header");i.css("left",-i.width());i.parent("body").length||i.appendTo("body");b({data:i});i.animate({left:0},300);function j(l){var n=l.target&&c(l.target),m=l.keyCode;if(l.originalEvent===h.originalEvent){return}if(n&&!m&&!(n.closest(i).length||n.closest(k).length)&&h.which==1&&!(l.shiftKey||l.ctrlKey||l.metaKey)){e.toggleSidebar()}else{if(m===27){e.toggleSidebar()}}}f.on("click.appSwitcher",j);f.on("keydown.appSwitcher",j);f.on("scroll.appSwitcher",i,b)}else{f.off(".appSwitcher")}g.toggleClass("app-switcher-open")};c("#header").on("click",".app-switcher-trigger",this.toggleSidebar)};function b(f){var d=c(document).scrollTop(),g=c("#header"),e=(g.height()+g.offset().top)-d;if(e>=0){f.data.css({top:e,position:"fixed"})}else{f.data.css({top:0,left:0,position:"fixed"})}}if(a.onInit){a.onInit()}}(jQuery,window.NL=(window.NL||{})));
/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:rotp-menu', location = 'appswitcher/appswitcher_old.js' */
(function(e,c){c.AppSwitcher=function(f){var g=AJS.contextPath()+"/plugins/servlet/customize-application-navigator";var h=this;this.$dropdown=null;f=e.extend({dropdownContents:null},f);this.getLinks=function(){return e.ajax({url:AJS.contextPath()+"/rest/menu/latest/appswitcher",cache:false,dataType:"json"}).done(this.updateDropdown).fail(this.showError)};this.getDropdown=function(){if(!this.$dropdown){this.$dropdown=e(f.dropdownContents)}return this.$dropdown};this.updateDropdown=function(i){e(function(){h.getDropdown().html(navlinks.templates.appswitcher_old.applications({apps:i,showAdminLink:c.isUserAdmin,adminLink:g}));h.bindAnalyticsHandlers(h.getDropdown(),i);h.processSuggestionApps(i)})};this.bindAnalyticsHandlers=function(i,j){};this.processSuggestionApps=function(i){e.ajax({type:"GET",dataType:"json",contentType:"application/json; charset=UTF-8",url:AJS.contextPath()+"/rest/menu/latest/isAppSuggestionAvailable"}).done(function(j){if(j===true){h.handleSuggestionApps(i)}})};this.handleSuggestionApps=function(k){var l=_.map(k,function(m){return m.applicationType.toLowerCase()});$suggestionApps=e("<div id='app-switcher-suggestion-apps' class='aui-dropdown2-section'/>");$suggestionApps.html(navlinks.templates.appswitcher_old.suggestionApps);var j=$suggestionApps.find(".suggestion-apps");var i=false;_.each(a,function(m){if(!_.contains(l,m.appName)){i=true;j.append(navlinks.templates.appswitcher_old.suggestionApp({appName:m.appName,appDesc:m.appDesc}))}});if(!i){return}e("#app-switcher").append($suggestionApps);e(".app-discovery-suggestion-app").click(function(){AJS.trigger("analytics",{name:"appswitcher.discovery.user.select."+e(this).find("a").attr("id").toLowerCase()});window.open(e(this).find("a").attr("title"),"_blank")});e(".app-discovery-suggestion-app").hover(function(){e(this).find("a").removeClass("active").removeClass("aui-dropdown2-active")});e(".app-discovery-cancel-button").click(function(){AJS.trigger("analytics",{name:"appswitcher.discovery.nothanks.button.click"});d(b,"true");$suggestionApps.remove()})};this.showError=function(){e(function(){h.getDropdown().html(navlinks.templates.appswitcher_old.error()).off(".appswitcher").on("click.appswitcher",".app-switcher-retry",e.proxy(h.retryLoading,h))})};this.retryLoading=function(i){this.getDropdown().html(navlinks.templates.appswitcher_old.loading());this.getLinks();i&&i.stopPropagation()};this.getLinks()};var b="key-no-thanks";var a=[{appName:"jira",appDesc:"Issue & Project Tracking Software"},{appName:"confluence",appDesc:"Collaboration and content sharing"},{appName:"bamboo",appDesc:"Continuous integration"}];var d=function(f,g){e.ajax({url:AJS.contextPath()+"/rest/menu/latest/userdata/",type:"PUT",contentType:"application/json",data:JSON.stringify({key:f,value:g})})};if(c.onInit){c.onInit()}}(jQuery,window.NL=(window.NL||{})));
/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:rotp-menu', location = 'appswitcher/appswitcher_old.soy' */
// This file was automatically generated from appswitcher_old.soy.
// Please don't edit this file by hand.

if (typeof navlinks == 'undefined') { var navlinks = {}; }
if (typeof navlinks.templates == 'undefined') { navlinks.templates = {}; }
if (typeof navlinks.templates.appswitcher_old == 'undefined') { navlinks.templates.appswitcher_old = {}; }


navlinks.templates.appswitcher_old.applications = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  navlinks.templates.appswitcher_old.applicationsSection({list: opt_data.apps, listClass: 'nav-links', showDescription: opt_data.showDescription}, output);
  if (opt_data.custom) {
    navlinks.templates.appswitcher_old.applicationsSection({list: opt_data.custom, showDescription: opt_data.showDescription}, output);
  }
  if (opt_data.showAdminLink) {
    navlinks.templates.appswitcher_old.adminSection(opt_data, output);
  }
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.applicationsSection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.list.length > 0) {
    var param19 = new soy.StringBuilder('<ul', (opt_data.listClass) ? ' class="' + soy.$$escapeHtml(opt_data.listClass) + '"' : '', '>');
    var linkList27 = opt_data.list;
    var linkListLen27 = linkList27.length;
    for (var linkIndex27 = 0; linkIndex27 < linkListLen27; linkIndex27++) {
      var linkData27 = linkList27[linkIndex27];
      navlinks.templates.appswitcher_old.applicationsItem(soy.$$augmentData(linkData27, {showDescription: opt_data.showDescription}), param19);
    }
    param19.append('</ul>');
    aui.dropdown2.section({content: param19.toString()}, output);
  }
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.applicationsItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li class="nav-link', (opt_data.self) ? ' nav-link-local' : '', '"><a href="', soy.$$escapeHtml(opt_data.link), '" class="aui-dropdown2-radio interactive', (opt_data.self) ? ' checked' : '', '" title="', soy.$$escapeHtml(opt_data.link), '"><span class="nav-link-label">', soy.$$escapeHtml(opt_data.label), '</span>', (opt_data.showDescription && opt_data.description) ? '<span class="nav-link-description">' + soy.$$escapeHtml(opt_data.description) + '</span>' : '', '</a></li>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.adminSection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.dropdown2.section({content: '<ul class="nav-links"><li><a class="nav-link-edit-wrapper" href="' + soy.$$escapeHtml(opt_data.adminLink) + '"><span class="nav-link-edit">' + "Configure\x26hellip;" + '</span></a></li></ul>'}, output);
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.error = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="app-switcher-error">', "Something went wrong, please \x3cspan class\x3d\x22app-switcher-retry\x22\x3etry again\x3c/span\x3e.", '</div>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.loading = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="app-switcher-loading">', "Loading\x26hellip;", '</div>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.trigger = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="aui-icon aui-icon-small aui-iconfont-appswitcher">', soy.$$escapeHtml("Linked Applications"), '</span>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.switcher = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (true) {
    var loadingContent__soy81 = new soy.StringBuilder();
    navlinks.templates.appswitcher_old.loading(null, loadingContent__soy81);
    loadingContent__soy81 = loadingContent__soy81.toString();
    var triggerContent__soy83 = new soy.StringBuilder();
    navlinks.templates.appswitcher_old.trigger(null, triggerContent__soy83);
    triggerContent__soy83 = triggerContent__soy83.toString();
    aui.dropdown2.dropdown2({menu: {'id': 'app-switcher', 'content': loadingContent__soy81, 'extraClasses': 'aui-style-default'}, trigger: {'showIcon': false, 'content': triggerContent__soy83, 'extraClasses': 'app-switcher-trigger', 'extraAttributes': {'href': '#app-switcher'}}}, output);
    output.append('<script>\n            (function (NL) {\n                var initialise = function () {\n                    // For some milestones of AUI, the atlassian soy namespace was renamed to aui. Handle that here by ensuring that window.atlassian is defined.\n                    window.atlassian = window.atlassian || window.aui;\n                    new NL.AppSwitcher({\n                        dropdownContents: \'#app-switcher\'\n                    });\n                };\n                if (NL.AppSwitcher) {\n                    initialise();\n                } else {\n                    NL.onInit = initialise;\n                }\n            }(window.NL = (window.NL || {})));\n            window.NL.isUserAdmin = ', soy.$$escapeHtml(false), '<\/script>');
  }
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.suggestionApp = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li class="app-discovery-suggestion-app"><a id="', soy.$$escapeHtml(opt_data.appName), '" href="#" class="app-discovery-link aui-icon-container app-discovery-', soy.$$escapeHtml(opt_data.appName), '-product-icon" title="https://www.atlassian.com/software/', soy.$$escapeHtml(opt_data.appName), '"/><div class="app-discovery-small">', soy.$$escapeHtml(opt_data.appDesc), '</div></li>');
  return opt_sb ? '' : output.toString();
};


navlinks.templates.appswitcher_old.suggestionApps = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul class=\'nav-links suggestion-apps\'><li><span class=\'app-discovery-suggest-title nav-link-label\'><h6>', soy.$$escapeHtml("Try other Atlassian apps"), '</h6></span></li></ul><div class=\'buttons-container app-discovery-suggest-apps-buttons\'><div class=\'buttons\'><button class=\'aui-button aui-button-link app-discovery-cancel-button\' name=\'cancel\' accesskey=\'c\' href=\'#\'>', soy.$$escapeHtml("Don\x27t show this again"), '</button></div></div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.plugins.atlassian-nav-links-plugin:rotp-menu', location = 'appswitcher/inline-dialog.js' */
(function(d){AJS.CustomInlineDialog=AJS.CustomInlineDialog||function(B,n,r,p){p=p||[];if(p.hasOwnProperty("getArrowAttributes")){getArrowAttributesDeprecationLogger()}if(p.hasOwnProperty("getArrowPath")){getArrowPathDeprecationLogger();if(p.hasOwnProperty("gravity")){getArrowPathWithGravityDeprecationLogger()}}if(p.hasOwnProperty("onTop")){onTopDeprecationLogger();if(p.onTop&&p.gravity===undefined){p.gravity="s"}}if(typeof n==="undefined"){n=String(Math.random()).replace(".","");if(d("#inline-dialog-"+n+", #arrow-"+n+", #inline-dialog-shim-"+n).length){throw"GENERATED_IDENTIFIER_NOT_UNIQUE"}}var z=d.extend(false,AJS.CustomInlineDialog.opts,p);if(z.gravity==="w"){z.offsetX=p.offsetX===undefined?10:p.offsetX;z.offsetY=p.offsetY===undefined?0:p.offsetY}var v=function(){return window.Raphael&&p&&(p.getArrowPath||p.getArrowAttributes)};var j;var q;var K;var u=false;var A=false;var I=false;var J;var x;var g=d('<div id="inline-dialog-'+n+'" class="aui-inline-dialog"><div class="aui-inline-dialog-contents contents"></div><div id="arrow-'+n+'" class="aui-inline-dialog-arrow arrow"></div></div>');var m=d("#arrow-"+n,g);var G=g.find(".contents");if(!v()){g.find(".aui-inline-dialog-arrow").addClass("aui-css-arrow")}if(!z.displayShadow){G.addClass("aui-inline-dialog-no-shadow")}if(z.autoWidth){G.addClass("aui-inline-dialog-auto-width")}else{G.css("width",z.width+"px")}G.mouseover(function(O){clearTimeout(q);g.unbind("mouseover")}).mouseout(function(){E()});var D=function(){if(!j){j={popup:g,hide:function(){E(0)},id:n,show:function(){y()},persistent:z.persistent?true:false,reset:function(){function S(U,T){U.css(T.popupCss);if(v()){if(T.gravity==="s"){T.arrowCss.top-=d.browser.msie?10:9}if(!U.arrowCanvas){U.arrowCanvas=Raphael("arrow-"+n,16,16)}var V=z.getArrowPath,W=d.isFunction(V)?V(T):V;U.arrowCanvas.path(W).attr(z.getArrowAttributes())}else{m.removeClass("aui-bottom-arrow aui-left-arrow aui-right-arrow");if(T.gravity==="s"&&!m.hasClass("aui-bottom-arrow")){m.addClass("aui-bottom-arrow")}else{if(T.gravity==="n"){}else{if(T.gravity==="w"){m.addClass("aui-left-arrow")}else{if(T.gravity==="e"){m.addClass("aui-right-arrow")}}}}}m.css(T.arrowCss)}var P=AJS.$(window).height();var Q=Math.round(P*0.75);g.children(".aui-inline-dialog-contents").css("max-height",Q);var O=z.calculatePositions(g,x,J,z);if(O.hasOwnProperty("displayAbove")){displayAboveDeprecationLogger();O.gravity=O.displayAbove?"s":"n"}S(g,O);g.fadeIn(z.fadeTime,function(){});if(d.browser.msie&&~~(d.browser.version)<10){var R=d("#inline-dialog-shim-"+n);if(!R.length){d(g).prepend(d('<iframe class = "inline-dialog-shim" id="inline-dialog-shim-'+n+'" frameBorder="0" src="javascript:false;"></iframe>'))}R.css({width:G.outerWidth(),height:G.outerHeight()})}}}}return j};var y=function(){if(g.is(":visible")){return}K=setTimeout(function(){if(!I||!A){return}z.addActiveClass&&d(B).addClass("active");u=true;if(!z.persistent){H()}AJS.CustomInlineDialog.current=D();d(document).trigger("showLayer",["inlineDialog",D()]);D().reset()},z.showDelay)};var E=function(O){if(typeof O=="undefined"&&z.persistent){return}A=false;if(u&&z.preHideCallback.call(g[0].popup)){O=(O==null)?z.hideDelay:O;clearTimeout(q);clearTimeout(K);if(O!=null){q=setTimeout(function(){l();z.addActiveClass&&d(B).removeClass("active");g.fadeOut(z.fadeTime,function(){z.hideCallback.call(g[0].popup)});if(g.arrowCanvas){g.arrowCanvas.remove();g.arrowCanvas=null}u=false;A=false;d(document).trigger("hideLayer",["inlineDialog",D()]);AJS.CustomInlineDialog.current=null;if(!z.cacheContent){I=false;w=false}},O)}}};var F=function(R,P){var O=d(P);z.upfrontCallback.call({popup:g,hide:function(){E(0)},id:n,show:function(){y()}});g.each(function(){if(typeof this.popup!="undefined"){this.popup.hide()}});if(z.closeOthers){d(".aui-inline-dialog").each(function(){!this.popup.persistent&&this.popup.hide()})}x={target:O};if(!R){J={x:O.offset().left,y:O.offset().top}}else{J={x:R.pageX,y:R.pageY}}if(!u){clearTimeout(K)}A=true;var Q=function(){w=false;I=true;z.initCallback.call({popup:g,hide:function(){E(0)},id:n,show:function(){y()}});y()};if(!w){w=true;if(d.isFunction(r)){r(G,P,Q)}else{d.get(r,function(T,S,U){G.html(z.responseHandler(T,S,U));I=true;z.initCallback.call({popup:g,hide:function(){E(0)},id:n,show:function(){y()}});y()})}}clearTimeout(q);if(!u){y()}return false};g[0].popup=D();var w=false;var t=false;var s=function(){if(!t){d(z.container).append(g);t=true}};var o=d(B);if(z.onHover){if(z.useLiveEvents){if(o.selector){d(document).on("mousemove",o.selector,function(O){s();F(O,this)}).on("mouseout",o.selector,function(){E()})}else{AJS.log("Warning: inline dialog trigger elements must have a jQuery selector when the useLiveEvents option is enabled.")}}else{o.mousemove(function(O){s();F(O,this)}).mouseout(function(){E()})}}else{if(!z.noBind){if(z.useLiveEvents){if(o.selector){d(document).on("click",o.selector,function(O){s();if(M()){g.hide()}else{F(O,this)}return false}).on("mouseout",o.selector,function(){E()})}else{AJS.log("Warning: inline dialog trigger elements must have a jQuery selector when the useLiveEvents option is enabled.")}}else{o.click(function(O){s();if(M()){g.hide()}else{F(O,this)}return false}).mouseout(function(){E()})}}}var M=function(){return u&&z.closeOnTriggerClick};var H=function(){k();f()};var l=function(){C();N()};var i=false;var h=n+".inline-dialog-check";var k=function(){if(!i){d("body").bind("click."+h,function(P){var O=d(P.target);if(O.closest("#inline-dialog-"+n+" .contents").length===0){E(0)}});i=true}};var C=function(){if(i){d("body").unbind("click."+h)}i=false};var L=function(O){if(O.keyCode===27){E(0)}};var f=function(){d(document).on("keydown",L)};var N=function(){d(document).off("keydown",L)};g.show=function(P,O){if(P){P.stopPropagation()}s();if(z.noBind&&!(B&&B.length)){F(P,O===undefined?P.target:O)}else{F(P,B)}};g.hide=function(){E(0)};g.refresh=function(){if(u){D().reset()}};g.getOptions=function(){return z};return g};function c(g){var f=d(g);var h=d.extend({left:0,top:0},f.offset());return{left:h.left,top:h.top,width:f.outerWidth(),height:f.outerHeight()}}function b(h,j,t,f){var m=AJS.$.isFunction(f.offsetX)?f.offsetX(h,j,t,f):f.offsetX;var l=AJS.$.isFunction(f.offsetY)?f.offsetY(h,j,t,f):f.offsetY;var q=AJS.$.isFunction(f.arrowOffsetX)?f.arrowOffsetX(h,j,t,f):f.arrowOffsetX;var p=AJS.$.isFunction(f.arrowOffsetY)?f.arrowOffsetY(h,j,t,f):f.arrowOffsetY;var s=f.container.toLowerCase()!=="body";var g=AJS.$(f.container);var o=s?AJS.$(f.container).parent():AJS.$(window);var r=s?g.offset():{left:0,top:0};var k=s?o.offset():{left:0,top:0};var i=j.target;var u=i.offset();var n=i[0].getBBox&&i[0].getBBox();return{screenPadding:10,arrowMargin:5,window:{top:k.top,left:k.left,scrollTop:o.scrollTop(),scrollLeft:o.scrollLeft(),width:o.width(),height:o.height()},scrollContainer:{width:g.width(),height:g.height()},trigger:{top:u.top-r.top,left:u.left-r.left,width:n?n.width:i.outerWidth(),height:n?n.height:i.outerHeight()},dialog:{width:h.width(),height:h.height(),offset:{top:l,left:m}},arrow:{height:h.find(".arrow").outerHeight(),offset:{top:p,left:q}}}}function e(f,p,G,r){var n=b(f,p,G,r);var j=n.screenPadding;var k=n.window;var t=n.trigger;var D=n.dialog;var i=n.arrow;var z=n.scrollContainer;var E={top:t.top-k.scrollTop,left:t.left-k.scrollLeft};var A=Math.floor(t.height/2);var v=Math.floor(D.height/2);var u=Math.floor(i.height/2);var C=E.left-D.offset.left-j;var H=z.width-E.left-t.width-D.offset.left-j;var B=C>=D.width;var h=H>=D.width;var l=!h&&B?"e":"w";var o=E.top+A-u;var q=k.height-o-i.height;j=Math.min(j,o-n.arrowMargin);j=Math.min(j,q-n.arrowMargin);var g=E.top+A;var x=Math.max(g-j,0);var F=Math.max(k.height-g-j,0);var y=v-D.offset.top>x;var m=v+D.offset.top>F;var w;var s;if(y){w={top:k.scrollTop+j,left:l==="w"?t.left+t.width+D.offset.left:t.left-D.width-D.offset.left};s={top:(t.top+A)-(w.top+u)}}else{if(m){w={top:k.scrollTop+k.height-D.height-j,left:l==="w"?t.left+t.width+D.offset.left:t.left-D.width-D.offset.left};s={top:(t.top+A)-(w.top+u)}}else{w={top:t.top+A-v+D.offset.top,left:l==="w"?t.left+t.width+D.offset.left:t.left-D.width-D.offset.left};s={top:v-u+i.offset.top}}}return{gravity:l,popupCss:w,arrowCss:s}}function a(g,o,z,s){var x=AJS.$.isFunction(s.offsetX)?s.offsetX(g,o,z,s):s.offsetX;var v=AJS.$.isFunction(s.offsetY)?s.offsetY(g,o,z,s):s.offsetY;var m=AJS.$.isFunction(s.arrowOffsetX)?s.arrowOffsetX(g,o,z,s):s.arrowOffsetX;var l=AJS.$.isFunction(s.arrowOffsetY)?s.arrowOffsetY(g,o,z,s):s.arrowOffsetY;var f=c(window);var p=c(o.target);var y=c(g);var j=c(g.find(".aui-inline-dialog-arrow"));var i=p.left+p.width/2;var u=(window.pageYOffset||document.documentElement.scrollTop)+f.height;var k=10;y.top=p.top+p.height+~~v;y.left=p.left+~~x;var r=f.width-(y.left+y.width+k);j.left=i-y.left+~~m;j.top=-(j.height/2);var n=p.top>y.height;var h=(y.top+y.height)<u;var q=(!h&&n)||(n&&s.gravity==="s");if(q){y.top=p.top-y.height-(j.height/2);j.top=y.height}if(s.isRelativeToMouse){if(r<0){y.right=k;y.left="auto";j.left=z.x-(f.width-y.width)}else{y.left=z.x-20;j.left=z.x-y.left}}else{if(r<0){y.right=k;y.left="auto";var w=f.width-y.right;var t=w-y.width;j.right="auto";j.left=i-t-j.width/2}else{if(y.width<=p.width/2){j.left=y.width/2;y.left=i-y.width/2}}}return{gravity:q?"s":"n",displayAbove:q,popupCss:{left:y.left,top:y.top,right:y.right},arrowCss:{left:j.left,top:j.top,right:j.right}}}AJS.CustomInlineDialog.opts={onTop:false,responseHandler:function(g,f,h){return g},closeOthers:true,isRelativeToMouse:false,addActiveClass:true,onHover:false,useLiveEvents:false,noBind:false,fadeTime:100,persistent:false,hideDelay:10000,showDelay:0,width:300,offsetX:0,offsetY:10,arrowOffsetX:0,arrowOffsetY:0,container:"body",cacheContent:true,displayShadow:true,autoWidth:false,gravity:"n",closeOnTriggerClick:false,preHideCallback:function(){return true},hideCallback:function(){},initCallback:function(){},upfrontCallback:function(){},calculatePositions:function(f,i,j,h){h=h||{};var g=h.gravity==="w"?e:a;return g(f,i,j,h)},getArrowPath:function(f){if(f.gravity==="s"){return"M0,8L8,16,16,8"}else{return"M0,8L8,0,16,8"}},getArrowAttributes:function(){return{fill:"#fff",stroke:"#ccc"}}}})(AJS.$);
/* module-key = 'com.atlassian.plugins.atlassian-plugins-webresource-plugin:data', location = 'js/data/data.js' */
(function(){if(!window.WRM){window.WRM={}}function a(c){if(!c){return c}return JSON.parse(c)}function b(d,c){return Object.prototype.hasOwnProperty.call(d,c)}WRM.data={claim:function(c){if(WRM._unparsedData&&b(WRM._unparsedData,c)){var g=WRM._unparsedData[c];try{var d=a(g);delete WRM._unparsedData[c];return d}catch(f){console&&console.log&&console.log("JSON Error parsing data with key "+c+": "+f)}}}}}());
/* module-key = 'com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path', location = 'js/data/context-path.js' */
(function(){var a=null;(window.AJS||(window.AJS={}));AJS.contextPath=function(){if(a===null){a=WRM.data.claim("com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path")}return a};AJS.contextPath._reset=function(){a=null}}());
/* module-key = 'com.atlassian.auiplugin:aui-tipsy', location = 'js-vendor/jquery/jquery.tipsy.js' */
(function(E){function D(H,G){return(typeof H=="function")?(H.call(G)):H}function F(G){while(G=G.parentNode){if(G==document){return true}}return false}var A=0;function B(){var G=A++;return"tipsyuid"+G}function C(H,G){this.$element=E(H);this.options=G;this.enabled=true;this.fixTitle()}C.prototype={show:function(){var P=this.getTitle();if(P&&this.enabled){var I=this.tip();I.find(".tipsy-inner")[this.options.html?"html":"text"](P);I[0].className="tipsy";I.remove().css({top:0,left:0,visibility:"hidden",display:"block"}).prependTo(document.body);var L=this;function H(){L.hoverTooltip=true}function M(){if(L.hoverState=="in"){return }L.hoverTooltip=false;if(L.options.trigger!="manual"){var R=L.options.trigger=="hover"?"mouseleave.tipsy":"blur.tipsy";L.$element.trigger(R)}}if(this.options.hoverable){I.hover(H,M)}if(this.options.className){I.addClass(D(this.options.className,this.$element[0]))}var N=E.extend({},this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight});var G=I[0].offsetWidth,K=I[0].offsetHeight,Q=D(this.options.gravity,this.$element[0]);var O;switch(Q.charAt(0)){case"n":O={top:N.top+N.height+this.options.offset,left:N.left+N.width/2-G/2};break;case"s":O={top:N.top-K-this.options.offset,left:N.left+N.width/2-G/2};break;case"e":O={top:N.top+N.height/2-K/2,left:N.left-G-this.options.offset};break;case"w":O={top:N.top+N.height/2-K/2,left:N.left+N.width+this.options.offset};break}if(Q.length==2){if(Q.charAt(1)=="w"){O.left=N.left+N.width/2-15}else{O.left=N.left+N.width/2-G+15}}I.css(O).addClass("tipsy-"+Q);I.find(".tipsy-arrow")[0].className="tipsy-arrow tipsy-arrow-"+Q.charAt(0);if(this.options.fade){I.stop().css({opacity:0,display:"block",visibility:"visible"}).animate({opacity:this.options.opacity})}else{I.css({visibility:"visible",opacity:this.options.opacity})}if(this.options.aria){var J=B();I.attr("id",J);this.$element.attr("aria-describedby",J)}}},hide:function(){if(this.options.fade){this.tip().stop().fadeOut(function(){E(this).remove()})}else{this.tip().remove()}if(this.options.aria){this.$element.removeAttr("aria-describedby")}},fixTitle:function(){var G=this.$element;if(G.attr("title")||typeof (G.attr("original-title"))!="string"){G.attr("original-title",G.attr("title")||"").removeAttr("title")}},getTitle:function(){var I,G=this.$element,H=this.options;this.fixTitle();var I,H=this.options;if(typeof H.title=="string"){I=G.attr(H.title=="title"?"original-title":H.title)}else{if(typeof H.title=="function"){I=H.title.call(G[0])}}I=(""+I).replace(/(^\s*|\s*$)/,"");return I||H.fallback},tip:function(){if(!this.$tip){this.$tip=E('<div class="tipsy"></div>').html('<div class="tipsy-arrow"></div><div class="tipsy-inner"></div>').attr("role","tooltip");this.$tip.data("tipsy-pointee",this.$element[0])}return this.$tip},validate:function(){if(!this.$element[0].parentNode){this.hide();this.$element=null;this.options=null}},enable:function(){this.enabled=true},disable:function(){this.enabled=false},toggleEnabled:function(){this.enabled=!this.enabled}};E.fn.tipsy=function(J){if(J===true){return this.data("tipsy")}else{if(typeof J=="string"){var L=this.data("tipsy");if(L){L[J]()}return this}}J=E.extend({},E.fn.tipsy.defaults,J);if(J.hoverable){J.delayOut=J.delayOut||20}function I(N){var O=E.data(N,"tipsy");if(!O){O=new C(N,E.fn.tipsy.elementOptions(N,J));E.data(N,"tipsy",O)}return O}function M(){var N=I(this);N.hoverState="in";if(J.delayIn==0){N.show()}else{N.fixTitle();setTimeout(function(){if(N.hoverState=="in"){N.show()}},J.delayIn)}}function H(){var N=I(this);N.hoverState="out";if(J.delayOut==0){N.hide()}else{setTimeout(function(){if(N.hoverState=="out"&&!N.hoverTooltip){N.hide()}},J.delayOut)}}if(!J.live){this.each(function(){I(this)})}if(J.trigger!="manual"){var K=J.trigger=="hover"?"mouseenter.tipsy":"focus.tipsy",G=J.trigger=="hover"?"mouseleave.tipsy":"blur.tipsy";if(J.live){E(this.context).on(K,this.selector,M).on(G,this.selector,H)}else{this.bind(K,M).bind(G,H)}}return this};E.fn.tipsy.defaults={aria:false,className:null,delayIn:0,delayOut:0,fade:false,fallback:"",gravity:"n",html:false,live:false,hoverable:false,offset:0,opacity:0.8,title:"title",trigger:"hover"};E.fn.tipsy.revalidate=function(){E(".tipsy").each(function(){var G=E.data(this,"tipsy-pointee");if(!G||!F(G)){E(this).remove()}})};E.fn.tipsy.elementOptions=function(H,G){return E.metadata?E.extend({},G,E(H).metadata()):G};E.fn.tipsy.autoNS=function(){return E(this).offset().top>(E(document).scrollTop()+E(window).height()/2)?"s":"n"};E.fn.tipsy.autoWE=function(){return E(this).offset().left>(E(document).scrollLeft()+E(window).width()/2)?"e":"w"};E.fn.tipsy.autoBounds=function(H,G){return function(){var I={ns:G[0],ew:(G.length>1?G[1]:false)},L=E(document).scrollTop()+H,J=E(document).scrollLeft()+H,K=E(this);if(K.offset().top<L){I.ns="n"}if(K.offset().left<J){I.ew="w"}if(E(window).width()+E(document).scrollLeft()-K.offset().left<H){I.ew="e"}if(E(window).height()+E(document).scrollTop()-K.offset().top<H){I.ns="s"}return I.ns+(I.ew?I.ew:"")}}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:aui-experimental-tooltips', location = 'js/aui-experimental-tooltip.js' */
(function(A){A.fn.tooltip=function(B){var E=A.extend({},A.fn.tooltip.defaults,B),C=this.tipsy(E);if(E.hideOnClick&&(E.trigger=="hover"||!E.trigger&&this.tipsy.defaults.trigger=="hover")){var D=function(){A(this).tipsy("hide")};if(E.live){A(this.context).on("click.tipsy",this.selector,D)}else{this.bind("click.tipsy",D)}}return C};A.fn.tooltip.defaults={opacity:1,offset:1,delayIn:500,hoverable:true,hideOnClick:true}}(AJS.$));
/* module-key = 'com.atlassian.auiplugin:aui-select2', location = 'js-vendor/jquery/plugins/jquery.select2.js' */
(function(A){if(typeof A.fn.each2=="undefined"){A.extend(A.fn,{each2:function(E){var C=A([0]),D=-1,B=this.length;while(++D<B&&(C.context=C[0]=this[D])&&E.call(C[0],D,C)!==false){}return this}})}})(jQuery);(function(d,M){if(window.Select2!==M){return }var k,n,X,C,A,P,O={x:0,y:0},V,W,k={TAB:9,ENTER:13,ESC:27,SPACE:32,LEFT:37,UP:38,RIGHT:39,DOWN:40,SHIFT:16,CTRL:17,ALT:18,PAGE_UP:33,PAGE_DOWN:34,HOME:36,END:35,BACKSPACE:8,DELETE:46,isArrow:function(o){o=o.which?o.which:o;switch(o){case k.LEFT:case k.RIGHT:case k.UP:case k.DOWN:return true}return false},isControl:function(p){var o=p.which;switch(o){case k.SHIFT:case k.CTRL:case k.ALT:return true}if(p.metaKey){return true}return false},isFunctionKey:function(o){o=o.which?o.which:o;return o>=112&&o<=123}},b="<div class='select2-measure-scrollbar'></div>",D={"\u24B6":"A","\uFF21":"A","\u00C0":"A","\u00C1":"A","\u00C2":"A","\u1EA6":"A","\u1EA4":"A","\u1EAA":"A","\u1EA8":"A","\u00C3":"A","\u0100":"A","\u0102":"A","\u1EB0":"A","\u1EAE":"A","\u1EB4":"A","\u1EB2":"A","\u0226":"A","\u01E0":"A","\u00C4":"A","\u01DE":"A","\u1EA2":"A","\u00C5":"A","\u01FA":"A","\u01CD":"A","\u0200":"A","\u0202":"A","\u1EA0":"A","\u1EAC":"A","\u1EB6":"A","\u1E00":"A","\u0104":"A","\u023A":"A","\u2C6F":"A","\uA732":"AA","\u00C6":"AE","\u01FC":"AE","\u01E2":"AE","\uA734":"AO","\uA736":"AU","\uA738":"AV","\uA73A":"AV","\uA73C":"AY","\u24B7":"B","\uFF22":"B","\u1E02":"B","\u1E04":"B","\u1E06":"B","\u0243":"B","\u0182":"B","\u0181":"B","\u24B8":"C","\uFF23":"C","\u0106":"C","\u0108":"C","\u010A":"C","\u010C":"C","\u00C7":"C","\u1E08":"C","\u0187":"C","\u023B":"C","\uA73E":"C","\u24B9":"D","\uFF24":"D","\u1E0A":"D","\u010E":"D","\u1E0C":"D","\u1E10":"D","\u1E12":"D","\u1E0E":"D","\u0110":"D","\u018B":"D","\u018A":"D","\u0189":"D","\uA779":"D","\u01F1":"DZ","\u01C4":"DZ","\u01F2":"Dz","\u01C5":"Dz","\u24BA":"E","\uFF25":"E","\u00C8":"E","\u00C9":"E","\u00CA":"E","\u1EC0":"E","\u1EBE":"E","\u1EC4":"E","\u1EC2":"E","\u1EBC":"E","\u0112":"E","\u1E14":"E","\u1E16":"E","\u0114":"E","\u0116":"E","\u00CB":"E","\u1EBA":"E","\u011A":"E","\u0204":"E","\u0206":"E","\u1EB8":"E","\u1EC6":"E","\u0228":"E","\u1E1C":"E","\u0118":"E","\u1E18":"E","\u1E1A":"E","\u0190":"E","\u018E":"E","\u24BB":"F","\uFF26":"F","\u1E1E":"F","\u0191":"F","\uA77B":"F","\u24BC":"G","\uFF27":"G","\u01F4":"G","\u011C":"G","\u1E20":"G","\u011E":"G","\u0120":"G","\u01E6":"G","\u0122":"G","\u01E4":"G","\u0193":"G","\uA7A0":"G","\uA77D":"G","\uA77E":"G","\u24BD":"H","\uFF28":"H","\u0124":"H","\u1E22":"H","\u1E26":"H","\u021E":"H","\u1E24":"H","\u1E28":"H","\u1E2A":"H","\u0126":"H","\u2C67":"H","\u2C75":"H","\uA78D":"H","\u24BE":"I","\uFF29":"I","\u00CC":"I","\u00CD":"I","\u00CE":"I","\u0128":"I","\u012A":"I","\u012C":"I","\u0130":"I","\u00CF":"I","\u1E2E":"I","\u1EC8":"I","\u01CF":"I","\u0208":"I","\u020A":"I","\u1ECA":"I","\u012E":"I","\u1E2C":"I","\u0197":"I","\u24BF":"J","\uFF2A":"J","\u0134":"J","\u0248":"J","\u24C0":"K","\uFF2B":"K","\u1E30":"K","\u01E8":"K","\u1E32":"K","\u0136":"K","\u1E34":"K","\u0198":"K","\u2C69":"K","\uA740":"K","\uA742":"K","\uA744":"K","\uA7A2":"K","\u24C1":"L","\uFF2C":"L","\u013F":"L","\u0139":"L","\u013D":"L","\u1E36":"L","\u1E38":"L","\u013B":"L","\u1E3C":"L","\u1E3A":"L","\u0141":"L","\u023D":"L","\u2C62":"L","\u2C60":"L","\uA748":"L","\uA746":"L","\uA780":"L","\u01C7":"LJ","\u01C8":"Lj","\u24C2":"M","\uFF2D":"M","\u1E3E":"M","\u1E40":"M","\u1E42":"M","\u2C6E":"M","\u019C":"M","\u24C3":"N","\uFF2E":"N","\u01F8":"N","\u0143":"N","\u00D1":"N","\u1E44":"N","\u0147":"N","\u1E46":"N","\u0145":"N","\u1E4A":"N","\u1E48":"N","\u0220":"N","\u019D":"N","\uA790":"N","\uA7A4":"N","\u01CA":"NJ","\u01CB":"Nj","\u24C4":"O","\uFF2F":"O","\u00D2":"O","\u00D3":"O","\u00D4":"O","\u1ED2":"O","\u1ED0":"O","\u1ED6":"O","\u1ED4":"O","\u00D5":"O","\u1E4C":"O","\u022C":"O","\u1E4E":"O","\u014C":"O","\u1E50":"O","\u1E52":"O","\u014E":"O","\u022E":"O","\u0230":"O","\u00D6":"O","\u022A":"O","\u1ECE":"O","\u0150":"O","\u01D1":"O","\u020C":"O","\u020E":"O","\u01A0":"O","\u1EDC":"O","\u1EDA":"O","\u1EE0":"O","\u1EDE":"O","\u1EE2":"O","\u1ECC":"O","\u1ED8":"O","\u01EA":"O","\u01EC":"O","\u00D8":"O","\u01FE":"O","\u0186":"O","\u019F":"O","\uA74A":"O","\uA74C":"O","\u01A2":"OI","\uA74E":"OO","\u0222":"OU","\u24C5":"P","\uFF30":"P","\u1E54":"P","\u1E56":"P","\u01A4":"P","\u2C63":"P","\uA750":"P","\uA752":"P","\uA754":"P","\u24C6":"Q","\uFF31":"Q","\uA756":"Q","\uA758":"Q","\u024A":"Q","\u24C7":"R","\uFF32":"R","\u0154":"R","\u1E58":"R","\u0158":"R","\u0210":"R","\u0212":"R","\u1E5A":"R","\u1E5C":"R","\u0156":"R","\u1E5E":"R","\u024C":"R","\u2C64":"R","\uA75A":"R","\uA7A6":"R","\uA782":"R","\u24C8":"S","\uFF33":"S","\u1E9E":"S","\u015A":"S","\u1E64":"S","\u015C":"S","\u1E60":"S","\u0160":"S","\u1E66":"S","\u1E62":"S","\u1E68":"S","\u0218":"S","\u015E":"S","\u2C7E":"S","\uA7A8":"S","\uA784":"S","\u24C9":"T","\uFF34":"T","\u1E6A":"T","\u0164":"T","\u1E6C":"T","\u021A":"T","\u0162":"T","\u1E70":"T","\u1E6E":"T","\u0166":"T","\u01AC":"T","\u01AE":"T","\u023E":"T","\uA786":"T","\uA728":"TZ","\u24CA":"U","\uFF35":"U","\u00D9":"U","\u00DA":"U","\u00DB":"U","\u0168":"U","\u1E78":"U","\u016A":"U","\u1E7A":"U","\u016C":"U","\u00DC":"U","\u01DB":"U","\u01D7":"U","\u01D5":"U","\u01D9":"U","\u1EE6":"U","\u016E":"U","\u0170":"U","\u01D3":"U","\u0214":"U","\u0216":"U","\u01AF":"U","\u1EEA":"U","\u1EE8":"U","\u1EEE":"U","\u1EEC":"U","\u1EF0":"U","\u1EE4":"U","\u1E72":"U","\u0172":"U","\u1E76":"U","\u1E74":"U","\u0244":"U","\u24CB":"V","\uFF36":"V","\u1E7C":"V","\u1E7E":"V","\u01B2":"V","\uA75E":"V","\u0245":"V","\uA760":"VY","\u24CC":"W","\uFF37":"W","\u1E80":"W","\u1E82":"W","\u0174":"W","\u1E86":"W","\u1E84":"W","\u1E88":"W","\u2C72":"W","\u24CD":"X","\uFF38":"X","\u1E8A":"X","\u1E8C":"X","\u24CE":"Y","\uFF39":"Y","\u1EF2":"Y","\u00DD":"Y","\u0176":"Y","\u1EF8":"Y","\u0232":"Y","\u1E8E":"Y","\u0178":"Y","\u1EF6":"Y","\u1EF4":"Y","\u01B3":"Y","\u024E":"Y","\u1EFE":"Y","\u24CF":"Z","\uFF3A":"Z","\u0179":"Z","\u1E90":"Z","\u017B":"Z","\u017D":"Z","\u1E92":"Z","\u1E94":"Z","\u01B5":"Z","\u0224":"Z","\u2C7F":"Z","\u2C6B":"Z","\uA762":"Z","\u24D0":"a","\uFF41":"a","\u1E9A":"a","\u00E0":"a","\u00E1":"a","\u00E2":"a","\u1EA7":"a","\u1EA5":"a","\u1EAB":"a","\u1EA9":"a","\u00E3":"a","\u0101":"a","\u0103":"a","\u1EB1":"a","\u1EAF":"a","\u1EB5":"a","\u1EB3":"a","\u0227":"a","\u01E1":"a","\u00E4":"a","\u01DF":"a","\u1EA3":"a","\u00E5":"a","\u01FB":"a","\u01CE":"a","\u0201":"a","\u0203":"a","\u1EA1":"a","\u1EAD":"a","\u1EB7":"a","\u1E01":"a","\u0105":"a","\u2C65":"a","\u0250":"a","\uA733":"aa","\u00E6":"ae","\u01FD":"ae","\u01E3":"ae","\uA735":"ao","\uA737":"au","\uA739":"av","\uA73B":"av","\uA73D":"ay","\u24D1":"b","\uFF42":"b","\u1E03":"b","\u1E05":"b","\u1E07":"b","\u0180":"b","\u0183":"b","\u0253":"b","\u24D2":"c","\uFF43":"c","\u0107":"c","\u0109":"c","\u010B":"c","\u010D":"c","\u00E7":"c","\u1E09":"c","\u0188":"c","\u023C":"c","\uA73F":"c","\u2184":"c","\u24D3":"d","\uFF44":"d","\u1E0B":"d","\u010F":"d","\u1E0D":"d","\u1E11":"d","\u1E13":"d","\u1E0F":"d","\u0111":"d","\u018C":"d","\u0256":"d","\u0257":"d","\uA77A":"d","\u01F3":"dz","\u01C6":"dz","\u24D4":"e","\uFF45":"e","\u00E8":"e","\u00E9":"e","\u00EA":"e","\u1EC1":"e","\u1EBF":"e","\u1EC5":"e","\u1EC3":"e","\u1EBD":"e","\u0113":"e","\u1E15":"e","\u1E17":"e","\u0115":"e","\u0117":"e","\u00EB":"e","\u1EBB":"e","\u011B":"e","\u0205":"e","\u0207":"e","\u1EB9":"e","\u1EC7":"e","\u0229":"e","\u1E1D":"e","\u0119":"e","\u1E19":"e","\u1E1B":"e","\u0247":"e","\u025B":"e","\u01DD":"e","\u24D5":"f","\uFF46":"f","\u1E1F":"f","\u0192":"f","\uA77C":"f","\u24D6":"g","\uFF47":"g","\u01F5":"g","\u011D":"g","\u1E21":"g","\u011F":"g","\u0121":"g","\u01E7":"g","\u0123":"g","\u01E5":"g","\u0260":"g","\uA7A1":"g","\u1D79":"g","\uA77F":"g","\u24D7":"h","\uFF48":"h","\u0125":"h","\u1E23":"h","\u1E27":"h","\u021F":"h","\u1E25":"h","\u1E29":"h","\u1E2B":"h","\u1E96":"h","\u0127":"h","\u2C68":"h","\u2C76":"h","\u0265":"h","\u0195":"hv","\u24D8":"i","\uFF49":"i","\u00EC":"i","\u00ED":"i","\u00EE":"i","\u0129":"i","\u012B":"i","\u012D":"i","\u00EF":"i","\u1E2F":"i","\u1EC9":"i","\u01D0":"i","\u0209":"i","\u020B":"i","\u1ECB":"i","\u012F":"i","\u1E2D":"i","\u0268":"i","\u0131":"i","\u24D9":"j","\uFF4A":"j","\u0135":"j","\u01F0":"j","\u0249":"j","\u24DA":"k","\uFF4B":"k","\u1E31":"k","\u01E9":"k","\u1E33":"k","\u0137":"k","\u1E35":"k","\u0199":"k","\u2C6A":"k","\uA741":"k","\uA743":"k","\uA745":"k","\uA7A3":"k","\u24DB":"l","\uFF4C":"l","\u0140":"l","\u013A":"l","\u013E":"l","\u1E37":"l","\u1E39":"l","\u013C":"l","\u1E3D":"l","\u1E3B":"l","\u017F":"l","\u0142":"l","\u019A":"l","\u026B":"l","\u2C61":"l","\uA749":"l","\uA781":"l","\uA747":"l","\u01C9":"lj","\u24DC":"m","\uFF4D":"m","\u1E3F":"m","\u1E41":"m","\u1E43":"m","\u0271":"m","\u026F":"m","\u24DD":"n","\uFF4E":"n","\u01F9":"n","\u0144":"n","\u00F1":"n","\u1E45":"n","\u0148":"n","\u1E47":"n","\u0146":"n","\u1E4B":"n","\u1E49":"n","\u019E":"n","\u0272":"n","\u0149":"n","\uA791":"n","\uA7A5":"n","\u01CC":"nj","\u24DE":"o","\uFF4F":"o","\u00F2":"o","\u00F3":"o","\u00F4":"o","\u1ED3":"o","\u1ED1":"o","\u1ED7":"o","\u1ED5":"o","\u00F5":"o","\u1E4D":"o","\u022D":"o","\u1E4F":"o","\u014D":"o","\u1E51":"o","\u1E53":"o","\u014F":"o","\u022F":"o","\u0231":"o","\u00F6":"o","\u022B":"o","\u1ECF":"o","\u0151":"o","\u01D2":"o","\u020D":"o","\u020F":"o","\u01A1":"o","\u1EDD":"o","\u1EDB":"o","\u1EE1":"o","\u1EDF":"o","\u1EE3":"o","\u1ECD":"o","\u1ED9":"o","\u01EB":"o","\u01ED":"o","\u00F8":"o","\u01FF":"o","\u0254":"o","\uA74B":"o","\uA74D":"o","\u0275":"o","\u01A3":"oi","\u0223":"ou","\uA74F":"oo","\u24DF":"p","\uFF50":"p","\u1E55":"p","\u1E57":"p","\u01A5":"p","\u1D7D":"p","\uA751":"p","\uA753":"p","\uA755":"p","\u24E0":"q","\uFF51":"q","\u024B":"q","\uA757":"q","\uA759":"q","\u24E1":"r","\uFF52":"r","\u0155":"r","\u1E59":"r","\u0159":"r","\u0211":"r","\u0213":"r","\u1E5B":"r","\u1E5D":"r","\u0157":"r","\u1E5F":"r","\u024D":"r","\u027D":"r","\uA75B":"r","\uA7A7":"r","\uA783":"r","\u24E2":"s","\uFF53":"s","\u00DF":"s","\u015B":"s","\u1E65":"s","\u015D":"s","\u1E61":"s","\u0161":"s","\u1E67":"s","\u1E63":"s","\u1E69":"s","\u0219":"s","\u015F":"s","\u023F":"s","\uA7A9":"s","\uA785":"s","\u1E9B":"s","\u24E3":"t","\uFF54":"t","\u1E6B":"t","\u1E97":"t","\u0165":"t","\u1E6D":"t","\u021B":"t","\u0163":"t","\u1E71":"t","\u1E6F":"t","\u0167":"t","\u01AD":"t","\u0288":"t","\u2C66":"t","\uA787":"t","\uA729":"tz","\u24E4":"u","\uFF55":"u","\u00F9":"u","\u00FA":"u","\u00FB":"u","\u0169":"u","\u1E79":"u","\u016B":"u","\u1E7B":"u","\u016D":"u","\u00FC":"u","\u01DC":"u","\u01D8":"u","\u01D6":"u","\u01DA":"u","\u1EE7":"u","\u016F":"u","\u0171":"u","\u01D4":"u","\u0215":"u","\u0217":"u","\u01B0":"u","\u1EEB":"u","\u1EE9":"u","\u1EEF":"u","\u1EED":"u","\u1EF1":"u","\u1EE5":"u","\u1E73":"u","\u0173":"u","\u1E77":"u","\u1E75":"u","\u0289":"u","\u24E5":"v","\uFF56":"v","\u1E7D":"v","\u1E7F":"v","\u028B":"v","\uA75F":"v","\u028C":"v","\uA761":"vy","\u24E6":"w","\uFF57":"w","\u1E81":"w","\u1E83":"w","\u0175":"w","\u1E87":"w","\u1E85":"w","\u1E98":"w","\u1E89":"w","\u2C73":"w","\u24E7":"x","\uFF58":"x","\u1E8B":"x","\u1E8D":"x","\u24E8":"y","\uFF59":"y","\u1EF3":"y","\u00FD":"y","\u0177":"y","\u1EF9":"y","\u0233":"y","\u1E8F":"y","\u00FF":"y","\u1EF7":"y","\u1E99":"y","\u1EF5":"y","\u01B4":"y","\u024F":"y","\u1EFF":"y","\u24E9":"z","\uFF5A":"z","\u017A":"z","\u1E91":"z","\u017C":"z","\u017E":"z","\u1E93":"z","\u1E95":"z","\u01B6":"z","\u0225":"z","\u0240":"z","\u2C6C":"z","\uA763":"z"};V=d(document);A=(function(){var o=1;return function(){return o++}}());function E(r){var p,q,o,s;if(!r||r.length<1){return r}p="";for(q=0,o=r.length;q<o;q++){s=r.charAt(q);p+=D[s]||s}return p}function Q(q,r){var p=0,o=r.length;for(;p<o;p=p+1){if(T(q,r[p])){return p}}return -1}function m(){var o=d(b);o.appendTo("body");var p={width:o.width()-o[0].clientWidth,height:o.height()-o[0].clientHeight};o.remove();return p}function T(p,o){if(p===o){return true}if(p===M||o===M){return false}if(p===null||o===null){return false}if(p.constructor===String){return p+""===o+""}if(o.constructor===String){return o+""===p+""}return false}function I(p,r){var s,q,o;if(p===null||p.length<1){return[]}s=p.split(r);for(q=0,o=s.length;q<o;q=q+1){s[q]=d.trim(s[q])}return s}function H(o){return o.outerWidth(false)-o.width()}function f(p){var o="keyup-change-value";p.on("keydown",function(){if(d.data(p,o)===M){d.data(p,o,p.val())}});p.on("keyup",function(){var q=d.data(p,o);if(q!==M&&p.val()!==q){d.removeData(p,o);p.trigger("keyup-change")}})}V.on("mousemove",function(o){O.x=o.pageX;O.y=o.pageY});function j(o){o.on("mousemove",function(q){var p=O;if(p===M||p.x!==q.pageX||p.y!==q.pageY){d(q.target).trigger("mousemove-filtered",q)}})}function K(r,p,o){o=o||M;var q;return function(){var s=arguments;window.clearTimeout(q);q=window.setTimeout(function(){p.apply(o,s)},r)}}function S(q){var o=false,p;return function(){if(o===false){p=q();o=true}return p}}function L(o,q){var p=K(o,function(r){q.trigger("scroll-debounced",r)});q.on("scroll",function(r){if(Q(r.target,q.get())>=0){p(r)}})}function i(o){if(o[0]===document.activeElement){return }window.setTimeout(function(){var q=o[0],r=o.val().length,p;o.focus();if(o.is(":visible")&&q===document.activeElement){if(q.setSelectionRange){q.setSelectionRange(r,r)}else{if(q.createTextRange){p=q.createTextRange();p.collapse(false);p.select()}}}},0)}function F(o){o=d(o)[0];var r=0;var p=0;if("selectionStart" in o){r=o.selectionStart;p=o.selectionEnd-r}else{if("selection" in document){o.focus();var q=document.selection.createRange();p=document.selection.createRange().text.length;q.moveStart("character",-o.value.length);r=q.text.length-p}}return{offset:r,length:p}}function a(o){o.preventDefault();o.stopPropagation()}function B(o){o.preventDefault();o.stopImmediatePropagation()}function N(p){if(!P){var o=p[0].currentStyle||window.getComputedStyle(p[0],null);P=d(document.createElement("div")).css({position:"absolute",left:"-10000px",top:"-10000px",display:"none",fontSize:o.fontSize,fontFamily:o.fontFamily,fontStyle:o.fontStyle,fontWeight:o.fontWeight,letterSpacing:o.letterSpacing,textTransform:o.textTransform,whiteSpace:"nowrap"});P.attr("class","select2-sizer");d("body").append(P)}P.text(p.val());return P.width()}function J(p,t,o){var r,s=[],q;r=p.attr("class");if(r){r=""+r;d(r.split(" ")).each2(function(){if(this.indexOf("select2-")===0){s.push(this)}})}r=t.attr("class");if(r){r=""+r;d(r.split(" ")).each2(function(){if(this.indexOf("select2-")!==0){q=o(this);if(q){s.push(q)}}})}p.attr("class",s.join(" "))}function U(t,s,q,o){var r=E(t.toUpperCase()).indexOf(E(s.toUpperCase())),p=s.length;if(r<0){q.push(o(t));return }q.push(o(t.substring(0,r)));q.push("<span class='select2-match'>");q.push(o(t.substring(r,r+p)));q.push("</span>");q.push(o(t.substring(r+p,t.length)))}function g(o){var p={"\\":"&#92;","&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#47;"};return String(o).replace(/[&<>"'\/\\]/g,function(q){return p[q]})}function e(p){var s,q=null,t=p.quietMillis||100,r=p.url,o=this;return function(u){window.clearTimeout(s);s=window.setTimeout(function(){var x=p.data,w=r,z=p.transport||d.fn.select2.ajaxDefaults.transport,v={type:p.type||"GET",cache:p.cache||false,jsonpCallback:p.jsonpCallback||M,dataType:p.dataType||"json"},y=d.extend({},d.fn.select2.ajaxDefaults.params,v);x=x?x.call(o,u.term,u.page,u.context):null;w=(typeof w==="function")?w.call(o,u.term,u.page,u.context):w;if(q){q.abort()}if(p.params){if(d.isFunction(p.params)){d.extend(y,p.params.call(o))}else{d.extend(y,p.params)}}d.extend(y,{url:w,dataType:p.dataType,data:x,success:function(AB){var AA=p.results(AB,u.page);u.callback(AA)}});q=z.call(o,y)},t)}}function h(p){var s=p,r,q,t=function(u){return""+u.text};if(d.isArray(s)){q=s;s={results:q}}if(d.isFunction(s)===false){q=s;s=function(){return q}}var o=s();if(o.text){t=o.text;if(!d.isFunction(t)){r=o.text;t=function(u){return u[r]}}}return function(w){var v=w.term,u={results:[]},x;if(v===""){w.callback(s());return }x=function(z,AB){var AA,y;z=z[0];if(z.children){AA={};for(y in z){if(z.hasOwnProperty(y)){AA[y]=z[y]}}AA.children=[];d(z.children).each2(function(AC,AD){x(AD,AA.children)});if(AA.children.length||w.matcher(v,t(AA),z)){AB.push(AA)}}else{if(w.matcher(v,t(z),z)){AB.push(z)}}};d(s().results).each2(function(z,y){x(y,u.results)});w.callback(u)}}function Z(p){var o=d.isFunction(p);return function(s){var r=s.term,q={results:[]};d(o?p():p).each(function(){var t=this.text!==M,u=t?this.text:this;if(r===""||s.matcher(r,u)){q.results.push(t?this:{id:this,text:this})}});s.callback(q)}}function Y(o,p){if(d.isFunction(o)){return true}if(!o){return false}throw new Error(p+" must be a function or a falsy value")}function c(o){return d.isFunction(o)?o():o}function R(o){var p=0;d.each(o,function(q,r){if(r.children){p+=R(r.children)}else{p++}});return p}function G(w,x,u,o){var p=w,y=false,r,v,s,q,t;if(!o.createSearchChoice||!o.tokenSeparators||o.tokenSeparators.length<1){return M}while(true){v=-1;for(s=0,q=o.tokenSeparators.length;s<q;s++){t=o.tokenSeparators[s];v=w.indexOf(t);if(v>=0){break}}if(v<0){break}r=w.substring(0,v);w=w.substring(v+t.length);if(r.length>0){r=o.createSearchChoice.call(this,r,x);if(r!==M&&r!==null&&o.id(r)!==M&&o.id(r)!==null){y=false;for(s=0,q=x.length;s<q;s++){if(T(o.id(r),o.id(x[s]))){y=true;break}}if(!y){u(r)}}}}if(p!==w){return w}}function l(o,p){var q=function(){};q.prototype=new o;q.prototype.constructor=q;q.prototype.parent=o.prototype;q.prototype=d.extend(q.prototype,p);return q}n=l(Object,{bind:function(p){var o=this;return function(){p.apply(o,arguments)}},init:function(s){var q,p,t=".select2-results";this.opts=s=this.prepareOpts(s);this.id=s.id;if(s.element.data("select2")!==M&&s.element.data("select2")!==null){s.element.data("select2").destroy()}this.container=this.createContainer();this.containerId="s2id_"+(s.element.attr("id")||"autogen"+A());this.containerSelector="#"+this.containerId.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g,"\\$1");this.container.attr("id",this.containerId);this.body=S(function(){return s.element.closest("body")});J(this.container,this.opts.element,this.opts.adaptContainerCssClass);this.container.attr("style",s.element.attr("style"));this.container.css(c(s.containerCss));this.container.addClass(c(s.containerCssClass));this.elementTabIndex=this.opts.element.attr("tabindex");this.opts.element.data("select2",this).attr("tabindex","-1").before(this.container).on("click.select2",a);this.container.data("select2",this);this.dropdown=this.container.find(".select2-drop");J(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass);this.dropdown.addClass(c(s.dropdownCssClass));this.dropdown.data("select2",this);this.dropdown.on("click",a);this.results=q=this.container.find(t);this.search=p=this.container.find("input.select2-input");this.queryCount=0;this.resultsPage=0;this.context=null;this.initContainer();this.container.on("click",a);j(this.results);this.dropdown.on("mousemove-filtered touchstart touchmove touchend",t,this.bind(this.highlightUnderEvent));L(80,this.results);this.dropdown.on("scroll-debounced",t,this.bind(this.loadMoreIfNeeded));d(this.container).on("change",".select2-input",function(u){u.stopPropagation()});d(this.dropdown).on("change",".select2-input",function(u){u.stopPropagation()});if(d.fn.mousewheel){q.mousewheel(function(x,y,v,u){var w=q.scrollTop();if(u>0&&w-u<=0){q.scrollTop(0);a(x)}else{if(u<0&&q.get(0).scrollHeight-q.scrollTop()+u<=q.height()){q.scrollTop(q.get(0).scrollHeight-q.height());a(x)}}})}f(p);p.on("keyup-change input paste",this.bind(this.updateResults));p.on("focus",function(){p.addClass("select2-focused")});p.on("blur",function(){p.removeClass("select2-focused")});this.dropdown.on("mouseup",t,this.bind(function(u){if(d(u.target).closest(".select2-result-selectable").length>0){this.highlightUnderEvent(u);this.selectHighlighted(u)}}));this.dropdown.on("click mouseup mousedown",function(u){u.stopPropagation()});if(d.isFunction(this.opts.initSelection)){this.initSelection();this.monitorSource()}if(s.maximumInputLength!==null){this.search.attr("maxlength",s.maximumInputLength)}var r=s.element.prop("disabled");if(r===M){r=false}this.enable(!r);var o=s.element.prop("readonly");if(o===M){o=false}this.readonly(o);W=W||m();this.autofocus=s.element.prop("autofocus");s.element.prop("autofocus",false);if(this.autofocus){this.focus()}this.nextSearchTerm=M},destroy:function(){var p=this.opts.element,o=p.data("select2");this.close();if(this.propertyObserver){delete this.propertyObserver;this.propertyObserver=null}if(o!==M){o.container.remove();o.dropdown.remove();p.removeClass("select2-offscreen").removeData("select2").off(".select2").prop("autofocus",this.autofocus||false);if(this.elementTabIndex){p.attr({tabindex:this.elementTabIndex})}else{p.removeAttr("tabindex")}p.show()}},optionToData:function(o){if(o.is("option")){return{id:o.prop("value"),text:o.text(),element:o.get(),css:o.attr("class"),disabled:o.prop("disabled"),locked:T(o.attr("locked"),"locked")||T(o.data("locked"),true)}}else{if(o.is("optgroup")){return{text:o.attr("label"),children:[],element:o.get(),css:o.attr("class")}}}},prepareOpts:function(t){var r,p,o,s,q=this;r=t.element;if(r.get(0).tagName.toLowerCase()==="select"){this.select=p=t.element}if(p){d.each(["id","multiple","ajax","query","createSearchChoice","initSelection","data","tags"],function(){if(this in t){throw new Error("Option '"+this+"' is not allowed for Select2 when attached to a <select> element.")}})}t=d.extend({},{populateResults:function(u,v,x){var w,y=this.opts.id;w=function(AF,z,AE){var AG,AB,AL,AI,AC,AK,AA,AJ,AH,AD;AF=t.sortResults(AF,z,x);for(AG=0,AB=AF.length;AG<AB;AG=AG+1){AL=AF[AG];AC=(AL.disabled===true);AI=(!AC)&&(y(AL)!==M);AK=AL.children&&AL.children.length>0;AA=d("<li></li>");AA.addClass("select2-results-dept-"+AE);AA.addClass("select2-result");AA.addClass(AI?"select2-result-selectable":"select2-result-unselectable");if(AC){AA.addClass("select2-disabled")}if(AK){AA.addClass("select2-result-with-children")}AA.addClass(q.opts.formatResultCssClass(AL));AJ=d(document.createElement("div"));AJ.addClass("select2-result-label");AD=t.formatResult(AL,AJ,x,q.opts.escapeMarkup);if(AD!==M){AJ.html(AD)}AA.append(AJ);if(AK){AH=d("<ul></ul>");AH.addClass("select2-result-sub");w(AL.children,AH,AE+1);AA.append(AH)}AA.data("select2-data",AL);z.append(AA)}};w(v,u,0)}},d.fn.select2.defaults,t);if(typeof (t.id)!=="function"){o=t.id;t.id=function(u){return u[o]}}if(d.isArray(t.element.data("select2Tags"))){if("tags" in t){throw"tags specified as both an attribute 'data-select2-tags' and in options of Select2 "+t.element.attr("id")}t.tags=t.element.data("select2Tags")}if(p){t.query=this.bind(function(y){var x={results:[],more:false},w=y.term,v,u,z;z=function(AA,AC){var AB;if(AA.is("option")){if(y.matcher(w,AA.text(),AA)){AC.push(q.optionToData(AA))}}else{if(AA.is("optgroup")){AB=q.optionToData(AA);AA.children().each2(function(AD,AE){z(AE,AB.children)});if(AB.children.length>0){AC.push(AB)}}}};v=r.children();if(this.getPlaceholder()!==M&&v.length>0){u=this.getPlaceholderOption();if(u){v=v.not(u)}}v.each2(function(AA,AB){z(AB,x.results)});y.callback(x)});t.id=function(u){return u.id};t.formatResultCssClass=function(u){return u.css}}else{if(!("query" in t)){if("ajax" in t){s=t.element.data("ajax-url");if(s&&s.length>0){t.ajax.url=s}t.query=e.call(t.element,t.ajax)}else{if("data" in t){t.query=h(t.data)}else{if("tags" in t){t.query=Z(t.tags);if(t.createSearchChoice===M){t.createSearchChoice=function(u){return{id:d.trim(u),text:d.trim(u)}}}if(t.initSelection===M){t.initSelection=function(u,w){var v=[];d(I(u.val(),t.separator)).each(function(){var y={id:this,text:this},x=t.tags;if(d.isFunction(x)){x=x()}d(x).each(function(){if(T(this.id,y.id)){y=this;return false}});v.push(y)});w(v)}}}}}}}if(typeof (t.query)!=="function"){throw"query function not defined for Select2 "+t.element.attr("id")}return t},monitorSource:function(){var p=this.opts.element,q,o;p.on("change.select2",this.bind(function(r){if(this.opts.element.data("select2-change-triggered")!==true){this.initSelection()}}));q=this.bind(function(){var s=p.prop("disabled");if(s===M){s=false}this.enable(!s);var r=p.prop("readonly");if(r===M){r=false}this.readonly(r);J(this.container,this.opts.element,this.opts.adaptContainerCssClass);this.container.addClass(c(this.opts.containerCssClass));J(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass);this.dropdown.addClass(c(this.opts.dropdownCssClass))});p.on("propertychange.select2",q);if(this.mutationCallback===M){this.mutationCallback=function(r){r.forEach(q)}}o=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;if(o!==M){if(this.propertyObserver){delete this.propertyObserver;this.propertyObserver=null}this.propertyObserver=new o(this.mutationCallback);this.propertyObserver.observe(p.get(0),{attributes:true,subtree:false})}},triggerSelect:function(p){var o=d.Event("select2-selecting",{val:this.id(p),object:p});this.opts.element.trigger(o);return !o.isDefaultPrevented()},triggerChange:function(o){o=o||{};o=d.extend({},o,{type:"change",val:this.val()});this.opts.element.data("select2-change-triggered",true);this.opts.element.trigger(o);this.opts.element.data("select2-change-triggered",false);this.opts.element.click();if(this.opts.blurOnChange){this.opts.element.blur()}},isInterfaceEnabled:function(){return this.enabledInterface===true},enableInterface:function(){var o=this._enabled&&!this._readonly,p=!o;if(o===this.enabledInterface){return false}this.container.toggleClass("select2-container-disabled",p);this.close();this.enabledInterface=o;return true},enable:function(o){if(o===M){o=true}if(this._enabled===o){return }this._enabled=o;this.opts.element.prop("disabled",!o);this.enableInterface()},disable:function(){this.enable(false)},readonly:function(o){if(o===M){o=false}if(this._readonly===o){return false}this._readonly=o;this.opts.element.prop("readonly",o);this.enableInterface();return true},opened:function(){return this.container.hasClass("select2-dropdown-open")},positionDropdown:function(){var q=this.dropdown,t=this.container.offset(),AC=this.container.outerHeight(false),AD=this.container.outerWidth(false),y=q.outerHeight(false),AA=d(window),AH=AA.width(),w=AA.height(),p=AA.scrollLeft()+AH,AG=AA.scrollTop()+w,r=t.top+AC,AE=t.left,o=r+y<=AG,v=(t.top-y)>=this.body().scrollTop(),z=q.outerWidth(false),AJ=AE+z<=p,AI=q.hasClass("select2-drop-above"),u,AF,s,x,AB;if(AI){AF=true;if(!v&&o){s=true;AF=false}}else{AF=false;if(!o&&v){s=true;AF=true}}if(s){q.hide();t=this.container.offset();AC=this.container.outerHeight(false);AD=this.container.outerWidth(false);y=q.outerHeight(false);p=AA.scrollLeft()+AH;AG=AA.scrollTop()+w;r=t.top+AC;AE=t.left;z=q.outerWidth(false);AJ=AE+z<=p;q.show()}if(this.opts.dropdownAutoWidth){AB=d(".select2-results",q)[0];q.addClass("select2-drop-auto-width");q.css("width","");z=q.outerWidth(false)+(AB.scrollHeight===AB.clientHeight?0:W.width);z>AD?AD=z:z=AD;AJ=AE+z<=p}else{this.container.removeClass("select2-drop-auto-width")}if(this.body().css("position")!=="static"){u=this.body().offset();r-=u.top;AE-=u.left}if(!AJ){AE=t.left+AD-z}x={left:AE,width:AD};if(AF){x.bottom=w-t.top;x.top="auto";this.container.addClass("select2-drop-above");q.addClass("select2-drop-above")}else{x.top=r;x.bottom="auto";this.container.removeClass("select2-drop-above");q.removeClass("select2-drop-above")}x=d.extend(x,c(this.opts.dropdownCss));q.css(x)},shouldOpen:function(){var o;if(this.opened()){return false}if(this._enabled===false||this._readonly===true){return false}o=d.Event("select2-opening");this.opts.element.trigger(o);return !o.isDefaultPrevented()},clearDropdownAlignmentPreference:function(){this.container.removeClass("select2-drop-above");this.dropdown.removeClass("select2-drop-above")},open:function(){if(!this.shouldOpen()){return false}this.opening();return true},opening:function(){var t=this.containerId,o="scroll."+t,r="resize."+t,q="orientationchange."+t,p;this.container.addClass("select2-dropdown-open").addClass("select2-container-active");this.clearDropdownAlignmentPreference();if(this.dropdown[0]!==this.body().children().last()[0]){this.dropdown.detach().appendTo(this.body())}p=d("#select2-drop-mask");if(p.length==0){p=d(document.createElement("div"));p.attr("id","select2-drop-mask").attr("class","select2-drop-mask");p.hide();p.appendTo(this.body());p.on("mousedown touchstart click",function(v){var w=d("#select2-drop"),u;if(w.length>0){u=w.data("select2");if(u.opts.selectOnBlur){u.selectHighlighted({noFocus:true})}u.close({focus:true});v.preventDefault();v.stopPropagation()}})}if(this.dropdown.prev()[0]!==p[0]){this.dropdown.before(p)}d("#select2-drop").removeAttr("id");this.dropdown.attr("id","select2-drop");p.show();this.positionDropdown();this.dropdown.show();this.positionDropdown();this.dropdown.addClass("select2-drop-active");var s=this;this.container.parents().add(window).each(function(){d(this).on(r+" "+o+" "+q,function(u){s.positionDropdown()})})},close:function(){if(!this.opened()){return }var r=this.containerId,o="scroll."+r,q="resize."+r,p="orientationchange."+r;this.container.parents().add(window).each(function(){d(this).off(o).off(q).off(p)});this.clearDropdownAlignmentPreference();d("#select2-drop-mask").hide();this.dropdown.removeAttr("id");this.dropdown.hide();this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active");this.results.empty();this.clearSearch();this.search.removeClass("select2-active");this.opts.element.trigger(d.Event("select2-close"))},externalSearch:function(o){this.open();this.search.val(o);this.updateResults(false)},clearSearch:function(){},getMaximumSelectionSize:function(){return c(this.opts.maximumSelectionSize)},ensureHighlightVisible:function(){var r=this.results,q,o,v,u,s,t,p;o=this.highlight();if(o<0){return }if(o==0){r.scrollTop(0);return }q=this.findHighlightableChoices().find(".select2-result-label");v=d(q[o]);u=v.offset().top+v.outerHeight(true);if(o===q.length-1){p=r.find("li.select2-more-results");if(p.length>0){u=p.offset().top+p.outerHeight(true)}}s=r.offset().top+r.outerHeight(true);if(u>s){r.scrollTop(r.scrollTop()+(u-s))}t=v.offset().top-r.offset().top;if(t<0&&v.css("display")!="none"){r.scrollTop(r.scrollTop()+t)}},findHighlightableChoices:function(){return this.results.find(".select2-result-selectable:not(.select2-disabled, .select2-selected)")},moveHighlight:function(r){var q=this.findHighlightableChoices(),p=this.highlight();while(p>-1&&p<q.length){p+=r;var o=d(q[p]);if(o.hasClass("select2-result-selectable")&&!o.hasClass("select2-disabled")&&!o.hasClass("select2-selected")){this.highlight(p);break}}},highlight:function(p){var r=this.findHighlightableChoices(),o,q;if(arguments.length===0){return Q(r.filter(".select2-highlighted")[0],r.get())}if(p>=r.length){p=r.length-1}if(p<0){p=0}this.removeHighlight();o=d(r[p]);o.addClass("select2-highlighted");this.ensureHighlightVisible();q=o.data("select2-data");if(q){this.opts.element.trigger({type:"select2-highlight",val:this.id(q),choice:q})}},removeHighlight:function(){this.results.find(".select2-highlighted").removeClass("select2-highlighted")},countSelectableResults:function(){return this.findHighlightableChoices().length},highlightUnderEvent:function(p){var o=d(p.target).closest(".select2-result-selectable");if(o.length>0&&!o.is(".select2-highlighted")){var q=this.findHighlightableChoices();this.highlight(q.index(o))}else{if(o.length==0){this.removeHighlight()}}},loadMoreIfNeeded:function(){var s=this.results,r=s.find("li.select2-more-results"),u,t=this.resultsPage+1,o=this,q=this.search.val(),p=this.context;if(r.length===0){return }u=r.offset().top-s.offset().top-s.height();if(u<=this.opts.loadMorePadding){r.addClass("select2-active");this.opts.query({element:this.opts.element,term:q,page:t,context:p,matcher:this.opts.matcher,callback:this.bind(function(v){if(!o.opened()){return }o.opts.populateResults.call(this,s,v.results,{term:q,page:t,context:p});o.postprocessResults(v,false,false);if(v.more===true){r.detach().appendTo(s).text(o.opts.formatLoadMore(t+1));window.setTimeout(function(){o.loadMoreIfNeeded()},10)}else{r.remove()}o.positionDropdown();o.resultsPage=t;o.context=v.context;this.opts.element.trigger({type:"select2-loaded",items:v})})})}},tokenize:function(){},updateResults:function(w){var AA=this.search,u=this.results,o=this.opts,t,z=this,x,s=AA.val(),q=d.data(this.container,"select2-last-term"),y;if(w!==true&&q&&T(s,q)){return }d.data(this.container,"select2-last-term",s);if(w!==true&&(this.showSearchInput===false||!this.opened())){return }function v(){AA.removeClass("select2-active");z.positionDropdown()}function p(AB){u.html(AB);v()}y=++this.queryCount;var r=this.getMaximumSelectionSize();if(r>=1){t=this.data();if(d.isArray(t)&&t.length>=r&&Y(o.formatSelectionTooBig,"formatSelectionTooBig")){p("<li class='select2-selection-limit'>"+o.formatSelectionTooBig(r)+"</li>");return }}if(AA.val().length<o.minimumInputLength){if(Y(o.formatInputTooShort,"formatInputTooShort")){p("<li class='select2-no-results'>"+o.formatInputTooShort(AA.val(),o.minimumInputLength)+"</li>")}else{p("")}if(w&&this.showSearch){this.showSearch(true)}return }if(o.maximumInputLength&&AA.val().length>o.maximumInputLength){if(Y(o.formatInputTooLong,"formatInputTooLong")){p("<li class='select2-no-results'>"+o.formatInputTooLong(AA.val(),o.maximumInputLength)+"</li>")}else{p("")}return }if(o.formatSearching&&this.findHighlightableChoices().length===0){p("<li class='select2-searching'>"+o.formatSearching()+"</li>")}AA.addClass("select2-active");this.removeHighlight();x=this.tokenize();if(x!=M&&x!=null){AA.val(x)}this.resultsPage=1;o.query({element:o.element,term:AA.val(),page:this.resultsPage,context:null,matcher:o.matcher,callback:this.bind(function(AC){var AB;if(y!=this.queryCount){return }if(!this.opened()){this.search.removeClass("select2-active");return }this.context=(AC.context===M)?null:AC.context;if(this.opts.createSearchChoice&&AA.val()!==""){AB=this.opts.createSearchChoice.call(z,AA.val(),AC.results);if(AB!==M&&AB!==null&&z.id(AB)!==M&&z.id(AB)!==null){if(d(AC.results).filter(function(){return T(z.id(this),z.id(AB))}).length===0){AC.results.unshift(AB)}}}if(AC.results.length===0&&Y(o.formatNoMatches,"formatNoMatches")){p("<li class='select2-no-results'>"+o.formatNoMatches(AA.val())+"</li>");return }u.empty();z.opts.populateResults.call(this,u,AC.results,{term:AA.val(),page:this.resultsPage,context:null});if(AC.more===true&&Y(o.formatLoadMore,"formatLoadMore")){u.append("<li class='select2-more-results'>"+z.opts.escapeMarkup(o.formatLoadMore(this.resultsPage))+"</li>");window.setTimeout(function(){z.loadMoreIfNeeded()},10)}this.postprocessResults(AC,w);v();this.opts.element.trigger({type:"select2-loaded",items:AC})})})},cancel:function(){this.close()},blur:function(){if(this.opts.selectOnBlur){this.selectHighlighted({noFocus:true})}this.close();this.container.removeClass("select2-container-active");if(this.search[0]===document.activeElement){this.search.blur()}this.clearSearch();this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")},focusSearch:function(){i(this.search)},selectHighlighted:function(p){var o=this.highlight(),q=this.results.find(".select2-highlighted"),r=q.closest(".select2-result").data("select2-data");if(r){this.highlight(o);this.onSelect(r,p)}else{if(p&&p.noFocus){this.close()}}},getPlaceholder:function(){var o;return this.opts.element.attr("placeholder")||this.opts.element.attr("data-placeholder")||this.opts.element.data("placeholder")||this.opts.placeholder||((o=this.getPlaceholderOption())!==M?o.text():M)},getPlaceholderOption:function(){if(this.select){var o=this.select.children("option").first();if(this.opts.placeholderOption!==M){return(this.opts.placeholderOption==="first"&&o)||(typeof this.opts.placeholderOption==="function"&&this.opts.placeholderOption(this.select))}else{if(o.text()===""&&o.val()===""){return o}}}},initContainerWidth:function(){function p(){var u,s,v,t,r,q;if(this.opts.width==="off"){return null}else{if(this.opts.width==="element"){return this.opts.element.outerWidth(false)===0?"auto":this.opts.element.outerWidth(false)+"px"}else{if(this.opts.width==="copy"||this.opts.width==="resolve"){u=this.opts.element.attr("style");if(u!==M){s=u.split(";");for(t=0,r=s.length;t<r;t=t+1){q=s[t].replace(/\s/g,"");v=q.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i);if(v!==null&&v.length>=1){return v[1]}}}if(this.opts.width==="resolve"){u=this.opts.element.css("width");if(u.indexOf("%")>0){return u}return(this.opts.element.outerWidth(false)===0?"auto":this.opts.element.outerWidth(false)+"px")}return null}else{if(d.isFunction(this.opts.width)){return this.opts.width()}else{return this.opts.width}}}}}var o=p.call(this);if(o!==null){this.container.css("width",o)}}});X=l(n,{createContainer:function(){var o=d(document.createElement("div")).attr({"class":"select2-container"}).html(["<a href='javascript:void(0)' onclick='return false;' class='select2-choice' tabindex='-1'>","   <span class='select2-chosen'>&nbsp;</span><abbr class='select2-search-choice-close'></abbr>","   <span class='select2-arrow'><b></b></span>","</a>","<input class='select2-focusser select2-offscreen' type='text'/>","<div class='select2-drop select2-display-none'>","   <div class='select2-search'>","       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'/>","   </div>","   <ul class='select2-results'>","   </ul>","</div>"].join(""));return o},enableInterface:function(){if(this.parent.enableInterface.apply(this,arguments)){this.focusser.prop("disabled",!this.isInterfaceEnabled())}},opening:function(){var q,p,o;if(this.opts.minimumResultsForSearch>=0){this.showSearch(true)}this.parent.opening.apply(this,arguments);if(this.showSearchInput!==false){this.search.val(this.focusser.val())}this.search.focus();q=this.search.get(0);if(q.createTextRange){p=q.createTextRange();p.collapse(false);p.select()}else{if(q.setSelectionRange){o=this.search.val().length;q.setSelectionRange(o,o)}}if(this.search.val()===""){if(this.nextSearchTerm!=M){this.search.val(this.nextSearchTerm);this.search.select()}}this.focusser.prop("disabled",true).val("");this.updateResults(true);this.opts.element.trigger(d.Event("select2-open"))},close:function(o){if(!this.opened()){return }this.parent.close.apply(this,arguments);o=o||{focus:true};this.focusser.removeAttr("disabled");if(o.focus){this.focusser.focus()}},focus:function(){if(this.opened()){this.close()}else{this.focusser.removeAttr("disabled");this.focusser.focus()}},isFocused:function(){return this.container.hasClass("select2-container-active")},cancel:function(){this.parent.cancel.apply(this,arguments);this.focusser.removeAttr("disabled");this.focusser.focus()},destroy:function(){d("label[for='"+this.focusser.attr("id")+"']").attr("for",this.opts.element.attr("id"));this.parent.destroy.apply(this,arguments)},initContainer:function(){var p,o=this.container,q=this.dropdown;if(this.opts.minimumResultsForSearch<0){this.showSearch(false)}else{this.showSearch(true)}this.selection=p=o.find(".select2-choice");this.focusser=o.find(".select2-focusser");this.focusser.attr("id","s2id_autogen"+A());d("label[for='"+this.opts.element.attr("id")+"']").attr("for",this.focusser.attr("id"));this.focusser.attr("tabindex",this.elementTabIndex);this.search.on("keydown",this.bind(function(r){if(!this.isInterfaceEnabled()){return }if(r.which===k.PAGE_UP||r.which===k.PAGE_DOWN){a(r);return }switch(r.which){case k.UP:case k.DOWN:this.moveHighlight((r.which===k.UP)?-1:1);a(r);return ;case k.ENTER:this.selectHighlighted();a(r);return ;case k.TAB:this.selectHighlighted({noFocus:true});return ;case k.ESC:this.cancel(r);a(r);return }}));this.search.on("blur",this.bind(function(r){if(document.activeElement===this.body().get(0)){window.setTimeout(this.bind(function(){this.search.focus()}),0)}}));this.focusser.on("keydown",this.bind(function(r){if(!this.isInterfaceEnabled()){return }if(r.which===k.TAB||k.isControl(r)||k.isFunctionKey(r)||r.which===k.ESC){return }if(this.opts.openOnEnter===false&&r.which===k.ENTER){a(r);return }if(r.which==k.DOWN||r.which==k.UP||(r.which==k.ENTER&&this.opts.openOnEnter)){if(r.altKey||r.ctrlKey||r.shiftKey||r.metaKey){return }this.open();a(r);return }if(r.which==k.DELETE||r.which==k.BACKSPACE){if(this.opts.allowClear){this.clear()}a(r);return }}));f(this.focusser);this.focusser.on("keyup-change input",this.bind(function(r){if(this.opts.minimumResultsForSearch>=0){r.stopPropagation();if(this.opened()){return }this.open()}}));p.on("mousedown","abbr",this.bind(function(r){if(!this.isInterfaceEnabled()){return }this.clear();B(r);this.close();this.selection.focus()}));p.on("mousedown",this.bind(function(r){if(!this.container.hasClass("select2-container-active")){this.opts.element.trigger(d.Event("select2-focus"))}if(this.opened()){this.close()}else{if(this.isInterfaceEnabled()){this.open()}}a(r)}));q.on("mousedown",this.bind(function(){this.search.focus()}));p.on("focus",this.bind(function(r){a(r)}));this.focusser.on("focus",this.bind(function(){if(!this.container.hasClass("select2-container-active")){this.opts.element.trigger(d.Event("select2-focus"))}this.container.addClass("select2-container-active")})).on("blur",this.bind(function(){if(!this.opened()){this.container.removeClass("select2-container-active");this.opts.element.trigger(d.Event("select2-blur"))}}));this.search.on("focus",this.bind(function(){if(!this.container.hasClass("select2-container-active")){this.opts.element.trigger(d.Event("select2-focus"))}this.container.addClass("select2-container-active")}));this.initContainerWidth();this.opts.element.addClass("select2-offscreen");this.setPlaceholder()},clear:function(q){var r=this.selection.data("select2-data");if(r){var p=d.Event("select2-clearing");this.opts.element.trigger(p);if(p.isDefaultPrevented()){return }var o=this.getPlaceholderOption();this.opts.element.val(o?o.val():"");this.selection.find(".select2-chosen").empty();this.selection.removeData("select2-data");this.setPlaceholder();if(q!==false){this.opts.element.trigger({type:"select2-removed",val:this.id(r),choice:r});this.triggerChange({removed:r})}}},initSelection:function(){var p;if(this.isPlaceholderOptionSelected()){this.updateSelection(null);this.close();this.setPlaceholder()}else{var o=this;this.opts.initSelection.call(null,this.opts.element,function(q){if(q!==M&&q!==null){o.updateSelection(q);o.close();o.setPlaceholder()}})}},isPlaceholderOptionSelected:function(){var o;if(!this.getPlaceholder()){return false}return((o=this.getPlaceholderOption())!==M&&o.prop("selected"))||(this.opts.element.val()==="")||(this.opts.element.val()===M)||(this.opts.element.val()===null)},prepareOpts:function(){var p=this.parent.prepareOpts.apply(this,arguments),o=this;if(p.element.get(0).tagName.toLowerCase()==="select"){p.initSelection=function(q,s){var r=q.find("option").filter(function(){return this.selected});s(o.optionToData(r))}}else{if("data" in p){p.initSelection=p.initSelection||function(r,t){var s=r.val();var q=null;p.query({matcher:function(u,x,v){var w=T(s,p.id(v));if(w){q=v}return w},callback:!d.isFunction(t)?d.noop:function(){t(q)}})}}}return p},getPlaceholder:function(){if(this.select){if(this.getPlaceholderOption()===M){return M}}return this.parent.getPlaceholder.apply(this,arguments)},setPlaceholder:function(){var o=this.getPlaceholder();if(this.isPlaceholderOptionSelected()&&o!==M){if(this.select&&this.getPlaceholderOption()===M){return }this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(o));this.selection.addClass("select2-default");this.container.removeClass("select2-allowclear")}},postprocessResults:function(t,p,s){var r=0,o=this,u=true;this.findHighlightableChoices().each2(function(v,w){if(T(o.id(w.data("select2-data")),o.opts.element.val())){r=v;return false}});if(s!==false){if(p===true&&r>=0){this.highlight(r)}else{this.highlight(0)}}if(p===true){var q=this.opts.minimumResultsForSearch;if(q>=0){this.showSearch(R(t.results)>=q)}}},showSearch:function(o){if(this.showSearchInput===o){return }this.showSearchInput=o;this.dropdown.find(".select2-search").toggleClass("select2-search-hidden",!o);this.dropdown.find(".select2-search").toggleClass("select2-offscreen",!o);d(this.dropdown,this.container).toggleClass("select2-with-searchbox",o)},onSelect:function(q,p){if(!this.triggerSelect(q)){return }var o=this.opts.element.val(),r=this.data();this.opts.element.val(this.id(q));this.updateSelection(q);this.opts.element.trigger({type:"select2-selected",val:this.id(q),choice:q});this.nextSearchTerm=this.opts.nextSearchTerm(q,this.search.val());this.close();if(!p||!p.noFocus){this.focusser.focus()}if(!T(o,this.id(q))){this.triggerChange({added:q,removed:r})}},updateSelection:function(r){var p=this.selection.find(".select2-chosen"),q,o;this.selection.data("select2-data",r);p.empty();if(r!==null){q=this.opts.formatSelection(r,p,this.opts.escapeMarkup)}if(q!==M){p.append(q)}o=this.opts.formatSelectionCssClass(r,p);if(o!==M){p.addClass(o)}this.selection.removeClass("select2-default");if(this.opts.allowClear&&this.getPlaceholder()!==M){this.container.addClass("select2-allowclear")}},val:function(){var s,p=false,q=null,o=this,r=this.data();if(arguments.length===0){return this.opts.element.val()}s=arguments[0];if(arguments.length>1){p=arguments[1]}if(this.select){this.select.val(s).find("option").filter(function(){return this.selected}).each2(function(t,u){q=o.optionToData(u);return false});this.updateSelection(q);this.setPlaceholder();if(p){this.triggerChange({added:q,removed:r})}}else{if(!s&&s!==0){this.clear(p);return }if(this.opts.initSelection===M){throw new Error("cannot call val() if initSelection() is not defined")}this.opts.element.val(s);this.opts.initSelection(this.opts.element,function(t){o.opts.element.val(!t?"":o.id(t));o.updateSelection(t);o.setPlaceholder();if(p){o.triggerChange({added:t,removed:r})}})}},clearSearch:function(){this.search.val("");this.focusser.val("")},data:function(q){var p,o=false;if(arguments.length===0){p=this.selection.data("select2-data");if(p==M){p=null}return p}else{if(arguments.length>1){o=arguments[1]}if(!q){this.clear(o)}else{p=this.data();this.opts.element.val(!q?"":this.id(q));this.updateSelection(q);if(o){this.triggerChange({added:q,removed:p})}}}}});C=l(n,{createContainer:function(){var o=d(document.createElement("div")).attr({"class":"select2-container select2-container-multi"}).html(["<ul class='select2-choices'>","  <li class='select2-search-field'>","    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>","  </li>","</ul>","<div class='select2-drop select2-drop-multi select2-display-none'>","   <ul class='select2-results'>","   </ul>","</div>"].join(""));return o},prepareOpts:function(){var p=this.parent.prepareOpts.apply(this,arguments),o=this;if(p.element.get(0).tagName.toLowerCase()==="select"){p.initSelection=function(q,s){var r=[];q.find("option").filter(function(){return this.selected}).each2(function(t,u){r.push(o.optionToData(u))});s(r)}}else{if("data" in p){p.initSelection=p.initSelection||function(q,t){var r=I(q.val(),p.separator);var s=[];p.query({matcher:function(u,x,v){var w=d.grep(r,function(y){return T(y,p.id(v))}).length;if(w){s.push(v)}return w},callback:!d.isFunction(t)?d.noop:function(){var u=[];for(var x=0;x<r.length;x++){var y=r[x];for(var w=0;w<s.length;w++){var v=s[w];if(T(y,p.id(v))){u.push(v);s.splice(w,1);break}}}t(u)}})}}}return p},selectChoice:function(o){var p=this.container.find(".select2-search-choice-focus");if(p.length&&o&&o[0]==p[0]){}else{if(p.length){this.opts.element.trigger("choice-deselected",p)}p.removeClass("select2-search-choice-focus");if(o&&o.length){this.close();o.addClass("select2-search-choice-focus");this.opts.element.trigger("choice-selected",o)}}},destroy:function(){d("label[for='"+this.search.attr("id")+"']").attr("for",this.opts.element.attr("id"));this.parent.destroy.apply(this,arguments)},initContainer:function(){var o=".select2-choices",p;this.searchContainer=this.container.find(".select2-search-field");this.selection=p=this.container.find(o);var q=this;this.selection.on("click",".select2-search-choice:not(.select2-locked)",function(r){q.search[0].focus();q.selectChoice(d(this))});this.search.attr("id","s2id_autogen"+A());d("label[for='"+this.opts.element.attr("id")+"']").attr("for",this.search.attr("id"));this.search.on("input paste",this.bind(function(){if(!this.isInterfaceEnabled()){return }if(!this.opened()){this.open()}}));this.search.attr("tabindex",this.elementTabIndex);this.keydowns=0;this.search.on("keydown",this.bind(function(v){if(!this.isInterfaceEnabled()){return }++this.keydowns;var t=p.find(".select2-search-choice-focus");var u=t.prev(".select2-search-choice:not(.select2-locked)");var s=t.next(".select2-search-choice:not(.select2-locked)");var w=F(this.search);if(t.length&&(v.which==k.LEFT||v.which==k.RIGHT||v.which==k.BACKSPACE||v.which==k.DELETE||v.which==k.ENTER)){var r=t;if(v.which==k.LEFT&&u.length){r=u}else{if(v.which==k.RIGHT){r=s.length?s:null}else{if(v.which===k.BACKSPACE){this.unselect(t.first());this.search.width(10);r=u.length?u:s}else{if(v.which==k.DELETE){this.unselect(t.first());this.search.width(10);r=s.length?s:null}else{if(v.which==k.ENTER){r=null}}}}}this.selectChoice(r);a(v);if(!r||!r.length){this.open()}return }else{if(((v.which===k.BACKSPACE&&this.keydowns==1)||v.which==k.LEFT)&&(w.offset==0&&!w.length)){this.selectChoice(p.find(".select2-search-choice:not(.select2-locked)").last());a(v);return }else{this.selectChoice(null)}}if(this.opened()){switch(v.which){case k.UP:case k.DOWN:this.moveHighlight((v.which===k.UP)?-1:1);a(v);return ;case k.ENTER:this.selectHighlighted();a(v);return ;case k.TAB:this.selectHighlighted({noFocus:true});this.close();return ;case k.ESC:this.cancel(v);a(v);return }}if(v.which===k.TAB||k.isControl(v)||k.isFunctionKey(v)||v.which===k.BACKSPACE||v.which===k.ESC){return }if(v.which===k.ENTER){if(this.opts.openOnEnter===false){return }else{if(v.altKey||v.ctrlKey||v.shiftKey||v.metaKey){return }}}this.open();if(v.which===k.PAGE_UP||v.which===k.PAGE_DOWN){a(v)}if(v.which===k.ENTER){a(v)}}));this.search.on("keyup",this.bind(function(r){this.keydowns=0;this.resizeSearch()}));this.search.on("blur",this.bind(function(r){this.container.removeClass("select2-container-active");this.search.removeClass("select2-focused");this.selectChoice(null);if(!this.opened()){this.clearSearch()}r.stopImmediatePropagation();this.opts.element.trigger(d.Event("select2-blur"))}));this.container.on("click",o,this.bind(function(r){if(!this.isInterfaceEnabled()){return }if(d(r.target).closest(".select2-search-choice").length>0){return }this.selectChoice(null);this.clearPlaceholder();if(!this.container.hasClass("select2-container-active")){this.opts.element.trigger(d.Event("select2-focus"))}this.open();this.focusSearch();r.preventDefault()}));this.container.on("focus",o,this.bind(function(){if(!this.isInterfaceEnabled()){return }if(!this.container.hasClass("select2-container-active")){this.opts.element.trigger(d.Event("select2-focus"))}this.container.addClass("select2-container-active");this.dropdown.addClass("select2-drop-active");this.clearPlaceholder()}));this.initContainerWidth();this.opts.element.addClass("select2-offscreen");this.clearSearch()},enableInterface:function(){if(this.parent.enableInterface.apply(this,arguments)){this.search.prop("disabled",!this.isInterfaceEnabled())}},initSelection:function(){var p;if(this.opts.element.val()===""&&this.opts.element.text()===""){this.updateSelection([]);this.close();this.clearSearch()}if(this.select||this.opts.element.val()!==""){var o=this;this.opts.initSelection.call(null,this.opts.element,function(q){if(q!==M&&q!==null){o.updateSelection(q);o.close();o.clearSearch()}})}},clearSearch:function(){var p=this.getPlaceholder(),o=this.getMaxSearchWidth();if(p!==M&&this.getVal().length===0&&this.search.hasClass("select2-focused")===false){this.search.val(p).addClass("select2-default");this.search.width(o>0?o:this.container.css("width"))}else{this.search.val("").width(10)}},clearPlaceholder:function(){if(this.search.hasClass("select2-default")){this.search.val("").removeClass("select2-default")}},opening:function(){this.clearPlaceholder();this.resizeSearch();this.parent.opening.apply(this,arguments);this.focusSearch();this.updateResults(true);this.search.focus();this.opts.element.trigger(d.Event("select2-open"))},close:function(){if(!this.opened()){return }this.parent.close.apply(this,arguments)},focus:function(){this.close();this.search.focus()},isFocused:function(){return this.search.hasClass("select2-focused")},updateSelection:function(r){var q=[],p=[],o=this;d(r).each(function(){if(Q(o.id(this),q)<0){q.push(o.id(this));p.push(this)}});r=p;this.selection.find(".select2-search-choice").remove();d(r).each(function(){o.addSelectedChoice(this)});o.postprocessResults()},tokenize:function(){var o=this.search.val();o=this.opts.tokenizer.call(this,o,this.data(),this.bind(this.onSelect),this.opts);if(o!=null&&o!=M){this.search.val(o);if(o.length>0){this.open()}}},onSelect:function(p,o){if(!this.triggerSelect(p)){return }this.addSelectedChoice(p);this.opts.element.trigger({type:"selected",val:this.id(p),choice:p});if(this.select||!this.opts.closeOnSelect){this.postprocessResults(p,false,this.opts.closeOnSelect===true)}if(this.opts.closeOnSelect){this.close();this.search.width(10)}else{if(this.countSelectableResults()>0){this.search.width(10);this.resizeSearch();if(this.getMaximumSelectionSize()>0&&this.val().length>=this.getMaximumSelectionSize()){this.updateResults(true)}this.positionDropdown()}else{this.close();this.search.width(10)}}this.triggerChange({added:p});if(!o||!o.noFocus){this.focusSearch()}},cancel:function(){this.close();this.focusSearch()},addSelectedChoice:function(s){var u=!s.locked,q=d("<li class='select2-search-choice'>    <div></div>    <a href='#' onclick='return false;' class='select2-search-choice-close' tabindex='-1'></a></li>"),v=d("<li class='select2-search-choice select2-locked'><div></div></li>");var r=u?q:v,o=this.id(s),p=this.getVal(),t,w;t=this.opts.formatSelection(s,r.find("div"),this.opts.escapeMarkup);if(t!=M){r.find("div").replaceWith("<div>"+t+"</div>")}w=this.opts.formatSelectionCssClass(s,r.find("div"));if(w!=M){r.addClass(w)}if(u){r.find(".select2-search-choice-close").on("mousedown",a).on("click dblclick",this.bind(function(x){if(!this.isInterfaceEnabled()){return }d(x.target).closest(".select2-search-choice").fadeOut("fast",this.bind(function(){this.unselect(d(x.target));this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");this.close();this.focusSearch()})).dequeue();a(x)})).on("focus",this.bind(function(){if(!this.isInterfaceEnabled()){return }this.container.addClass("select2-container-active");this.dropdown.addClass("select2-drop-active")}))}r.data("select2-data",s);r.insertBefore(this.searchContainer);p.push(o);this.setVal(p)},unselect:function(q){var s=this.getVal(),r,p;q=q.closest(".select2-search-choice");if(q.length===0){throw"Invalid argument: "+q+". Must be .select2-search-choice"}r=q.data("select2-data");if(!r){return }while((p=Q(this.id(r),s))>=0){s.splice(p,1);this.setVal(s);if(this.select){this.postprocessResults()}}var o=d.Event("select2-removing");o.val=this.id(r);o.choice=r;this.opts.element.trigger(o);if(o.isDefaultPrevented()){return }q.remove();this.opts.element.trigger({type:"select2-removed",val:this.id(r),choice:r});this.triggerChange({removed:r})},postprocessResults:function(s,p,r){var t=this.getVal(),u=this.results.find(".select2-result"),q=this.results.find(".select2-result-with-children"),o=this;u.each2(function(w,v){var x=o.id(v.data("select2-data"));if(Q(x,t)>=0){v.addClass("select2-selected");v.find(".select2-result-selectable").addClass("select2-selected")}});q.each2(function(w,v){if(!v.is(".select2-result-selectable")&&v.find(".select2-result-selectable:not(.select2-selected)").length===0){v.addClass("select2-selected")}});if(this.highlight()==-1&&r!==false){o.highlight(0)}if(!this.opts.createSearchChoice&&!u.filter(".select2-result:not(.select2-selected)").length>0){if(!s||s&&!s.more&&this.results.find(".select2-no-results").length===0){if(Y(o.opts.formatNoMatches,"formatNoMatches")){this.results.append("<li class='select2-no-results'>"+o.opts.formatNoMatches(o.search.val())+"</li>")}}}},getMaxSearchWidth:function(){return this.selection.width()-H(this.search)},resizeSearch:function(){var t,r,q,o,p,s=H(this.search);t=N(this.search)+10;r=this.search.offset().left;q=this.selection.width();o=this.selection.offset().left;p=q-(r-o)-s;if(p<t){p=q-s}if(p<40){p=q-s}if(p<=0){p=t}this.search.width(Math.floor(p))},getVal:function(){var o;if(this.select){o=this.select.val();return o===null?[]:o}else{o=this.opts.element.val();return I(o,this.opts.separator)}},setVal:function(p){var o;if(this.select){this.select.val(p)}else{o=[];d(p).each(function(){if(Q(this,o)<0){o.push(this)}});this.opts.element.val(o.length===0?"":o.join(this.opts.separator))}},buildChangeDetails:function(o,r){var r=r.slice(0),o=o.slice(0);for(var q=0;q<r.length;q++){for(var p=0;p<o.length;p++){if(T(this.opts.id(r[q]),this.opts.id(o[p]))){r.splice(q,1);if(q>0){q--}o.splice(p,1);p--}}}return{added:r,removed:o}},val:function(r,p){var q,o=this;if(arguments.length===0){return this.getVal()}q=this.data();if(!q.length){q=[]}if(!r&&r!==0){this.opts.element.val("");this.updateSelection([]);this.clearSearch();if(p){this.triggerChange({added:this.data(),removed:q})}return }this.setVal(r);if(this.select){this.opts.initSelection(this.select,this.bind(this.updateSelection));if(p){this.triggerChange(this.buildChangeDetails(q,this.data()))}}else{if(this.opts.initSelection===M){throw new Error("val() cannot be called if initSelection() is not defined")}this.opts.initSelection(this.opts.element,function(t){var s=d.map(t,o.id);o.setVal(s);o.updateSelection(t);o.clearSearch();if(p){o.triggerChange(o.buildChangeDetails(q,o.data()))}})}this.clearSearch()},onSortStart:function(){if(this.select){throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.")}this.search.width(0);this.searchContainer.hide()},onSortEnd:function(){var p=[],o=this;this.searchContainer.show();this.searchContainer.appendTo(this.searchContainer.parent());this.resizeSearch();this.selection.find(".select2-search-choice").each(function(){p.push(o.opts.id(d(this).data("select2-data")))});this.setVal(p);this.triggerChange()},data:function(q,r){var p=this,s,o;if(arguments.length===0){return this.selection.find(".select2-search-choice").map(function(){return d(this).data("select2-data")}).get()}else{o=this.data();if(!q){q=[]}s=d.map(q,function(t){return p.opts.id(t)});this.setVal(s);this.updateSelection(q);this.clearSearch();if(r){this.triggerChange(this.buildChangeDetails(o,this.data()))}}}});d.fn.select2=function(){var t=Array.prototype.slice.call(arguments,0),p,s,o,v,x,w=["val","destroy","opened","open","close","focus","isFocused","container","dropdown","onSortStart","onSortEnd","enable","disable","readonly","positionDropdown","data","search"],u=["opened","isFocused","container","dropdown"],q=["val","data"],r={search:"externalSearch"};this.each(function(){if(t.length===0||typeof (t[0])==="object"){p=t.length===0?{}:d.extend({},t[0]);p.element=d(this);if(p.element.get(0).tagName.toLowerCase()==="select"){x=p.element.prop("multiple")}else{x=p.multiple||false;if("tags" in p){p.multiple=x=true}}s=x?new C():new X();s.init(p)}else{if(typeof (t[0])==="string"){if(Q(t[0],w)<0){throw"Unknown method: "+t[0]}v=M;s=d(this).data("select2");if(s===M){return }o=t[0];if(o==="container"){v=s.container}else{if(o==="dropdown"){v=s.dropdown}else{if(r[o]){o=r[o]}v=s[o].apply(s,t.slice(1))}}if(Q(t[0],u)>=0||(Q(t[0],q)&&t.length==1)){return false}}else{throw"Invalid arguments to select2 plugin: "+t}}});return(v===M)?this:v};d.fn.select2.defaults={width:"copy",loadMorePadding:0,closeOnSelect:true,openOnEnter:true,containerCss:{},dropdownCss:{},containerCssClass:"",dropdownCssClass:"",formatResult:function(p,q,s,o){var r=[];U(p.text,s.term,r,o);return r.join("")},formatSelection:function(q,p,o){return q?o(q.text):M},sortResults:function(p,o,q){return p},formatResultCssClass:function(o){return M},formatSelectionCssClass:function(p,o){return M},formatNoMatches:function(){return"No matches found"},formatInputTooShort:function(o,p){var q=p-o.length;return"Please enter "+q+" more character"+(q==1?"":"s")},formatInputTooLong:function(p,o){var q=p.length-o;return"Please delete "+q+" character"+(q==1?"":"s")},formatSelectionTooBig:function(o){return"You can only select "+o+" item"+(o==1?"":"s")},formatLoadMore:function(o){return"Loading more results..."},formatSearching:function(){return"Searching..."},minimumResultsForSearch:0,minimumInputLength:0,maximumInputLength:null,maximumSelectionSize:0,id:function(o){return o.id},matcher:function(o,p){return E(""+p).toUpperCase().indexOf(E(""+o).toUpperCase())>=0},separator:",",tokenSeparators:[],tokenizer:G,escapeMarkup:g,blurOnChange:false,selectOnBlur:false,adaptContainerCssClass:function(o){return o},adaptDropdownCssClass:function(o){return null},nextSearchTerm:function(o,p){return M}};d.fn.select2.ajaxDefaults={transport:d.ajax,params:{type:"GET",cache:false,dataType:"json"}};window.Select2={query:{ajax:e,local:h,tags:Z},util:{debounce:K,markMatch:U,escapeMarkup:g,stripDiacritics:E},"class":{"abstract":n,single:X,multi:C}}}(jQuery));
/* module-key = 'com.atlassian.auiplugin:aui-select2', location = 'js/aui-select2.js' */
(function(C){var E=C.fn.select2;var D="aui-select2-container";var B="aui-select2-drop aui-dropdown2 aui-style-default";var A="aui-has-avatar";C.fn.auiSelect2=function(I){var H;if(C.isPlainObject(I)){var F=C.extend({},I);var G=F.hasAvatar?" "+A:"";F.containerCssClass=D+G+(F.containerCssClass?" "+F.containerCssClass:"");F.dropdownCssClass=B+G+(F.dropdownCssClass?" "+F.dropdownCssClass:"");H=Array.prototype.slice.call(arguments,1);H.unshift(F)}else{if(!arguments.length){H=[{containerCssClass:D,dropdownCssClass:B}]}else{H=arguments}}return E.apply(this,H)}})(AJS.$);
/* module-key = 'bamboo.web.resources:ajs', location = '/scripts/aui-overrides.js' */

/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.position.js' */
/*
 * jQuery UI Position 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Position
 */
(function(G,H){G.ui=G.ui||{};var D=/left|center|right/,E=/top|center|bottom/,A="center",F={},B=G.fn.position,C=G.fn.offset;G.fn.position=function(J){if(!J||!J.of){return B.apply(this,arguments)}J=G.extend({},J);var N=G(J.of),M=N[0],P=(J.collision||"flip").split(" "),O=J.offset?J.offset.split(" "):[0,0],L,I,K;if(M.nodeType===9){L=N.width();I=N.height();K={top:0,left:0}}else{if(M.setTimeout){L=N.width();I=N.height();K={top:N.scrollTop(),left:N.scrollLeft()}}else{if(M.preventDefault){J.at="left top";L=I=0;K={top:J.of.pageY,left:J.of.pageX}}else{L=N.outerWidth();I=N.outerHeight();K=N.offset()}}}G.each(["my","at"],function(){var Q=(J[this]||"").split(" ");if(Q.length===1){Q=D.test(Q[0])?Q.concat([A]):E.test(Q[0])?[A].concat(Q):[A,A]}Q[0]=D.test(Q[0])?Q[0]:A;Q[1]=E.test(Q[1])?Q[1]:A;J[this]=Q});if(P.length===1){P[1]=P[0]}O[0]=parseInt(O[0],10)||0;if(O.length===1){O[1]=O[0]}O[1]=parseInt(O[1],10)||0;if(J.at[0]==="right"){K.left+=L}else{if(J.at[0]===A){K.left+=L/2}}if(J.at[1]==="bottom"){K.top+=I}else{if(J.at[1]===A){K.top+=I/2}}K.left+=O[0];K.top+=O[1];return this.each(function(){var T=G(this),V=T.outerWidth(),S=T.outerHeight(),U=parseInt(G.curCSS(this,"marginLeft",true))||0,R=parseInt(G.curCSS(this,"marginTop",true))||0,X=V+U+(parseInt(G.curCSS(this,"marginRight",true))||0),Y=S+R+(parseInt(G.curCSS(this,"marginBottom",true))||0),W=G.extend({},K),Q;if(J.my[0]==="right"){W.left-=V}else{if(J.my[0]===A){W.left-=V/2}}if(J.my[1]==="bottom"){W.top-=S}else{if(J.my[1]===A){W.top-=S/2}}if(!F.fractions){W.left=Math.round(W.left);W.top=Math.round(W.top)}Q={left:W.left-U,top:W.top-R};G.each(["left","top"],function(a,Z){if(G.ui.position[P[a]]){G.ui.position[P[a]][Z](W,{targetWidth:L,targetHeight:I,elemWidth:V,elemHeight:S,collisionPosition:Q,collisionWidth:X,collisionHeight:Y,offset:O,my:J.my,at:J.at})}});if(G.fn.bgiframe){T.bgiframe()}T.offset(G.extend(W,{using:J.using}))})};G.ui.position={fit:{left:function(I,J){var L=G(window),K=J.collisionPosition.left+J.collisionWidth-L.width()-L.scrollLeft();I.left=K>0?I.left-K:Math.max(I.left-J.collisionPosition.left,I.left)},top:function(I,J){var L=G(window),K=J.collisionPosition.top+J.collisionHeight-L.height()-L.scrollTop();I.top=K>0?I.top-K:Math.max(I.top-J.collisionPosition.top,I.top)}},flip:{left:function(J,L){if(L.at[0]===A){return }var N=G(window),M=L.collisionPosition.left+L.collisionWidth-N.width()-N.scrollLeft(),I=L.my[0]==="left"?-L.elemWidth:L.my[0]==="right"?L.elemWidth:0,K=L.at[0]==="left"?L.targetWidth:-L.targetWidth,O=-2*L.offset[0];J.left+=L.collisionPosition.left<0?I+K+O:M>0?I+K+O:0},top:function(J,L){if(L.at[1]===A){return }var N=G(window),M=L.collisionPosition.top+L.collisionHeight-N.height()-N.scrollTop(),I=L.my[1]==="top"?-L.elemHeight:L.my[1]==="bottom"?L.elemHeight:0,K=L.at[1]==="top"?L.targetHeight:-L.targetHeight,O=-2*L.offset[1];J.top+=L.collisionPosition.top<0?I+K+O:M>0?I+K+O:0}}};if(!G.offset.setOffset){G.offset.setOffset=function(M,J){if(/static/.test(G.curCSS(M,"position"))){M.style.position="relative"}var L=G(M),O=L.offset(),I=parseInt(G.curCSS(M,"top",true),10)||0,N=parseInt(G.curCSS(M,"left",true),10)||0,K={top:(J.top-O.top)+I,left:(J.left-O.left)+N};if("using" in J){J.using.call(M,K)}else{L.css(K)}};G.fn.offset=function(I){var J=this[0];if(!J||!J.ownerDocument){return null}if(I){if(G.isFunction(I)){return this.each(function(K){G(this).offset(I.call(this,K,G(this).offset()))})}return this.each(function(){G.offset.setOffset(this,I)})}return C.call(this)}}if(!G.curCSS){G.curCSS=G.css}(function(){var I=document.getElementsByTagName("body")[0],P=document.createElement("div"),M,O,J,N,L;M=document.createElement(I?"div":"body");J={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"};if(I){G.extend(J,{position:"absolute",left:"-1000px",top:"-1000px"})}for(var K in J){M.style[K]=J[K]}M.appendChild(P);O=I||document.documentElement;O.insertBefore(M,O.firstChild);P.style.cssText="position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;";N=G(P).offset(function(Q,R){return R}).offset();M.innerHTML="";O.removeChild(M);L=N.top+N.left+(I?2000:0);F.fractions=L>21&&L<22})()}(jQuery));
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.droppable.js' */
/*
 * jQuery UI Droppable 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Droppables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.mouse.js
 *	jquery.ui.draggable.js
 */
(function(A,B){A.widget("ui.droppable",{widgetEventPrefix:"drop",options:{accept:"*",activeClass:false,addClasses:true,greedy:false,hoverClass:false,scope:"default",tolerance:"intersect"},_create:function(){var D=this.options,C=D.accept;this.isover=0;this.isout=1;this.accept=A.isFunction(C)?C:function(E){return E.is(C)};this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight};A.ui.ddmanager.droppables[D.scope]=A.ui.ddmanager.droppables[D.scope]||[];A.ui.ddmanager.droppables[D.scope].push(this);(D.addClasses&&this.element.addClass("ui-droppable"))},destroy:function(){var C=A.ui.ddmanager.droppables[this.options.scope];for(var D=0;D<C.length;D++){if(C[D]==this){C.splice(D,1)}}this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");return this},_setOption:function(C,D){if(C=="accept"){this.accept=A.isFunction(D)?D:function(E){return E.is(D)}}A.Widget.prototype._setOption.apply(this,arguments)},_activate:function(D){var C=A.ui.ddmanager.current;if(this.options.activeClass){this.element.addClass(this.options.activeClass)}(C&&this._trigger("activate",D,this.ui(C)))},_deactivate:function(D){var C=A.ui.ddmanager.current;if(this.options.activeClass){this.element.removeClass(this.options.activeClass)}(C&&this._trigger("deactivate",D,this.ui(C)))},_over:function(D){var C=A.ui.ddmanager.current;if(!C||(C.currentItem||C.element)[0]==this.element[0]){return }if(this.accept.call(this.element[0],(C.currentItem||C.element))){if(this.options.hoverClass){this.element.addClass(this.options.hoverClass)}this._trigger("over",D,this.ui(C))}},_out:function(D){var C=A.ui.ddmanager.current;if(!C||(C.currentItem||C.element)[0]==this.element[0]){return }if(this.accept.call(this.element[0],(C.currentItem||C.element))){if(this.options.hoverClass){this.element.removeClass(this.options.hoverClass)}this._trigger("out",D,this.ui(C))}},_drop:function(D,E){var C=E||A.ui.ddmanager.current;if(!C||(C.currentItem||C.element)[0]==this.element[0]){return false}var F=false;this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var G=A.data(this,"droppable");if(G.options.greedy&&!G.options.disabled&&G.options.scope==C.options.scope&&G.accept.call(G.element[0],(C.currentItem||C.element))&&A.ui.intersect(C,A.extend(G,{offset:G.element.offset()}),G.options.tolerance)){F=true;return false}});if(F){return false}if(this.accept.call(this.element[0],(C.currentItem||C.element))){if(this.options.activeClass){this.element.removeClass(this.options.activeClass)}if(this.options.hoverClass){this.element.removeClass(this.options.hoverClass)}this._trigger("drop",D,this.ui(C));return this.element}return false},ui:function(C){return{draggable:(C.currentItem||C.element),helper:C.helper,position:C.position,offset:C.positionAbs}}});A.extend(A.ui.droppable,{version:"1.8.24"});A.ui.intersect=function(P,J,N){if(!J.offset){return false}var E=(P.positionAbs||P.position.absolute).left,D=E+P.helperProportions.width,M=(P.positionAbs||P.position.absolute).top,L=M+P.helperProportions.height;var G=J.offset.left,C=G+J.proportions.width,O=J.offset.top,K=O+J.proportions.height;switch(N){case"fit":return(G<=E&&D<=C&&O<=M&&L<=K);break;case"intersect":return(G<E+(P.helperProportions.width/2)&&D-(P.helperProportions.width/2)<C&&O<M+(P.helperProportions.height/2)&&L-(P.helperProportions.height/2)<K);break;case"pointer":var H=((P.positionAbs||P.position.absolute).left+(P.clickOffset||P.offset.click).left),I=((P.positionAbs||P.position.absolute).top+(P.clickOffset||P.offset.click).top),F=A.ui.isOver(I,H,O,G,J.proportions.height,J.proportions.width);return F;break;case"touch":return((M>=O&&M<=K)||(L>=O&&L<=K)||(M<O&&L>K))&&((E>=G&&E<=C)||(D>=G&&D<=C)||(E<G&&D>C));break;default:return false;break}};A.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(F,H){var C=A.ui.ddmanager.droppables[F.options.scope]||[];var G=H?H.type:null;var I=(F.currentItem||F.element).find(":data(droppable)").andSelf();droppablesLoop:for(var E=0;E<C.length;E++){if(C[E].options.disabled||(F&&!C[E].accept.call(C[E].element[0],(F.currentItem||F.element)))){continue}for(var D=0;D<I.length;D++){if(I[D]==C[E].element[0]){C[E].proportions.height=0;continue droppablesLoop}}C[E].visible=C[E].element.css("display")!="none";if(!C[E].visible){continue}if(G=="mousedown"){C[E]._activate.call(C[E],H)}C[E].offset=C[E].element.offset();C[E].proportions={width:C[E].element[0].offsetWidth,height:C[E].element[0].offsetHeight}}},drop:function(C,D){var E=false;A.each(A.ui.ddmanager.droppables[C.options.scope]||[],function(){if(!this.options){return }if(!this.options.disabled&&this.visible&&A.ui.intersect(C,this,this.options.tolerance)){E=this._drop.call(this,D)||E}if(!this.options.disabled&&this.visible&&this.accept.call(this.element[0],(C.currentItem||C.element))){this.isout=1;this.isover=0;this._deactivate.call(this,D)}});return E},dragStart:function(C,D){C.element.parents(":not(body,html)").bind("scroll.droppable",function(){if(!C.options.refreshPositions){A.ui.ddmanager.prepareOffsets(C,D)}})},drag:function(C,D){if(C.options.refreshPositions){A.ui.ddmanager.prepareOffsets(C,D)}A.each(A.ui.ddmanager.droppables[C.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible){return }var G=A.ui.intersect(C,this,this.options.tolerance);var I=!G&&this.isover==1?"isout":(G&&this.isover==0?"isover":null);if(!I){return }var H;if(this.options.greedy){var F=this.options.scope;var E=this.element.parents(":data(droppable)").filter(function(){return A.data(this,"droppable").options.scope===F});if(E.length){H=A.data(E[0],"droppable");H.greedyChild=(I=="isover"?1:0)}}if(H&&I=="isover"){H.isover=0;H.isout=1;H._out.call(H,D)}this[I]=1;this[I=="isout"?"isover":"isout"]=0;this[I=="isover"?"_over":"_out"].call(this,D);if(H&&I=="isout"){H.isout=0;H.isover=1;H._over.call(H,D)}})},dragStop:function(C,D){C.element.parents(":not(body,html)").unbind("scroll.droppable");if(!C.options.refreshPositions){A.ui.ddmanager.prepareOffsets(C,D)}}}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.resizable.js' */
/*
 * jQuery UI Resizable 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Resizables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(C,D){C.widget("ui.resizable",C.ui.mouse,{widgetEventPrefix:"resize",options:{alsoResize:false,animate:false,animateDuration:"slow",animateEasing:"swing",aspectRatio:false,autoHide:false,containment:false,ghost:false,grid:false,handles:"e,s,se",helper:false,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1000},_create:function(){var F=this,J=this.options;this.element.addClass("ui-resizable");C.extend(this,{_aspectRatio:!!(J.aspectRatio),aspectRatio:J.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:J.helper||J.ghost||J.animate?J.helper||"ui-resizable-helper":null});if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)){this.element.wrap(C('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")}));this.element=this.element.parent().data("resizable",this.element.data("resizable"));this.elementIsWrapper=true;this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")});this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0});this.originalResizeStyle=this.originalElement.css("resize");this.originalElement.css("resize","none");this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"}));this.originalElement.css({margin:this.originalElement.css("margin")});this._proportionallyResize()}this.handles=J.handles||(!C(".ui-resizable-handle",this.element).length?"e,s,se":{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"});if(this.handles.constructor==String){if(this.handles=="all"){this.handles="n,e,s,w,se,sw,ne,nw"}var K=this.handles.split(",");this.handles={};for(var G=0;G<K.length;G++){var I=C.trim(K[G]),E="ui-resizable-"+I;var H=C('<div class="ui-resizable-handle '+E+'"></div>');H.css({zIndex:J.zIndex});if("se"==I){H.addClass("ui-icon ui-icon-gripsmall-diagonal-se")}this.handles[I]=".ui-resizable-"+I;this.element.append(H)}}this._renderAxis=function(P){P=P||this.element;for(var M in this.handles){if(this.handles[M].constructor==String){this.handles[M]=C(this.handles[M],this.element).show()}if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var N=C(this.handles[M],this.element),O=0;O=/sw|ne|nw|se|n|s/.test(M)?N.outerHeight():N.outerWidth();var L=["padding",/ne|nw|n/.test(M)?"Top":/se|sw|s/.test(M)?"Bottom":/^e$/.test(M)?"Right":"Left"].join("");P.css(L,O);this._proportionallyResize()}if(!C(this.handles[M]).length){continue}}};this._renderAxis(this.element);this._handles=C(".ui-resizable-handle",this.element).disableSelection();this._handles.mouseover(function(){if(!F.resizing){if(this.className){var L=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)}F.axis=L&&L[1]?L[1]:"se"}});if(J.autoHide){this._handles.hide();C(this.element).addClass("ui-resizable-autohide").hover(function(){if(J.disabled){return }C(this).removeClass("ui-resizable-autohide");F._handles.show()},function(){if(J.disabled){return }if(!F.resizing){C(this).addClass("ui-resizable-autohide");F._handles.hide()}})}this._mouseInit()},destroy:function(){this._mouseDestroy();var E=function(G){C(G).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){E(this.element);var F=this.element;F.after(this.originalElement.css({position:F.css("position"),width:F.outerWidth(),height:F.outerHeight(),top:F.css("top"),left:F.css("left")})).remove()}this.originalElement.css("resize",this.originalResizeStyle);E(this.originalElement);return this},_mouseCapture:function(F){var G=false;for(var E in this.handles){if(C(this.handles[E])[0]==F.target){G=true}}return !this.options.disabled&&G},_mouseStart:function(G){var J=this.options,F=this.element.position(),E=this.element;this.resizing=true;this.documentScroll={top:C(document).scrollTop(),left:C(document).scrollLeft()};if(E.is(".ui-draggable")||(/absolute/).test(E.css("position"))){E.css({position:"absolute",top:F.top,left:F.left})}this._renderProxy();var K=B(this.helper.css("left")),H=B(this.helper.css("top"));if(J.containment){K+=C(J.containment).scrollLeft()||0;H+=C(J.containment).scrollTop()||0}this.offset=this.helper.offset();this.position={left:K,top:H};this.size=this._helper?{width:E.outerWidth(),height:E.outerHeight()}:{width:E.width(),height:E.height()};this.originalSize=this._helper?{width:E.outerWidth(),height:E.outerHeight()}:{width:E.width(),height:E.height()};this.originalPosition={left:K,top:H};this.sizeDiff={width:E.outerWidth()-E.width(),height:E.outerHeight()-E.height()};this.originalMousePosition={left:G.pageX,top:G.pageY};this.aspectRatio=(typeof J.aspectRatio=="number")?J.aspectRatio:((this.originalSize.width/this.originalSize.height)||1);var I=C(".ui-resizable-"+this.axis).css("cursor");C("body").css("cursor",I=="auto"?this.axis+"-resize":I);E.addClass("ui-resizable-resizing");this._propagate("start",G);return true},_mouseDrag:function(E){var H=this.helper,G=this.options,M={},P=this,J=this.originalMousePosition,N=this.axis;var Q=(E.pageX-J.left)||0,O=(E.pageY-J.top)||0;var I=this._change[N];if(!I){return false}var L=I.apply(this,[E,Q,O]),K=C.browser.msie&&C.browser.version<7,F=this.sizeDiff;this._updateVirtualBoundaries(E.shiftKey);if(this._aspectRatio||E.shiftKey){L=this._updateRatio(L,E)}L=this._respectSize(L,E);this._propagate("resize",E);H.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"});if(!this._helper&&this._proportionallyResizeElements.length){this._proportionallyResize()}this._updateCache(L);this._trigger("resize",E,this.ui());return false},_mouseStop:function(H){this.resizing=false;var I=this.options,M=this;if(this._helper){var G=this._proportionallyResizeElements,E=G.length&&(/textarea/i).test(G[0].nodeName),F=E&&C.ui.hasScroll(G[0],"left")?0:M.sizeDiff.height,K=E?0:M.sizeDiff.width;var N={width:(M.helper.width()-K),height:(M.helper.height()-F)},J=(parseInt(M.element.css("left"),10)+(M.position.left-M.originalPosition.left))||null,L=(parseInt(M.element.css("top"),10)+(M.position.top-M.originalPosition.top))||null;if(!I.animate){this.element.css(C.extend(N,{top:L,left:J}))}M.helper.height(M.size.height);M.helper.width(M.size.width);if(this._helper&&!I.animate){this._proportionallyResize()}}C("body").css("cursor","auto");this.element.removeClass("ui-resizable-resizing");this._propagate("stop",H);if(this._helper){this.helper.remove()}return false},_updateVirtualBoundaries:function(G){var J=this.options,I,H,F,K,E;E={minWidth:A(J.minWidth)?J.minWidth:0,maxWidth:A(J.maxWidth)?J.maxWidth:Infinity,minHeight:A(J.minHeight)?J.minHeight:0,maxHeight:A(J.maxHeight)?J.maxHeight:Infinity};if(this._aspectRatio||G){I=E.minHeight*this.aspectRatio;F=E.minWidth/this.aspectRatio;H=E.maxHeight*this.aspectRatio;K=E.maxWidth/this.aspectRatio;if(I>E.minWidth){E.minWidth=I}if(F>E.minHeight){E.minHeight=F}if(H<E.maxWidth){E.maxWidth=H}if(K<E.maxHeight){E.maxHeight=K}}this._vBoundaries=E},_updateCache:function(E){var F=this.options;this.offset=this.helper.offset();if(A(E.left)){this.position.left=E.left}if(A(E.top)){this.position.top=E.top}if(A(E.height)){this.size.height=E.height}if(A(E.width)){this.size.width=E.width}},_updateRatio:function(H,G){var I=this.options,J=this.position,F=this.size,E=this.axis;if(A(H.height)){H.width=(H.height*this.aspectRatio)}else{if(A(H.width)){H.height=(H.width/this.aspectRatio)}}if(E=="sw"){H.left=J.left+(F.width-H.width);H.top=null}if(E=="nw"){H.top=J.top+(F.height-H.height);H.left=J.left+(F.width-H.width)}return H},_respectSize:function(L,G){var J=this.helper,I=this._vBoundaries,Q=this._aspectRatio||G.shiftKey,P=this.axis,S=A(L.width)&&I.maxWidth&&(I.maxWidth<L.width),M=A(L.height)&&I.maxHeight&&(I.maxHeight<L.height),H=A(L.width)&&I.minWidth&&(I.minWidth>L.width),R=A(L.height)&&I.minHeight&&(I.minHeight>L.height);if(H){L.width=I.minWidth}if(R){L.height=I.minHeight}if(S){L.width=I.maxWidth}if(M){L.height=I.maxHeight}var F=this.originalPosition.left+this.originalSize.width,O=this.position.top+this.size.height;var K=/sw|nw|w/.test(P),E=/nw|ne|n/.test(P);if(H&&K){L.left=F-I.minWidth}if(S&&K){L.left=F-I.maxWidth}if(R&&E){L.top=O-I.minHeight}if(M&&E){L.top=O-I.maxHeight}var N=!L.width&&!L.height;if(N&&!L.left&&L.top){L.top=null}else{if(N&&!L.top&&L.left){L.left=null}}return L},_proportionallyResize:function(){var J=this.options;if(!this._proportionallyResizeElements.length){return }var G=this.helper||this.element;for(var F=0;F<this._proportionallyResizeElements.length;F++){var H=this._proportionallyResizeElements[F];if(!this.borderDif){var E=[H.css("borderTopWidth"),H.css("borderRightWidth"),H.css("borderBottomWidth"),H.css("borderLeftWidth")],I=[H.css("paddingTop"),H.css("paddingRight"),H.css("paddingBottom"),H.css("paddingLeft")];this.borderDif=C.map(E,function(K,M){var L=parseInt(K,10)||0,N=parseInt(I[M],10)||0;return L+N})}if(C.browser.msie&&!(!(C(G).is(":hidden")||C(G).parents(":hidden").length))){continue}H.css({height:(G.height()-this.borderDif[0]-this.borderDif[2])||0,width:(G.width()-this.borderDif[1]-this.borderDif[3])||0})}},_renderProxy:function(){var F=this.element,I=this.options;this.elementOffset=F.offset();if(this._helper){this.helper=this.helper||C('<div style="overflow:hidden;"></div>');var E=C.browser.msie&&C.browser.version<7,G=(E?1:0),H=(E?2:-1);this.helper.addClass(this._helper).css({width:this.element.outerWidth()+H,height:this.element.outerHeight()+H,position:"absolute",left:this.elementOffset.left-G+"px",top:this.elementOffset.top-G+"px",zIndex:++I.zIndex});this.helper.appendTo("body").disableSelection()}else{this.helper=this.element}},_change:{e:function(G,F,E){return{width:this.originalSize.width+F}},w:function(H,F,E){var J=this.options,G=this.originalSize,I=this.originalPosition;return{left:I.left+F,width:G.width-F}},n:function(H,F,E){var J=this.options,G=this.originalSize,I=this.originalPosition;return{top:I.top+E,height:G.height-E}},s:function(G,F,E){return{height:this.originalSize.height+E}},se:function(G,F,E){return C.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[G,F,E]))},sw:function(G,F,E){return C.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[G,F,E]))},ne:function(G,F,E){return C.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[G,F,E]))},nw:function(G,F,E){return C.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[G,F,E]))}},_propagate:function(F,E){C.ui.plugin.call(this,F,[E,this.ui()]);(F!="resize"&&this._trigger(F,E,this.ui()))},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}});C.extend(C.ui.resizable,{version:"1.8.24"});C.ui.plugin.add("resizable","alsoResize",{start:function(F,G){var E=C(this).data("resizable"),I=E.options;var H=function(J){C(J).each(function(){var K=C(this);K.data("resizable-alsoresize",{width:parseInt(K.width(),10),height:parseInt(K.height(),10),left:parseInt(K.css("left"),10),top:parseInt(K.css("top"),10)})})};if(typeof (I.alsoResize)=="object"&&!I.alsoResize.parentNode){if(I.alsoResize.length){I.alsoResize=I.alsoResize[0];H(I.alsoResize)}else{C.each(I.alsoResize,function(J){H(J)})}}else{H(I.alsoResize)}},resize:function(G,I){var F=C(this).data("resizable"),J=F.options,H=F.originalSize,L=F.originalPosition;var K={height:(F.size.height-H.height)||0,width:(F.size.width-H.width)||0,top:(F.position.top-L.top)||0,left:(F.position.left-L.left)||0},E=function(M,N){C(M).each(function(){var Q=C(this),R=C(this).data("resizable-alsoresize"),P={},O=N&&N.length?N:Q.parents(I.originalElement[0]).length?["width","height"]:["width","height","top","left"];C.each(O,function(S,U){var T=(R[U]||0)+(K[U]||0);if(T&&T>=0){P[U]=T||null}});Q.css(P)})};if(typeof (J.alsoResize)=="object"&&!J.alsoResize.nodeType){C.each(J.alsoResize,function(M,N){E(M,N)})}else{E(J.alsoResize)}},stop:function(E,F){C(this).removeData("resizable-alsoresize")}});C.ui.plugin.add("resizable","animate",{stop:function(I,N){var O=C(this).data("resizable"),J=O.options;var H=O._proportionallyResizeElements,E=H.length&&(/textarea/i).test(H[0].nodeName),F=E&&C.ui.hasScroll(H[0],"left")?0:O.sizeDiff.height,L=E?0:O.sizeDiff.width;var G={width:(O.size.width-L),height:(O.size.height-F)},K=(parseInt(O.element.css("left"),10)+(O.position.left-O.originalPosition.left))||null,M=(parseInt(O.element.css("top"),10)+(O.position.top-O.originalPosition.top))||null;O.element.animate(C.extend(G,M&&K?{top:M,left:K}:{}),{duration:J.animateDuration,easing:J.animateEasing,step:function(){var P={width:parseInt(O.element.css("width"),10),height:parseInt(O.element.css("height"),10),top:parseInt(O.element.css("top"),10),left:parseInt(O.element.css("left"),10)};if(H&&H.length){C(H[0]).css({width:P.width,height:P.height})}O._updateCache(P);O._propagate("resize",I)}})}});C.ui.plugin.add("resizable","containment",{start:function(F,P){var R=C(this).data("resizable"),J=R.options,L=R.element;var G=J.containment,K=(G instanceof C)?G.get(0):(/parent/.test(G))?L.parent().get(0):G;if(!K){return }R.containerElement=C(K);if(/document/.test(G)||G==document){R.containerOffset={left:0,top:0};R.containerPosition={left:0,top:0};R.parentData={element:C(document),left:0,top:0,width:C(document).width(),height:C(document).height()||document.body.parentNode.scrollHeight}}else{var N=C(K),I=[];C(["Top","Right","Left","Bottom"]).each(function(T,S){I[T]=B(N.css("padding"+S))});R.containerOffset=N.offset();R.containerPosition=N.position();R.containerSize={height:(N.innerHeight()-I[3]),width:(N.innerWidth()-I[1])};var O=R.containerOffset,E=R.containerSize.height,M=R.containerSize.width,H=(C.ui.hasScroll(K,"left")?K.scrollWidth:M),Q=(C.ui.hasScroll(K)?K.scrollHeight:E);R.parentData={element:K,left:O.left,top:O.top,width:H,height:Q}}},resize:function(G,P){var S=C(this).data("resizable"),I=S.options,F=S.containerSize,O=S.containerOffset,M=S.size,N=S.position,Q=S._aspectRatio||G.shiftKey,E={top:0,left:0},H=S.containerElement;if(H[0]!=document&&(/static/).test(H.css("position"))){E=O}if(N.left<(S._helper?O.left:0)){S.size.width=S.size.width+(S._helper?(S.position.left-O.left):(S.position.left-E.left));if(Q){S.size.height=S.size.width/S.aspectRatio}S.position.left=I.helper?O.left:0}if(N.top<(S._helper?O.top:0)){S.size.height=S.size.height+(S._helper?(S.position.top-O.top):S.position.top);if(Q){S.size.width=S.size.height*S.aspectRatio}S.position.top=S._helper?O.top:0}S.offset.left=S.parentData.left+S.position.left;S.offset.top=S.parentData.top+S.position.top;var L=Math.abs((S._helper?S.offset.left-E.left:(S.offset.left-E.left))+S.sizeDiff.width),R=Math.abs((S._helper?S.offset.top-E.top:(S.offset.top-O.top))+S.sizeDiff.height);var K=S.containerElement.get(0)==S.element.parent().get(0),J=/relative|absolute/.test(S.containerElement.css("position"));if(K&&J){L-=S.parentData.left}if(L+S.size.width>=S.parentData.width){S.size.width=S.parentData.width-L;if(Q){S.size.height=S.size.width/S.aspectRatio}}if(R+S.size.height>=S.parentData.height){S.size.height=S.parentData.height-R;if(Q){S.size.width=S.size.height*S.aspectRatio}}},stop:function(F,M){var O=C(this).data("resizable"),G=O.options,K=O.position,L=O.containerOffset,E=O.containerPosition,H=O.containerElement;var I=C(O.helper),P=I.offset(),N=I.outerWidth()-O.sizeDiff.width,J=I.outerHeight()-O.sizeDiff.height;if(O._helper&&!G.animate&&(/relative/).test(H.css("position"))){C(this).css({left:P.left-E.left-L.left,width:N,height:J})}if(O._helper&&!G.animate&&(/static/).test(H.css("position"))){C(this).css({left:P.left-E.left-L.left,width:N,height:J})}}});C.ui.plugin.add("resizable","ghost",{start:function(G,H){var E=C(this).data("resizable"),I=E.options,F=E.size;E.ghost=E.originalElement.clone();E.ghost.css({opacity:0.25,display:"block",position:"relative",height:F.height,width:F.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof I.ghost=="string"?I.ghost:"");E.ghost.appendTo(E.helper)},resize:function(F,G){var E=C(this).data("resizable"),H=E.options;if(E.ghost){E.ghost.css({position:"relative",height:E.size.height,width:E.size.width})}},stop:function(F,G){var E=C(this).data("resizable"),H=E.options;if(E.ghost&&E.helper){E.helper.get(0).removeChild(E.ghost.get(0))}}});C.ui.plugin.add("resizable","grid",{resize:function(E,M){var O=C(this).data("resizable"),H=O.options,K=O.size,I=O.originalSize,J=O.originalPosition,N=O.axis,L=H._aspectRatio||E.shiftKey;H.grid=typeof H.grid=="number"?[H.grid,H.grid]:H.grid;var G=Math.round((K.width-I.width)/(H.grid[0]||1))*(H.grid[0]||1),F=Math.round((K.height-I.height)/(H.grid[1]||1))*(H.grid[1]||1);if(/^(se|s|e)$/.test(N)){O.size.width=I.width+G;O.size.height=I.height+F}else{if(/^(ne)$/.test(N)){O.size.width=I.width+G;O.size.height=I.height+F;O.position.top=J.top-F}else{if(/^(sw)$/.test(N)){O.size.width=I.width+G;O.size.height=I.height+F;O.position.left=J.left-G}else{O.size.width=I.width+G;O.size.height=I.height+F;O.position.top=J.top-F;O.position.left=J.left-G}}}}});var B=function(E){return parseInt(E,10)||0};var A=function(E){return !isNaN(parseInt(E,10))}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.selectable.js' */
/*
 * jQuery UI Selectable 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Selectables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(A,B){A.widget("ui.selectable",A.ui.mouse,{options:{appendTo:"body",autoRefresh:true,distance:0,filter:"*",tolerance:"touch"},_create:function(){var C=this;this.element.addClass("ui-selectable");this.dragged=false;var D;this.refresh=function(){D=A(C.options.filter,C.element[0]);D.addClass("ui-selectee");D.each(function(){var E=A(this);var F=E.offset();A.data(this,"selectable-item",{element:this,$element:E,left:F.left,top:F.top,right:F.left+E.outerWidth(),bottom:F.top+E.outerHeight(),startselected:false,selected:E.hasClass("ui-selected"),selecting:E.hasClass("ui-selecting"),unselecting:E.hasClass("ui-unselecting")})})};this.refresh();this.selectees=D.addClass("ui-selectee");this._mouseInit();this.helper=A("<div class='ui-selectable-helper'></div>")},destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item");this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");this._mouseDestroy();return this},_mouseStart:function(E){var C=this;this.opos=[E.pageX,E.pageY];if(this.options.disabled){return }var D=this.options;this.selectees=A(D.filter,this.element[0]);this._trigger("start",E);A(D.appendTo).append(this.helper);this.helper.css({left:E.clientX,top:E.clientY,width:0,height:0});if(D.autoRefresh){this.refresh()}this.selectees.filter(".ui-selected").each(function(){var F=A.data(this,"selectable-item");F.startselected=true;if(!E.metaKey&&!E.ctrlKey){F.$element.removeClass("ui-selected");F.selected=false;F.$element.addClass("ui-unselecting");F.unselecting=true;C._trigger("unselecting",E,{unselecting:F.element})}});A(E.target).parents().andSelf().each(function(){var G=A.data(this,"selectable-item");if(G){var F=(!E.metaKey&&!E.ctrlKey)||!G.$element.hasClass("ui-selected");G.$element.removeClass(F?"ui-unselecting":"ui-selected").addClass(F?"ui-selecting":"ui-unselecting");G.unselecting=!F;G.selecting=F;G.selected=F;if(F){C._trigger("selecting",E,{selecting:G.element})}else{C._trigger("unselecting",E,{unselecting:G.element})}return false}})},_mouseDrag:function(J){var D=this;this.dragged=true;if(this.options.disabled){return }var F=this.options;var E=this.opos[0],I=this.opos[1],C=J.pageX,H=J.pageY;if(E>C){var G=C;C=E;E=G}if(I>H){var G=H;H=I;I=G}this.helper.css({left:E,top:I,width:C-E,height:H-I});this.selectees.each(function(){var K=A.data(this,"selectable-item");if(!K||K.element==D.element[0]){return }var L=false;if(F.tolerance=="touch"){L=(!(K.left>C||K.right<E||K.top>H||K.bottom<I))}else{if(F.tolerance=="fit"){L=(K.left>E&&K.right<C&&K.top>I&&K.bottom<H)}}if(L){if(K.selected){K.$element.removeClass("ui-selected");K.selected=false}if(K.unselecting){K.$element.removeClass("ui-unselecting");K.unselecting=false}if(!K.selecting){K.$element.addClass("ui-selecting");K.selecting=true;D._trigger("selecting",J,{selecting:K.element})}}else{if(K.selecting){if((J.metaKey||J.ctrlKey)&&K.startselected){K.$element.removeClass("ui-selecting");K.selecting=false;K.$element.addClass("ui-selected");K.selected=true}else{K.$element.removeClass("ui-selecting");K.selecting=false;if(K.startselected){K.$element.addClass("ui-unselecting");K.unselecting=true}D._trigger("unselecting",J,{unselecting:K.element})}}if(K.selected){if(!J.metaKey&&!J.ctrlKey&&!K.startselected){K.$element.removeClass("ui-selected");K.selected=false;K.$element.addClass("ui-unselecting");K.unselecting=true;D._trigger("unselecting",J,{unselecting:K.element})}}}});return false},_mouseStop:function(E){var C=this;this.dragged=false;var D=this.options;A(".ui-unselecting",this.element[0]).each(function(){var F=A.data(this,"selectable-item");F.$element.removeClass("ui-unselecting");F.unselecting=false;F.startselected=false;C._trigger("unselected",E,{unselected:F.element})});A(".ui-selecting",this.element[0]).each(function(){var F=A.data(this,"selectable-item");F.$element.removeClass("ui-selecting").addClass("ui-selected");F.selecting=false;F.selected=true;F.startselected=true;C._trigger("selected",E,{selected:F.element})});this._trigger("stop",E);this.helper.remove();return false}});A.extend(A.ui.selectable,{version:"1.8.24"})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.accordion.js' */
/*
 * jQuery UI Accordion 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Accordion
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(A,B){A.widget("ui.accordion",{options:{active:0,animated:"slide",autoHeight:true,clearStyle:false,collapsible:false,event:"click",fillSpace:false,header:"> li > :first-child,> :not(li):even",icons:{header:"ui-icon-triangle-1-e",headerSelected:"ui-icon-triangle-1-s"},navigation:false,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}},_create:function(){var C=this,D=C.options;C.running=0;C.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix");C.headers=C.element.find(D.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion",function(){if(D.disabled){return }A(this).addClass("ui-state-hover")}).bind("mouseleave.accordion",function(){if(D.disabled){return }A(this).removeClass("ui-state-hover")}).bind("focus.accordion",function(){if(D.disabled){return }A(this).addClass("ui-state-focus")}).bind("blur.accordion",function(){if(D.disabled){return }A(this).removeClass("ui-state-focus")});C.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");if(D.navigation){var E=C.element.find("a").filter(D.navigationFilter).eq(0);if(E.length){var F=E.closest(".ui-accordion-header");if(F.length){C.active=F}else{C.active=E.closest(".ui-accordion-content").prev()}}}C.active=C._findActive(C.active||D.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top");C.active.next().addClass("ui-accordion-content-active");C._createIcons();C.resize();C.element.attr("role","tablist");C.headers.attr("role","tab").bind("keydown.accordion",function(G){return C._keydown(G)}).next().attr("role","tabpanel");C.headers.not(C.active||"").attr({"aria-expanded":"false","aria-selected":"false",tabIndex:-1}).next().hide();if(!C.active.length){C.headers.eq(0).attr("tabIndex",0)}else{C.active.attr({"aria-expanded":"true","aria-selected":"true",tabIndex:0})}if(!A.browser.safari){C.headers.find("a").attr("tabIndex",-1)}if(D.event){C.headers.bind(D.event.split(" ").join(".accordion ")+".accordion",function(G){C._clickHandler.call(C,G,this);G.preventDefault()})}},_createIcons:function(){var C=this.options;if(C.icons){A("<span></span>").addClass("ui-icon "+C.icons.header).prependTo(this.headers);this.active.children(".ui-icon").toggleClass(C.icons.header).toggleClass(C.icons.headerSelected);this.element.addClass("ui-accordion-icons")}},_destroyIcons:function(){this.headers.children(".ui-icon").remove();this.element.removeClass("ui-accordion-icons")},destroy:function(){var C=this.options;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex");this.headers.find("a").removeAttr("tabIndex");this._destroyIcons();var D=this.headers.next().css("display","").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled");if(C.autoHeight||C.fillHeight){D.css("height","")}return A.Widget.prototype.destroy.call(this)},_setOption:function(C,D){A.Widget.prototype._setOption.apply(this,arguments);if(C=="active"){this.activate(D)}if(C=="icons"){this._destroyIcons();if(D){this._createIcons()}}if(C=="disabled"){this.headers.add(this.headers.next())[D?"addClass":"removeClass"]("ui-accordion-disabled ui-state-disabled")}},_keydown:function(F){if(this.options.disabled||F.altKey||F.ctrlKey){return }var G=A.ui.keyCode,E=this.headers.length,C=this.headers.index(F.target),D=false;switch(F.keyCode){case G.RIGHT:case G.DOWN:D=this.headers[(C+1)%E];break;case G.LEFT:case G.UP:D=this.headers[(C-1+E)%E];break;case G.SPACE:case G.ENTER:this._clickHandler({target:F.target},F.target);F.preventDefault()}if(D){A(F.target).attr("tabIndex",-1);A(D).attr("tabIndex",0);D.focus();return false}return true},resize:function(){var C=this.options,E;if(C.fillSpace){if(A.browser.msie){var D=this.element.parent().css("overflow");this.element.parent().css("overflow","hidden")}E=this.element.parent().height();if(A.browser.msie){this.element.parent().css("overflow",D)}this.headers.each(function(){E-=A(this).outerHeight(true)});this.headers.next().each(function(){A(this).height(Math.max(0,E-A(this).innerHeight()+A(this).height()))}).css("overflow","auto")}else{if(C.autoHeight){E=0;this.headers.next().each(function(){E=Math.max(E,A(this).height("").height())}).height(E)}}return this},activate:function(C){this.options.active=C;var D=this._findActive(C)[0];this._clickHandler({target:D},D);return this},_findActive:function(C){return C?typeof C==="number"?this.headers.filter(":eq("+C+")"):this.headers.not(this.headers.not(C)):C===false?A([]):this.headers.filter(":eq(0)")},_clickHandler:function(C,G){var L=this.options;if(L.disabled){return }if(!C.target){if(!L.collapsible){return }this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(L.icons.headerSelected).addClass(L.icons.header);this.active.next().addClass("ui-accordion-content-active");var I=this.active.next(),F={options:L,newHeader:A([]),oldHeader:L.active,newContent:A([]),oldContent:I},D=(this.active=A([]));this._toggle(D,I,F);return }var H=A(C.currentTarget||G),J=H[0]===this.active[0];L.active=L.collapsible&&J?false:this.headers.index(H);if(this.running||(!L.collapsible&&J)){return }var E=this.active,D=H.next(),I=this.active.next(),F={options:L,newHeader:J&&L.collapsible?A([]):H,oldHeader:this.active,newContent:J&&L.collapsible?A([]):D,oldContent:I},K=this.headers.index(this.active[0])>this.headers.index(H[0]);this.active=J?A([]):H;this._toggle(D,I,F,J,K);E.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(L.icons.headerSelected).addClass(L.icons.header);if(!J){H.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(L.icons.header).addClass(L.icons.headerSelected);H.next().addClass("ui-accordion-content-active")}return },_toggle:function(C,I,G,J,K){var M=this,N=M.options;M.toShow=C;M.toHide=I;M.data=G;var D=function(){if(!M){return }return M._completed.apply(M,arguments)};M._trigger("changestart",null,M.data);M.running=I.size()===0?C.size():I.size();if(N.animated){var F={};if(N.collapsible&&J){F={toShow:A([]),toHide:I,complete:D,down:K,autoHeight:N.autoHeight||N.fillSpace}}else{F={toShow:C,toHide:I,complete:D,down:K,autoHeight:N.autoHeight||N.fillSpace}}if(!N.proxied){N.proxied=N.animated}if(!N.proxiedDuration){N.proxiedDuration=N.duration}N.animated=A.isFunction(N.proxied)?N.proxied(F):N.proxied;N.duration=A.isFunction(N.proxiedDuration)?N.proxiedDuration(F):N.proxiedDuration;var L=A.ui.accordion.animations,E=N.duration,H=N.animated;if(H&&!L[H]&&!A.easing[H]){H="slide"}if(!L[H]){L[H]=function(O){this.slide(O,{easing:H,duration:E||700})}}L[H](F)}else{if(N.collapsible&&J){C.toggle()}else{I.hide();C.show()}D(true)}I.prev().attr({"aria-expanded":"false","aria-selected":"false",tabIndex:-1}).blur();C.prev().attr({"aria-expanded":"true","aria-selected":"true",tabIndex:0}).focus()},_completed:function(C){this.running=C?0:--this.running;if(this.running){return }if(this.options.clearStyle){this.toShow.add(this.toHide).css({height:"",overflow:""})}this.toHide.removeClass("ui-accordion-content-active");if(this.toHide.length){this.toHide.parent()[0].className=this.toHide.parent()[0].className}this._trigger("change",null,this.data)}});A.extend(A.ui.accordion,{version:"1.8.24",animations:{slide:function(K,I){K=A.extend({easing:"swing",duration:300},K,I);if(!K.toHide.size()){K.toShow.animate({height:"show",paddingTop:"show",paddingBottom:"show"},K);return }if(!K.toShow.size()){K.toHide.animate({height:"hide",paddingTop:"hide",paddingBottom:"hide"},K);return }var D=K.toShow.css("overflow"),H=0,E={},G={},F=["height","paddingTop","paddingBottom"],C;var J=K.toShow;C=J[0].style.width;J.width(J.parent().width()-parseFloat(J.css("paddingLeft"))-parseFloat(J.css("paddingRight"))-(parseFloat(J.css("borderLeftWidth"))||0)-(parseFloat(J.css("borderRightWidth"))||0));A.each(F,function(L,N){G[N]="hide";var M=(""+A.css(K.toShow[0],N)).match(/^([\d+-.]+)(.*)$/);E[N]={value:M[1],unit:M[2]||"px"}});K.toShow.css({height:0,overflow:"hidden"}).show();K.toHide.filter(":hidden").each(K.complete).end().filter(":visible").animate(G,{step:function(L,M){if(M.prop=="height"){H=(M.end-M.start===0)?0:(M.now-M.start)/(M.end-M.start)}K.toShow[0].style[M.prop]=(H*E[M.prop].value)+E[M.prop].unit},duration:K.duration,easing:K.easing,complete:function(){if(!K.autoHeight){K.toShow.css("height","")}K.toShow.css({width:C,overflow:D});K.complete()}})},bounceslide:function(C){this.slide(C,{easing:C.down?"easeOutBounce":"swing",duration:C.down?1000:200})}}})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.autocomplete.js' */
/*
 * jQuery UI Autocomplete 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Autocomplete
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.position.js
 */
(function(A,B){var C=0;A.widget("ui.autocomplete",{options:{appendTo:"body",autoFocus:false,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null},pending:0,_create:function(){var D=this,F=this.element[0].ownerDocument,E;this.isMultiLine=this.element.is("textarea");this.element.addClass("ui-autocomplete-input").attr("autocomplete","off").attr({role:"textbox","aria-autocomplete":"list","aria-haspopup":"true"}).bind("keydown.autocomplete",function(G){if(D.options.disabled||D.element.propAttr("readOnly")){return }E=false;var H=A.ui.keyCode;switch(G.keyCode){case H.PAGE_UP:D._move("previousPage",G);break;case H.PAGE_DOWN:D._move("nextPage",G);break;case H.UP:D._keyEvent("previous",G);break;case H.DOWN:D._keyEvent("next",G);break;case H.ENTER:case H.NUMPAD_ENTER:if(D.menu.active){E=true;G.preventDefault()}case H.TAB:if(!D.menu.active){return }D.menu.select(G);break;case H.ESCAPE:D.element.val(D.term);D.close(G);break;default:clearTimeout(D.searching);D.searching=setTimeout(function(){if(D.term!=D.element.val()){D.selectedItem=null;D.search(null,G)}},D.options.delay);break}}).bind("keypress.autocomplete",function(G){if(E){E=false;G.preventDefault()}}).bind("focus.autocomplete",function(){if(D.options.disabled){return }D.selectedItem=null;D.previous=D.element.val()}).bind("blur.autocomplete",function(G){if(D.options.disabled){return }clearTimeout(D.searching);D.closing=setTimeout(function(){D.close(G);D._change(G)},150)});this._initSource();this.menu=A("<ul></ul>").addClass("ui-autocomplete").appendTo(A(this.options.appendTo||"body",F)[0]).mousedown(function(G){var H=D.menu.element[0];if(!A(G.target).closest(".ui-menu-item").length){setTimeout(function(){A(document).one("mousedown",function(I){if(I.target!==D.element[0]&&I.target!==H&&!A.ui.contains(H,I.target)){D.close()}})},1)}setTimeout(function(){clearTimeout(D.closing)},13)}).menu({focus:function(H,I){var G=I.item.data("item.autocomplete");if(false!==D._trigger("focus",H,{item:G})){if(/^key/.test(H.originalEvent.type)){D.element.val(G.value)}}},selected:function(I,J){var H=J.item.data("item.autocomplete"),G=D.previous;if(D.element[0]!==F.activeElement){D.element.focus();D.previous=G;setTimeout(function(){D.previous=G;D.selectedItem=H},1)}if(false!==D._trigger("select",I,{item:H})){D.element.val(H.value)}D.term=D.element.val();D.close(I);D.selectedItem=H},blur:function(G,H){if(D.menu.element.is(":visible")&&(D.element.val()!==D.term)){D.element.val(D.term)}}}).zIndex(this.element.zIndex()+1).css({top:0,left:0}).hide().data("menu");if(A.fn.bgiframe){this.menu.element.bgiframe()}D.beforeunloadHandler=function(){D.element.removeAttr("autocomplete")};A(window).bind("beforeunload",D.beforeunloadHandler)},destroy:function(){this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");this.menu.element.remove();A(window).unbind("beforeunload",this.beforeunloadHandler);A.Widget.prototype.destroy.call(this)},_setOption:function(D,E){A.Widget.prototype._setOption.apply(this,arguments);if(D==="source"){this._initSource()}if(D==="appendTo"){this.menu.element.appendTo(A(E||"body",this.element[0].ownerDocument)[0])}if(D==="disabled"&&E&&this.xhr){this.xhr.abort()}},_initSource:function(){var D=this,F,E;if(A.isArray(this.options.source)){F=this.options.source;this.source=function(H,G){G(A.ui.autocomplete.filter(F,H.term))}}else{if(typeof this.options.source==="string"){E=this.options.source;this.source=function(H,G){if(D.xhr){D.xhr.abort()}D.xhr=A.ajax({url:E,data:H,dataType:"json",success:function(J,I){G(J)},error:function(){G([])}})}}else{this.source=this.options.source}}},search:function(E,D){E=E!=null?E:this.element.val();this.term=this.element.val();if(E.length<this.options.minLength){return this.close(D)}clearTimeout(this.closing);if(this._trigger("search",D)===false){return }return this._search(E)},_search:function(D){this.pending++;this.element.addClass("ui-autocomplete-loading");this.source({term:D},this._response())},_response:function(){var E=this,D=++C;return function(F){if(D===C){E.__response(F)}E.pending--;if(!E.pending){E.element.removeClass("ui-autocomplete-loading")}}},__response:function(D){if(!this.options.disabled&&D&&D.length){D=this._normalize(D);this._suggest(D);this._trigger("open")}else{this.close()}},close:function(D){clearTimeout(this.closing);if(this.menu.element.is(":visible")){this.menu.element.hide();this.menu.deactivate();this._trigger("close",D)}},_change:function(D){if(this.previous!==this.element.val()){this._trigger("change",D,{item:this.selectedItem})}},_normalize:function(D){if(D.length&&D[0].label&&D[0].value){return D}return A.map(D,function(E){if(typeof E==="string"){return{label:E,value:E}}return A.extend({label:E.label||E.value,value:E.value||E.label},E)})},_suggest:function(D){var E=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(E,D);this.menu.deactivate();this.menu.refresh();E.show();this._resizeMenu();E.position(A.extend({of:this.element},this.options.position));if(this.options.autoFocus){this.menu.next(new A.Event("mouseover"))}},_resizeMenu:function(){var D=this.menu.element;D.outerWidth(Math.max(D.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(F,E){var D=this;A.each(E,function(G,H){D._renderItem(F,H)})},_renderItem:function(D,E){return A("<li></li>").data("item.autocomplete",E).append(A("<a></a>").text(E.label)).appendTo(D)},_move:function(E,D){if(!this.menu.element.is(":visible")){this.search(null,D);return }if(this.menu.first()&&/^previous/.test(E)||this.menu.last()&&/^next/.test(E)){this.element.val(this.term);this.menu.deactivate();return }this.menu[E](D)},widget:function(){return this.menu.element},_keyEvent:function(E,D){if(!this.isMultiLine||this.menu.element.is(":visible")){this._move(E,D);D.preventDefault()}}});A.extend(A.ui.autocomplete,{escapeRegex:function(D){return D.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},filter:function(F,D){var E=new RegExp(A.ui.autocomplete.escapeRegex(D),"i");return A.grep(F,function(G){return E.test(G.label||G.value||G)})}})}(jQuery));(function(A){A.widget("ui.menu",{_create:function(){var B=this;this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(C){if(!A(C.target).closest(".ui-menu-item a").length){return }C.preventDefault();B.select(C)});this.refresh()},refresh:function(){var C=this;var B=this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem");B.children("a").addClass("ui-corner-all").attr("tabindex",-1).mouseenter(function(D){C.activate(D,A(this).parent())}).mouseleave(function(){C.deactivate()})},activate:function(E,D){this.deactivate();if(this.hasScroll()){var F=D.offset().top-this.element.offset().top,B=this.element.scrollTop(),C=this.element.height();if(F<0){this.element.scrollTop(B+F)}else{if(F>=C){this.element.scrollTop(B+F-C+D.height())}}}this.active=D.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end();this._trigger("focus",E,{item:D})},deactivate:function(){if(!this.active){return }this.active.children("a").removeClass("ui-state-hover").removeAttr("id");this._trigger("blur");this.active=null},next:function(B){this.move("next",".ui-menu-item:first",B)},previous:function(B){this.move("prev",".ui-menu-item:last",B)},first:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},last:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},move:function(E,D,C){if(!this.active){this.activate(C,this.element.children(D));return }var B=this.active[E+"All"](".ui-menu-item").eq(0);if(B.length){this.activate(C,B)}else{this.activate(C,this.element.children(D))}},nextPage:function(D){if(this.hasScroll()){if(!this.active||this.last()){this.activate(D,this.element.children(".ui-menu-item:first"));return }var E=this.active.offset().top,C=this.element.height(),B=this.element.children(".ui-menu-item").filter(function(){var F=A(this).offset().top-E-C+A(this).height();return F<10&&F>-10});if(!B.length){B=this.element.children(".ui-menu-item:last")}this.activate(D,B)}else{this.activate(D,this.element.children(".ui-menu-item").filter(!this.active||this.last()?":first":":last"))}},previousPage:function(D){if(this.hasScroll()){if(!this.active||this.first()){this.activate(D,this.element.children(".ui-menu-item:last"));return }var E=this.active.offset().top,C=this.element.height(),B=this.element.children(".ui-menu-item").filter(function(){var F=A(this).offset().top-E+C-A(this).height();return F<10&&F>-10});if(!B.length){B=this.element.children(".ui-menu-item:first")}this.activate(D,B)}else{this.activate(D,this.element.children(".ui-menu-item").filter(!this.active||this.first()?":last":":first"))}},hasScroll:function(){return this.element.height()<this.element[A.fn.prop?"prop":"attr"]("scrollHeight")},select:function(B){this._trigger("selected",B,{item:this.active})}})}(jQuery));
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.button.js' */
/*
 * jQuery UI Button 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Button
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(F,B){var K,E,A,H,I="ui-button ui-widget ui-state-default ui-corner-all",C="ui-state-hover ui-state-active ",G="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",J=function(){var L=F(this).find(":ui-button");setTimeout(function(){L.button("refresh")},1)},D=function(M){var L=M.name,N=M.form,O=F([]);if(L){if(N){O=F(N).find("[name='"+L+"']")}else{O=F("[name='"+L+"']",M.ownerDocument).filter(function(){return !this.form})}}return O};F.widget("ui.button",{options:{disabled:null,text:true,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset.button").bind("reset.button",J);if(typeof this.options.disabled!=="boolean"){this.options.disabled=!!this.element.propAttr("disabled")}else{this.element.propAttr("disabled",this.options.disabled)}this._determineButtonType();this.hasTitle=!!this.buttonElement.attr("title");var L=this,N=this.options,O=this.type==="checkbox"||this.type==="radio",P="ui-state-hover"+(!O?" ui-state-active":""),M="ui-state-focus";if(N.label===null){N.label=this.buttonElement.html()}this.buttonElement.addClass(I).attr("role","button").bind("mouseenter.button",function(){if(N.disabled){return }F(this).addClass("ui-state-hover");if(this===K){F(this).addClass("ui-state-active")}}).bind("mouseleave.button",function(){if(N.disabled){return }F(this).removeClass(P)}).bind("click.button",function(Q){if(N.disabled){Q.preventDefault();Q.stopImmediatePropagation()}});this.element.bind("focus.button",function(){L.buttonElement.addClass(M)}).bind("blur.button",function(){L.buttonElement.removeClass(M)});if(O){this.element.bind("change.button",function(){if(H){return }L.refresh()});this.buttonElement.bind("mousedown.button",function(Q){if(N.disabled){return }H=false;E=Q.pageX;A=Q.pageY}).bind("mouseup.button",function(Q){if(N.disabled){return }if(E!==Q.pageX||A!==Q.pageY){H=true}})}if(this.type==="checkbox"){this.buttonElement.bind("click.button",function(){if(N.disabled||H){return false}F(this).toggleClass("ui-state-active");L.buttonElement.attr("aria-pressed",L.element[0].checked)})}else{if(this.type==="radio"){this.buttonElement.bind("click.button",function(){if(N.disabled||H){return false}F(this).addClass("ui-state-active");L.buttonElement.attr("aria-pressed","true");var Q=L.element[0];D(Q).not(Q).map(function(){return F(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")})}else{this.buttonElement.bind("mousedown.button",function(){if(N.disabled){return false}F(this).addClass("ui-state-active");K=this;F(document).one("mouseup",function(){K=null})}).bind("mouseup.button",function(){if(N.disabled){return false}F(this).removeClass("ui-state-active")}).bind("keydown.button",function(Q){if(N.disabled){return false}if(Q.keyCode==F.ui.keyCode.SPACE||Q.keyCode==F.ui.keyCode.ENTER){F(this).addClass("ui-state-active")}}).bind("keyup.button",function(){F(this).removeClass("ui-state-active")});if(this.buttonElement.is("a")){this.buttonElement.keyup(function(Q){if(Q.keyCode===F.ui.keyCode.SPACE){F(this).click()}})}}}this._setOption("disabled",N.disabled);this._resetButton()},_determineButtonType:function(){if(this.element.is(":checkbox")){this.type="checkbox"}else{if(this.element.is(":radio")){this.type="radio"}else{if(this.element.is("input")){this.type="input"}else{this.type="button"}}}if(this.type==="checkbox"||this.type==="radio"){var L=this.element.parents().filter(":last"),N="label[for='"+this.element.attr("id")+"']";this.buttonElement=L.find(N);if(!this.buttonElement.length){L=L.length?L.siblings():this.element.siblings();this.buttonElement=L.filter(N);if(!this.buttonElement.length){this.buttonElement=L.find(N)}}this.element.addClass("ui-helper-hidden-accessible");var M=this.element.is(":checked");if(M){this.buttonElement.addClass("ui-state-active")}this.buttonElement.attr("aria-pressed",M)}else{this.buttonElement=this.element}},widget:function(){return this.buttonElement},destroy:function(){this.element.removeClass("ui-helper-hidden-accessible");this.buttonElement.removeClass(I+" "+C+" "+G).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());if(!this.hasTitle){this.buttonElement.removeAttr("title")}F.Widget.prototype.destroy.call(this)},_setOption:function(L,M){F.Widget.prototype._setOption.apply(this,arguments);if(L==="disabled"){if(M){this.element.propAttr("disabled",true)}else{this.element.propAttr("disabled",false)}return }this._resetButton()},refresh:function(){var L=this.element.is(":disabled");if(L!==this.options.disabled){this._setOption("disabled",L)}if(this.type==="radio"){D(this.element[0]).each(function(){if(F(this).is(":checked")){F(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true")}else{F(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}})}else{if(this.type==="checkbox"){if(this.element.is(":checked")){this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true")}else{this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false")}}}},_resetButton:function(){if(this.type==="input"){if(this.options.label){this.element.val(this.options.label)}return }var P=this.buttonElement.removeClass(G),N=F("<span></span>",this.element[0].ownerDocument).addClass("ui-button-text").html(this.options.label).appendTo(P.empty()).text(),M=this.options.icons,L=M.primary&&M.secondary,O=[];if(M.primary||M.secondary){if(this.options.text){O.push("ui-button-text-icon"+(L?"s":(M.primary?"-primary":"-secondary")))}if(M.primary){P.prepend("<span class='ui-button-icon-primary ui-icon "+M.primary+"'></span>")}if(M.secondary){P.append("<span class='ui-button-icon-secondary ui-icon "+M.secondary+"'></span>")}if(!this.options.text){O.push(L?"ui-button-icons-only":"ui-button-icon-only");if(!this.hasTitle){P.attr("title",N)}}}else{O.push("ui-button-text-only")}P.addClass(O.join(" "))}});F.widget("ui.buttonset",{options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(L,M){if(L==="disabled"){this.buttons.button("option",L,M)}F.Widget.prototype._setOption.apply(this,arguments)},refresh:function(){var L=this.element.css("direction")==="rtl";this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return F(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(L?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(L?"ui-corner-left":"ui-corner-right").end().end()},destroy:function(){this.element.removeClass("ui-buttonset");this.buttons.map(function(){return F(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy");F.Widget.prototype.destroy.call(this)}})}(jQuery));
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.datepicker.js' */
/*
 * jQuery UI Datepicker 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Datepicker
 *
 * Depends:
 *	jquery.ui.core.js
 */
(function($,undefined){$.extend($.ui,{datepicker:{version:"1.8.24"}});var PROP_NAME="datepicker";var dpuuid=new Date().getTime();var instActive;function Datepicker(){this.debug=false;this._curInst=null;this._keyEvent=false;this._disabledInputs=[];this._datepickerShowing=false;this._inDialog=false;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass="ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass="ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:false,showMonthAfterYear:false,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:false,changeYear:false,yearRange:"c-10:c+10",showOtherMonths:false,selectOtherMonths:false,showWeek:false,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:true,showButtonPanel:false,autoSize:false,disabled:false};$.extend(this._defaults,this.regional[""]);this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){if(this.debug){console.log.apply("",arguments)}},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(settings){extendRemove(this._defaults,settings||{});return this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase();var inline=(nodeName=="div"||nodeName=="span");if(!target.id){this.uuid+=1;target.id="dp"+this.uuid}var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{});if(nodeName=="input"){this._connectDatepicker(target,inst)}else{if(inline){this._inlineDatepicker(target,inst)}}},_newInst:function(target,inline){var id=target[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:id,input:target,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:inline,dpDiv:(!inline?this.dpDiv:bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')))}},_connectDatepicker:function(target,inst){var input=$(target);inst.append=$([]);inst.trigger=$([]);if(input.hasClass(this.markerClassName)){return }this._attachments(input,inst);input.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(event,key,value){inst.settings[key]=value}).bind("getData.datepicker",function(event,key){return this._get(inst,key)});this._autoSize(inst);$.data(target,PROP_NAME,inst);if(inst.settings.disabled){this._disableDatepicker(target)}},_attachments:function(input,inst){var appendText=this._get(inst,"appendText");var isRTL=this._get(inst,"isRTL");if(inst.append){inst.append.remove()}if(appendText){inst.append=$('<span class="'+this._appendClass+'">'+appendText+"</span>");input[isRTL?"before":"after"](inst.append)}input.unbind("focus",this._showDatepicker);if(inst.trigger){inst.trigger.remove()}var showOn=this._get(inst,"showOn");if(showOn=="focus"||showOn=="both"){input.focus(this._showDatepicker)}if(showOn=="button"||showOn=="both"){var buttonText=this._get(inst,"buttonText");var buttonImage=this._get(inst,"buttonImage");inst.trigger=$(this._get(inst,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:buttonImage,alt:buttonText,title:buttonText}):$('<button type="button"></button>').addClass(this._triggerClass).html(buttonImage==""?buttonText:$("<img/>").attr({src:buttonImage,alt:buttonText,title:buttonText})));input[isRTL?"before":"after"](inst.trigger);inst.trigger.click(function(){if($.datepicker._datepickerShowing&&$.datepicker._lastInput==input[0]){$.datepicker._hideDatepicker()}else{if($.datepicker._datepickerShowing&&$.datepicker._lastInput!=input[0]){$.datepicker._hideDatepicker();$.datepicker._showDatepicker(input[0])}else{$.datepicker._showDatepicker(input[0])}}return false})}},_autoSize:function(inst){if(this._get(inst,"autoSize")&&!inst.inline){var date=new Date(2009,12-1,20);var dateFormat=this._get(inst,"dateFormat");if(dateFormat.match(/[DM]/)){var findMax=function(names){var max=0;var maxI=0;for(var i=0;i<names.length;i++){if(names[i].length>max){max=names[i].length;maxI=i}}return maxI};date.setMonth(findMax(this._get(inst,(dateFormat.match(/MM/)?"monthNames":"monthNamesShort"))));date.setDate(findMax(this._get(inst,(dateFormat.match(/DD/)?"dayNames":"dayNamesShort")))+20-date.getDay())}inst.input.attr("size",this._formatDate(inst,date).length)}},_inlineDatepicker:function(target,inst){var divSpan=$(target);if(divSpan.hasClass(this.markerClassName)){return }divSpan.addClass(this.markerClassName).append(inst.dpDiv).bind("setData.datepicker",function(event,key,value){inst.settings[key]=value}).bind("getData.datepicker",function(event,key){return this._get(inst,key)});$.data(target,PROP_NAME,inst);this._setDate(inst,this._getDefaultDate(inst),true);this._updateDatepicker(inst);this._updateAlternate(inst);if(inst.settings.disabled){this._disableDatepicker(target)}inst.dpDiv.css("display","block")},_dialogDatepicker:function(input,date,onSelect,settings,pos){var inst=this._dialogInst;if(!inst){this.uuid+=1;var id="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+id+'" style="position: absolute; top: -100px; width: 0px;"/>');this._dialogInput.keydown(this._doKeyDown);$("body").append(this._dialogInput);inst=this._dialogInst=this._newInst(this._dialogInput,false);inst.settings={};$.data(this._dialogInput[0],PROP_NAME,inst)}extendRemove(inst.settings,settings||{});date=(date&&date.constructor==Date?this._formatDate(inst,date):date);this._dialogInput.val(date);this._pos=(pos?(pos.length?pos:[pos.pageX,pos.pageY]):null);if(!this._pos){var browserWidth=document.documentElement.clientWidth;var browserHeight=document.documentElement.clientHeight;var scrollX=document.documentElement.scrollLeft||document.body.scrollLeft;var scrollY=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[(browserWidth/2)-100+scrollX,(browserHeight/2)-150+scrollY]}this._dialogInput.css("left",(this._pos[0]+20)+"px").css("top",this._pos[1]+"px");inst.settings.onSelect=onSelect;this._inDialog=true;this.dpDiv.addClass(this._dialogClass);this._showDatepicker(this._dialogInput[0]);if($.blockUI){$.blockUI(this.dpDiv)}$.data(this._dialogInput[0],PROP_NAME,inst);return this},_destroyDatepicker:function(target){var $target=$(target);var inst=$.data(target,PROP_NAME);if(!$target.hasClass(this.markerClassName)){return }var nodeName=target.nodeName.toLowerCase();$.removeData(target,PROP_NAME);if(nodeName=="input"){inst.append.remove();inst.trigger.remove();$target.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)}else{if(nodeName=="div"||nodeName=="span"){$target.removeClass(this.markerClassName).empty()}}},_enableDatepicker:function(target){var $target=$(target);var inst=$.data(target,PROP_NAME);if(!$target.hasClass(this.markerClassName)){return }var nodeName=target.nodeName.toLowerCase();if(nodeName=="input"){target.disabled=false;inst.trigger.filter("button").each(function(){this.disabled=false}).end().filter("img").css({opacity:"1.0",cursor:""})}else{if(nodeName=="div"||nodeName=="span"){var inline=$target.children("."+this._inlineClass);inline.children().removeClass("ui-state-disabled");inline.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")}}this._disabledInputs=$.map(this._disabledInputs,function(value){return(value==target?null:value)})},_disableDatepicker:function(target){var $target=$(target);var inst=$.data(target,PROP_NAME);if(!$target.hasClass(this.markerClassName)){return }var nodeName=target.nodeName.toLowerCase();if(nodeName=="input"){target.disabled=true;inst.trigger.filter("button").each(function(){this.disabled=true}).end().filter("img").css({opacity:"0.5",cursor:"default"})}else{if(nodeName=="div"||nodeName=="span"){var inline=$target.children("."+this._inlineClass);inline.children().addClass("ui-state-disabled");inline.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled","disabled")}}this._disabledInputs=$.map(this._disabledInputs,function(value){return(value==target?null:value)});this._disabledInputs[this._disabledInputs.length]=target},_isDisabledDatepicker:function(target){if(!target){return false}for(var i=0;i<this._disabledInputs.length;i++){if(this._disabledInputs[i]==target){return true}}return false},_getInst:function(target){try{return $.data(target,PROP_NAME)}catch(err){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(target,name,value){var inst=this._getInst(target);if(arguments.length==2&&typeof name=="string"){return(name=="defaults"?$.extend({},$.datepicker._defaults):(inst?(name=="all"?$.extend({},inst.settings):this._get(inst,name)):null))}var settings=name||{};if(typeof name=="string"){settings={};settings[name]=value}if(inst){if(this._curInst==inst){this._hideDatepicker()}var date=this._getDateDatepicker(target,true);var minDate=this._getMinMaxDate(inst,"min");var maxDate=this._getMinMaxDate(inst,"max");extendRemove(inst.settings,settings);if(minDate!==null&&settings.dateFormat!==undefined&&settings.minDate===undefined){inst.settings.minDate=this._formatDate(inst,minDate)}if(maxDate!==null&&settings.dateFormat!==undefined&&settings.maxDate===undefined){inst.settings.maxDate=this._formatDate(inst,maxDate)}this._attachments($(target),inst);this._autoSize(inst);this._setDate(inst,date);this._updateAlternate(inst);this._updateDatepicker(inst)}},_changeDatepicker:function(target,name,value){this._optionDatepicker(target,name,value)},_refreshDatepicker:function(target){var inst=this._getInst(target);if(inst){this._updateDatepicker(inst)}},_setDateDatepicker:function(target,date){var inst=this._getInst(target);if(inst){this._setDate(inst,date);this._updateDatepicker(inst);this._updateAlternate(inst)}},_getDateDatepicker:function(target,noDefault){var inst=this._getInst(target);if(inst&&!inst.inline){this._setDateFromField(inst,noDefault)}return(inst?this._getDate(inst):null)},_doKeyDown:function(event){var inst=$.datepicker._getInst(event.target);var handled=true;var isRTL=inst.dpDiv.is(".ui-datepicker-rtl");inst._keyEvent=true;if($.datepicker._datepickerShowing){switch(event.keyCode){case 9:$.datepicker._hideDatepicker();handled=false;break;case 13:var sel=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",inst.dpDiv);if(sel[0]){$.datepicker._selectDay(event.target,inst.selectedMonth,inst.selectedYear,sel[0])}var onSelect=$.datepicker._get(inst,"onSelect");if(onSelect){var dateStr=$.datepicker._formatDate(inst);onSelect.apply((inst.input?inst.input[0]:null),[dateStr,inst])}else{$.datepicker._hideDatepicker()}return false;break;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(event.target,(event.ctrlKey?-$.datepicker._get(inst,"stepBigMonths"):-$.datepicker._get(inst,"stepMonths")),"M");break;case 34:$.datepicker._adjustDate(event.target,(event.ctrlKey?+$.datepicker._get(inst,"stepBigMonths"):+$.datepicker._get(inst,"stepMonths")),"M");break;case 35:if(event.ctrlKey||event.metaKey){$.datepicker._clearDate(event.target)}handled=event.ctrlKey||event.metaKey;break;case 36:if(event.ctrlKey||event.metaKey){$.datepicker._gotoToday(event.target)}handled=event.ctrlKey||event.metaKey;break;case 37:if(event.ctrlKey||event.metaKey){$.datepicker._adjustDate(event.target,(isRTL?+1:-1),"D")}handled=event.ctrlKey||event.metaKey;if(event.originalEvent.altKey){$.datepicker._adjustDate(event.target,(event.ctrlKey?-$.datepicker._get(inst,"stepBigMonths"):-$.datepicker._get(inst,"stepMonths")),"M")}break;case 38:if(event.ctrlKey||event.metaKey){$.datepicker._adjustDate(event.target,-7,"D")}handled=event.ctrlKey||event.metaKey;break;case 39:if(event.ctrlKey||event.metaKey){$.datepicker._adjustDate(event.target,(isRTL?-1:+1),"D")}handled=event.ctrlKey||event.metaKey;if(event.originalEvent.altKey){$.datepicker._adjustDate(event.target,(event.ctrlKey?+$.datepicker._get(inst,"stepBigMonths"):+$.datepicker._get(inst,"stepMonths")),"M")}break;case 40:if(event.ctrlKey||event.metaKey){$.datepicker._adjustDate(event.target,+7,"D")}handled=event.ctrlKey||event.metaKey;break;default:handled=false}}else{if(event.keyCode==36&&event.ctrlKey){$.datepicker._showDatepicker(this)}else{handled=false}}if(handled){event.preventDefault();event.stopPropagation()}},_doKeyPress:function(event){var inst=$.datepicker._getInst(event.target);if($.datepicker._get(inst,"constrainInput")){var chars=$.datepicker._possibleChars($.datepicker._get(inst,"dateFormat"));var chr=String.fromCharCode(event.charCode==undefined?event.keyCode:event.charCode);return event.ctrlKey||event.metaKey||(chr<" "||!chars||chars.indexOf(chr)>-1)}},_doKeyUp:function(event){var inst=$.datepicker._getInst(event.target);if(inst.input.val()!=inst.lastVal){try{var date=$.datepicker.parseDate($.datepicker._get(inst,"dateFormat"),(inst.input?inst.input.val():null),$.datepicker._getFormatConfig(inst));if(date){$.datepicker._setDateFromField(inst);$.datepicker._updateAlternate(inst);$.datepicker._updateDatepicker(inst)}}catch(err){$.datepicker.log(err)}}return true},_showDatepicker:function(input){input=input.target||input;if(input.nodeName.toLowerCase()!="input"){input=$("input",input.parentNode)[0]}if($.datepicker._isDisabledDatepicker(input)||$.datepicker._lastInput==input){return }var inst=$.datepicker._getInst(input);if($.datepicker._curInst&&$.datepicker._curInst!=inst){$.datepicker._curInst.dpDiv.stop(true,true);if(inst&&$.datepicker._datepickerShowing){$.datepicker._hideDatepicker($.datepicker._curInst.input[0])}}var beforeShow=$.datepicker._get(inst,"beforeShow");var beforeShowSettings=beforeShow?beforeShow.apply(input,[input,inst]):{};if(beforeShowSettings===false){return }extendRemove(inst.settings,beforeShowSettings);inst.lastVal=null;$.datepicker._lastInput=input;$.datepicker._setDateFromField(inst);if($.datepicker._inDialog){input.value=""}if(!$.datepicker._pos){$.datepicker._pos=$.datepicker._findPos(input);$.datepicker._pos[1]+=input.offsetHeight}var isFixed=false;$(input).parents().each(function(){isFixed|=$(this).css("position")=="fixed";return !isFixed});if(isFixed&&$.browser.opera){$.datepicker._pos[0]-=document.documentElement.scrollLeft;$.datepicker._pos[1]-=document.documentElement.scrollTop}var offset={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null;inst.dpDiv.empty();inst.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});$.datepicker._updateDatepicker(inst);offset=$.datepicker._checkOffset(inst,offset,isFixed);inst.dpDiv.css({position:($.datepicker._inDialog&&$.blockUI?"static":(isFixed?"fixed":"absolute")),display:"none",left:offset.left+"px",top:offset.top+"px"});if(!inst.inline){var showAnim=$.datepicker._get(inst,"showAnim");var duration=$.datepicker._get(inst,"duration");var postProcess=function(){var cover=inst.dpDiv.find("iframe.ui-datepicker-cover");if(!!cover.length){var borders=$.datepicker._getBorders(inst.dpDiv);cover.css({left:-borders[0],top:-borders[1],width:inst.dpDiv.outerWidth(),height:inst.dpDiv.outerHeight()})}};inst.dpDiv.zIndex($(input).zIndex()+1);$.datepicker._datepickerShowing=true;if($.effects&&$.effects[showAnim]){inst.dpDiv.show(showAnim,$.datepicker._get(inst,"showOptions"),duration,postProcess)}else{inst.dpDiv[showAnim||"show"]((showAnim?duration:null),postProcess)}if(!showAnim||!duration){postProcess()}if(inst.input.is(":visible")&&!inst.input.is(":disabled")){inst.input.focus()}$.datepicker._curInst=inst}},_updateDatepicker:function(inst){var self=this;self.maxRows=4;var borders=$.datepicker._getBorders(inst.dpDiv);instActive=inst;inst.dpDiv.empty().append(this._generateHTML(inst));this._attachHandlers(inst);var cover=inst.dpDiv.find("iframe.ui-datepicker-cover");if(!!cover.length){cover.css({left:-borders[0],top:-borders[1],width:inst.dpDiv.outerWidth(),height:inst.dpDiv.outerHeight()})}inst.dpDiv.find("."+this._dayOverClass+" a").mouseover();var numMonths=this._getNumberOfMonths(inst);var cols=numMonths[1];var width=17;inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");if(cols>1){inst.dpDiv.addClass("ui-datepicker-multi-"+cols).css("width",(width*cols)+"em")}inst.dpDiv[(numMonths[0]!=1||numMonths[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi");inst.dpDiv[(this._get(inst,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");if(inst==$.datepicker._curInst&&$.datepicker._datepickerShowing&&inst.input&&inst.input.is(":visible")&&!inst.input.is(":disabled")&&inst.input[0]!=document.activeElement){inst.input.focus()}if(inst.yearshtml){var origyearshtml=inst.yearshtml;setTimeout(function(){if(origyearshtml===inst.yearshtml&&inst.yearshtml){inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml)}origyearshtml=inst.yearshtml=null},0)}},_getBorders:function(elem){var convert=function(value){return{thin:1,medium:2,thick:3}[value]||value};return[parseFloat(convert(elem.css("border-left-width"))),parseFloat(convert(elem.css("border-top-width")))]},_checkOffset:function(inst,offset,isFixed){var dpWidth=inst.dpDiv.outerWidth();var dpHeight=inst.dpDiv.outerHeight();var inputWidth=inst.input?inst.input.outerWidth():0;var inputHeight=inst.input?inst.input.outerHeight():0;var viewWidth=document.documentElement.clientWidth+(isFixed?0:$(document).scrollLeft());var viewHeight=document.documentElement.clientHeight+(isFixed?0:$(document).scrollTop());offset.left-=(this._get(inst,"isRTL")?(dpWidth-inputWidth):0);offset.left-=(isFixed&&offset.left==inst.input.offset().left)?$(document).scrollLeft():0;offset.top-=(isFixed&&offset.top==(inst.input.offset().top+inputHeight))?$(document).scrollTop():0;offset.left-=Math.min(offset.left,(offset.left+dpWidth>viewWidth&&viewWidth>dpWidth)?Math.abs(offset.left+dpWidth-viewWidth):0);offset.top-=Math.min(offset.top,(offset.top+dpHeight>viewHeight&&viewHeight>dpHeight)?Math.abs(dpHeight+inputHeight):0);return offset},_findPos:function(obj){var inst=this._getInst(obj);var isRTL=this._get(inst,"isRTL");while(obj&&(obj.type=="hidden"||obj.nodeType!=1||$.expr.filters.hidden(obj))){obj=obj[isRTL?"previousSibling":"nextSibling"]}var position=$(obj).offset();return[position.left,position.top]},_hideDatepicker:function(input){var inst=this._curInst;if(!inst||(input&&inst!=$.data(input,PROP_NAME))){return }if(this._datepickerShowing){var showAnim=this._get(inst,"showAnim");var duration=this._get(inst,"duration");var postProcess=function(){$.datepicker._tidyDialog(inst)};if($.effects&&$.effects[showAnim]){inst.dpDiv.hide(showAnim,$.datepicker._get(inst,"showOptions"),duration,postProcess)}else{inst.dpDiv[(showAnim=="slideDown"?"slideUp":(showAnim=="fadeIn"?"fadeOut":"hide"))]((showAnim?duration:null),postProcess)}if(!showAnim){postProcess()}this._datepickerShowing=false;var onClose=this._get(inst,"onClose");if(onClose){onClose.apply((inst.input?inst.input[0]:null),[(inst.input?inst.input.val():""),inst])}this._lastInput=null;if(this._inDialog){this._dialogInput.css({position:"absolute",left:"0",top:"-100px"});if($.blockUI){$.unblockUI();$("body").append(this.dpDiv)}}this._inDialog=false}},_tidyDialog:function(inst){inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(event){if(!$.datepicker._curInst){return }var $target=$(event.target),inst=$.datepicker._getInst($target[0]);if((($target[0].id!=$.datepicker._mainDivId&&$target.parents("#"+$.datepicker._mainDivId).length==0&&!$target.hasClass($.datepicker.markerClassName)&&!$target.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&!($.datepicker._inDialog&&$.blockUI)))||($target.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=inst)){$.datepicker._hideDatepicker()}},_adjustDate:function(id,offset,period){var target=$(id);var inst=this._getInst(target[0]);if(this._isDisabledDatepicker(target[0])){return }this._adjustInstDate(inst,offset+(period=="M"?this._get(inst,"showCurrentAtPos"):0),period);this._updateDatepicker(inst)},_gotoToday:function(id){var target=$(id);var inst=this._getInst(target[0]);if(this._get(inst,"gotoCurrent")&&inst.currentDay){inst.selectedDay=inst.currentDay;inst.drawMonth=inst.selectedMonth=inst.currentMonth;inst.drawYear=inst.selectedYear=inst.currentYear}else{var date=new Date();inst.selectedDay=date.getDate();inst.drawMonth=inst.selectedMonth=date.getMonth();inst.drawYear=inst.selectedYear=date.getFullYear()}this._notifyChange(inst);this._adjustDate(target)},_selectMonthYear:function(id,select,period){var target=$(id);var inst=this._getInst(target[0]);inst["selected"+(period=="M"?"Month":"Year")]=inst["draw"+(period=="M"?"Month":"Year")]=parseInt(select.options[select.selectedIndex].value,10);this._notifyChange(inst);this._adjustDate(target)},_selectDay:function(id,month,year,td){var target=$(id);if($(td).hasClass(this._unselectableClass)||this._isDisabledDatepicker(target[0])){return }var inst=this._getInst(target[0]);inst.selectedDay=inst.currentDay=$("a",td).html();inst.selectedMonth=inst.currentMonth=month;inst.selectedYear=inst.currentYear=year;this._selectDate(id,this._formatDate(inst,inst.currentDay,inst.currentMonth,inst.currentYear))},_clearDate:function(id){var target=$(id);var inst=this._getInst(target[0]);this._selectDate(target,"")},_selectDate:function(id,dateStr){var target=$(id);var inst=this._getInst(target[0]);dateStr=(dateStr!=null?dateStr:this._formatDate(inst));if(inst.input){inst.input.val(dateStr)}this._updateAlternate(inst);var onSelect=this._get(inst,"onSelect");if(onSelect){onSelect.apply((inst.input?inst.input[0]:null),[dateStr,inst])}else{if(inst.input){inst.input.trigger("change")}}if(inst.inline){this._updateDatepicker(inst)}else{this._hideDatepicker();this._lastInput=inst.input[0];if(typeof (inst.input[0])!="object"){inst.input.focus()}this._lastInput=null}},_updateAlternate:function(inst){var altField=this._get(inst,"altField");if(altField){var altFormat=this._get(inst,"altFormat")||this._get(inst,"dateFormat");var date=this._getDate(inst);var dateStr=this.formatDate(altFormat,date,this._getFormatConfig(inst));$(altField).each(function(){$(this).val(dateStr)})}},noWeekends:function(date){var day=date.getDay();return[(day>0&&day<6),""]},iso8601Week:function(date){var checkDate=new Date(date.getTime());checkDate.setDate(checkDate.getDate()+4-(checkDate.getDay()||7));var time=checkDate.getTime();checkDate.setMonth(0);checkDate.setDate(1);return Math.floor(Math.round((time-checkDate)/86400000)/7)+1},parseDate:function(format,value,settings){if(format==null||value==null){throw"Invalid arguments"}value=(typeof value=="object"?value.toString():value+"");if(value==""){return null}var shortYearCutoff=(settings?settings.shortYearCutoff:null)||this._defaults.shortYearCutoff;shortYearCutoff=(typeof shortYearCutoff!="string"?shortYearCutoff:new Date().getFullYear()%100+parseInt(shortYearCutoff,10));var dayNamesShort=(settings?settings.dayNamesShort:null)||this._defaults.dayNamesShort;var dayNames=(settings?settings.dayNames:null)||this._defaults.dayNames;var monthNamesShort=(settings?settings.monthNamesShort:null)||this._defaults.monthNamesShort;var monthNames=(settings?settings.monthNames:null)||this._defaults.monthNames;var year=-1;var month=-1;var day=-1;var doy=-1;var literal=false;var lookAhead=function(match){var matches=(iFormat+1<format.length&&format.charAt(iFormat+1)==match);if(matches){iFormat++}return matches};var getNumber=function(match){var isDoubled=lookAhead(match);var size=(match=="@"?14:(match=="!"?20:(match=="y"&&isDoubled?4:(match=="o"?3:2))));var digits=new RegExp("^\\d{1,"+size+"}");var num=value.substring(iValue).match(digits);if(!num){throw"Missing number at position "+iValue}iValue+=num[0].length;return parseInt(num[0],10)};var getName=function(match,shortNames,longNames){var names=$.map(lookAhead(match)?longNames:shortNames,function(v,k){return[[k,v]]}).sort(function(a,b){return -(a[1].length-b[1].length)});var index=-1;$.each(names,function(i,pair){var name=pair[1];if(value.substr(iValue,name.length).toLowerCase()==name.toLowerCase()){index=pair[0];iValue+=name.length;return false}});if(index!=-1){return index+1}else{throw"Unknown name at position "+iValue}};var checkLiteral=function(){if(value.charAt(iValue)!=format.charAt(iFormat)){throw"Unexpected literal at position "+iValue}iValue++};var iValue=0;for(var iFormat=0;iFormat<format.length;iFormat++){if(literal){if(format.charAt(iFormat)=="'"&&!lookAhead("'")){literal=false}else{checkLiteral()}}else{switch(format.charAt(iFormat)){case"d":day=getNumber("d");break;case"D":getName("D",dayNamesShort,dayNames);break;case"o":doy=getNumber("o");break;case"m":month=getNumber("m");break;case"M":month=getName("M",monthNamesShort,monthNames);break;case"y":year=getNumber("y");break;case"@":var date=new Date(getNumber("@"));year=date.getFullYear();month=date.getMonth()+1;day=date.getDate();break;case"!":var date=new Date((getNumber("!")-this._ticksTo1970)/10000);year=date.getFullYear();month=date.getMonth()+1;day=date.getDate();break;case"'":if(lookAhead("'")){checkLiteral()}else{literal=true}break;default:checkLiteral()}}}if(iValue<value.length){throw"Extra/unparsed characters found in date: "+value.substring(iValue)}if(year==-1){year=new Date().getFullYear()}else{if(year<100){year+=new Date().getFullYear()-new Date().getFullYear()%100+(year<=shortYearCutoff?0:-100)}}if(doy>-1){month=1;day=doy;do{var dim=this._getDaysInMonth(year,month-1);if(day<=dim){break}month++;day-=dim}while(true)}var date=this._daylightSavingAdjust(new Date(year,month-1,day));if(date.getFullYear()!=year||date.getMonth()+1!=month||date.getDate()!=day){throw"Invalid date"}return date},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(((1970-1)*365+Math.floor(1970/4)-Math.floor(1970/100)+Math.floor(1970/400))*24*60*60*10000000),formatDate:function(format,date,settings){if(!date){return""}var dayNamesShort=(settings?settings.dayNamesShort:null)||this._defaults.dayNamesShort;var dayNames=(settings?settings.dayNames:null)||this._defaults.dayNames;var monthNamesShort=(settings?settings.monthNamesShort:null)||this._defaults.monthNamesShort;var monthNames=(settings?settings.monthNames:null)||this._defaults.monthNames;var lookAhead=function(match){var matches=(iFormat+1<format.length&&format.charAt(iFormat+1)==match);if(matches){iFormat++}return matches};var formatNumber=function(match,value,len){var num=""+value;if(lookAhead(match)){while(num.length<len){num="0"+num}}return num};var formatName=function(match,value,shortNames,longNames){return(lookAhead(match)?longNames[value]:shortNames[value])};var output="";var literal=false;if(date){for(var iFormat=0;iFormat<format.length;iFormat++){if(literal){if(format.charAt(iFormat)=="'"&&!lookAhead("'")){literal=false}else{output+=format.charAt(iFormat)}}else{switch(format.charAt(iFormat)){case"d":output+=formatNumber("d",date.getDate(),2);break;case"D":output+=formatName("D",date.getDay(),dayNamesShort,dayNames);break;case"o":output+=formatNumber("o",Math.round((new Date(date.getFullYear(),date.getMonth(),date.getDate()).getTime()-new Date(date.getFullYear(),0,0).getTime())/86400000),3);break;case"m":output+=formatNumber("m",date.getMonth()+1,2);break;case"M":output+=formatName("M",date.getMonth(),monthNamesShort,monthNames);break;case"y":output+=(lookAhead("y")?date.getFullYear():(date.getYear()%100<10?"0":"")+date.getYear()%100);break;case"@":output+=date.getTime();break;case"!":output+=date.getTime()*10000+this._ticksTo1970;break;case"'":if(lookAhead("'")){output+="'"}else{literal=true}break;default:output+=format.charAt(iFormat)}}}}return output},_possibleChars:function(format){var chars="";var literal=false;var lookAhead=function(match){var matches=(iFormat+1<format.length&&format.charAt(iFormat+1)==match);if(matches){iFormat++}return matches};for(var iFormat=0;iFormat<format.length;iFormat++){if(literal){if(format.charAt(iFormat)=="'"&&!lookAhead("'")){literal=false}else{chars+=format.charAt(iFormat)}}else{switch(format.charAt(iFormat)){case"d":case"m":case"y":case"@":chars+="0123456789";break;case"D":case"M":return null;case"'":if(lookAhead("'")){chars+="'"}else{literal=true}break;default:chars+=format.charAt(iFormat)}}}return chars},_get:function(inst,name){return inst.settings[name]!==undefined?inst.settings[name]:this._defaults[name]},_setDateFromField:function(inst,noDefault){if(inst.input.val()==inst.lastVal){return }var dateFormat=this._get(inst,"dateFormat");var dates=inst.lastVal=inst.input?inst.input.val():null;var date,defaultDate;date=defaultDate=this._getDefaultDate(inst);var settings=this._getFormatConfig(inst);try{date=this.parseDate(dateFormat,dates,settings)||defaultDate}catch(event){this.log(event);dates=(noDefault?"":dates)}inst.selectedDay=date.getDate();inst.drawMonth=inst.selectedMonth=date.getMonth();inst.drawYear=inst.selectedYear=date.getFullYear();inst.currentDay=(dates?date.getDate():0);inst.currentMonth=(dates?date.getMonth():0);inst.currentYear=(dates?date.getFullYear():0);this._adjustInstDate(inst)},_getDefaultDate:function(inst){return this._restrictMinMax(inst,this._determineDate(inst,this._get(inst,"defaultDate"),new Date()))},_determineDate:function(inst,date,defaultDate){var offsetNumeric=function(offset){var date=new Date();date.setDate(date.getDate()+offset);return date};var offsetString=function(offset){try{return $.datepicker.parseDate($.datepicker._get(inst,"dateFormat"),offset,$.datepicker._getFormatConfig(inst))}catch(e){}var date=(offset.toLowerCase().match(/^c/)?$.datepicker._getDate(inst):null)||new Date();var year=date.getFullYear();var month=date.getMonth();var day=date.getDate();var pattern=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;var matches=pattern.exec(offset);while(matches){switch(matches[2]||"d"){case"d":case"D":day+=parseInt(matches[1],10);break;case"w":case"W":day+=parseInt(matches[1],10)*7;break;case"m":case"M":month+=parseInt(matches[1],10);day=Math.min(day,$.datepicker._getDaysInMonth(year,month));break;case"y":case"Y":year+=parseInt(matches[1],10);day=Math.min(day,$.datepicker._getDaysInMonth(year,month));break}matches=pattern.exec(offset)}return new Date(year,month,day)};var newDate=(date==null||date===""?defaultDate:(typeof date=="string"?offsetString(date):(typeof date=="number"?(isNaN(date)?defaultDate:offsetNumeric(date)):new Date(date.getTime()))));newDate=(newDate&&newDate.toString()=="Invalid Date"?defaultDate:newDate);if(newDate){newDate.setHours(0);newDate.setMinutes(0);newDate.setSeconds(0);newDate.setMilliseconds(0)}return this._daylightSavingAdjust(newDate)},_daylightSavingAdjust:function(date){if(!date){return null}date.setHours(date.getHours()>12?date.getHours()+2:0);return date},_setDate:function(inst,date,noChange){var clear=!date;var origMonth=inst.selectedMonth;var origYear=inst.selectedYear;var newDate=this._restrictMinMax(inst,this._determineDate(inst,date,new Date()));inst.selectedDay=inst.currentDay=newDate.getDate();inst.drawMonth=inst.selectedMonth=inst.currentMonth=newDate.getMonth();inst.drawYear=inst.selectedYear=inst.currentYear=newDate.getFullYear();if((origMonth!=inst.selectedMonth||origYear!=inst.selectedYear)&&!noChange){this._notifyChange(inst)}this._adjustInstDate(inst);if(inst.input){inst.input.val(clear?"":this._formatDate(inst))}},_getDate:function(inst){var startDate=(!inst.currentYear||(inst.input&&inst.input.val()=="")?null:this._daylightSavingAdjust(new Date(inst.currentYear,inst.currentMonth,inst.currentDay)));return startDate},_attachHandlers:function(inst){var stepMonths=this._get(inst,"stepMonths");var id="#"+inst.id.replace(/\\\\/g,"\\");inst.dpDiv.find("[data-handler]").map(function(){var handler={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(id,-stepMonths,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(id,+stepMonths,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(id)},selectDay:function(){window["DP_jQuery_"+dpuuid].datepicker._selectDay(id,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this);return false},selectMonth:function(){window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(id,this,"M");return false},selectYear:function(){window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(id,this,"Y");return false}};$(this).bind(this.getAttribute("data-event"),handler[this.getAttribute("data-handler")])})},_generateHTML:function(inst){var today=new Date();today=this._daylightSavingAdjust(new Date(today.getFullYear(),today.getMonth(),today.getDate()));var isRTL=this._get(inst,"isRTL");var showButtonPanel=this._get(inst,"showButtonPanel");var hideIfNoPrevNext=this._get(inst,"hideIfNoPrevNext");var navigationAsDateFormat=this._get(inst,"navigationAsDateFormat");var numMonths=this._getNumberOfMonths(inst);var showCurrentAtPos=this._get(inst,"showCurrentAtPos");var stepMonths=this._get(inst,"stepMonths");var isMultiMonth=(numMonths[0]!=1||numMonths[1]!=1);var currentDate=this._daylightSavingAdjust((!inst.currentDay?new Date(9999,9,9):new Date(inst.currentYear,inst.currentMonth,inst.currentDay)));var minDate=this._getMinMaxDate(inst,"min");var maxDate=this._getMinMaxDate(inst,"max");var drawMonth=inst.drawMonth-showCurrentAtPos;var drawYear=inst.drawYear;if(drawMonth<0){drawMonth+=12;drawYear--}if(maxDate){var maxDraw=this._daylightSavingAdjust(new Date(maxDate.getFullYear(),maxDate.getMonth()-(numMonths[0]*numMonths[1])+1,maxDate.getDate()));maxDraw=(minDate&&maxDraw<minDate?minDate:maxDraw);while(this._daylightSavingAdjust(new Date(drawYear,drawMonth,1))>maxDraw){drawMonth--;if(drawMonth<0){drawMonth=11;drawYear--}}}inst.drawMonth=drawMonth;inst.drawYear=drawYear;var prevText=this._get(inst,"prevText");prevText=(!navigationAsDateFormat?prevText:this.formatDate(prevText,this._daylightSavingAdjust(new Date(drawYear,drawMonth-stepMonths,1)),this._getFormatConfig(inst)));var prev=(this._canAdjustMonth(inst,-1,drawYear,drawMonth)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+prevText+'"><span class="ui-icon ui-icon-circle-triangle-'+(isRTL?"e":"w")+'">'+prevText+"</span></a>":(hideIfNoPrevNext?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+prevText+'"><span class="ui-icon ui-icon-circle-triangle-'+(isRTL?"e":"w")+'">'+prevText+"</span></a>"));var nextText=this._get(inst,"nextText");nextText=(!navigationAsDateFormat?nextText:this.formatDate(nextText,this._daylightSavingAdjust(new Date(drawYear,drawMonth+stepMonths,1)),this._getFormatConfig(inst)));var next=(this._canAdjustMonth(inst,+1,drawYear,drawMonth)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+nextText+'"><span class="ui-icon ui-icon-circle-triangle-'+(isRTL?"w":"e")+'">'+nextText+"</span></a>":(hideIfNoPrevNext?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+nextText+'"><span class="ui-icon ui-icon-circle-triangle-'+(isRTL?"w":"e")+'">'+nextText+"</span></a>"));var currentText=this._get(inst,"currentText");var gotoDate=(this._get(inst,"gotoCurrent")&&inst.currentDay?currentDate:today);currentText=(!navigationAsDateFormat?currentText:this.formatDate(currentText,gotoDate,this._getFormatConfig(inst)));var controls=(!inst.inline?'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(inst,"closeText")+"</button>":"");var buttonPanel=(showButtonPanel)?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(isRTL?controls:"")+(this._isInRange(inst,gotoDate)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+currentText+"</button>":"")+(isRTL?"":controls)+"</div>":"";var firstDay=parseInt(this._get(inst,"firstDay"),10);firstDay=(isNaN(firstDay)?0:firstDay);var showWeek=this._get(inst,"showWeek");var dayNames=this._get(inst,"dayNames");var dayNamesShort=this._get(inst,"dayNamesShort");var dayNamesMin=this._get(inst,"dayNamesMin");var monthNames=this._get(inst,"monthNames");var monthNamesShort=this._get(inst,"monthNamesShort");var beforeShowDay=this._get(inst,"beforeShowDay");var showOtherMonths=this._get(inst,"showOtherMonths");var selectOtherMonths=this._get(inst,"selectOtherMonths");var calculateWeek=this._get(inst,"calculateWeek")||this.iso8601Week;var defaultDate=this._getDefaultDate(inst);var html="";for(var row=0;row<numMonths[0];row++){var group="";this.maxRows=4;for(var col=0;col<numMonths[1];col++){var selectedDate=this._daylightSavingAdjust(new Date(drawYear,drawMonth,inst.selectedDay));var cornerClass=" ui-corner-all";var calender="";if(isMultiMonth){calender+='<div class="ui-datepicker-group';if(numMonths[1]>1){switch(col){case 0:calender+=" ui-datepicker-group-first";cornerClass=" ui-corner-"+(isRTL?"right":"left");break;case numMonths[1]-1:calender+=" ui-datepicker-group-last";cornerClass=" ui-corner-"+(isRTL?"left":"right");break;default:calender+=" ui-datepicker-group-middle";cornerClass="";break}}calender+='">'}calender+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+cornerClass+'">'+(/all|left/.test(cornerClass)&&row==0?(isRTL?next:prev):"")+(/all|right/.test(cornerClass)&&row==0?(isRTL?prev:next):"")+this._generateMonthYearHeader(inst,drawMonth,drawYear,minDate,maxDate,row>0||col>0,monthNames,monthNamesShort)+'</div><table class="ui-datepicker-calendar"><thead><tr>';var thead=(showWeek?'<th class="ui-datepicker-week-col">'+this._get(inst,"weekHeader")+"</th>":"");for(var dow=0;dow<7;dow++){var day=(dow+firstDay)%7;thead+="<th"+((dow+firstDay+6)%7>=5?' class="ui-datepicker-week-end"':"")+'><span title="'+dayNames[day]+'">'+dayNamesMin[day]+"</span></th>"}calender+=thead+"</tr></thead><tbody>";var daysInMonth=this._getDaysInMonth(drawYear,drawMonth);if(drawYear==inst.selectedYear&&drawMonth==inst.selectedMonth){inst.selectedDay=Math.min(inst.selectedDay,daysInMonth)}var leadDays=(this._getFirstDayOfMonth(drawYear,drawMonth)-firstDay+7)%7;var curRows=Math.ceil((leadDays+daysInMonth)/7);var numRows=(isMultiMonth?this.maxRows>curRows?this.maxRows:curRows:curRows);this.maxRows=numRows;var printDate=this._daylightSavingAdjust(new Date(drawYear,drawMonth,1-leadDays));for(var dRow=0;dRow<numRows;dRow++){calender+="<tr>";var tbody=(!showWeek?"":'<td class="ui-datepicker-week-col">'+this._get(inst,"calculateWeek")(printDate)+"</td>");for(var dow=0;dow<7;dow++){var daySettings=(beforeShowDay?beforeShowDay.apply((inst.input?inst.input[0]:null),[printDate]):[true,""]);var otherMonth=(printDate.getMonth()!=drawMonth);var unselectable=(otherMonth&&!selectOtherMonths)||!daySettings[0]||(minDate&&printDate<minDate)||(maxDate&&printDate>maxDate);tbody+='<td class="'+((dow+firstDay+6)%7>=5?" ui-datepicker-week-end":"")+(otherMonth?" ui-datepicker-other-month":"")+((printDate.getTime()==selectedDate.getTime()&&drawMonth==inst.selectedMonth&&inst._keyEvent)||(defaultDate.getTime()==printDate.getTime()&&defaultDate.getTime()==selectedDate.getTime())?" "+this._dayOverClass:"")+(unselectable?" "+this._unselectableClass+" ui-state-disabled":"")+(otherMonth&&!showOtherMonths?"":" "+daySettings[1]+(printDate.getTime()==currentDate.getTime()?" "+this._currentClass:"")+(printDate.getTime()==today.getTime()?" ui-datepicker-today":""))+'"'+((!otherMonth||showOtherMonths)&&daySettings[2]?' title="'+daySettings[2]+'"':"")+(unselectable?"":' data-handler="selectDay" data-event="click" data-month="'+printDate.getMonth()+'" data-year="'+printDate.getFullYear()+'"')+">"+(otherMonth&&!showOtherMonths?"&#xa0;":(unselectable?'<span class="ui-state-default">'+printDate.getDate()+"</span>":'<a class="ui-state-default'+(printDate.getTime()==today.getTime()?" ui-state-highlight":"")+(printDate.getTime()==currentDate.getTime()?" ui-state-active":"")+(otherMonth?" ui-priority-secondary":"")+'" href="#">'+printDate.getDate()+"</a>"))+"</td>";printDate.setDate(printDate.getDate()+1);printDate=this._daylightSavingAdjust(printDate)}calender+=tbody+"</tr>"}drawMonth++;if(drawMonth>11){drawMonth=0;drawYear++}calender+="</tbody></table>"+(isMultiMonth?"</div>"+((numMonths[0]>0&&col==numMonths[1]-1)?'<div class="ui-datepicker-row-break"></div>':""):"");group+=calender}html+=group}html+=buttonPanel+($.browser.msie&&parseInt($.browser.version,10)<7&&!inst.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':"");inst._keyEvent=false;return html},_generateMonthYearHeader:function(inst,drawMonth,drawYear,minDate,maxDate,secondary,monthNames,monthNamesShort){var changeMonth=this._get(inst,"changeMonth");var changeYear=this._get(inst,"changeYear");var showMonthAfterYear=this._get(inst,"showMonthAfterYear");var html='<div class="ui-datepicker-title">';var monthHtml="";if(secondary||!changeMonth){monthHtml+='<span class="ui-datepicker-month">'+monthNames[drawMonth]+"</span>"}else{var inMinYear=(minDate&&minDate.getFullYear()==drawYear);var inMaxYear=(maxDate&&maxDate.getFullYear()==drawYear);monthHtml+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var month=0;month<12;month++){if((!inMinYear||month>=minDate.getMonth())&&(!inMaxYear||month<=maxDate.getMonth())){monthHtml+='<option value="'+month+'"'+(month==drawMonth?' selected="selected"':"")+">"+monthNamesShort[month]+"</option>"}}monthHtml+="</select>"}if(!showMonthAfterYear){html+=monthHtml+(secondary||!(changeMonth&&changeYear)?"&#xa0;":"")}if(!inst.yearshtml){inst.yearshtml="";if(secondary||!changeYear){html+='<span class="ui-datepicker-year">'+drawYear+"</span>"}else{var years=this._get(inst,"yearRange").split(":");var thisYear=new Date().getFullYear();var determineYear=function(value){var year=(value.match(/c[+-].*/)?drawYear+parseInt(value.substring(1),10):(value.match(/[+-].*/)?thisYear+parseInt(value,10):parseInt(value,10)));return(isNaN(year)?thisYear:year)};var year=determineYear(years[0]);var endYear=Math.max(year,determineYear(years[1]||""));year=(minDate?Math.max(year,minDate.getFullYear()):year);endYear=(maxDate?Math.min(endYear,maxDate.getFullYear()):endYear);inst.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';for(;year<=endYear;year++){inst.yearshtml+='<option value="'+year+'"'+(year==drawYear?' selected="selected"':"")+">"+year+"</option>"}inst.yearshtml+="</select>";html+=inst.yearshtml;inst.yearshtml=null}}html+=this._get(inst,"yearSuffix");if(showMonthAfterYear){html+=(secondary||!(changeMonth&&changeYear)?"&#xa0;":"")+monthHtml}html+="</div>";return html},_adjustInstDate:function(inst,offset,period){var year=inst.drawYear+(period=="Y"?offset:0);var month=inst.drawMonth+(period=="M"?offset:0);var day=Math.min(inst.selectedDay,this._getDaysInMonth(year,month))+(period=="D"?offset:0);var date=this._restrictMinMax(inst,this._daylightSavingAdjust(new Date(year,month,day)));inst.selectedDay=date.getDate();inst.drawMonth=inst.selectedMonth=date.getMonth();inst.drawYear=inst.selectedYear=date.getFullYear();if(period=="M"||period=="Y"){this._notifyChange(inst)}},_restrictMinMax:function(inst,date){var minDate=this._getMinMaxDate(inst,"min");var maxDate=this._getMinMaxDate(inst,"max");var newDate=(minDate&&date<minDate?minDate:date);newDate=(maxDate&&newDate>maxDate?maxDate:newDate);return newDate},_notifyChange:function(inst){var onChange=this._get(inst,"onChangeMonthYear");if(onChange){onChange.apply((inst.input?inst.input[0]:null),[inst.selectedYear,inst.selectedMonth+1,inst])}},_getNumberOfMonths:function(inst){var numMonths=this._get(inst,"numberOfMonths");return(numMonths==null?[1,1]:(typeof numMonths=="number"?[1,numMonths]:numMonths))},_getMinMaxDate:function(inst,minMax){return this._determineDate(inst,this._get(inst,minMax+"Date"),null)},_getDaysInMonth:function(year,month){return 32-this._daylightSavingAdjust(new Date(year,month,32)).getDate()},_getFirstDayOfMonth:function(year,month){return new Date(year,month,1).getDay()},_canAdjustMonth:function(inst,offset,curYear,curMonth){var numMonths=this._getNumberOfMonths(inst);var date=this._daylightSavingAdjust(new Date(curYear,curMonth+(offset<0?offset:numMonths[0]*numMonths[1]),1));if(offset<0){date.setDate(this._getDaysInMonth(date.getFullYear(),date.getMonth()))}return this._isInRange(inst,date)},_isInRange:function(inst,date){var minDate=this._getMinMaxDate(inst,"min");var maxDate=this._getMinMaxDate(inst,"max");return((!minDate||date.getTime()>=minDate.getTime())&&(!maxDate||date.getTime()<=maxDate.getTime()))},_getFormatConfig:function(inst){var shortYearCutoff=this._get(inst,"shortYearCutoff");shortYearCutoff=(typeof shortYearCutoff!="string"?shortYearCutoff:new Date().getFullYear()%100+parseInt(shortYearCutoff,10));return{shortYearCutoff:shortYearCutoff,dayNamesShort:this._get(inst,"dayNamesShort"),dayNames:this._get(inst,"dayNames"),monthNamesShort:this._get(inst,"monthNamesShort"),monthNames:this._get(inst,"monthNames")}},_formatDate:function(inst,day,month,year){if(!day){inst.currentDay=inst.selectedDay;inst.currentMonth=inst.selectedMonth;inst.currentYear=inst.selectedYear}var date=(day?(typeof day=="object"?day:this._daylightSavingAdjust(new Date(year,month,day))):this._daylightSavingAdjust(new Date(inst.currentYear,inst.currentMonth,inst.currentDay)));return this.formatDate(this._get(inst,"dateFormat"),date,this._getFormatConfig(inst))}});function bindHover(dpDiv){var selector="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return dpDiv.bind("mouseout",function(event){var elem=$(event.target).closest(selector);if(!elem.length){return }elem.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(event){var elem=$(event.target).closest(selector);if($.datepicker._isDisabledDatepicker(instActive.inline?dpDiv.parent()[0]:instActive.input[0])||!elem.length){return }elem.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");elem.addClass("ui-state-hover");if(elem.hasClass("ui-datepicker-prev")){elem.addClass("ui-datepicker-prev-hover")}if(elem.hasClass("ui-datepicker-next")){elem.addClass("ui-datepicker-next-hover")}})}function extendRemove(target,props){$.extend(target,props);for(var name in props){if(props[name]==null||props[name]==undefined){target[name]=props[name]}}return target}function isArray(a){return(a&&(($.browser.safari&&typeof a=="object"&&a.length)||(a.constructor&&a.constructor.toString().match(/\Array\(\)/))))}$.fn.datepicker=function(options){if(!this.length){return this}if(!$.datepicker.initialized){$(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv);$.datepicker.initialized=true}var otherArgs=Array.prototype.slice.call(arguments,1);if(typeof options=="string"&&(options=="isDisabled"||options=="getDate"||options=="widget")){return $.datepicker["_"+options+"Datepicker"].apply($.datepicker,[this[0]].concat(otherArgs))}if(options=="option"&&arguments.length==2&&typeof arguments[1]=="string"){return $.datepicker["_"+options+"Datepicker"].apply($.datepicker,[this[0]].concat(otherArgs))}return this.each(function(){typeof options=="string"?$.datepicker["_"+options+"Datepicker"].apply($.datepicker,[this].concat(otherArgs)):$.datepicker._attachDatepicker(this,options)})};$.datepicker=new Datepicker();$.datepicker.initialized=false;$.datepicker.uuid=new Date().getTime();$.datepicker.version="1.8.24";window["DP_jQuery_"+dpuuid]=$})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.dialog.js' */
/*
 * jQuery UI Dialog 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Dialog
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *  jquery.ui.button.js
 *	jquery.ui.draggable.js
 *	jquery.ui.mouse.js
 *	jquery.ui.position.js
 *	jquery.ui.resizable.js
 */
(function(D,E){var B="ui-dialog ui-widget ui-widget-content ui-corner-all ",A={buttons:true,height:true,maxHeight:true,maxWidth:true,minHeight:true,minWidth:true,width:true},C={maxHeight:true,maxWidth:true,minHeight:true,minWidth:true};D.widget("ui.dialog",{options:{autoOpen:true,buttons:{},closeOnEscape:true,closeText:"close",dialogClass:"",draggable:true,hide:null,height:"auto",maxHeight:false,maxWidth:false,minHeight:150,minWidth:150,modal:false,position:{my:"center",at:"center",collision:"fit",using:function(G){var F=D(this).css(G).offset().top;if(F<0){D(this).css("top",G.top-F)}}},resizable:true,show:null,stack:true,title:"",width:300,zIndex:1000},_create:function(){this.originalTitle=this.element.attr("title");if(typeof this.originalTitle!=="string"){this.originalTitle=""}this.options.title=this.options.title||this.originalTitle;var N=this,O=N.options,L=O.title||"&#160;",G=D.ui.dialog.getTitleId(N.element),M=(N.uiDialog=D("<div></div>")).appendTo(document.body).hide().addClass(B+O.dialogClass).css({zIndex:O.zIndex}).attr("tabIndex",-1).css("outline",0).keydown(function(P){if(O.closeOnEscape&&!P.isDefaultPrevented()&&P.keyCode&&P.keyCode===D.ui.keyCode.ESCAPE){N.close(P);P.preventDefault()}}).attr({role:"dialog","aria-labelledby":G}).mousedown(function(P){N.moveToTop(false,P)}),I=N.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(M),H=(N.uiDialogTitlebar=D("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(M),K=D('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role","button").hover(function(){K.addClass("ui-state-hover")},function(){K.removeClass("ui-state-hover")}).focus(function(){K.addClass("ui-state-focus")}).blur(function(){K.removeClass("ui-state-focus")}).click(function(P){N.close(P);return false}).appendTo(H),J=(N.uiDialogTitlebarCloseText=D("<span></span>")).addClass("ui-icon ui-icon-closethick").text(O.closeText).appendTo(K),F=D("<span></span>").addClass("ui-dialog-title").attr("id",G).html(L).prependTo(H);if(D.isFunction(O.beforeclose)&&!D.isFunction(O.beforeClose)){O.beforeClose=O.beforeclose}H.find("*").add(H).disableSelection();if(O.draggable&&D.fn.draggable){N._makeDraggable()}if(O.resizable&&D.fn.resizable){N._makeResizable()}N._createButtons(O.buttons);N._isOpen=false;if(D.fn.bgiframe){M.bgiframe()}},_init:function(){if(this.options.autoOpen){this.open()}},destroy:function(){var F=this;if(F.overlay){F.overlay.destroy()}F.uiDialog.hide();F.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");F.uiDialog.remove();if(F.originalTitle){F.element.attr("title",F.originalTitle)}return F},widget:function(){return this.uiDialog},close:function(I){var F=this,H,G;if(false===F._trigger("beforeClose",I)){return }if(F.overlay){F.overlay.destroy()}F.uiDialog.unbind("keypress.ui-dialog");F._isOpen=false;if(F.options.hide){F.uiDialog.hide(F.options.hide,function(){F._trigger("close",I)})}else{F.uiDialog.hide();F._trigger("close",I)}D.ui.dialog.overlay.resize();if(F.options.modal){H=0;D(".ui-dialog").each(function(){if(this!==F.uiDialog[0]){G=D(this).css("z-index");if(!isNaN(G)){H=Math.max(H,G)}}});D.ui.dialog.maxZ=H}return F},isOpen:function(){return this._isOpen},moveToTop:function(J,I){var F=this,H=F.options,G;if((H.modal&&!J)||(!H.stack&&!H.modal)){return F._trigger("focus",I)}if(H.zIndex>D.ui.dialog.maxZ){D.ui.dialog.maxZ=H.zIndex}if(F.overlay){D.ui.dialog.maxZ+=1;F.overlay.$el.css("z-index",D.ui.dialog.overlay.maxZ=D.ui.dialog.maxZ)}G={scrollTop:F.element.scrollTop(),scrollLeft:F.element.scrollLeft()};D.ui.dialog.maxZ+=1;F.uiDialog.css("z-index",D.ui.dialog.maxZ);F.element.attr(G);F._trigger("focus",I);return F},open:function(){if(this._isOpen){return }var G=this,H=G.options,F=G.uiDialog;G.overlay=H.modal?new D.ui.dialog.overlay(G):null;G._size();G._position(H.position);F.show(H.show);G.moveToTop(true);if(H.modal){F.bind("keydown.ui-dialog",function(K){if(K.keyCode!==D.ui.keyCode.TAB){return }var J=D(":tabbable",this),L=J.filter(":first"),I=J.filter(":last");if(K.target===I[0]&&!K.shiftKey){L.focus(1);return false}else{if(K.target===L[0]&&K.shiftKey){I.focus(1);return false}}})}D(G.element.find(":tabbable").get().concat(F.find(".ui-dialog-buttonpane :tabbable").get().concat(F.get()))).eq(0).focus();G._isOpen=true;G._trigger("open");return G},_createButtons:function(I){var H=this,F=false,G=D("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),J=D("<div></div>").addClass("ui-dialog-buttonset").appendTo(G);H.uiDialog.find(".ui-dialog-buttonpane").remove();if(typeof I==="object"&&I!==null){D.each(I,function(){return !(F=true)})}if(F){D.each(I,function(K,M){M=D.isFunction(M)?{click:M,text:K}:M;var L=D('<button type="button"></button>').click(function(){M.click.apply(H.element[0],arguments)}).appendTo(J);D.each(M,function(N,O){if(N==="click"){return }if(N in L){L[N](O)}else{L.attr(N,O)}});if(D.fn.button){L.button()}});G.appendTo(H.uiDialog)}},_makeDraggable:function(){var F=this,I=F.options,J=D(document),H;function G(K){return{position:K.position,offset:K.offset}}F.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(K,L){H=I.height==="auto"?"auto":D(this).height();D(this).height(D(this).height()).addClass("ui-dialog-dragging");F._trigger("dragStart",K,G(L))},drag:function(K,L){F._trigger("drag",K,G(L))},stop:function(K,L){I.position=[L.position.left-J.scrollLeft(),L.position.top-J.scrollTop()];D(this).removeClass("ui-dialog-dragging").height(H);F._trigger("dragStop",K,G(L));D.ui.dialog.overlay.resize()}})},_makeResizable:function(K){K=(K===E?this.options.resizable:K);var G=this,J=G.options,F=G.uiDialog.css("position"),I=(typeof K==="string"?K:"n,e,s,w,se,sw,ne,nw");function H(L){return{originalPosition:L.originalPosition,originalSize:L.originalSize,position:L.position,size:L.size}}G.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:G.element,maxWidth:J.maxWidth,maxHeight:J.maxHeight,minWidth:J.minWidth,minHeight:G._minHeight(),handles:I,start:function(L,M){D(this).addClass("ui-dialog-resizing");G._trigger("resizeStart",L,H(M))},resize:function(L,M){G._trigger("resize",L,H(M))},stop:function(L,M){D(this).removeClass("ui-dialog-resizing");J.height=D(this).height();J.width=D(this).width();G._trigger("resizeStop",L,H(M));D.ui.dialog.overlay.resize()}}).css("position",F).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var F=this.options;if(F.height==="auto"){return F.minHeight}else{return Math.min(F.minHeight,F.height)}},_position:function(G){var H=[],I=[0,0],F;if(G){if(typeof G==="string"||(typeof G==="object"&&"0" in G)){H=G.split?G.split(" "):[G[0],G[1]];if(H.length===1){H[1]=H[0]}D.each(["left","top"],function(K,J){if(+H[K]===H[K]){I[K]=H[K];H[K]=J}});G={my:H.join(" "),at:H.join(" "),offset:I.join(" ")}}G=D.extend({},D.ui.dialog.prototype.options.position,G)}else{G=D.ui.dialog.prototype.options.position}F=this.uiDialog.is(":visible");if(!F){this.uiDialog.show()}this.uiDialog.css({top:0,left:0}).position(D.extend({of:window},G));if(!F){this.uiDialog.hide()}},_setOptions:function(I){var G=this,F={},H=false;D.each(I,function(J,K){G._setOption(J,K);if(J in A){H=true}if(J in C){F[J]=K}});if(H){this._size()}if(this.uiDialog.is(":data(resizable)")){this.uiDialog.resizable("option",F)}},_setOption:function(I,J){var G=this,F=G.uiDialog;switch(I){case"beforeclose":I="beforeClose";break;case"buttons":G._createButtons(J);break;case"closeText":G.uiDialogTitlebarCloseText.text(""+J);break;case"dialogClass":F.removeClass(G.options.dialogClass).addClass(B+J);break;case"disabled":if(J){F.addClass("ui-dialog-disabled")}else{F.removeClass("ui-dialog-disabled")}break;case"draggable":var H=F.is(":data(draggable)");if(H&&!J){F.draggable("destroy")}if(!H&&J){G._makeDraggable()}break;case"position":G._position(J);break;case"resizable":var K=F.is(":data(resizable)");if(K&&!J){F.resizable("destroy")}if(K&&typeof J==="string"){F.resizable("option","handles",J)}if(!K&&J!==false){G._makeResizable(J)}break;case"title":D(".ui-dialog-title",G.uiDialogTitlebar).html(""+(J||"&#160;"));break}D.Widget.prototype._setOption.apply(G,arguments)},_size:function(){var J=this.options,G,I,F=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0});if(J.minWidth>J.width){J.width=J.minWidth}G=this.uiDialog.css({height:"auto",width:J.width}).height();I=Math.max(0,J.minHeight-G);if(J.height==="auto"){if(D.support.minHeight){this.element.css({minHeight:I,height:"auto"})}else{this.uiDialog.show();var H=this.element.css("height","auto").height();if(!F){this.uiDialog.hide()}this.element.height(Math.max(H,I))}}else{this.element.height(Math.max(J.height-G,0))}if(this.uiDialog.is(":data(resizable)")){this.uiDialog.resizable("option","minHeight",this._minHeight())}}});D.extend(D.ui.dialog,{version:"1.8.24",uuid:0,maxZ:0,getTitleId:function(F){var G=F.attr("id");if(!G){this.uuid+=1;G=this.uuid}return"ui-dialog-title-"+G},overlay:function(F){this.$el=D.ui.dialog.overlay.create(F)}});D.extend(D.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:D.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(F){return F+".dialog-overlay"}).join(" "),create:function(G){if(this.instances.length===0){setTimeout(function(){if(D.ui.dialog.overlay.instances.length){D(document).bind(D.ui.dialog.overlay.events,function(H){if(D(H.target).zIndex()<D.ui.dialog.overlay.maxZ){return false}})}},1);D(document).bind("keydown.dialog-overlay",function(H){if(G.options.closeOnEscape&&!H.isDefaultPrevented()&&H.keyCode&&H.keyCode===D.ui.keyCode.ESCAPE){G.close(H);H.preventDefault()}});D(window).bind("resize.dialog-overlay",D.ui.dialog.overlay.resize)}var F=(this.oldInstances.pop()||D("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({width:this.width(),height:this.height()});if(D.fn.bgiframe){F.bgiframe()}this.instances.push(F);return F},destroy:function(F){var G=D.inArray(F,this.instances);if(G!=-1){this.oldInstances.push(this.instances.splice(G,1)[0])}if(this.instances.length===0){D([document,window]).unbind(".dialog-overlay")}F.remove();var H=0;D.each(this.instances,function(){H=Math.max(H,this.css("z-index"))});this.maxZ=H},height:function(){var G,F;if(D.browser.msie&&D.browser.version<7){G=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight);F=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight);if(G<F){return D(window).height()+"px"}else{return G+"px"}}else{return D(document).height()+"px"}},width:function(){var F,G;if(D.browser.msie){F=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth);G=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth);if(F<G){return D(window).width()+"px"}else{return F+"px"}}else{return D(document).width()+"px"}},resize:function(){var F=D([]);D.each(D.ui.dialog.overlay.instances,function(){F=F.add(this)});F.css({width:0,height:0}).css({width:D.ui.dialog.overlay.width(),height:D.ui.dialog.overlay.height()})}});D.extend(D.ui.dialog.overlay.prototype,{destroy:function(){D.ui.dialog.overlay.destroy(this.$el)}})}(jQuery));
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.progressbar.js' */
/*
 * jQuery UI Progressbar 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Progressbar
 *
 * Depends:
 *   jquery.ui.core.js
 *   jquery.ui.widget.js
 */
(function(A,B){A.widget("ui.progressbar",{options:{value:0,max:100},min:0,_create:function(){this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min,"aria-valuemax":this.options.max,"aria-valuenow":this._value()});this.valueDiv=A("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);this.oldValue=this._value();this._refreshValue()},destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");this.valueDiv.remove();A.Widget.prototype.destroy.apply(this,arguments)},value:function(C){if(C===B){return this._value()}this._setOption("value",C);return this},_setOption:function(C,D){if(C==="value"){this.options.value=D;this._refreshValue();if(this._value()===this.options.max){this._trigger("complete")}}A.Widget.prototype._setOption.apply(this,arguments)},_value:function(){var C=this.options.value;if(typeof C!=="number"){C=0}return Math.min(this.options.max,Math.max(this.min,C))},_percentage:function(){return 100*this._value()/this.options.max},_refreshValue:function(){var D=this.value();var C=this._percentage();if(this.oldValue!==D){this.oldValue=D;this._trigger("change")}this.valueDiv.toggle(D>this.min).toggleClass("ui-corner-right",D===this.options.max).width(C.toFixed(0)+"%");this.element.attr("aria-valuenow",D)}});A.extend(A.ui.progressbar,{version:"1.8.24"})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.slider.js' */
/*
 * jQuery UI Slider 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Slider
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(B,C){var A=5;B.widget("ui.slider",B.ui.mouse,{widgetEventPrefix:"slide",options:{animate:false,distance:0,max:100,min:0,orientation:"horizontal",range:false,step:1,value:0,values:null},_create:function(){var E=this,J=this.options,I=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),H="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",D=(J.values&&J.values.length)||1,G=[];this._keySliding=false;this._mouseSliding=false;this._animateOff=true;this._handleIndex=null;this._detectOrientation();this._mouseInit();this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget ui-widget-content ui-corner-all"+(J.disabled?" ui-slider-disabled ui-disabled":""));this.range=B([]);if(J.range){if(J.range===true){if(!J.values){J.values=[this._valueMin(),this._valueMin()]}if(J.values.length&&J.values.length!==2){J.values=[J.values[0],J.values[0]]}}this.range=B("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+((J.range==="min"||J.range==="max")?" ui-slider-range-"+J.range:""))}for(var F=I.length;F<D;F+=1){G.push(H)}this.handles=I.add(B(G.join("")).appendTo(E.element));this.handle=this.handles.eq(0);this.handles.add(this.range).filter("a").click(function(K){K.preventDefault()}).hover(function(){if(!J.disabled){B(this).addClass("ui-state-hover")}},function(){B(this).removeClass("ui-state-hover")}).focus(function(){if(!J.disabled){B(".ui-slider .ui-state-focus").removeClass("ui-state-focus");B(this).addClass("ui-state-focus")}else{B(this).blur()}}).blur(function(){B(this).removeClass("ui-state-focus")});this.handles.each(function(K){B(this).data("index.ui-slider-handle",K)});this.handles.keydown(function(O){var L=B(this).data("index.ui-slider-handle"),P,M,K,N;if(E.options.disabled){return }switch(O.keyCode){case B.ui.keyCode.HOME:case B.ui.keyCode.END:case B.ui.keyCode.PAGE_UP:case B.ui.keyCode.PAGE_DOWN:case B.ui.keyCode.UP:case B.ui.keyCode.RIGHT:case B.ui.keyCode.DOWN:case B.ui.keyCode.LEFT:O.preventDefault();if(!E._keySliding){E._keySliding=true;B(this).addClass("ui-state-active");P=E._start(O,L);if(P===false){return }}break}N=E.options.step;if(E.options.values&&E.options.values.length){M=K=E.values(L)}else{M=K=E.value()}switch(O.keyCode){case B.ui.keyCode.HOME:K=E._valueMin();break;case B.ui.keyCode.END:K=E._valueMax();break;case B.ui.keyCode.PAGE_UP:K=E._trimAlignValue(M+((E._valueMax()-E._valueMin())/A));break;case B.ui.keyCode.PAGE_DOWN:K=E._trimAlignValue(M-((E._valueMax()-E._valueMin())/A));break;case B.ui.keyCode.UP:case B.ui.keyCode.RIGHT:if(M===E._valueMax()){return }K=E._trimAlignValue(M+N);break;case B.ui.keyCode.DOWN:case B.ui.keyCode.LEFT:if(M===E._valueMin()){return }K=E._trimAlignValue(M-N);break}E._slide(O,L,K)}).keyup(function(L){var K=B(this).data("index.ui-slider-handle");if(E._keySliding){E._keySliding=false;E._stop(L,K);E._change(L,K);B(this).removeClass("ui-state-active")}});this._refreshValue();this._animateOff=false},destroy:function(){this.handles.remove();this.range.remove();this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");this._mouseDestroy();return this},_mouseCapture:function(F){var G=this.options,J,L,E,H,N,K,M,I,D;if(G.disabled){return false}this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()};this.elementOffset=this.element.offset();J={x:F.pageX,y:F.pageY};L=this._normValueFromMouse(J);E=this._valueMax()-this._valueMin()+1;N=this;this.handles.each(function(O){var P=Math.abs(L-N.values(O));if(E>P){E=P;H=B(this);K=O}});if(G.range===true&&this.values(1)===G.min){K+=1;H=B(this.handles[K])}M=this._start(F,K);if(M===false){return false}this._mouseSliding=true;N._handleIndex=K;H.addClass("ui-state-active").focus();I=H.offset();D=!B(F.target).parents().andSelf().is(".ui-slider-handle");this._clickOffset=D?{left:0,top:0}:{left:F.pageX-I.left-(H.width()/2),top:F.pageY-I.top-(H.height()/2)-(parseInt(H.css("borderTopWidth"),10)||0)-(parseInt(H.css("borderBottomWidth"),10)||0)+(parseInt(H.css("marginTop"),10)||0)};if(!this.handles.hasClass("ui-state-hover")){this._slide(F,K,L)}this._animateOff=true;return true},_mouseStart:function(D){return true},_mouseDrag:function(F){var D={x:F.pageX,y:F.pageY},E=this._normValueFromMouse(D);this._slide(F,this._handleIndex,E);return false},_mouseStop:function(D){this.handles.removeClass("ui-state-active");this._mouseSliding=false;this._stop(D,this._handleIndex);this._change(D,this._handleIndex);this._handleIndex=null;this._clickOffset=null;this._animateOff=false;return false},_detectOrientation:function(){this.orientation=(this.options.orientation==="vertical")?"vertical":"horizontal"},_normValueFromMouse:function(E){var D,H,G,F,I;if(this.orientation==="horizontal"){D=this.elementSize.width;H=E.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)}else{D=this.elementSize.height;H=E.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)}G=(H/D);if(G>1){G=1}if(G<0){G=0}if(this.orientation==="vertical"){G=1-G}F=this._valueMax()-this._valueMin();I=this._valueMin()+G*F;return this._trimAlignValue(I)},_start:function(F,E){var D={handle:this.handles[E],value:this.value()};if(this.options.values&&this.options.values.length){D.value=this.values(E);D.values=this.values()}return this._trigger("start",F,D)},_slide:function(H,G,F){var D,E,I;if(this.options.values&&this.options.values.length){D=this.values(G?0:1);if((this.options.values.length===2&&this.options.range===true)&&((G===0&&F>D)||(G===1&&F<D))){F=D}if(F!==this.values(G)){E=this.values();E[G]=F;I=this._trigger("slide",H,{handle:this.handles[G],value:F,values:E});D=this.values(G?0:1);if(I!==false){this.values(G,F,true)}}}else{if(F!==this.value()){I=this._trigger("slide",H,{handle:this.handles[G],value:F});if(I!==false){this.value(F)}}}},_stop:function(F,E){var D={handle:this.handles[E],value:this.value()};if(this.options.values&&this.options.values.length){D.value=this.values(E);D.values=this.values()}this._trigger("stop",F,D)},_change:function(F,E){if(!this._keySliding&&!this._mouseSliding){var D={handle:this.handles[E],value:this.value()};if(this.options.values&&this.options.values.length){D.value=this.values(E);D.values=this.values()}this._trigger("change",F,D)}},value:function(D){if(arguments.length){this.options.value=this._trimAlignValue(D);this._refreshValue();this._change(null,0);return }return this._value()},values:function(E,H){var G,D,F;if(arguments.length>1){this.options.values[E]=this._trimAlignValue(H);this._refreshValue();this._change(null,E);return }if(arguments.length){if(B.isArray(arguments[0])){G=this.options.values;D=arguments[0];for(F=0;F<G.length;F+=1){G[F]=this._trimAlignValue(D[F]);this._change(null,F)}this._refreshValue()}else{if(this.options.values&&this.options.values.length){return this._values(E)}else{return this.value()}}}else{return this._values()}},_setOption:function(E,F){var D,G=0;if(B.isArray(this.options.values)){G=this.options.values.length}B.Widget.prototype._setOption.apply(this,arguments);switch(E){case"disabled":if(F){this.handles.filter(".ui-state-focus").blur();this.handles.removeClass("ui-state-hover");this.handles.propAttr("disabled",true);this.element.addClass("ui-disabled")}else{this.handles.propAttr("disabled",false);this.element.removeClass("ui-disabled")}break;case"orientation":this._detectOrientation();this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation);this._refreshValue();break;case"value":this._animateOff=true;this._refreshValue();this._change(null,0);this._animateOff=false;break;case"values":this._animateOff=true;this._refreshValue();for(D=0;D<G;D+=1){this._change(null,D)}this._animateOff=false;break}},_value:function(){var D=this.options.value;D=this._trimAlignValue(D);return D},_values:function(D){var G,F,E;if(arguments.length){G=this.options.values[D];G=this._trimAlignValue(G);return G}else{F=this.options.values.slice();for(E=0;E<F.length;E+=1){F[E]=this._trimAlignValue(F[E])}return F}},_trimAlignValue:function(G){if(G<=this._valueMin()){return this._valueMin()}if(G>=this._valueMax()){return this._valueMax()}var D=(this.options.step>0)?this.options.step:1,F=(G-this._valueMin())%D,E=G-F;if(Math.abs(F)*2>=D){E+=(F>0)?D:(-D)}return parseFloat(E.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var G=this.options.range,F=this.options,M=this,E=(!this._animateOff)?F.animate:false,H,D={},I,K,J,L;if(this.options.values&&this.options.values.length){this.handles.each(function(O,N){H=(M.values(O)-M._valueMin())/(M._valueMax()-M._valueMin())*100;D[M.orientation==="horizontal"?"left":"bottom"]=H+"%";B(this).stop(1,1)[E?"animate":"css"](D,F.animate);if(M.options.range===true){if(M.orientation==="horizontal"){if(O===0){M.range.stop(1,1)[E?"animate":"css"]({left:H+"%"},F.animate)}if(O===1){M.range[E?"animate":"css"]({width:(H-I)+"%"},{queue:false,duration:F.animate})}}else{if(O===0){M.range.stop(1,1)[E?"animate":"css"]({bottom:(H)+"%"},F.animate)}if(O===1){M.range[E?"animate":"css"]({height:(H-I)+"%"},{queue:false,duration:F.animate})}}}I=H})}else{K=this.value();J=this._valueMin();L=this._valueMax();H=(L!==J)?(K-J)/(L-J)*100:0;D[M.orientation==="horizontal"?"left":"bottom"]=H+"%";this.handle.stop(1,1)[E?"animate":"css"](D,F.animate);if(G==="min"&&this.orientation==="horizontal"){this.range.stop(1,1)[E?"animate":"css"]({width:H+"%"},F.animate)}if(G==="max"&&this.orientation==="horizontal"){this.range[E?"animate":"css"]({width:(100-H)+"%"},{queue:false,duration:F.animate})}if(G==="min"&&this.orientation==="vertical"){this.range.stop(1,1)[E?"animate":"css"]({height:H+"%"},F.animate)}if(G==="max"&&this.orientation==="vertical"){this.range[E?"animate":"css"]({height:(100-H)+"%"},{queue:false,duration:F.animate})}}}});B.extend(B.ui.slider,{version:"1.8.24"})}(jQuery));
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.ui.tabs.js' */
/*
 * jQuery UI Tabs 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Tabs
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(D,F){var C=0,B=0;function E(){return ++C}function A(){return ++B}D.widget("ui.tabs",{options:{add:null,ajaxOptions:null,cache:false,cookie:null,collapsible:false,disable:null,disabled:[],enable:null,event:"click",fx:null,idPrefix:"ui-tabs-",load:null,panelTemplate:"<div></div>",remove:null,select:null,show:null,spinner:"<em>Loading&#8230;</em>",tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},_create:function(){this._tabify(true)},_setOption:function(G,H){if(G=="selected"){if(this.options.collapsible&&H==this.options.selected){return }this.select(H)}else{this.options[G]=H;this._tabify()}},_tabId:function(G){return G.title&&G.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF-]/g,"")||this.options.idPrefix+E()},_sanitizeSelector:function(G){return G.replace(/:/g,"\\:")},_cookie:function(){var G=this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+A());return D.cookie.apply(null,[G].concat(D.makeArray(arguments)))},_ui:function(H,G){return{tab:H,panel:G,index:this.anchors.index(H)}},_cleanup:function(){this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function(){var G=D(this);G.html(G.data("label.tabs")).removeData("label.tabs")})},_tabify:function(R){var S=this,I=this.options,H=/^#.+/;this.list=this.element.find("ol,ul").eq(0);this.lis=D(" > li:has(a[href])",this.list);this.anchors=this.lis.map(function(){return D("a",this)[0]});this.panels=D([]);this.anchors.each(function(V,T){var U=D(T).attr("href");var W=U.split("#")[0],X;if(W&&(W===location.toString().split("#")[0]||(X=D("base")[0])&&W===X.href)){U=T.hash;T.href=U}if(H.test(U)){S.panels=S.panels.add(S.element.find(S._sanitizeSelector(U)))}else{if(U&&U!=="#"){D.data(T,"href.tabs",U);D.data(T,"load.tabs",U.replace(/#.*$/,""));var Z=S._tabId(T);T.href="#"+Z;var Y=S.element.find("#"+Z);if(!Y.length){Y=D(I.panelTemplate).attr("id",Z).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(S.panels[V-1]||S.list);Y.data("destroy.tabs",true)}S.panels=S.panels.add(Y)}else{I.disabled.push(V)}}});if(R){this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");this.lis.addClass("ui-state-default ui-corner-top");this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");if(I.selected===F){if(location.hash){this.anchors.each(function(U,T){if(T.hash==location.hash){I.selected=U;return false}})}if(typeof I.selected!=="number"&&I.cookie){I.selected=parseInt(S._cookie(),10)}if(typeof I.selected!=="number"&&this.lis.filter(".ui-tabs-selected").length){I.selected=this.lis.index(this.lis.filter(".ui-tabs-selected"))}I.selected=I.selected||(this.lis.length?0:-1)}else{if(I.selected===null){I.selected=-1}}I.selected=((I.selected>=0&&this.anchors[I.selected])||I.selected<0)?I.selected:0;I.disabled=D.unique(I.disabled.concat(D.map(this.lis.filter(".ui-state-disabled"),function(U,T){return S.lis.index(U)}))).sort();if(D.inArray(I.selected,I.disabled)!=-1){I.disabled.splice(D.inArray(I.selected,I.disabled),1)}this.panels.addClass("ui-tabs-hide");this.lis.removeClass("ui-tabs-selected ui-state-active");if(I.selected>=0&&this.anchors.length){S.element.find(S._sanitizeSelector(S.anchors[I.selected].hash)).removeClass("ui-tabs-hide");this.lis.eq(I.selected).addClass("ui-tabs-selected ui-state-active");S.element.queue("tabs",function(){S._trigger("show",null,S._ui(S.anchors[I.selected],S.element.find(S._sanitizeSelector(S.anchors[I.selected].hash))[0]))});this.load(I.selected)}D(window).bind("unload",function(){S.lis.add(S.anchors).unbind(".tabs");S.lis=S.anchors=S.panels=null})}else{I.selected=this.lis.index(this.lis.filter(".ui-tabs-selected"))}this.element[I.collapsible?"addClass":"removeClass"]("ui-tabs-collapsible");if(I.cookie){this._cookie(I.selected,I.cookie)}for(var L=0,Q;(Q=this.lis[L]);L++){D(Q)[D.inArray(L,I.disabled)!=-1&&!D(Q).hasClass("ui-tabs-selected")?"addClass":"removeClass"]("ui-state-disabled")}if(I.cache===false){this.anchors.removeData("cache.tabs")}this.lis.add(this.anchors).unbind(".tabs");if(I.event!=="mouseover"){var K=function(U,T){if(T.is(":not(.ui-state-disabled)")){T.addClass("ui-state-"+U)}};var N=function(U,T){T.removeClass("ui-state-"+U)};this.lis.bind("mouseover.tabs",function(){K("hover",D(this))});this.lis.bind("mouseout.tabs",function(){N("hover",D(this))});this.anchors.bind("focus.tabs",function(){K("focus",D(this).closest("li"))});this.anchors.bind("blur.tabs",function(){N("focus",D(this).closest("li"))})}var G,M;if(I.fx){if(D.isArray(I.fx)){G=I.fx[0];M=I.fx[1]}else{G=M=I.fx}}function J(T,U){T.css("display","");if(!D.support.opacity&&U.opacity){T[0].style.removeAttribute("filter")}}var O=M?function(T,U){D(T).closest("li").addClass("ui-tabs-selected ui-state-active");U.hide().removeClass("ui-tabs-hide").animate(M,M.duration||"normal",function(){J(U,M);S._trigger("show",null,S._ui(T,U[0]))})}:function(T,U){D(T).closest("li").addClass("ui-tabs-selected ui-state-active");U.removeClass("ui-tabs-hide");S._trigger("show",null,S._ui(T,U[0]))};var P=G?function(U,T){T.animate(G,G.duration||"normal",function(){S.lis.removeClass("ui-tabs-selected ui-state-active");T.addClass("ui-tabs-hide");J(T,G);S.element.dequeue("tabs")})}:function(U,T,V){S.lis.removeClass("ui-tabs-selected ui-state-active");T.addClass("ui-tabs-hide");S.element.dequeue("tabs")};this.anchors.bind(I.event+".tabs",function(){var U=this,W=D(U).closest("li"),T=S.panels.filter(":not(.ui-tabs-hide)"),V=S.element.find(S._sanitizeSelector(U.hash));if((W.hasClass("ui-tabs-selected")&&!I.collapsible)||W.hasClass("ui-state-disabled")||W.hasClass("ui-state-processing")||S.panels.filter(":animated").length||S._trigger("select",null,S._ui(this,V[0]))===false){this.blur();return false}I.selected=S.anchors.index(this);S.abort();if(I.collapsible){if(W.hasClass("ui-tabs-selected")){I.selected=-1;if(I.cookie){S._cookie(I.selected,I.cookie)}S.element.queue("tabs",function(){P(U,T)}).dequeue("tabs");this.blur();return false}else{if(!T.length){if(I.cookie){S._cookie(I.selected,I.cookie)}S.element.queue("tabs",function(){O(U,V)});S.load(S.anchors.index(this));this.blur();return false}}}if(I.cookie){S._cookie(I.selected,I.cookie)}if(V.length){if(T.length){S.element.queue("tabs",function(){P(U,T)})}S.element.queue("tabs",function(){O(U,V)});S.load(S.anchors.index(this))}else{throw"jQuery UI Tabs: Mismatching fragment identifier."}if(D.browser.msie){this.blur()}});this.anchors.bind("click.tabs",function(){return false})},_getIndex:function(G){if(typeof G=="string"){G=this.anchors.index(this.anchors.filter("[href$='"+G+"']"))}return G},destroy:function(){var G=this.options;this.abort();this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");this.anchors.each(function(){var H=D.data(this,"href.tabs");if(H){this.href=H}var I=D(this).unbind(".tabs");D.each(["href","load","cache"],function(J,K){I.removeData(K+".tabs")})});this.lis.unbind(".tabs").add(this.panels).each(function(){if(D.data(this,"destroy.tabs")){D(this).remove()}else{D(this).removeClass(["ui-state-default","ui-corner-top","ui-tabs-selected","ui-state-active","ui-state-hover","ui-state-focus","ui-state-disabled","ui-tabs-panel","ui-widget-content","ui-corner-bottom","ui-tabs-hide"].join(" "))}});if(G.cookie){this._cookie(null,G.cookie)}return this},add:function(J,I,H){if(H===F){H=this.anchors.length}var G=this,L=this.options,N=D(L.tabTemplate.replace(/#\{href\}/g,J).replace(/#\{label\}/g,I)),M=!J.indexOf("#")?J.replace("#",""):this._tabId(D("a",N)[0]);N.addClass("ui-state-default ui-corner-top").data("destroy.tabs",true);var K=G.element.find("#"+M);if(!K.length){K=D(L.panelTemplate).attr("id",M).data("destroy.tabs",true)}K.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");if(H>=this.lis.length){N.appendTo(this.list);K.appendTo(this.list[0].parentNode)}else{N.insertBefore(this.lis[H]);K.insertBefore(this.panels[H])}L.disabled=D.map(L.disabled,function(P,O){return P>=H?++P:P});this._tabify();if(this.anchors.length==1){L.selected=0;N.addClass("ui-tabs-selected ui-state-active");K.removeClass("ui-tabs-hide");this.element.queue("tabs",function(){G._trigger("show",null,G._ui(G.anchors[0],G.panels[0]))});this.load(0)}this._trigger("add",null,this._ui(this.anchors[H],this.panels[H]));return this},remove:function(G){G=this._getIndex(G);var I=this.options,J=this.lis.eq(G).remove(),H=this.panels.eq(G).remove();if(J.hasClass("ui-tabs-selected")&&this.anchors.length>1){this.select(G+(G+1<this.anchors.length?1:-1))}I.disabled=D.map(D.grep(I.disabled,function(L,K){return L!=G}),function(L,K){return L>=G?--L:L});this._tabify();this._trigger("remove",null,this._ui(J.find("a")[0],H[0]));return this},enable:function(G){G=this._getIndex(G);var H=this.options;if(D.inArray(G,H.disabled)==-1){return }this.lis.eq(G).removeClass("ui-state-disabled");H.disabled=D.grep(H.disabled,function(J,I){return J!=G});this._trigger("enable",null,this._ui(this.anchors[G],this.panels[G]));return this},disable:function(H){H=this._getIndex(H);var G=this,I=this.options;if(H!=I.selected){this.lis.eq(H).addClass("ui-state-disabled");I.disabled.push(H);I.disabled.sort();this._trigger("disable",null,this._ui(this.anchors[H],this.panels[H]))}return this},select:function(G){G=this._getIndex(G);if(G==-1){if(this.options.collapsible&&this.options.selected!=-1){G=this.options.selected}else{return this}}this.anchors.eq(G).trigger(this.options.event+".tabs");return this},load:function(J){J=this._getIndex(J);var H=this,L=this.options,G=this.anchors.eq(J)[0],I=D.data(G,"load.tabs");this.abort();if(!I||this.element.queue("tabs").length!==0&&D.data(G,"cache.tabs")){this.element.dequeue("tabs");return }this.lis.eq(J).addClass("ui-state-processing");if(L.spinner){var K=D("span",G);K.data("label.tabs",K.html()).html(L.spinner)}this.xhr=D.ajax(D.extend({},L.ajaxOptions,{url:I,success:function(N,M){H.element.find(H._sanitizeSelector(G.hash)).html(N);H._cleanup();if(L.cache){D.data(G,"cache.tabs",true)}H._trigger("load",null,H._ui(H.anchors[J],H.panels[J]));try{L.ajaxOptions.success(N,M)}catch(O){}},error:function(O,M,N){H._cleanup();H._trigger("load",null,H._ui(H.anchors[J],H.panels[J]));try{L.ajaxOptions.error(O,M,J,G)}catch(N){}}}));H.element.dequeue("tabs");return this},abort:function(){this.element.queue([]);this.panels.stop(false,true);this.element.queue("tabs",this.element.queue("tabs").splice(-2,2));if(this.xhr){this.xhr.abort();delete this.xhr}this._cleanup();return this},url:function(H,G){this.anchors.eq(H).removeData("cache.tabs").data("load.tabs",G);return this},length:function(){return this.anchors.length}});D.extend(D.ui.tabs,{version:"1.8.24"});D.extend(D.ui.tabs.prototype,{rotation:null,rotate:function(I,K){var G=this,L=this.options;var H=G._rotate||(G._rotate=function(M){clearTimeout(G.rotation);G.rotation=setTimeout(function(){var N=L.selected;G.select(++N<G.anchors.length?N:0)},I);if(M){M.stopPropagation()}});var J=G._unrotate||(G._unrotate=!K?function(M){if(M.clientX){G.rotate(null)}}:function(M){H()});if(I){this.element.bind("tabsshow",H);this.anchors.bind(L.event+".tabs",J);H()}else{clearTimeout(G.rotation);this.element.unbind("tabsshow",H);this.anchors.unbind(L.event+".tabs",J);delete this._rotate;delete this._unrotate}return this}})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.core.js' */
/*
 * jQuery UI Effects 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/
 */
jQuery.effects||(function(H,E){H.effects={};H.each(["backgroundColor","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","borderColor","color","outlineColor"],function(O,N){H.fx.step[N]=function(P){if(!P.colorInit){P.start=M(P.elem,N);P.end=K(P.end);P.colorInit=true}P.elem.style[N]="rgb("+Math.max(Math.min(parseInt((P.pos*(P.end[0]-P.start[0]))+P.start[0],10),255),0)+","+Math.max(Math.min(parseInt((P.pos*(P.end[1]-P.start[1]))+P.start[1],10),255),0)+","+Math.max(Math.min(parseInt((P.pos*(P.end[2]-P.start[2]))+P.start[2],10),255),0)+")"}});function K(O){var N;if(O&&O.constructor==Array&&O.length==3){return O}if(N=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(O)){return[parseInt(N[1],10),parseInt(N[2],10),parseInt(N[3],10)]}if(N=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(O)){return[parseFloat(N[1])*2.55,parseFloat(N[2])*2.55,parseFloat(N[3])*2.55]}if(N=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(O)){return[parseInt(N[1],16),parseInt(N[2],16),parseInt(N[3],16)]}if(N=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(O)){return[parseInt(N[1]+N[1],16),parseInt(N[2]+N[2],16),parseInt(N[3]+N[3],16)]}if(N=/rgba\(0, 0, 0, 0\)/.exec(O)){return A.transparent}return A[H.trim(O).toLowerCase()]}function M(P,N){var O;do{O=(H.curCSS||H.css)(P,N);if(O!=""&&O!="transparent"||H.nodeName(P,"body")){break}N="backgroundColor"}while(P=P.parentNode);return K(O)}var A={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0],transparent:[255,255,255]};var F=["add","remove","toggle"],C={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};function G(){var Q=document.defaultView?document.defaultView.getComputedStyle(this,null):this.currentStyle,R={},O,P;if(Q&&Q.length&&Q[0]&&Q[Q[0]]){var N=Q.length;while(N--){O=Q[N];if(typeof Q[O]=="string"){P=O.replace(/\-(\w)/g,function(S,T){return T.toUpperCase()});R[P]=Q[O]}}}else{for(O in Q){if(typeof Q[O]==="string"){R[O]=Q[O]}}}return R}function B(O){var N,P;for(N in O){P=O[N];if(P==null||H.isFunction(P)||N in C||(/scrollbar/).test(N)||(!(/color/i).test(N)&&isNaN(parseFloat(P)))){delete O[N]}}return O}function I(N,P){var Q={_:0},O;for(O in P){if(N[O]!=P[O]){Q[O]=P[O]}}return Q}H.effects.animateClass=function(N,O,Q,P){if(H.isFunction(Q)){P=Q;Q=null}return this.queue(function(){var U=H(this),R=U.attr("style")||" ",V=B(G.call(this)),T,S=U.attr("class")||"";H.each(F,function(W,X){if(N[X]){U[X+"Class"](N[X])}});T=B(G.call(this));U.attr("class",S);U.animate(I(V,T),{queue:false,duration:O,easing:Q,complete:function(){H.each(F,function(W,X){if(N[X]){U[X+"Class"](N[X])}});if(typeof U.attr("style")=="object"){U.attr("style").cssText="";U.attr("style").cssText=R}else{U.attr("style",R)}if(P){P.apply(this,arguments)}H.dequeue(this)}})})};H.fn.extend({_addClass:H.fn.addClass,addClass:function(O,N,Q,P){return N?H.effects.animateClass.apply(this,[{add:O},N,Q,P]):this._addClass(O)},_removeClass:H.fn.removeClass,removeClass:function(O,N,Q,P){return N?H.effects.animateClass.apply(this,[{remove:O},N,Q,P]):this._removeClass(O)},_toggleClass:H.fn.toggleClass,toggleClass:function(P,O,N,R,Q){if(typeof O=="boolean"||O===E){if(!N){return this._toggleClass(P,O)}else{return H.effects.animateClass.apply(this,[(O?{add:P}:{remove:P}),N,R,Q])}}else{return H.effects.animateClass.apply(this,[{toggle:P},O,N,R])}},switchClass:function(N,P,O,R,Q){return H.effects.animateClass.apply(this,[{add:P,remove:N},O,R,Q])}});H.extend(H.effects,{version:"1.8.24",save:function(O,P){for(var N=0;N<P.length;N++){if(P[N]!==null){O.data("ec.storage."+P[N],O[0].style[P[N]])}}},restore:function(O,P){for(var N=0;N<P.length;N++){if(P[N]!==null){O.css(P[N],O.data("ec.storage."+P[N]))}}},setMode:function(N,O){if(O=="toggle"){O=N.is(":hidden")?"show":"hide"}return O},getBaseline:function(O,P){var Q,N;switch(O[0]){case"top":Q=0;break;case"middle":Q=0.5;break;case"bottom":Q=1;break;default:Q=O[0]/P.height}switch(O[1]){case"left":N=0;break;case"center":N=0.5;break;case"right":N=1;break;default:N=O[1]/P.width}return{x:N,y:Q}},createWrapper:function(N){if(N.parent().is(".ui-effects-wrapper")){return N.parent()}var O={width:N.outerWidth(true),height:N.outerHeight(true),"float":N.css("float")},R=H("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),Q=document.activeElement;try{Q.id}catch(P){Q=document.body}N.wrap(R);if(N[0]===Q||H.contains(N[0],Q)){H(Q).focus()}R=N.parent();if(N.css("position")=="static"){R.css({position:"relative"});N.css({position:"relative"})}else{H.extend(O,{position:N.css("position"),zIndex:N.css("z-index")});H.each(["top","left","bottom","right"],function(S,T){O[T]=N.css(T);if(isNaN(parseInt(O[T],10))){O[T]="auto"}});N.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})}return R.css(O).show()},removeWrapper:function(N){var O,P=document.activeElement;if(N.parent().is(".ui-effects-wrapper")){O=N.parent().replaceWith(N);if(N[0]===P||H.contains(N[0],P)){H(P).focus()}return O}return N},setTransition:function(O,Q,N,P){P=P||{};H.each(Q,function(S,R){var T=O.cssUnit(R);if(T[0]>0){P[R]=T[0]*N+T[1]}});return P}});function D(O,N,P,Q){if(typeof O=="object"){Q=N;P=null;N=O;O=N.effect}if(H.isFunction(N)){Q=N;P=null;N={}}if(typeof N=="number"||H.fx.speeds[N]){Q=P;P=N;N={}}if(H.isFunction(P)){Q=P;P=null}N=N||{};P=P||N.duration;P=H.fx.off?0:typeof P=="number"?P:P in H.fx.speeds?H.fx.speeds[P]:H.fx.speeds._default;Q=Q||N.complete;return[O,N,P,Q]}function L(N){if(!N||typeof N==="number"||H.fx.speeds[N]){return true}if(typeof N==="string"&&!H.effects[N]){return true}return false}H.fn.extend({effect:function(Q,P,S,U){var O=D.apply(this,arguments),R={options:O[1],duration:O[2],callback:O[3]},T=R.options.mode,N=H.effects[Q];if(H.fx.off||!N){if(T){return this[T](R.duration,R.callback)}else{return this.each(function(){if(R.callback){R.callback.call(this)}})}}return N.call(this,R)},_show:H.fn.show,show:function(O){if(L(O)){return this._show.apply(this,arguments)}else{var N=D.apply(this,arguments);N[1].mode="show";return this.effect.apply(this,N)}},_hide:H.fn.hide,hide:function(O){if(L(O)){return this._hide.apply(this,arguments)}else{var N=D.apply(this,arguments);N[1].mode="hide";return this.effect.apply(this,N)}},__toggle:H.fn.toggle,toggle:function(O){if(L(O)||typeof O==="boolean"||H.isFunction(O)){return this.__toggle.apply(this,arguments)}else{var N=D.apply(this,arguments);N[1].mode="toggle";return this.effect.apply(this,N)}},cssUnit:function(N){var O=this.css(N),P=[];H.each(["em","px","%","pt"],function(Q,R){if(O.indexOf(R)>0){P=[parseFloat(O),R]}});return P}});var J={};H.each(["Quad","Cubic","Quart","Quint","Expo"],function(O,N){J[N]=function(P){return Math.pow(P,O+2)}});H.extend(J,{Sine:function(N){return 1-Math.cos(N*Math.PI/2)},Circ:function(N){return 1-Math.sqrt(1-N*N)},Elastic:function(N){return N===0||N===1?N:-Math.pow(2,8*(N-1))*Math.sin(((N-1)*80-7.5)*Math.PI/15)},Back:function(N){return N*N*(3*N-2)},Bounce:function(P){var N,O=4;while(P<((N=Math.pow(2,--O))-1)/11){}return 1/Math.pow(4,3-O)-7.5625*Math.pow((N*3-2)/22-P,2)}});H.each(J,function(O,N){H.easing["easeIn"+O]=N;H.easing["easeOut"+O]=function(P){return 1-N(1-P)};H.easing["easeInOut"+O]=function(P){return P<0.5?N(P*2)/2:N(P*-2+2)/-2+1}})})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.blind.js' */
/*
 * jQuery UI Effects Blind 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Blind
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.blind=function(C){return this.queue(function(){var E=A(this),D=["position","top","bottom","left","right"];var I=A.effects.setMode(E,C.options.mode||"hide");var H=C.options.direction||"vertical";A.effects.save(E,D);E.show();var K=A.effects.createWrapper(E).css({overflow:"hidden"});var F=(H=="vertical")?"height":"width";var J=(H=="vertical")?K.height():K.width();if(I=="show"){K.css(F,0)}var G={};G[F]=I=="show"?J:0;K.animate(G,C.duration,C.options.easing,function(){if(I=="hide"){E.hide()}A.effects.restore(E,D);A.effects.removeWrapper(E);if(C.callback){C.callback.apply(E[0],arguments)}E.dequeue()})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.bounce.js' */
/*
 * jQuery UI Effects Bounce 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Bounce
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.bounce=function(C){return this.queue(function(){var F=A(this),L=["position","top","bottom","left","right"];var K=A.effects.setMode(F,C.options.mode||"effect");var N=C.options.direction||"up";var D=C.options.distance||20;var E=C.options.times||5;var H=C.duration||250;if(/show|hide/.test(K)){L.push("opacity")}A.effects.save(F,L);F.show();A.effects.createWrapper(F);var G=(N=="up"||N=="down")?"top":"left";var P=(N=="up"||N=="left")?"pos":"neg";var D=C.options.distance||(G=="top"?F.outerHeight(true)/3:F.outerWidth(true)/3);if(K=="show"){F.css("opacity",0).css(G,P=="pos"?-D:D)}if(K=="hide"){D=D/(E*2)}if(K!="hide"){E--}if(K=="show"){var I={opacity:1};I[G]=(P=="pos"?"+=":"-=")+D;F.animate(I,H/2,C.options.easing);D=D/2;E--}for(var J=0;J<E;J++){var O={},M={};O[G]=(P=="pos"?"-=":"+=")+D;M[G]=(P=="pos"?"+=":"-=")+D;F.animate(O,H/2,C.options.easing).animate(M,H/2,C.options.easing);D=(K=="hide")?D*2:D/2}if(K=="hide"){var I={opacity:0};I[G]=(P=="pos"?"-=":"+=")+D;F.animate(I,H/2,C.options.easing,function(){F.hide();A.effects.restore(F,L);A.effects.removeWrapper(F);if(C.callback){C.callback.apply(this,arguments)}})}else{var O={},M={};O[G]=(P=="pos"?"-=":"+=")+D;M[G]=(P=="pos"?"+=":"-=")+D;F.animate(O,H/2,C.options.easing).animate(M,H/2,C.options.easing,function(){A.effects.restore(F,L);A.effects.removeWrapper(F);if(C.callback){C.callback.apply(this,arguments)}})}F.queue("fx",function(){F.dequeue()});F.dequeue()})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.clip.js' */
/*
 * jQuery UI Effects Clip 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Clip
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.clip=function(C){return this.queue(function(){var G=A(this),K=["position","top","bottom","left","right","height","width"];var J=A.effects.setMode(G,C.options.mode||"hide");var L=C.options.direction||"vertical";A.effects.save(G,K);G.show();var D=A.effects.createWrapper(G).css({overflow:"hidden"});var F=G[0].tagName=="IMG"?D:G;var H={size:(L=="vertical")?"height":"width",position:(L=="vertical")?"top":"left"};var E=(L=="vertical")?F.height():F.width();if(J=="show"){F.css(H.size,0);F.css(H.position,E/2)}var I={};I[H.size]=J=="show"?E:0;I[H.position]=J=="show"?0:E/2;F.animate(I,{queue:false,duration:C.duration,easing:C.options.easing,complete:function(){if(J=="hide"){G.hide()}A.effects.restore(G,K);A.effects.removeWrapper(G);if(C.callback){C.callback.apply(G[0],arguments)}G.dequeue()}})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.drop.js' */
/*
 * jQuery UI Effects Drop 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Drop
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.drop=function(C){return this.queue(function(){var F=A(this),E=["position","top","bottom","left","right","opacity"];var J=A.effects.setMode(F,C.options.mode||"hide");var I=C.options.direction||"left";A.effects.save(F,E);F.show();A.effects.createWrapper(F);var G=(I=="up"||I=="down")?"top":"left";var D=(I=="up"||I=="left")?"pos":"neg";var K=C.options.distance||(G=="top"?F.outerHeight(true)/2:F.outerWidth(true)/2);if(J=="show"){F.css("opacity",0).css(G,D=="pos"?-K:K)}var H={opacity:J=="show"?1:0};H[G]=(J=="show"?(D=="pos"?"+=":"-="):(D=="pos"?"-=":"+="))+K;F.animate(H,{queue:false,duration:C.duration,easing:C.options.easing,complete:function(){if(J=="hide"){F.hide()}A.effects.restore(F,E);A.effects.removeWrapper(F);if(C.callback){C.callback.apply(this,arguments)}F.dequeue()}})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.explode.js' */
/*
 * jQuery UI Effects Explode 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Explode
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.explode=function(C){return this.queue(function(){var J=C.options.pieces?Math.round(Math.sqrt(C.options.pieces)):3;var F=C.options.pieces?Math.round(Math.sqrt(C.options.pieces)):3;C.options.mode=C.options.mode=="toggle"?(A(this).is(":visible")?"hide":"show"):C.options.mode;var I=A(this).show().css("visibility","hidden");var K=I.offset();K.top-=parseInt(I.css("marginTop"),10)||0;K.left-=parseInt(I.css("marginLeft"),10)||0;var H=I.outerWidth(true);var D=I.outerHeight(true);for(var G=0;G<J;G++){for(var E=0;E<F;E++){I.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-E*(H/F),top:-G*(D/J)}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:H/F,height:D/J,left:K.left+E*(H/F)+(C.options.mode=="show"?(E-Math.floor(F/2))*(H/F):0),top:K.top+G*(D/J)+(C.options.mode=="show"?(G-Math.floor(J/2))*(D/J):0),opacity:C.options.mode=="show"?0:1}).animate({left:K.left+E*(H/F)+(C.options.mode=="show"?0:(E-Math.floor(F/2))*(H/F)),top:K.top+G*(D/J)+(C.options.mode=="show"?0:(G-Math.floor(J/2))*(D/J)),opacity:C.options.mode=="show"?1:0},C.duration||500)}}setTimeout(function(){C.options.mode=="show"?I.css({visibility:"visible"}):I.css({visibility:"visible"}).hide();if(C.callback){C.callback.apply(I[0])}I.dequeue();A("div.ui-effects-explode").remove()},C.duration||500)})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.fade.js' */
/*
 * jQuery UI Effects Fade 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Fade
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.fade=function(C){return this.queue(function(){var D=A(this),E=A.effects.setMode(D,C.options.mode||"hide");D.animate({opacity:E},{queue:false,duration:C.duration,easing:C.options.easing,complete:function(){(C.callback&&C.callback.apply(this,arguments));D.dequeue()}})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.fold.js' */
/*
 * jQuery UI Effects Fold 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Fold
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.fold=function(C){return this.queue(function(){var F=A(this),L=["position","top","bottom","left","right"];var I=A.effects.setMode(F,C.options.mode||"hide");var P=C.options.size||15;var O=!(!C.options.horizFirst);var H=C.duration?C.duration/2:A.fx.speeds._default/2;A.effects.save(F,L);F.show();var E=A.effects.createWrapper(F).css({overflow:"hidden"});var J=((I=="show")!=O);var G=J?["width","height"]:["height","width"];var D=J?[E.width(),E.height()]:[E.height(),E.width()];var K=/([0-9]+)%/.exec(P);if(K){P=parseInt(K[1],10)/100*D[I=="hide"?0:1]}if(I=="show"){E.css(O?{height:0,width:P}:{height:P,width:0})}var N={},M={};N[G[0]]=I=="show"?D[0]:P;M[G[1]]=I=="show"?D[1]:0;E.animate(N,H,C.options.easing).animate(M,H,C.options.easing,function(){if(I=="hide"){F.hide()}A.effects.restore(F,L);A.effects.removeWrapper(F);if(C.callback){C.callback.apply(F[0],arguments)}F.dequeue()})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.highlight.js' */
/*
 * jQuery UI Effects Highlight 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Highlight
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.highlight=function(C){return this.queue(function(){var E=A(this),D=["backgroundImage","backgroundColor","opacity"],G=A.effects.setMode(E,C.options.mode||"show"),F={backgroundColor:E.css("backgroundColor")};if(G=="hide"){F.opacity=0}A.effects.save(E,D);E.show().css({backgroundImage:"none",backgroundColor:C.options.color||"#ffff99"}).animate(F,{queue:false,duration:C.duration,easing:C.options.easing,complete:function(){(G=="hide"&&E.hide());A.effects.restore(E,D);(G=="show"&&!A.support.opacity&&this.style.removeAttribute("filter"));(C.callback&&C.callback.apply(this,arguments));E.dequeue()}})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.pulsate.js' */
/*
 * jQuery UI Effects Pulsate 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Pulsate
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.pulsate=function(C){return this.queue(function(){var G=A(this),J=A.effects.setMode(G,C.options.mode||"show"),I=((C.options.times||5)*2)-1,H=C.duration?C.duration/2:A.fx.speeds._default/2,D=G.is(":visible"),E=0;if(!D){G.css("opacity",0).show();E=1}if((J=="hide"&&D)||(J=="show"&&!D)){I--}for(var F=0;F<I;F++){G.animate({opacity:E},H,C.options.easing);E=(E+1)%2}G.animate({opacity:E},H,C.options.easing,function(){if(E==0){G.hide()}(C.callback&&C.callback.apply(this,arguments))});G.queue("fx",function(){G.dequeue()}).dequeue()})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.scale.js' */
/*
 * jQuery UI Effects Scale 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Scale
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.puff=function(C){return this.queue(function(){var G=A(this),H=A.effects.setMode(G,C.options.mode||"hide"),F=parseInt(C.options.percent,10)||150,E=F/100,D={height:G.height(),width:G.width()};A.extend(C.options,{fade:true,mode:H,percent:H=="hide"?F:100,from:H=="hide"?D:{height:D.height*E,width:D.width*E}});G.effect("scale",C.options,C.duration,C.callback);G.dequeue()})};A.effects.scale=function(C){return this.queue(function(){var H=A(this);var E=A.extend(true,{},C.options);var K=A.effects.setMode(H,C.options.mode||"effect");var I=parseInt(C.options.percent,10)||(parseInt(C.options.percent,10)==0?0:(K=="hide"?0:100));var J=C.options.direction||"both";var D=C.options.origin;if(K!="effect"){E.origin=D||["middle","center"];E.restore=true}var G={height:H.height(),width:H.width()};H.from=C.options.from||(K=="show"?{height:0,width:0}:G);var F={y:J!="horizontal"?(I/100):1,x:J!="vertical"?(I/100):1};H.to={height:G.height*F.y,width:G.width*F.x};if(C.options.fade){if(K=="show"){H.from.opacity=0;H.to.opacity=1}if(K=="hide"){H.from.opacity=1;H.to.opacity=0}}E.from=H.from;E.to=H.to;E.mode=K;H.effect("size",E,C.duration,C.callback);H.dequeue()})};A.effects.size=function(C){return this.queue(function(){var D=A(this),O=["position","top","bottom","left","right","width","height","overflow","opacity"];var N=["position","top","bottom","left","right","overflow","opacity"];var K=["width","height","overflow"];var Q=["fontSize"];var L=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"];var G=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"];var H=A.effects.setMode(D,C.options.mode||"effect");var J=C.options.restore||false;var F=C.options.scale||"both";var P=C.options.origin;var E={height:D.height(),width:D.width()};D.from=C.options.from||E;D.to=C.options.to||E;if(P){var I=A.effects.getBaseline(P,E);D.from.top=(E.height-D.from.height)*I.y;D.from.left=(E.width-D.from.width)*I.x;D.to.top=(E.height-D.to.height)*I.y;D.to.left=(E.width-D.to.width)*I.x}var M={from:{y:D.from.height/E.height,x:D.from.width/E.width},to:{y:D.to.height/E.height,x:D.to.width/E.width}};if(F=="box"||F=="both"){if(M.from.y!=M.to.y){O=O.concat(L);D.from=A.effects.setTransition(D,L,M.from.y,D.from);D.to=A.effects.setTransition(D,L,M.to.y,D.to)}if(M.from.x!=M.to.x){O=O.concat(G);D.from=A.effects.setTransition(D,G,M.from.x,D.from);D.to=A.effects.setTransition(D,G,M.to.x,D.to)}}if(F=="content"||F=="both"){if(M.from.y!=M.to.y){O=O.concat(Q);D.from=A.effects.setTransition(D,Q,M.from.y,D.from);D.to=A.effects.setTransition(D,Q,M.to.y,D.to)}}A.effects.save(D,J?O:N);D.show();A.effects.createWrapper(D);D.css("overflow","hidden").css(D.from);if(F=="content"||F=="both"){L=L.concat(["marginTop","marginBottom"]).concat(Q);G=G.concat(["marginLeft","marginRight"]);K=O.concat(L).concat(G);D.find("*[width]").each(function(){var S=A(this);if(J){A.effects.save(S,K)}var R={height:S.height(),width:S.width()};S.from={height:R.height*M.from.y,width:R.width*M.from.x};S.to={height:R.height*M.to.y,width:R.width*M.to.x};if(M.from.y!=M.to.y){S.from=A.effects.setTransition(S,L,M.from.y,S.from);S.to=A.effects.setTransition(S,L,M.to.y,S.to)}if(M.from.x!=M.to.x){S.from=A.effects.setTransition(S,G,M.from.x,S.from);S.to=A.effects.setTransition(S,G,M.to.x,S.to)}S.css(S.from);S.animate(S.to,C.duration,C.options.easing,function(){if(J){A.effects.restore(S,K)}})})}D.animate(D.to,{queue:false,duration:C.duration,easing:C.options.easing,complete:function(){if(D.to.opacity===0){D.css("opacity",D.from.opacity)}if(H=="hide"){D.hide()}A.effects.restore(D,J?O:N);A.effects.removeWrapper(D);if(C.callback){C.callback.apply(this,arguments)}D.dequeue()}})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.shake.js' */
/*
 * jQuery UI Effects Shake 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Shake
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.shake=function(C){return this.queue(function(){var F=A(this),L=["position","top","bottom","left","right"];var K=A.effects.setMode(F,C.options.mode||"effect");var N=C.options.direction||"left";var D=C.options.distance||20;var E=C.options.times||3;var H=C.duration||C.options.duration||140;A.effects.save(F,L);F.show();A.effects.createWrapper(F);var G=(N=="up"||N=="down")?"top":"left";var P=(N=="up"||N=="left")?"pos":"neg";var I={},O={},M={};I[G]=(P=="pos"?"-=":"+=")+D;O[G]=(P=="pos"?"+=":"-=")+D*2;M[G]=(P=="pos"?"-=":"+=")+D*2;F.animate(I,H,C.options.easing);for(var J=1;J<E;J++){F.animate(O,H,C.options.easing).animate(M,H,C.options.easing)}F.animate(O,H,C.options.easing).animate(I,H/2,C.options.easing,function(){A.effects.restore(F,L);A.effects.removeWrapper(F);if(C.callback){C.callback.apply(this,arguments)}});F.queue("fx",function(){F.dequeue()});F.dequeue()})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.slide.js' */
/*
 * jQuery UI Effects Slide 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Slide
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.slide=function(C){return this.queue(function(){var F=A(this),E=["position","top","bottom","left","right"];var J=A.effects.setMode(F,C.options.mode||"show");var I=C.options.direction||"left";A.effects.save(F,E);F.show();A.effects.createWrapper(F).css({overflow:"hidden"});var G=(I=="up"||I=="down")?"top":"left";var D=(I=="up"||I=="left")?"pos":"neg";var K=C.options.distance||(G=="top"?F.outerHeight(true):F.outerWidth(true));if(J=="show"){F.css(G,D=="pos"?(isNaN(K)?"-"+K:-K):K)}var H={};H[G]=(J=="show"?(D=="pos"?"+=":"-="):(D=="pos"?"-=":"+="))+K;F.animate(H,{queue:false,duration:C.duration,easing:C.options.easing,complete:function(){if(J=="hide"){F.hide()}A.effects.restore(F,E);A.effects.removeWrapper(F);if(C.callback){C.callback.apply(this,arguments)}F.dequeue()}})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery-ui/jquery.effects.transfer.js' */
/*
 * jQuery UI Effects Transfer 1.8.24
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Transfer
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(A,B){A.effects.transfer=function(C){return this.queue(function(){var G=A(this),I=A(C.options.to),F=I.offset(),H={top:F.top,left:F.left,height:I.innerHeight(),width:I.innerWidth()},E=G.offset(),D=A('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(C.options.className).css({top:E.top,left:E.left,height:G.innerHeight(),width:G.innerWidth(),position:"absolute"}).animate(H,C.duration,C.options.easing,function(){D.remove();(C.callback&&C.callback.apply(G[0],arguments));G.dequeue()})})}})(jQuery);
/* module-key = 'com.atlassian.auiplugin:jquery-ui-other', location = 'js-vendor/jquery/jquery.ui.menu.js' */
(function(A){A.widget("ui.menu",{_create:function(){var B=this;this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(C){if(!A(C.target).closest(".ui-menu-item a").length){return }C.preventDefault();B.select(C)});this.refresh()},refresh:function(){var C=this;var B=this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem");B.children("a").addClass("ui-corner-all").attr("tabindex",-1).mouseenter(function(D){C.activate(D,A(this).parent())}).mouseleave(function(){C.deactivate()})},activate:function(E,D){this.deactivate();if(this.hasScroll()){var F=D.offset().top-this.element.offset().top,B=this.element.attr("scrollTop"),C=this.element.height();if(F<0){this.element.attr("scrollTop",B+F)}else{if(F>C){this.element.attr("scrollTop",B+F-C+D.height())}}}this.active=D.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end();this._trigger("focus",E,{item:D})},deactivate:function(){if(!this.active){return }this.active.children("a").removeClass("ui-state-hover").removeAttr("id");this._trigger("blur");this.active=null},next:function(B){this.move("next",".ui-menu-item:first",B)},previous:function(B){this.move("prev",".ui-menu-item:last",B)},first:function(){return this.active&&!this.active.prev().length},last:function(){return this.active&&!this.active.next().length},move:function(E,D,C){if(!this.active){this.activate(C,this.element.children(D));return }var B=this.active[E+"All"](".ui-menu-item").eq(0);if(B.length){this.activate(C,B)}else{this.activate(C,this.element.children(D))}},nextPage:function(D){if(this.hasScroll()){if(!this.active||this.last()){this.activate(D,this.element.children(":first"));return }var E=this.active.offset().top,C=this.element.height(),B=this.element.children("li").filter(function(){var F=A(this).offset().top-E-C+A(this).height();return F<10&&F>-10});if(!B.length){B=this.element.children(":last")}this.activate(D,B)}else{this.activate(D,this.element.children(!this.active||this.last()?":first":":last"))}},previousPage:function(C){if(this.hasScroll()){if(!this.active||this.first()){this.activate(C,this.element.children(":last"));return }var D=this.active.offset().top,B=this.element.height();result=this.element.children("li").filter(function(){var E=A(this).offset().top-D+B-A(this).height();return E<10&&E>-10});if(!result.length){result=this.element.children(":first")}this.activate(C,result)}else{this.activate(C,this.element.children(!this.active||this.first()?":last":":first"))}},hasScroll:function(){return this.element.height()<this.element.attr("scrollHeight")},select:function(B){this._trigger("selected",B,{item:this.active})}})}(jQuery));
/* module-key = 'bamboo.web.resources:jQuery.cookie', location = '/bower/jquery.cookie/jquery.cookie.js' */
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		// AMD
		define(['jquery'], factory);
	} else if (typeof exports === 'object') {
		// CommonJS
		factory(require('jquery'));
	} else {
		// Browser globals
		factory(jQuery);
	}
}(function ($) {

	var pluses = /\+/g;

	function encode(s) {
		return config.raw ? s : encodeURIComponent(s);
	}

	function decode(s) {
		return config.raw ? s : decodeURIComponent(s);
	}

	function stringifyCookieValue(value) {
		return encode(config.json ? JSON.stringify(value) : String(value));
	}

	function parseCookieValue(s) {
		if (s.indexOf('"') === 0) {
			// This is a quoted cookie as according to RFC2068, unescape...
			s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
		}

		try {
			// Replace server-side written pluses with spaces.
			// If we can't decode the cookie, ignore it, it's unusable.
			// If we can't parse the cookie, ignore it, it's unusable.
			s = decodeURIComponent(s.replace(pluses, ' '));
			return config.json ? JSON.parse(s) : s;
		} catch(e) {}
	}

	function read(s, converter) {
		var value = config.raw ? s : parseCookieValue(s);
		return $.isFunction(converter) ? converter(value) : value;
	}

	var config = $.cookie = function (key, value, options) {

		// Write

		if (value !== undefined && !$.isFunction(value)) {
			options = $.extend({}, config.defaults, options);

			if (typeof options.expires === 'number') {
				var days = options.expires, t = options.expires = new Date();
				t.setTime(+t + days * 864e+5);
			}

			return (document.cookie = [
				encode(key), '=', stringifyCookieValue(value),
				options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
				options.path    ? '; path=' + options.path : '',
				options.domain  ? '; domain=' + options.domain : '',
				options.secure  ? '; secure' : ''
			].join(''));
		}

		// Read

		var result = key ? undefined : {};

		// To prevent the for loop in the first place assign an empty array
		// in case there are no cookies at all. Also prevents odd result when
		// calling $.cookie().
		var cookies = document.cookie ? document.cookie.split('; ') : [];

		for (var i = 0, l = cookies.length; i < l; i++) {
			var parts = cookies[i].split('=');
			var name = decode(parts.shift());
			var cookie = parts.join('=');

			if (key && key === name) {
				// If second argument (value) is a function it's a converter...
				result = read(cookie, value);
				break;
			}

			// Prevent storing a cookie that we couldn't decode.
			if (!key && (cookie = read(cookie)) !== undefined) {
				result[name] = cookie;
			}
		}

		return result;
	};

	config.defaults = {};

	$.removeCookie = function (key, options) {
		if ($.cookie(key) === undefined) {
			return false;
		}

		// Must not alter options, thus extending a fresh object...
		$.cookie(key, '', $.extend({}, options, { expires: -1 }));
		return !$.cookie(key);
	};

}));

/* module-key = 'bamboo.web.resources:extraJQuery', location = '/scripts/jquery/tablesorter-2.0.3/jquery.tablesorter.min.js' */

(function($){$.extend({tablesorter:new function(){var parsers=[],widgets=[];this.defaults={cssHeader:"header",cssAsc:"headerSortUp",cssDesc:"headerSortDown",sortInitialOrder:"asc",sortMultiSortKey:"shiftKey",sortForce:null,sortAppend:null,textExtraction:"simple",parsers:{},widgets:[],widgetZebra:{css:["even","odd"]},headers:{},widthFixed:false,cancelSelection:true,sortList:[],headerList:[],dateFormat:"us",decimal:'.',debug:false};function benchmark(s,d){log(s+","+(new Date().getTime()-d.getTime())+"ms");}this.benchmark=benchmark;function log(s){if(typeof console!="undefined"&&typeof console.debug!="undefined"){console.log(s);}else{alert(s);}}function buildParserCache(table,$headers){if(table.config.debug){var parsersDebug="";}var rows=table.tBodies[0].rows;if(table.tBodies[0].rows[0]){var list=[],cells=rows[0].cells,l=cells.length;for(var i=0;i<l;i++){var p=false;if($.metadata&&($($headers[i]).metadata()&&$($headers[i]).metadata().sorter)){p=getParserById($($headers[i]).metadata().sorter);}else if((table.config.headers[i]&&table.config.headers[i].sorter)){p=getParserById(table.config.headers[i].sorter);}if(!p){p=detectParserForColumn(table,cells[i]);}if(table.config.debug){parsersDebug+="column:"+i+" parser:"+p.id+"\n";}list.push(p);}}if(table.config.debug){log(parsersDebug);}return list;};function detectParserForColumn(table,node){var l=parsers.length;for(var i=1;i<l;i++){if(parsers[i].is($.trim(getElementText(table.config,node)),table,node)){return parsers[i];}}return parsers[0];}function getParserById(name){var l=parsers.length;for(var i=0;i<l;i++){if(parsers[i].id.toLowerCase()==name.toLowerCase()){return parsers[i];}}return false;}function buildCache(table){if(table.config.debug){var cacheTime=new Date();}var totalRows=(table.tBodies[0]&&table.tBodies[0].rows.length)||0,totalCells=(table.tBodies[0].rows[0]&&table.tBodies[0].rows[0].cells.length)||0,parsers=table.config.parsers,cache={row:[],normalized:[]};for(var i=0;i<totalRows;++i){var c=table.tBodies[0].rows[i],cols=[];cache.row.push($(c));for(var j=0;j<totalCells;++j){cols.push(parsers[j].format(getElementText(table.config,c.cells[j]),table,c.cells[j]));}cols.push(i);cache.normalized.push(cols);cols=null;};if(table.config.debug){benchmark("Building cache for "+totalRows+" rows:",cacheTime);}return cache;};function getElementText(config,node){if(!node)return"";var t="";if(config.textExtraction=="simple"){if(node.childNodes[0]&&node.childNodes[0].hasChildNodes()){t=node.childNodes[0].innerHTML;}else{t=node.innerHTML;}}else{if(typeof(config.textExtraction)=="function"){t=config.textExtraction(node);}else{t=$(node).text();}}return t;}function appendToTable(table,cache){if(table.config.debug){var appendTime=new Date()}var c=cache,r=c.row,n=c.normalized,totalRows=n.length,checkCell=(n[0].length-1),tableBody=$(table.tBodies[0]),rows=[];for(var i=0;i<totalRows;i++){rows.push(r[n[i][checkCell]]);if(!table.config.appender){var o=r[n[i][checkCell]];var l=o.length;for(var j=0;j<l;j++){tableBody[0].appendChild(o[j]);}}}if(table.config.appender){table.config.appender(table,rows);}rows=null;if(table.config.debug){benchmark("Rebuilt table:",appendTime);}applyWidget(table);setTimeout(function(){$(table).trigger("sortEnd");},0);};function buildHeaders(table){if(table.config.debug){var time=new Date();}var meta=($.metadata)?true:false,tableHeadersRows=[];for(var i=0;i<table.tHead.rows.length;i++){tableHeadersRows[i]=0;};$tableHeaders=$("thead th",table);$tableHeaders.each(function(index){this.count=0;this.column=index;this.order=formatSortingOrder(table.config.sortInitialOrder);if(checkHeaderMetadata(this)||checkHeaderOptions(table,index))this.sortDisabled=true;if(!this.sortDisabled){$(this).addClass(table.config.cssHeader);}table.config.headerList[index]=this;});if(table.config.debug){benchmark("Built headers:",time);log($tableHeaders);}return $tableHeaders;};function checkCellColSpan(table,rows,row){var arr=[],r=table.tHead.rows,c=r[row].cells;for(var i=0;i<c.length;i++){var cell=c[i];if(cell.colSpan>1){arr=arr.concat(checkCellColSpan(table,headerArr,row++));}else{if(table.tHead.length==1||(cell.rowSpan>1||!r[row+1])){arr.push(cell);}}}return arr;};function checkHeaderMetadata(cell){if(($.metadata)&&($(cell).metadata().sorter===false)){return true;};return false;}function checkHeaderOptions(table,i){if((table.config.headers[i])&&(table.config.headers[i].sorter===false)){return true;};return false;}function applyWidget(table){var c=table.config.widgets;var l=c.length;for(var i=0;i<l;i++){getWidgetById(c[i]).format(table);}}function getWidgetById(name){var l=widgets.length;for(var i=0;i<l;i++){if(widgets[i].id.toLowerCase()==name.toLowerCase()){return widgets[i];}}};function formatSortingOrder(v){if(typeof(v)!="Number"){i=(v.toLowerCase()=="desc")?1:0;}else{i=(v==(0||1))?v:0;}return i;}function isValueInArray(v,a){var l=a.length;for(var i=0;i<l;i++){if(a[i][0]==v){return true;}}return false;}function setHeadersCss(table,$headers,list,css){$headers.removeClass(css[0]).removeClass(css[1]);var h=[];$headers.each(function(offset){if(!this.sortDisabled){h[this.column]=$(this);}});var l=list.length;for(var i=0;i<l;i++){h[list[i][0]].addClass(css[list[i][1]]);}}function fixColumnWidth(table,$headers){var c=table.config;if(c.widthFixed){var colgroup=$('<colgroup>');$("tr:first td",table.tBodies[0]).each(function(){colgroup.append($('<col>').css('width',$(this).width()));});$(table).prepend(colgroup);};}function updateHeaderSortCount(table,sortList){var c=table.config,l=sortList.length;for(var i=0;i<l;i++){var s=sortList[i],o=c.headerList[s[0]];o.count=s[1];o.count++;}}function multisort(table,sortList,cache){if(table.config.debug){var sortTime=new Date();}var dynamicExp="var sortWrapper = function(a,b) {",l=sortList.length;for(var i=0;i<l;i++){var c=sortList[i][0];var order=sortList[i][1];var s=(getCachedSortType(table.config.parsers,c)=="text")?((order==0)?"sortText":"sortTextDesc"):((order==0)?"sortNumeric":"sortNumericDesc");var e="e"+i;dynamicExp+="var "+e+" = "+s+"(a["+c+"],b["+c+"]); ";dynamicExp+="if("+e+") { return "+e+"; } ";dynamicExp+="else { ";}var orgOrderCol=cache.normalized[0].length-1;dynamicExp+="return a["+orgOrderCol+"]-b["+orgOrderCol+"];";for(var i=0;i<l;i++){dynamicExp+="}; ";}dynamicExp+="return 0; ";dynamicExp+="}; ";eval(dynamicExp);cache.normalized.sort(sortWrapper);if(table.config.debug){benchmark("Sorting on "+sortList.toString()+" and dir "+order+" time:",sortTime);}return cache;};function sortText(a,b){return((a<b)?-1:((a>b)?1:0));};function sortTextDesc(a,b){return((b<a)?-1:((b>a)?1:0));};function sortNumeric(a,b){return a-b;};function sortNumericDesc(a,b){return b-a;};function getCachedSortType(parsers,i){return parsers[i].type;};this.construct=function(settings){return this.each(function(){if(!this.tHead||!this.tBodies)return;var $this,$document,$headers,cache,config,shiftDown=0,sortOrder;this.config={};config=$.extend(this.config,$.tablesorter.defaults,settings);$this=$(this);$headers=buildHeaders(this);this.config.parsers=buildParserCache(this,$headers);cache=buildCache(this);var sortCSS=[config.cssDesc,config.cssAsc];fixColumnWidth(this);$headers.click(function(e){$this.trigger("sortStart");var totalRows=($this[0].tBodies[0]&&$this[0].tBodies[0].rows.length)||0;if(!this.sortDisabled&&totalRows>0){var $cell=$(this);var i=this.column;this.order=this.count++%2;if(!e[config.sortMultiSortKey]){config.sortList=[];if(config.sortForce!=null){var a=config.sortForce;for(var j=0;j<a.length;j++){if(a[j][0]!=i){config.sortList.push(a[j]);}}}config.sortList.push([i,this.order]);}else{if(isValueInArray(i,config.sortList)){for(var j=0;j<config.sortList.length;j++){var s=config.sortList[j],o=config.headerList[s[0]];if(s[0]==i){o.count=s[1];o.count++;s[1]=o.count%2;}}}else{config.sortList.push([i,this.order]);}};setTimeout(function(){setHeadersCss($this[0],$headers,config.sortList,sortCSS);appendToTable($this[0],multisort($this[0],config.sortList,cache));},1);return false;}}).mousedown(function(){if(config.cancelSelection){this.onselectstart=function(){return false};return false;}});$this.bind("update",function(){this.config.parsers=buildParserCache(this,$headers);cache=buildCache(this);}).bind("sorton",function(e,list){$(this).trigger("sortStart");config.sortList=list;var sortList=config.sortList;updateHeaderSortCount(this,sortList);setHeadersCss(this,$headers,sortList,sortCSS);appendToTable(this,multisort(this,sortList,cache));}).bind("appendCache",function(){appendToTable(this,cache);}).bind("applyWidgetId",function(e,id){getWidgetById(id).format(this);}).bind("applyWidgets",function(){applyWidget(this);});if($.metadata&&($(this).metadata()&&$(this).metadata().sortlist)){config.sortList=$(this).metadata().sortlist;}if(config.sortList.length>0){$this.trigger("sorton",[config.sortList]);}applyWidget(this);});};this.addParser=function(parser){var l=parsers.length,a=true;for(var i=0;i<l;i++){if(parsers[i].id.toLowerCase()==parser.id.toLowerCase()){a=false;}}if(a){parsers.push(parser);};};this.addWidget=function(widget){widgets.push(widget);};this.formatFloat=function(s){var i=parseFloat(s);return(isNaN(i))?0:i;};this.formatInt=function(s){var i=parseInt(s);return(isNaN(i))?0:i;};this.isDigit=function(s,config){var DECIMAL='\\'+config.decimal;var exp='/(^[+]?0('+DECIMAL+'0+)?$)|(^([-+]?[1-9][0-9]*)$)|(^([-+]?((0?|[1-9][0-9]*)'+DECIMAL+'(0*[1-9][0-9]*)))$)|(^[-+]?[1-9]+[0-9]*'+DECIMAL+'0+$)/';return RegExp(exp).test($.trim(s));};this.clearTableBody=function(table){if($.browser.msie){function empty(){while(this.firstChild)this.removeChild(this.firstChild);}empty.apply(table.tBodies[0]);}else{table.tBodies[0].innerHTML="";}};}});$.fn.extend({tablesorter:$.tablesorter.construct});var ts=$.tablesorter;ts.addParser({id:"text",is:function(s){return true;},format:function(s){return $.trim(s.toLowerCase());},type:"text"});ts.addParser({id:"digit",is:function(s,table){var c=table.config;return $.tablesorter.isDigit(s,c);},format:function(s){return $.tablesorter.formatFloat(s);},type:"numeric"});ts.addParser({id:"currency",is:function(s){return/^[£$€?.]/.test(s);},format:function(s){return $.tablesorter.formatFloat(s.replace(new RegExp(/[^0-9.]/g),""));},type:"numeric"});ts.addParser({id:"ipAddress",is:function(s){return/^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(s);},format:function(s){var a=s.split("."),r="",l=a.length;for(var i=0;i<l;i++){var item=a[i];if(item.length==2){r+="0"+item;}else{r+=item;}}return $.tablesorter.formatFloat(r);},type:"numeric"});ts.addParser({id:"url",is:function(s){return/^(https?|ftp|file):\/\/$/.test(s);},format:function(s){return jQuery.trim(s.replace(new RegExp(/(https?|ftp|file):\/\//),''));},type:"text"});ts.addParser({id:"isoDate",is:function(s){return/^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(s);},format:function(s){return $.tablesorter.formatFloat((s!="")?new Date(s.replace(new RegExp(/-/g),"/")).getTime():"0");},type:"numeric"});ts.addParser({id:"percent",is:function(s){return/\%$/.test($.trim(s));},format:function(s){return $.tablesorter.formatFloat(s.replace(new RegExp(/%/g),""));},type:"numeric"});ts.addParser({id:"usLongDate",is:function(s){return s.match(new RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/));},format:function(s){return $.tablesorter.formatFloat(new Date(s).getTime());},type:"numeric"});ts.addParser({id:"shortDate",is:function(s){return/\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/.test(s);},format:function(s,table){var c=table.config;s=s.replace(/\-/g,"/");if(c.dateFormat=="us"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/,"$3/$1/$2");}else if(c.dateFormat=="uk"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/,"$3/$2/$1");}else if(c.dateFormat=="dd/mm/yy"||c.dateFormat=="dd-mm-yy"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/,"$1/$2/$3");}return $.tablesorter.formatFloat(new Date(s).getTime());},type:"numeric"});ts.addParser({id:"time",is:function(s){return/^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(s);},format:function(s){return $.tablesorter.formatFloat(new Date("2000/01/01 "+s).getTime());},type:"numeric"});ts.addParser({id:"metadata",is:function(s){return false;},format:function(s,table,cell){var c=table.config,p=(!c.parserMetadataName)?'sortValue':c.parserMetadataName;return $(cell).metadata()[p];},type:"numeric"});ts.addWidget({id:"zebra",format:function(table){if(table.config.debug){var time=new Date();}$("tr:visible",table.tBodies[0]).filter(':even').removeClass(table.config.widgetZebra.css[1]).addClass(table.config.widgetZebra.css[0]).end().filter(':odd').removeClass(table.config.widgetZebra.css[0]).addClass(table.config.widgetZebra.css[1]);if(table.config.debug){$.tablesorter.benchmark("Applying Zebra widget",time);}}});})(jQuery);
/* module-key = 'com.atlassian.auiplugin:ajs-backbone', location = 'js-vendor/backbone/backbone.js' */
/* THIS FILE HAS BEEN MODIFIED BY ATLASSIAN. Modified lines are marked below, search "ATLASSIAN" */
(function(){var U=this;var b=U.Backbone;var G=[];var d=G.push;var N=G.slice;var T=G.splice;var Z;if(typeof exports!=="undefined"){Z=exports}else{Z=U.Backbone={}}Z.VERSION="1.0.0";var l=U._;if(!l&&(typeof require!=="undefined")){l=require("underscore")}Z.$=U.jQuery||U.Zepto||U.ender||U.$;Z.noConflict=function(){U.Backbone=b;return this};Z.emulateHTTP=false;Z.emulateJSON=false;var j=Z.Events={on:function(m,p,o){if(!X(this,"on",m,[p,o])||!p){return this}this._events||(this._events={});var n=this._events[m]||(this._events[m]=[]);n.push({callback:p,context:o,ctx:o||this});return this},once:function(n,q,o){if(!X(this,"once",n,[q,o])||!q){return this}var m=this;var p=l.once(function(){m.off(n,p);q.apply(this,arguments)});p._callback=q;return this.on(n,p,o)},off:function(m,v,n){var t,u,w,s,r,o,q,p;if(!this._events||!X(this,"off",m,[v,n])){return this}if(!m&&!v&&!n){this._events={};return this}s=m?[m]:l.keys(this._events);for(r=0,o=s.length;r<o;r++){m=s[r];if(w=this._events[m]){this._events[m]=t=[];if(v||n){for(q=0,p=w.length;q<p;q++){u=w[q];if((v&&v!==u.callback&&v!==u.callback._callback)||(n&&n!==u.context)){t.push(u)}}}if(!t.length){delete this._events[m]}}}return this},trigger:function(o){if(!this._events){return this}var n=N.call(arguments,1);if(!X(this,"trigger",o,n)){return this}var p=this._events[o];var m=this._events.all;if(p){B(p,n)}if(m){B(m,arguments)}return this},stopListening:function(p,m,r){var n=this._listeners;if(!n){return this}var o=!m&&!r;if(typeof m==="object"){r=this}if(p){(n={})[p._listenerId]=p}for(var q in n){n[q].off(m,r,this);if(o){delete this._listeners[q]}}return this}};var W=/\s+/;var X=function(t,r,n,q){if(!n){return true}if(typeof n==="object"){for(var p in n){t[r].apply(t,[p,n[p]].concat(q))}return false}if(W.test(n)){var s=n.split(W);for(var o=0,m=s.length;o<m;o++){t[r].apply(t,[s[o]].concat(q))}return false}return true};var B=function(r,p){var s,q=-1,o=r.length,n=p[0],m=p[1],t=p[2];switch(p.length){case 0:while(++q<o){(s=r[q]).callback.call(s.ctx)}return ;case 1:while(++q<o){(s=r[q]).callback.call(s.ctx,n)}return ;case 2:while(++q<o){(s=r[q]).callback.call(s.ctx,n,m)}return ;case 3:while(++q<o){(s=r[q]).callback.call(s.ctx,n,m,t)}return ;default:while(++q<o){(s=r[q]).callback.apply(s.ctx,p)}}};var c={listenTo:"on",listenToOnce:"once"};l.each(c,function(m,n){j[n]=function(q,o,s){var p=this._listeners||(this._listeners={});var r=q._listenerId||(q._listenerId=l.uniqueId("l"));p[r]=q;if(typeof o==="object"){s=this}q[m](o,s,this);return this}});j.bind=j.on;j.unbind=j.off;l.extend(Z,j);var e=Z.Model=function(m,o){var p;var n=m||{};o||(o={});this.cid=l.uniqueId("c");this.attributes={};l.extend(this,l.pick(o,f));if(o.parse){n=this.parse(n,o)||{}}if(p=l.result(this,"defaults")){n=l.defaults({},n,p)}this.set(n,o);this.changed={};this.initialize.apply(this,arguments)};var f=["url","urlRoot","collection"];l.extend(e.prototype,j,{changed:null,validationError:null,idAttribute:"id",initialize:function(){},toJSON:function(m){return l.clone(this.attributes)},sync:function(){return Z.sync.apply(this,arguments)},get:function(m){return this.attributes[m]},escape:function(m){return l.escape(this.get(m))},has:function(m){return this.get(m)!=null},set:function(u,m,y){var s,v,w,t,r,x,o,q;if(u==null){return this}if(typeof u==="object"){v=u;y=m}else{(v={})[u]=m}y||(y={});if(!this._validate(v,y)){return false}w=y.unset;r=y.silent;t=[];x=this._changing;this._changing=true;if(!x){this._previousAttributes=l.clone(this.attributes);this.changed={}}q=this.attributes,o=this._previousAttributes;if(this.idAttribute in v){this.id=v[this.idAttribute]}for(s in v){m=v[s];if(!l.isEqual(q[s],m)){t.push(s)}if(!l.isEqual(o[s],m)){this.changed[s]=m}else{delete this.changed[s]}w?delete q[s]:q[s]=m}if(!r){if(t.length){this._pending=true}for(var p=0,n=t.length;p<n;p++){this.trigger("change:"+t[p],this,q[t[p]],y)}}if(x){return this}if(!r){while(this._pending){this._pending=false;this.trigger("change",this,y)}}this._pending=false;this._changing=false;return this},unset:function(m,n){return this.set(m,void 0,l.extend({},n,{unset:true}))},clear:function(n){var m={};for(var o in this.attributes){m[o]=void 0}return this.set(m,l.extend({},n,{unset:true}))},hasChanged:function(m){if(m==null){return !l.isEmpty(this.changed)}return l.has(this.changed,m)},changedAttributes:function(o){if(!o){return this.hasChanged()?l.clone(this.changed):false}var q,p=false;var n=this._changing?this._previousAttributes:this.attributes;for(var m in o){if(l.isEqual(n[m],(q=o[m]))){continue}(p||(p={}))[m]=q}return p},previous:function(m){if(m==null||!this._previousAttributes){return null}return this._previousAttributes[m]},previousAttributes:function(){return l.clone(this._previousAttributes)},fetch:function(n){n=n?l.clone(n):{};if(n.parse===void 0){n.parse=true}var m=this;var o=n.success;n.success=function(p){if(!m.set(m.parse(p,n),n)){return false}if(o){o(m,p,n)}m.trigger("sync",m,p,n)};h(this,n);return this.sync("read",this,n)},save:function(q,n,u){var r,m,t,o=this.attributes;if(q==null||typeof q==="object"){r=q;u=n}else{(r={})[q]=n}if(r&&(!u||!u.wait)&&!this.set(r,u)){return false}u=l.extend({validate:true},u);if(!this._validate(r,u)){return false}if(r&&u.wait){this.attributes=l.extend({},o,r)}if(u.parse===void 0){u.parse=true}var p=this;var s=u.success;u.success=function(w){p.attributes=o;var v=p.parse(w,u);if(u.wait){v=l.extend(r||{},v)}if(l.isObject(v)&&!p.set(v,u)){return false}if(s){s(p,w,u)}p.trigger("sync",p,w,u)};h(this,u);m=this.isNew()?"create":(u.patch?"patch":"update");if(m==="patch"){u.attrs=r}t=this.sync(m,this,u);if(r&&u.wait){this.attributes=o}return t},destroy:function(n){n=n?l.clone(n):{};var m=this;var q=n.success;var o=function(){m.trigger("destroy",m,m.collection,n)};n.success=function(r){if(n.wait||m.isNew()){o()}if(q){q(m,r,n)}if(!m.isNew()){m.trigger("sync",m,r,n)}};if(this.isNew()){n.success();return false}h(this,n);var p=this.sync("delete",this,n);if(!n.wait){o()}return p},url:function(){var m=l.result(this,"urlRoot")||l.result(this.collection,"url")||R();if(this.isNew()){return m}return m+(m.charAt(m.length-1)==="/"?"":"/")+encodeURIComponent(this.id)},parse:function(n,m){return n},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return this.id==null},isValid:function(m){return this._validate({},l.extend(m||{},{validate:true}))},_validate:function(o,n){if(!n.validate||!this.validate){return true}o=l.extend({},this.attributes,o);var m=this.validationError=this.validate(o,n)||null;if(!m){return true}this.trigger("invalid",this,m,l.extend(n||{},{validationError:m}));return false}});var A=["keys","values","pairs","invert","pick","omit"];l.each(A,function(m){e.prototype[m]=function(){var n=N.call(arguments);n.unshift(this.attributes);return l[m].apply(l,n)}});var C=Z.Collection=function(n,m){m||(m={});if(m.url){this.url=m.url}if(m.model){this.model=m.model}if(m.comparator!==void 0){this.comparator=m.comparator}this._reset();this.initialize.apply(this,arguments);if(n){this.reset(n,l.extend({silent:true},m))}};var O={add:true,remove:true,merge:true};var k={add:true,merge:false,remove:false};l.extend(C.prototype,j,{model:e,initialize:function(){},toJSON:function(m){return this.map(function(n){return n.toJSON(m)})},sync:function(){return Z.sync.apply(this,arguments)},add:function(n,m){return this.set(n,l.defaults(m||{},k))},remove:function(r,p){r=l.isArray(r)?r.slice():[r];p||(p={});var q,m,o,n;for(q=0,m=r.length;q<m;q++){n=this.get(r[q]);if(!n){continue}delete this._byId[n.id];delete this._byId[n.cid];o=this.indexOf(n);this.models.splice(o,1);this.length--;if(!p.silent){p.index=o;n.trigger("remove",n,this,p)}this._removeReference(n)}return this},set:function(n,z){z=l.defaults(z||{},O);if(z.parse){n=this.parse(n,z)}if(!l.isArray(n)){n=n?[n]:[]}var u,q,w,x,o,v;var p=z.at;var t=this.comparator&&(p==null)&&z.sort!==false;var r=l.isString(this.comparator)?this.comparator:null;var y=[],m=[],s={};for(u=0,q=n.length;u<q;u++){if(!(w=this._prepareModel(n[u],z))){continue}if(o=this.get(w)){if(z.remove){s[o.cid]=true}if(z.merge){o.set(w.attributes,z);if(t&&!v&&o.hasChanged(r)){v=true}}}else{if(z.add){y.push(w);w.on("all",this._onModelEvent,this);this._byId[w.cid]=w;if(w.id!=null){this._byId[w.id]=w}}}}if(z.remove){for(u=0,q=this.length;u<q;++u){if(!s[(w=this.models[u]).cid]){m.push(w)}}if(m.length){this.remove(m,z)}}if(y.length){if(t){v=true}this.length+=y.length;if(p!=null){T.apply(this.models,[p,0].concat(y))}else{d.apply(this.models,y)}}if(v){this.sort({silent:true})}if(z.silent){return this}for(u=0,q=y.length;u<q;u++){(w=y[u]).trigger("add",w,this,z)}if(v){this.trigger("sort",this,z)}return this},reset:function(p,n){n||(n={});for(var o=0,m=this.models.length;o<m;o++){this._removeReference(this.models[o])}n.previousModels=this.models;this._reset();this.add(p,l.extend({silent:true},n));if(!n.silent){this.trigger("reset",this,n)}return this},push:function(n,m){n=this._prepareModel(n,m);this.add(n,l.extend({at:this.length},m));return n},pop:function(n){var m=this.at(this.length-1);this.remove(m,n);return m},unshift:function(n,m){n=this._prepareModel(n,m);this.add(n,l.extend({at:0},m));return n},shift:function(n){var m=this.at(0);this.remove(m,n);return m},slice:function(n,m){return this.models.slice(n,m)},get:function(m){if(m==null){return void 0}return this._byId[m.id!=null?m.id:m.cid||m]},at:function(m){return this.models[m]},where:function(m,n){if(l.isEmpty(m)){return n?void 0:[]}return this[n?"find":"filter"](function(o){for(var p in m){if(m[p]!==o.get(p)){return false}}return true})},findWhere:function(m){return this.where(m,true)},sort:function(m){if(!this.comparator){throw new Error("Cannot sort a set without a comparator")}m||(m={});if(l.isString(this.comparator)||this.comparator.length===1){this.models=this.sortBy(this.comparator,this)}else{this.models.sort(l.bind(this.comparator,this))}if(!m.silent){this.trigger("sort",this,m)}return this},sortedIndex:function(m,p,n){p||(p=this.comparator);var o=l.isFunction(p)?p:function(q){return q.get(p)};return l.sortedIndex(this.models,m,o,n)},pluck:function(m){return l.invoke(this.models,"get",m)},fetch:function(m){m=m?l.clone(m):{};if(m.parse===void 0){m.parse=true}var o=m.success;var n=this;m.success=function(p){var q=m.reset?"reset":"set";n[q](p,m);if(o){o(n,p,m)}n.trigger("sync",n,p,m)};h(this,m);return this.sync("read",this,m)},create:function(n,m){m=m?l.clone(m):{};if(!(n=this._prepareModel(n,m))){return false}if(!m.wait){this.add(n,m)}var p=this;var o=m.success;m.success=function(r,s,q){if(q.wait){p.add(r,q)}if(o){o(r,s,q)}};n.save(null,m);return n},parse:function(n,m){return n},clone:function(){return new this.constructor(this.models)},_reset:function(){this.length=0;this.models=[];this._byId={}},_prepareModel:function(o,n){if(o instanceof e){if(!o.collection){o.collection=this}return o}n||(n={});n.collection=this;var m=new this.model(o,n);if(!m._validate(o,n)){this.trigger("invalid",this,o,n);return false}return m},_removeReference:function(m){if(this===m.collection){delete m.collection}m.off("all",this._onModelEvent,this)},_onModelEvent:function(o,n,p,m){if((o==="add"||o==="remove")&&p!==this){return }if(o==="destroy"){this.remove(n,m)}if(n&&o==="change:"+n.idAttribute){delete this._byId[n.previous(n.idAttribute)];if(n.id!=null){this._byId[n.id]=n}}this.trigger.apply(this,arguments)}});var Y=["forEach","each","map","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","max","min","toArray","size","first","head","take","initial","rest","tail","drop","last","without","indexOf","shuffle","lastIndexOf","isEmpty","chain"];l.each(Y,function(m){C.prototype[m]=function(){var n=N.call(arguments);n.unshift(this.models);return l[m].apply(l,n)}});var K=["groupBy","countBy","sortBy"];l.each(K,function(m){C.prototype[m]=function(p,n){var o=l.isFunction(p)?p:function(q){return q.get(p)};return l[m](this.models,o,n)}});var g=Z.View=function(m){this.cid=l.uniqueId("view");this._configure(m||{});this._ensureElement();this.initialize.apply(this,arguments);this.delegateEvents()};var V=/^(\S+)\s*(.*)$/;var E=["model","collection","el","id","attributes","className","tagName","events"];l.extend(g.prototype,j,{tagName:"div",$:function(m){return this.$el.find(m)},initialize:function(){},render:function(){return this},remove:function(){this.$el.remove();this.stopListening();return this},setElement:function(m,n){if(this.$el){this.undelegateEvents()}this.$el=m instanceof Z.$?m:Z.$(m);this.el=this.$el[0];if(n!==false){this.delegateEvents()}return this},delegateEvents:function(q){if(!(q||(q=l.result(this,"events")))){return this}this.undelegateEvents();for(var p in q){var r=q[p];if(!l.isFunction(r)){r=this[q[p]]}if(!r){continue}var o=p.match(V);var n=o[1],m=o[2];r=l.bind(r,this);n+=".delegateEvents"+this.cid;if(m===""){this.$el.on(n,r)}else{this.$el.on(n,m,r)}}return this},undelegateEvents:function(){this.$el.off(".delegateEvents"+this.cid);return this},_configure:function(m){if(this.options){m=l.extend({},l.result(this,"options"),m)}l.extend(this,l.pick(m,E));this.options=m},_ensureElement:function(){if(!this.el){var m=l.extend({},l.result(this,"attributes"));if(this.id){m.id=l.result(this,"id")}if(this.className){m["class"]=l.result(this,"className")}var n=Z.$("<"+l.result(this,"tagName")+">").attr(m);this.setElement(n,false)}else{this.setElement(l.result(this,"el"),false)}}});Z.sync=function(s,n,m){var p=J[s];l.defaults(m||(m={}),{emulateHTTP:Z.emulateHTTP,emulateJSON:Z.emulateJSON});var r={type:p,dataType:"json"};if(!m.url){r.url=l.result(n,"url")||R()}if(m.data==null&&n&&(s==="create"||s==="update"||s==="patch")){r.contentType="application/json";r.data=JSON.stringify(m.attrs||n.toJSON(m))}if(m.emulateJSON){r.contentType="application/x-www-form-urlencoded";r.data=r.data?{model:r.data}:{}}if(m.emulateHTTP&&(p==="PUT"||p==="DELETE"||p==="PATCH")){r.type="POST";if(m.emulateJSON){r.data._method=p}var o=m.beforeSend;m.beforeSend=function(t){t.setRequestHeader("X-HTTP-Method-Override",p);if(o){return o.apply(this,arguments)}}}if(r.type!=="GET"&&!m.emulateJSON){r.processData=false}if(r.type==="PATCH"&&window.ActiveXObject&&!(window.external&&window.external.msActiveXFilteringEnabled)){r.xhr=function(){return new ActiveXObject("Microsoft.XMLHTTP")}}var q=m.xhr=Z.ajax(l.extend(r,m));n.trigger("request",n,q,m);return q};var J={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"};Z.ajax=function(){return Z.$.ajax.apply(Z.$,arguments)};var P=Z.Router=function(m){m||(m={});if(m.routes){this.routes=m.routes}this._bindRoutes();this.initialize.apply(this,arguments)};var Q=/\((.*?)\)/g;var S=/(\(\?)?:\w+/g;var D=/\*\w+/g;var H=/[\-{}\[\]+?.,\\\^$|#\s]/g;l.extend(P.prototype,j,{initialize:function(){},route:function(n,o,p){if(!l.isRegExp(n)){n=this._routeToRegExp(n)}if(l.isFunction(o)){p=o;o=""}if(!p){p=this[o]}var m=this;Z.history.route(n,function(r){var q=m._extractParameters(n,r);p&&p.apply(m,q);m.trigger.apply(m,["route:"+o].concat(q));m.trigger("route",o,q);Z.history.trigger("route",m,o,q)});return this},navigate:function(n,m){Z.history.navigate(n,m);return this},_bindRoutes:function(){if(!this.routes){return }this.routes=l.result(this,"routes");var n,m=l.keys(this.routes);while((n=m.pop())!=null){this.route(n,this.routes[n])}},_routeToRegExp:function(m){m=m.replace(H,"\\$&").replace(Q,"(?:$1)?").replace(S,function(o,n){return n?o:"([^/]+)"}).replace(D,"(.*?)");return new RegExp("^"+m+"$")},_extractParameters:function(m,n){var o=m.exec(n).slice(1);return l.map(o,function(p){return p?decodeURIComponent(p):null})}});var I=Z.History=function(){this.handlers=[];l.bindAll(this,"checkUrl");if(typeof window!=="undefined"){this.location=window.location;this.history=window.history}};var a=/^[#\/]|\s+$/g;var F=/^\/+|\/+$/g;var i=/msie [\w.]+/;var M=/\/$/;I.started=false;l.extend(I.prototype,j,{interval:50,getHash:function(n){var m=(n||this).location.href.match(/#(.*)$/);return m?m[1]:""},getFragment:function(o,n){if(o==null){if(this._hasPushState||!this._wantsHashChange||n){o=this.location.pathname;var m=this.root.replace(M,"");if(!o.indexOf(m)){o=o.substr(m.length)}}else{o=this.getHash()}}return o.replace(a,"")},start:function(o){if(I.started){throw new Error("Backbone.history has already been started")}I.started=true;this.options=l.extend({},{root:"/"},this.options,o);this.root=this.options.root;this._wantsHashChange=this.options.hashChange!==false;this._wantsPushState=!!this.options.pushState;this._hasPushState=!!(this.options.pushState&&this.history&&this.history.pushState);var n=this.getFragment();var m=document.documentMode;var q=(i.exec(navigator.userAgent.toLowerCase())&&(!m||m<=7));this.root=("/"+this.root+"/").replace(F,"/");if(q&&this._wantsHashChange){this.iframe=Z.$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo("body")[0].contentWindow;this.navigate(n)}if(this._hasPushState){Z.$(window).on("popstate",this.checkUrl)}else{if(this._wantsHashChange&&("onhashchange" in window)&&!q){Z.$(window).on("hashchange",this.checkUrl)}else{if(this._wantsHashChange){this._checkUrlInterval=setInterval(this.checkUrl,this.interval)}}}this.fragment=n;var r=this.location;var p=r.pathname.replace(/[^\/]$/,"$&/")===this.root;if(this._wantsHashChange&&this._wantsPushState&&!this._hasPushState&&!p){this.fragment=this.getFragment(null,true);this.location.replace(this.root+this.location.search+"#"+this.fragment);return true}else{if(this._wantsPushState&&this._hasPushState&&p&&r.hash){this.fragment=this.getHash().replace(a,"");this.history.replaceState({},document.title,this.root+this.fragment+r.search)}}if(!this.options.silent){return this.loadUrl()}},stop:function(){Z.$(window).off("popstate",this.checkUrl).off("hashchange",this.checkUrl);clearInterval(this._checkUrlInterval);I.started=false},route:function(m,n){this.handlers.unshift({route:m,callback:n})},checkUrl:function(n){var m=this.getFragment();if(m===this.fragment&&this.iframe){m=this.getFragment(this.getHash(this.iframe))}if(m===this.fragment){return false}if(this.iframe){this.navigate(m)}this.loadUrl()||this.loadUrl(this.getHash())},loadUrl:function(o){var n=this.fragment=this.getFragment(o);var m=l.any(this.handlers,function(p){if(p.route.test(n)){p.callback(n);return true}});return m},navigate:function(o,n){if(!I.started){return false}if(!n||n===true){n={trigger:n}}o=this.getFragment(o||"");if(this.fragment===o){return }this.fragment=o;var m=this.root+o;if(this._hasPushState){this.history[n.replace?"replaceState":"pushState"]({},document.title,m)}else{if(this._wantsHashChange){this._updateHash(this.location,o,n.replace);if(this.iframe&&(o!==this.getFragment(this.getHash(this.iframe)))){if(!n.replace){this.iframe.document.open().close()}this._updateHash(this.iframe.location,o,n.replace)}}else{return this.location.assign(m)}}if(n.trigger){this.loadUrl(o)}},_updateHash:function(m,o,p){if(p){var n=m.href.replace(/(javascript:|#).*$/,"");m.replace(n+"#"+o)}else{m.hash="#"+o}}});Z.history=new I;var L=function(m,o){var n=this;var q;if(m&&l.has(m,"constructor")){q=m.constructor}else{q=function(){return n.apply(this,arguments)}}l.extend(q,n,o);var p=function(){this.constructor=q};p.prototype=n.prototype;q.prototype=new p;if(m){l.extend(q.prototype,m)}q.__super__=n.prototype;return q};e.extend=C.extend=P.extend=g.extend=I.extend=L;var R=function(){throw new Error('A "url" property or function must be specified')};var h=function(o,n){var m=n.error;n.error=function(p){if(m){m(o,p,n)}o.trigger("error",o,p,n)}}}).call(this);
/* module-key = 'bamboo.web.resources:lib-backbone', location = '/bower/backbone.wreqr/backbone.wreqr.js' */
// Backbone.Wreqr (Backbone.Marionette)
// ----------------------------------
// v1.3.2
//
// Copyright (c)2014 Derick Bailey, Muted Solutions, LLC.
// Distributed under MIT license
//
// http://github.com/marionettejs/backbone.wreqr


(function(root, factory) {

  if (typeof define === 'function' && define.amd) {
    define(['backbone', 'underscore'], function(Backbone, _) {
      return factory(Backbone, _);
    });
  } else if (typeof exports !== 'undefined') {
    var Backbone = require('backbone');
    var _ = require('underscore');
    module.exports = factory(Backbone, _);
  } else {
    factory(root.Backbone, root._);
  }

}(this, function(Backbone, _) {
  "use strict";

  var previousWreqr = Backbone.Wreqr;

  var Wreqr = Backbone.Wreqr = {};

  Backbone.Wreqr.VERSION = '1.3.2';

  Backbone.Wreqr.noConflict = function () {
    Backbone.Wreqr = previousWreqr;
    return this;
  };

  // Handlers
  // --------
  // A registry of functions to call, given a name
  
  Wreqr.Handlers = (function(Backbone, _){
    "use strict";
    
    // Constructor
    // -----------
  
    var Handlers = function(options){
      this.options = options;
      this._wreqrHandlers = {};
      
      if (_.isFunction(this.initialize)){
        this.initialize(options);
      }
    };
  
    Handlers.extend = Backbone.Model.extend;
  
    // Instance Members
    // ----------------
  
    _.extend(Handlers.prototype, Backbone.Events, {
  
      // Add multiple handlers using an object literal configuration
      setHandlers: function(handlers){
        _.each(handlers, function(handler, name){
          var context = null;
  
          if (_.isObject(handler) && !_.isFunction(handler)){
            context = handler.context;
            handler = handler.callback;
          }
  
          this.setHandler(name, handler, context);
        }, this);
      },
  
      // Add a handler for the given name, with an
      // optional context to run the handler within
      setHandler: function(name, handler, context){
        var config = {
          callback: handler,
          context: context
        };
  
        this._wreqrHandlers[name] = config;
  
        this.trigger("handler:add", name, handler, context);
      },
  
      // Determine whether or not a handler is registered
      hasHandler: function(name){
        return !! this._wreqrHandlers[name];
      },
  
      // Get the currently registered handler for
      // the specified name. Throws an exception if
      // no handler is found.
      getHandler: function(name){
        var config = this._wreqrHandlers[name];
  
        if (!config){
          return;
        }
  
        return function(){
          return config.callback.apply(config.context, arguments);
        };
      },
  
      // Remove a handler for the specified name
      removeHandler: function(name){
        delete this._wreqrHandlers[name];
      },
  
      // Remove all handlers from this registry
      removeAllHandlers: function(){
        this._wreqrHandlers = {};
      }
    });
  
    return Handlers;
  })(Backbone, _);
  
  // Wreqr.CommandStorage
  // --------------------
  //
  // Store and retrieve commands for execution.
  Wreqr.CommandStorage = (function(){
    "use strict";
  
    // Constructor function
    var CommandStorage = function(options){
      this.options = options;
      this._commands = {};
  
      if (_.isFunction(this.initialize)){
        this.initialize(options);
      }
    };
  
    // Instance methods
    _.extend(CommandStorage.prototype, Backbone.Events, {
  
      // Get an object literal by command name, that contains
      // the `commandName` and the `instances` of all commands
      // represented as an array of arguments to process
      getCommands: function(commandName){
        var commands = this._commands[commandName];
  
        // we don't have it, so add it
        if (!commands){
  
          // build the configuration
          commands = {
            command: commandName, 
            instances: []
          };
  
          // store it
          this._commands[commandName] = commands;
        }
  
        return commands;
      },
  
      // Add a command by name, to the storage and store the
      // args for the command
      addCommand: function(commandName, args){
        var command = this.getCommands(commandName);
        command.instances.push(args);
      },
  
      // Clear all commands for the given `commandName`
      clearCommands: function(commandName){
        var command = this.getCommands(commandName);
        command.instances = [];
      }
    });
  
    return CommandStorage;
  })();
  
  // Wreqr.Commands
  // --------------
  //
  // A simple command pattern implementation. Register a command
  // handler and execute it.
  Wreqr.Commands = (function(Wreqr, _){
    "use strict";
  
    return Wreqr.Handlers.extend({
      // default storage type
      storageType: Wreqr.CommandStorage,
  
      constructor: function(options){
        this.options = options || {};
  
        this._initializeStorage(this.options);
        this.on("handler:add", this._executeCommands, this);
  
        Wreqr.Handlers.prototype.constructor.apply(this, arguments);
      },
  
      // Execute a named command with the supplied args
      execute: function(name){
        name = arguments[0];
        var args = _.rest(arguments);
  
        if (this.hasHandler(name)){
          this.getHandler(name).apply(this, args);
        } else {
          this.storage.addCommand(name, args);
        }
  
      },
  
      // Internal method to handle bulk execution of stored commands
      _executeCommands: function(name, handler, context){
        var command = this.storage.getCommands(name);
  
        // loop through and execute all the stored command instances
        _.each(command.instances, function(args){
          handler.apply(context, args);
        });
  
        this.storage.clearCommands(name);
      },
  
      // Internal method to initialize storage either from the type's
      // `storageType` or the instance `options.storageType`.
      _initializeStorage: function(options){
        var storage;
  
        var StorageType = options.storageType || this.storageType;
        if (_.isFunction(StorageType)){
          storage = new StorageType();
        } else {
          storage = StorageType;
        }
  
        this.storage = storage;
      }
    });
  
  })(Wreqr, _);
  
  // Wreqr.RequestResponse
  // ---------------------
  //
  // A simple request/response implementation. Register a
  // request handler, and return a response from it
  Wreqr.RequestResponse = (function(Wreqr, _){
    "use strict";
  
    return Wreqr.Handlers.extend({
      request: function(name){
        if (this.hasHandler(name)) {
          return this.getHandler(name).apply(this, _.rest(arguments));
        }
      }
    });
  
  })(Wreqr, _);
  
  // Event Aggregator
  // ----------------
  // A pub-sub object that can be used to decouple various parts
  // of an application through event-driven architecture.
  
  Wreqr.EventAggregator = (function(Backbone, _){
    "use strict";
    var EA = function(){};
  
    // Copy the `extend` function used by Backbone's classes
    EA.extend = Backbone.Model.extend;
  
    // Copy the basic Backbone.Events on to the event aggregator
    _.extend(EA.prototype, Backbone.Events);
  
    return EA;
  })(Backbone, _);
  
  // Wreqr.Channel
  // --------------
  //
  // An object that wraps the three messaging systems:
  // EventAggregator, RequestResponse, Commands
  Wreqr.Channel = (function(Wreqr){
    "use strict";
  
    var Channel = function(channelName) {
      this.vent        = new Backbone.Wreqr.EventAggregator();
      this.reqres      = new Backbone.Wreqr.RequestResponse();
      this.commands    = new Backbone.Wreqr.Commands();
      this.channelName = channelName;
    };
  
    _.extend(Channel.prototype, {
  
      // Remove all handlers from the messaging systems of this channel
      reset: function() {
        this.vent.off();
        this.vent.stopListening();
        this.reqres.removeAllHandlers();
        this.commands.removeAllHandlers();
        return this;
      },
  
      // Connect a hash of events; one for each messaging system
      connectEvents: function(hash, context) {
        this._connect('vent', hash, context);
        return this;
      },
  
      connectCommands: function(hash, context) {
        this._connect('commands', hash, context);
        return this;
      },
  
      connectRequests: function(hash, context) {
        this._connect('reqres', hash, context);
        return this;
      },
  
      // Attach the handlers to a given message system `type`
      _connect: function(type, hash, context) {
        if (!hash) {
          return;
        }
  
        context = context || this;
        var method = (type === 'vent') ? 'on' : 'setHandler';
  
        _.each(hash, function(fn, eventName) {
          this[type][method](eventName, _.bind(fn, context));
        }, this);
      }
    });
  
  
    return Channel;
  })(Wreqr);
  
  // Wreqr.Radio
  // --------------
  //
  // An object that lets you communicate with many channels.
  Wreqr.radio = (function(Wreqr, _){
    "use strict";
  
    var Radio = function() {
      this._channels = {};
      this.vent = {};
      this.commands = {};
      this.reqres = {};
      this._proxyMethods();
    };
  
    _.extend(Radio.prototype, {
  
      channel: function(channelName) {
        if (!channelName) {
          throw new Error('Channel must receive a name');
        }
  
        return this._getChannel( channelName );
      },
  
      _getChannel: function(channelName) {
        var channel = this._channels[channelName];
  
        if(!channel) {
          channel = new Wreqr.Channel(channelName);
          this._channels[channelName] = channel;
        }
  
        return channel;
      },
  
      _proxyMethods: function() {
        _.each(['vent', 'commands', 'reqres'], function(system) {
          _.each( messageSystems[system], function(method) {
            this[system][method] = proxyMethod(this, system, method);
          }, this);
        }, this);
      }
    });
  
  
    var messageSystems = {
      vent: [
        'on',
        'off',
        'trigger',
        'once',
        'stopListening',
        'listenTo',
        'listenToOnce'
      ],
  
      commands: [
        'execute',
        'setHandler',
        'setHandlers',
        'removeHandler',
        'removeAllHandlers'
      ],
  
      reqres: [
        'request',
        'setHandler',
        'setHandlers',
        'removeHandler',
        'removeAllHandlers'
      ]
    };
  
    var proxyMethod = function(radio, system, method) {
      return function(channelName) {
        var messageSystem = radio._getChannel(channelName)[system];
  
        return messageSystem[method].apply(messageSystem, _.rest(arguments));
      };
    };
  
    return new Radio();
  
  })(Wreqr, _);
  

  return Backbone.Wreqr;

}));

/* module-key = 'bamboo.web.resources:lib-backbone', location = '/bower/backbone-brace/backbone.brace.js' */
(function (root, factory) {
    // Global to export
    var rootExport = 'Brace';
    // Store a reference to any other copies of Brace include (if any)
    var previousBrace = root[rootExport];

    // noConflict will return this version of Brace and reset the global
    // Brace variable to the previously loaded version of Brace (or undefined
    // if there was no previous version loaded).
    /**
     * Returns the current copy of Brace and sets the global Brace object to the
     * previous version (or undefined if there was no previous version loaded).
     *
     * @returns Object A reference to this version of Brace.
     */
    var noConflict = function () {
        root[rootExport] = previousBrace;
        return this;
    };

    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['underscore', 'backbone'], factory);
    } else if (typeof exports === 'object') {
        // Node. Does not work with strict CommonJS, but
        // only CommonJS-like enviroments that support module.exports,
        // like Node.
        module.exports = factory(require('underscore'), require('backbone'));
    } else {
        // Browser globals
        var _brace = factory(root._, root.Backbone);
        _brace.noConflict = noConflict;
        root[rootExport] = _brace;
    }
}(this, function (_, Backbone) {

    var Brace = {};

    // ## Helper functions

    // Given an array, this function will return an object where each
    //     property name is an element of the original array. The value
    //     of each property will be null.
    // Given anything else, this function will return the object untouched.
    /**
     * This function is used to ensure a consistent shape for the namedAttributes property.
     * namedAttributes accepts two formats:
     * - An array like ['attr1', 'attr2'] if you don't care about the type of any attribute.
     * - An object like { attr1 : type1, attr2 : type2 } to specify an expected type.
     *
     * @param maybeArray {*} thing to transform into an object
     */
    function asObject(maybeArray) {
        if (_.isArray(maybeArray)) {
            return _.reduce(maybeArray, function(obj, prop) {
                obj[prop] =  null;
                return obj;
            }, {});
        }
        return maybeArray;
    }

    // Return a value of the specified type, generated from the value parameter.
    // If type conversion is necessary, this function will generate a new object using
    // `new type(value)`
    //
    // `value` Any value. null and undefined values will be untouched.
    //
    // `type` When given:
    //
    // * a falsy value: this function will do no type conversion.
    // * a string: this function will throw if `typeof value !== type`, and return value otherwise.
    // * an Array: this function will be recursively called for each element in value using
    //   type's first element as the type. E.g.,
    //         `ensureType([ Number ], [ 1 ])` will recursively call `ensureType(Number, 1)`
    //   It will return a new array consisting of the result of each recursive call.
    // * a Backbone.Collection constructor: this function may be recursively called for each element in
    //     value using type.model as the type. E.g.,
    //         `ensureType({ model : Number, __proto__ : Backbone.Collection.prototype }, [ 1 ])` will
    //         recursively call `ensureType(Number, 1)`
    //     It will return a Backbone.Collection via new type({array of recursive results})
    // * a function: This will check value instanceof type, and if false, will return `new type(value)`
    //     Otherwise it will return value directly
    /**
     * @param value {*}
     * @param type {Array|function(new:*, *)|string|false|null|undefined}
     */
    function ensureType(type, value) {
        /*jshint newcap: false */
        if (!type || value == null) {
            return value;
        }

        if (type === String && _.isString(value)) {
            return value;
        }
        if (type === Number && _.isNumber(value)) {
            return value;
        }
        if (type === Boolean && _.isBoolean(value)) {
            return value;
        }

        if (typeof type === 'string' || type instanceof String) {
            if (typeof value !== ""+type) {
                throw "The typeof " + value + " is " + typeof value + " but expected it to be " + type;
            }
            return value;
        }

        if (_.isArray(type) || type === Array) {
            if (!isArrayLike(value)) {
                throw "Array type expected, but nonnull, non-Array value provided.";
            }
            return type === Array || !type[0] ?
                value :
                _.map(value, _.bind(ensureType, null, type[0]));
        }

        if (typeof type !== 'function') {
            throw "Invalid expected type " + type +
            '. Should be falsy, String, Array, Backbone.Collection constructor, or function.';
        }

        if (value instanceof type) {
            return value;
        }

        if (isCollectionConstructor(type)) {
            return new type(ensureType([ type.model ], value));
        }

        return new type(value);
    }

    // Returns true if obj is extend()'ed from Backbone.Collection (or from another collection)
    /**
     * @param obj {*} object to check
     * @param rootConstructor {?function(new:Backbone.Collection)} optional constructor that inherits from
     *        Backbone.Collection. Will check that obj is extend()'ed from this instead of Backbone.Collection.
     */
    function isCollectionConstructor(obj, rootConstructor) {
        return  obj && (
            // obj *distantly* extends Backbone.Collection (most likely case)
            obj.__super__ instanceof (rootConstructor || Backbone.Collection) ||

            // obj *directly* extends Backbone.Collection (e.g., Brace.Collection)
            // !(fn.prototype instanceof fn), so the above check doesn't catch this case.
            obj.__super__ === (rootConstructor || Backbone.Collection).prototype ||

            // obj *is* Backbone.Collection
            obj === (rootConstructor || Backbone.Collection)
        );
    }

    // array-like is currently defined by "has a length property, and is not a string or
    // function or Backbone.Collection."
    // Backbone.Collections are excluded because you can't do collection[0] to access models.
    function isArrayLike(value) {
        return _.has(value,'length') && !(
            value instanceof String ||
            _.has({'string':1, 'function':1}, typeof value) ||
            value instanceof Backbone.Collection
        );
    }

    // With namedAttributes, we want to allow both the mixin, and the extender to define types.
    // We want to take the stricter of the two types where possible.
    // Where the types conflict, throw an error.
    function nonConflictedTypes(obj, refObj) {
        var newObj = {};
        _.each(obj, function(val, key) {
            if (!refObj[key] || assumes(val, refObj[key])) {
                newObj[key] = val;
            } else if (!val || assumes(refObj[key], val)) {
                return;
            } else {
                throw key + " has conflicted type descriptors.";
            }
        });
        return newObj;
    }

    // One type *assumes* another when the conditions for meeting its
    // type-check are a super set of the assumed type's conditions.
    // E.g., `[ 'string' ]` assumes `Array` because you can't have an array of strings without an array.
    function assumes(assumer, assumed) {
        if (!assumed || assumed === assumer) {
            return true;
        }
        // if it's a string, only the previous strict equality check would have sufficed.
        if (!assumer || typeof assumer === 'string') {
            return false;
        }
        if (assumer instanceof Array) {
            return assumed === Array ||
                (assumed instanceof Array && assumes(assumer[0], assumed[0]));
        }
        if (typeof assumed !== 'function') {
            return false;
        }
        if (isCollectionConstructor(assumed)) {
            return isCollectionConstructor(assumer, assumed);
        }
        return assumer.prototype instanceof assumed;
    }

    /**
     * @param {Object?} object
     * @return {Object} plain object
     */
    function nestedToJSON(object) {
        if (_.isObject(object)) {
            return _.reduce(object, function(memo, value, key) {
                if (value && _.isFunction(value.toJSON)) {
                    memo[key] = value.toJSON();
                } else if (_.isArray(value)) {
                    memo[key] = _.map(value, function(el) {
                        if (el && _.isFunction(el.toJSON)) {
                            return el.toJSON();
                        } else {
                            return el;
                        }
                    });
                }
                return memo;
            }, object);
        } else {
            return object;
        }
    }

    function createToJSON(previousToJSON) {
        return function toJSON() {
            var json = previousToJSON.call(this);
            return nestedToJSON(json);
        };
    }

    // ## Brace.Mixins ##
    // Mixin utilities
    Brace.Mixins = {
        // Creates a camelCased method name
        createMethodName: function(prefix, suffix) {
            return prefix + suffix.charAt(0).toUpperCase() + suffix.substr(1);
        },

        // Applies a mixin to the given constructor's prototype.
        applyMixin: function(ctor, mixin) {
            _.forEach(_.keys(mixin), function(key) {
                var proto = ctor.prototype;

                // `initialize` is not mixed in - we compose the mixin's initialize with the existing initialize method (if it exists).
                if ("initialize" === key) {
                    var oldInitialize = proto.initialize;
                    proto.initialize = function() {
                        if (oldInitialize) {
                            oldInitialize.apply(this, arguments);
                        }
                        mixin.initialize.apply(this, arguments);
                    };
                    return;
                }
                // `validate` is not mixed in - we compose the mixin's validate with the existing validate method (if it exists).
                if ("validate" === key) {
                    var oldValidate = proto.validate;
                    proto.validate = function() {
                        if (oldValidate) {
                            var errors = oldValidate.apply(this, arguments);
                            if (errors) {
                                return errors;
                            }
                        }
                        return mixin.validate.apply(this, arguments);
                    };
                    return;
                }
                // `defaults` are not mixed in - we compose the mixin's defaults with existing defaults if they exist
                if ("defaults" === key) {
                    var defaults = proto.defaults || (proto.defaults = {});
                    var mixinDefaults = mixin[key];
                    for (var id in mixinDefaults) {
                        if (defaults.hasOwnProperty(id)) {
                            throw "Mixin error: class already has default '" + id + "' defined";
                        }
                        defaults[id] = mixinDefaults[id];
                    }
                    return;
                }
                // `namedAttributes` are added to the mixin, and we mixin in getters and setters for each attribute.
                if ("namedAttributes" === key) {
                    var protoAttrs = asObject(proto.namedAttributes) || {};
                    var mixinAttrs = asObject(mixin[key]);
                    proto.namedAttributes = _.extend(protoAttrs, nonConflictedTypes(mixinAttrs, protoAttrs));
                    return;
                }

                // `namedEvents` are added to the mixin, and we mix in on and trigger methods for each event.
                if ("namedEvents" === key) {
                    // `events` must be an array
                    if (!_.isArray(mixin[key])) {
                        throw "Expects events member on mixin to be an array";
                    }
                    if (!proto.namedEvents) {
                        proto.namedEvents = [];
                    }
                    proto.namedEvents = _.uniq(proto.namedEvents.concat(mixin[key]));
                    return;
                }
                // Name collisions with other mixins or or the object we're mixing into result in violent and forceful disapproval.
                if (proto.hasOwnProperty(key)) {
                    throw "Mixin error: class already has property '" + key + "' defined";
                }
                proto[key] = mixin[key];
            }, this);
        }
    };

    // ## Brace.AttributesMixinCreator ##
    Brace.AttributesMixinCreator = {

        // Creates a mixin of getter and setter methods for each item in the given attribute list.
        // A getter and setter for `id` is always generated.
        create: function(attributes, idAttribute) {
            var methods = {};

            if (!attributes) {
                attributes = {};
            }

            if (!_.has(attributes, "id")) {
                attributes.id = null;
            }

            _.each(attributes, function (expectedType, attrName) {
                // TODO: has, escape, unset
                var setter = Brace.Mixins.createMethodName("set", attrName);
                methods[setter] = function (val,options) {
                    return this.set(attrName, val, options);
                };
                var getter = Brace.Mixins.createMethodName("get", attrName);
                methods[getter] = function () {
                    return this.get(attrName);
                };
            });

            // If an idAttribute is specified
            //
            //    * the ID is going to be of the same type as that attribute
            //    * alias the ID's getter/setter to that attribute's getter/setter
            //    * Don't alias if the idAttribute is set to 'id'
            if (typeof idAttribute === 'string' && typeof attributes[idAttribute] !== 'undefined' && idAttribute !== 'id') {
                attributes.id = attributes[idAttribute];
                var idGetter = Brace.Mixins.createMethodName("get", idAttribute);
                var idSetter = Brace.Mixins.createMethodName("set", idAttribute);
                methods.getId = function() { return this[idGetter](); };
                methods.setId = function(val, options) { return this[idSetter](val, options); };
            }

            return methods;
        },
        /**
         * See JSDoc for this function in the backbone.brace file.
         *
         * Expose the ensureType function for people with custom constructors that don't call
         * .set() to initialize attributes. Hopefully this is rarely used, as I would
         * consider not calling .set() to be a code smell.
         *
         * @param type
         * @param value
         */
        ensureType : ensureType
    };

    // ## Brace.EventsMixinCreator ##
    Brace.EventsMixinCreator = {

        // Creates a mixin of on and trigger methods for each item in the given list of events.
        create: function(events) {
            var eventMethods = {};
            var createEvent = function(eventName) {
                // TODO: off
                var binder = Brace.Mixins.createMethodName("on", eventName);
                eventMethods[binder] = function() {
                    return this.on.apply(this, [eventName].concat(_.toArray(arguments)));
                };
                var trigger = Brace.Mixins.createMethodName("trigger", eventName);
                eventMethods[trigger] = function() {
                    return this.trigger.apply(this, [eventName].concat(_.toArray(arguments)));
                };
            };
            _.each(events, _.bind(createEvent,this));

            return eventMethods;
        }
    };

     // Generates an `extend` method that overrides Backbone's default `extend`. The new extend calls Backbone's `extend`, then:
     //
     //   * Adds all mixins specified in the `mixins` array
     //   * Adds a `Brace.EventsMixinCreator` to mix in on and trigger methods for events specified in the `namedEvents` array
     //   * Adds a `Brace.AttributesMixinCreator` to mix in get and set methods for attributes specified in the `attributes` array
    function generateMixinExtend(oldExtend) {
        return function newExtend(protoProps, classProps) {
            var child;
            var cleanProtoProps = _.extend({}, protoProps);
            // Remove `mixins` - we don't want to see them on the created prototype. Note that we do want to see `namedAttributes` and `namedEvents` for debugging
            var mixins;
            if (protoProps && protoProps.mixins) {
                mixins = protoProps.mixins;
                delete cleanProtoProps.mixins;
            }
            child = oldExtend.call(this, cleanProtoProps, classProps);

            if (this.prototype.namedEvents) {
                Brace.Mixins.applyMixin(child, { namedEvents : this.prototype.namedEvents });
            }
            if (this.prototype.namedAttributes) {
                Brace.Mixins.applyMixin(child, { namedAttributes : this.prototype.namedAttributes });
            }

            if (mixins) {
                _.each(protoProps.mixins, function(mixin) {
                    Brace.Mixins.applyMixin(child, mixin);
                });
            }
            if (child.prototype.namedEvents) {
                Brace.Mixins.applyMixin(child, Brace.EventsMixinCreator.create(child.prototype.namedEvents));
            }
            if (child.prototype.namedAttributes) {
                child.prototype.namedAttributes = asObject(child.prototype.namedAttributes);
                Brace.Mixins.applyMixin(child, Brace.AttributesMixinCreator.create(child.prototype.namedAttributes, child.prototype.idAttribute));
            }

            if (child.prototype.toJSON) {
                child.prototype.toJSON = createToJSON(child.prototype.toJSON);
            }

            child.extend = newExtend;
            return child;
        };
    }

    // Overrides Backbone's `get` and `set` methods to validate that the attribute being get / set is a namedAttribute.
    function overrideSetGet(ctor, childCtor) {
        var proto = ctor.prototype;
        var childProto = childCtor.prototype;

        var oldSet = proto.set;
        childProto.set = function(key, value, options) {
            // TODO: has, escape, unset
            var attrs,
                attributes = this.namedAttributes;

            if (!attributes || key == null) {
                return oldSet.apply(this, arguments);
            }

            if (_.isObject(key)) {
                attrs = _.clone(key);
                options = value;
            } else {
                attrs = {};
                attrs[key] = value;
            }

            for (var attr in attrs) {
                if (!_.has(attrs, attr)) {
                    continue;
                }
                if (!_.has(attributes, attr)) {
                    throw "Attribute '" + attr + "' does not exist";
                }
                attrs[attr] = ensureType(attributes[attr], attrs[attr]);
            }

            return oldSet.call(this, attrs, options);
        };

        var oldGet = proto.get;
        childProto.get = function(attr) {
            if (this.namedAttributes && !_.has(this.namedAttributes, attr)) {
                throw "Attribute '" + attr + "' does not exist";
            }
            return oldGet.apply(this, arguments);
        };
    }

    // Overrides Backbone's `parse` method to parse only namedAttributes
    function overrideParse(ctor, childCtor) {
        var proto = ctor.prototype;
        var childProto = childCtor.prototype;

        var oldParse = proto.parse;
        childProto.parse = function(response, options) {
            return _.pick(oldParse(response, options), _.keys(this.namedAttributes));
        };
    }

    // Applies extensions to the given constructor function. Sets `extend` to a method generated by `generateMixinExtend`
    function applyExtensions(ctor) {
        var child = ctor.extend();
        var oldExtend = ctor.extend;
        child.extend = generateMixinExtend(oldExtend);
        return child;
    }


    // Applies extensions to the given constructor function. Sets `extend` to a method generated by `generateMixinExtend`
    function applyModelExtensions(ctor) {
        var child = applyExtensions(ctor);
        overrideSetGet(ctor, child);
        overrideParse(ctor, child);
        return child;
    }

    // Extend base Backbone classes
    Brace.Model = applyModelExtensions(Backbone.Model);
    Brace.Collection = applyExtensions(Backbone.Collection);
    Brace.View = applyExtensions(Backbone.View);
    Brace.Router = applyExtensions(Backbone.Router);
    var Evented = function() {
        this.initialize.apply(this, arguments);
    };
    _.extend(Evented.prototype, Backbone.Events, {
        initialize: function() {}
    });
    Evented.extend = Backbone.Model.extend;
    Brace.Evented = applyExtensions(Evented);

    return Brace;

}));

/* module-key = 'bamboo.web.resources:lib-backbone', location = '/bower/backbone-computedfields/backbone.computedfields.js' */
// Backbone.ComputedFields, v0.0.9
// Copyright (c)2014 alexander.beletsky@gmail.com
// Distributed under MIT license
// https://github.com/alexanderbeletsky/backbone-computedfields

Backbone.ComputedFields = (function(Backbone, _){

    var ComputedFields = function (model) {
        this.model = model;
        this._computedFields = [];

        this.initialize();
    };

    _.extend(ComputedFields.prototype, {
        initialize: function () {
            _.bindAll(
                this,
                '_bindModelEvents',
                '_computeFieldValue',
                '_dependentFields',
                '_isModelInitialized',
                '_lookUpComputedFields',
                '_thenComputedChanges',
                '_thenDependentChanges',
                '_toJSON',
                '_wrapJSON',
                'initialize'
            );

            this._lookUpComputedFields();
            this._bindModelEvents();
            this._wrapJSON();
        },

        _lookUpComputedFields: function () {
            for (var obj in this.model.computed) {
                var field = this.model.computed[obj];

                if (field && (field.set || field.get)) {
                    this._computedFields.push({name: obj, field: field});
                }
            }
        },

        _bindModelEvents: function () {
            _.each(this._computedFields, function (computedField) {
                var fieldName = computedField.name;
                var field = computedField.field;

                var updateComputed = _.bind(function () {
                    var value = this._computeFieldValue(field);
                    this.model.set(fieldName, value, { skipChangeEvent: true });
                }, this);

                var updateDependent = _.bind(function (model, value, options) {
                    if (options && options.skipChangeEvent) {
                        return;
                    }

                    if (field.set) {
                        var fields = this._dependentFields(field.depends);
                        value = value || this.model.get(fieldName);

                        field.set.call(this.model, value, fields);
                        this.model.set(fields, options);
                    }
                }, this);

                this._thenDependentChanges(field.depends, updateComputed);
                this._thenComputedChanges(fieldName, updateDependent);

                if (this._isModelInitialized()) {
                    updateComputed();
                }
            }, this);
        },

        _isModelInitialized: function () {
            return !_.isEmpty(this.model.attributes);
        },

        _thenDependentChanges: function (depends, callback) {
            _.each(depends, function (name) {
                if (typeof (name) === 'string') {
                    this.model.on('change:' + name, callback);
                }

                if (typeof (name) === 'function') {
                    name.call(this.model, callback);
                }
            }, this);
        },

        _thenComputedChanges: function (fieldName, callback) {
            this.model.on('change:' + fieldName, callback);
        },

        _wrapJSON: function () {
            this.model.toJSON = _.wrap(this.model.toJSON, this._toJSON);
        },

        _toJSON: function (toJSON) {
            var args = Array.prototype.slice.call(arguments, 1),
                attributes = toJSON.apply(this.model, args),
                strip = !!(args[0] || {}).computedFields;

            var stripped = strip ? {} : _.reduce(this._computedFields, function (memo, computed) {
                if (computed.field.toJSON === false) {
                    memo.push(computed.name);
                }
                return memo;
            },[]);

            return _.omit(attributes, stripped);
        },

        _computeFieldValue: function (computedField) {
            if (computedField && computedField.get) {
                var fields = this._dependentFields(computedField.depends);
                return computedField.get.call(this.model, fields);
            }
        },

        _dependentFields: function (depends) {
            return _.reduce(depends, function (memo, field) {
                memo[field] = this.model.get(field);
                return memo;
            }, {}, this);
        }

    });

    return ComputedFields;

})(Backbone, _);
/* module-key = 'bamboo.web.resources:util-namespace', location = '/util/namespace.js' */
/**
 * Get/set the value at a compound namespace,
 * gracefully adding values where missing.
 *
 * @param {string} namespace
 * @param {Object} [context=window]
 * @param {Object} [value={}]
 * @deprecated
 */
AJS.namespace = function (namespace, context, value) {
    var names = namespace.split(".");
    context = context || window;
    for (var i = 0, n = names.length - 1; i < n; i++) {
        var x = context[names[i]];
        context = (x != null) ? x : context[names[i]] = {};
    }
    context[names[i]] = value || context[names[i]] || {};
    return context[names[i]];
};

/* module-key = 'bamboo.web.resources:lib-almond', location = '/bower/almond/almond.js' */
/**
 * @license almond 0.3.0 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */
//Going sloppy to avoid 'use strict' string cost, but strict practices should
//be followed.
/*jslint sloppy: true */
/*global setTimeout: false */

var requirejs, require, define;
(function (undef) {
    var main, req, makeMap, handlers,
        defined = {},
        waiting = {},
        config = {},
        defining = {},
        hasOwn = Object.prototype.hasOwnProperty,
        aps = [].slice,
        jsSuffixRegExp = /\.js$/;

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    /**
     * Given a relative module name, like ./something, normalize it to
     * a real name that can be mapped to a path.
     * @param {String} name the relative name
     * @param {String} baseName a real name that the name arg is relative
     * to.
     * @returns {String} normalized name
     */
    function normalize(name, baseName) {
        var nameParts, nameSegment, mapValue, foundMap, lastIndex,
            foundI, foundStarMap, starI, i, j, part,
            baseParts = baseName && baseName.split("/"),
            map = config.map,
            starMap = (map && map['*']) || {};

        //Adjust any relative paths.
        if (name && name.charAt(0) === ".") {
            //If have a base name, try to normalize against it,
            //otherwise, assume it is a top-level require that will
            //be relative to baseUrl in the end.
            if (baseName) {
                //Convert baseName to array, and lop off the last part,
                //so that . matches that "directory" and not name of the baseName's
                //module. For instance, baseName of "one/two/three", maps to
                //"one/two/three.js", but we want the directory, "one/two" for
                //this normalization.
                baseParts = baseParts.slice(0, baseParts.length - 1);
                name = name.split('/');
                lastIndex = name.length - 1;

                // Node .js allowance:
                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
                }

                name = baseParts.concat(name);

                //start trimDots
                for (i = 0; i < name.length; i += 1) {
                    part = name[i];
                    if (part === ".") {
                        name.splice(i, 1);
                        i -= 1;
                    } else if (part === "..") {
                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {
                            //End of the line. Keep at least one non-dot
                            //path segment at the front so it can be mapped
                            //correctly to disk. Otherwise, there is likely
                            //no path mapping for a path starting with '..'.
                            //This can still fail, but catches the most reasonable
                            //uses of ..
                            break;
                        } else if (i > 0) {
                            name.splice(i - 1, 2);
                            i -= 2;
                        }
                    }
                }
                //end trimDots

                name = name.join("/");
            } else if (name.indexOf('./') === 0) {
                // No baseName, so this is ID is resolved relative
                // to baseUrl, pull off the leading dot.
                name = name.substring(2);
            }
        }

        //Apply map config if available.
        if ((baseParts || starMap) && map) {
            nameParts = name.split('/');

            for (i = nameParts.length; i > 0; i -= 1) {
                nameSegment = nameParts.slice(0, i).join("/");

                if (baseParts) {
                    //Find the longest baseName segment match in the config.
                    //So, do joins on the biggest to smallest lengths of baseParts.
                    for (j = baseParts.length; j > 0; j -= 1) {
                        mapValue = map[baseParts.slice(0, j).join('/')];

                        //baseName segment has  config, find if it has one for
                        //this name.
                        if (mapValue) {
                            mapValue = mapValue[nameSegment];
                            if (mapValue) {
                                //Match, update name to the new value.
                                foundMap = mapValue;
                                foundI = i;
                                break;
                            }
                        }
                    }
                }

                if (foundMap) {
                    break;
                }

                //Check for a star map match, but just hold on to it,
                //if there is a shorter segment match later in a matching
                //config, then favor over this star map.
                if (!foundStarMap && starMap && starMap[nameSegment]) {
                    foundStarMap = starMap[nameSegment];
                    starI = i;
                }
            }

            if (!foundMap && foundStarMap) {
                foundMap = foundStarMap;
                foundI = starI;
            }

            if (foundMap) {
                nameParts.splice(0, foundI, foundMap);
                name = nameParts.join('/');
            }
        }

        return name;
    }

    function makeRequire(relName, forceSync) {
        return function () {
            //A version of a require function that passes a moduleName
            //value for items that may need to
            //look up paths relative to the moduleName
            var args = aps.call(arguments, 0);

            //If first arg is not require('string'), and there is only
            //one arg, it is the array form without a callback. Insert
            //a null so that the following concat is correct.
            if (typeof args[0] !== 'string' && args.length === 1) {
                args.push(null);
            }
            return req.apply(undef, args.concat([relName, forceSync]));
        };
    }

    function makeNormalize(relName) {
        return function (name) {
            return normalize(name, relName);
        };
    }

    function makeLoad(depName) {
        return function (value) {
            defined[depName] = value;
        };
    }

    function callDep(name) {
        if (hasProp(waiting, name)) {
            var args = waiting[name];
            delete waiting[name];
            defining[name] = true;
            main.apply(undef, args);
        }

        if (!hasProp(defined, name) && !hasProp(defining, name)) {
            throw new Error('No ' + name);
        }
        return defined[name];
    }

    //Turns a plugin!resource to [plugin, resource]
    //with the plugin being undefined if the name
    //did not have a plugin prefix.
    function splitPrefix(name) {
        var prefix,
            index = name ? name.indexOf('!') : -1;
        if (index > -1) {
            prefix = name.substring(0, index);
            name = name.substring(index + 1, name.length);
        }
        return [prefix, name];
    }

    /**
     * Makes a name map, normalizing the name, and using a plugin
     * for normalization if necessary. Grabs a ref to plugin
     * too, as an optimization.
     */
    makeMap = function (name, relName) {
        var plugin,
            parts = splitPrefix(name),
            prefix = parts[0];

        name = parts[1];

        if (prefix) {
            prefix = normalize(prefix, relName);
            plugin = callDep(prefix);
        }

        //Normalize according
        if (prefix) {
            if (plugin && plugin.normalize) {
                name = plugin.normalize(name, makeNormalize(relName));
            } else {
                name = normalize(name, relName);
            }
        } else {
            name = normalize(name, relName);
            parts = splitPrefix(name);
            prefix = parts[0];
            name = parts[1];
            if (prefix) {
                plugin = callDep(prefix);
            }
        }

        //Using ridiculous property names for space reasons
        return {
            f: prefix ? prefix + '!' + name : name, //fullName
            n: name,
            pr: prefix,
            p: plugin
        };
    };

    function makeConfig(name) {
        return function () {
            return (config && config.config && config.config[name]) || {};
        };
    }

    handlers = {
        require: function (name) {
            return makeRequire(name);
        },
        exports: function (name) {
            var e = defined[name];
            if (typeof e !== 'undefined') {
                return e;
            } else {
                return (defined[name] = {});
            }
        },
        module: function (name) {
            return {
                id: name,
                uri: '',
                exports: defined[name],
                config: makeConfig(name)
            };
        }
    };

    main = function (name, deps, callback, relName) {
        var cjsModule, depName, ret, map, i,
            args = [],
            callbackType = typeof callback,
            usingExports;

        //Use name if no relName
        relName = relName || name;

        //Call the callback to define the module, if necessary.
        if (callbackType === 'undefined' || callbackType === 'function') {
            //Pull out the defined dependencies and pass the ordered
            //values to the callback.
            //Default to [require, exports, module] if no deps
            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
            for (i = 0; i < deps.length; i += 1) {
                map = makeMap(deps[i], relName);
                depName = map.f;

                //Fast path CommonJS standard dependencies.
                if (depName === "require") {
                    args[i] = handlers.require(name);
                } else if (depName === "exports") {
                    //CommonJS module spec 1.1
                    args[i] = handlers.exports(name);
                    usingExports = true;
                } else if (depName === "module") {
                    //CommonJS module spec 1.1
                    cjsModule = args[i] = handlers.module(name);
                } else if (hasProp(defined, depName) ||
                           hasProp(waiting, depName) ||
                           hasProp(defining, depName)) {
                    args[i] = callDep(depName);
                } else if (map.p) {
                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                    args[i] = defined[depName];
                } else {
                    throw new Error(name + ' missing ' + depName);
                }
            }

            ret = callback ? callback.apply(defined[name], args) : undefined;

            if (name) {
                //If setting exports via "module" is in play,
                //favor that over return value and exports. After that,
                //favor a non-undefined return value over exports use.
                if (cjsModule && cjsModule.exports !== undef &&
                        cjsModule.exports !== defined[name]) {
                    defined[name] = cjsModule.exports;
                } else if (ret !== undef || !usingExports) {
                    //Use the return value from the function.
                    defined[name] = ret;
                }
            }
        } else if (name) {
            //May just be an object definition for the module. Only
            //worry about defining if have a module name.
            defined[name] = callback;
        }
    };

    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
        if (typeof deps === "string") {
            if (handlers[deps]) {
                //callback in this case is really relName
                return handlers[deps](callback);
            }
            //Just return the module wanted. In this scenario, the
            //deps arg is the module name, and second arg (if passed)
            //is just the relName.
            //Normalize module name, if it contains . or ..
            return callDep(makeMap(deps, callback).f);
        } else if (!deps.splice) {
            //deps is a config object, not an array.
            config = deps;
            if (config.deps) {
                req(config.deps, config.callback);
            }
            if (!callback) {
                return;
            }

            if (callback.splice) {
                //callback is an array, which means it is a dependency list.
                //Adjust args if there are dependencies
                deps = callback;
                callback = relName;
                relName = null;
            } else {
                deps = undef;
            }
        }

        //Support require(['a'])
        callback = callback || function () {};

        //If relName is a function, it is an errback handler,
        //so remove it.
        if (typeof relName === 'function') {
            relName = forceSync;
            forceSync = alt;
        }

        //Simulate async callback;
        if (forceSync) {
            main(undef, deps, callback, relName);
        } else {
            //Using a non-zero value because of concern for what old browsers
            //do, and latest browsers "upgrade" to 4 if lower value is used:
            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
            //If want a value immediately, use require('id') instead -- something
            //that works in almond on the global level, but not guaranteed and
            //unlikely to work in other AMD implementations.
            setTimeout(function () {
                main(undef, deps, callback, relName);
            }, 4);
        }

        return req;
    };

    /**
     * Just drops the config on the floor, but returns req in case
     * the config return value is used.
     */
    req.config = function (cfg) {
        return req(cfg);
    };

    /**
     * Expose module registry for debugging and tooling
     */
    requirejs._defined = defined;

    define = function (name, deps, callback) {

        //This module may not have dependencies
        if (!deps.splice) {
            //deps is not an array, so probably means
            //an object literal or factory function for
            //the value. Adjust args.
            callback = deps;
            deps = [];
        }

        if (!hasProp(defined, name) && !hasProp(waiting, name)) {
            waiting[name] = [name, deps, callback];
        }
    };

    define.amd = {
        jQuery: true
    };
}());

/* module-key = 'bamboo.web.resources:util-require', location = '/util/require.js' */
(function (window) {

    'use strict';

    // almond claims to be AMD compatible, but isn't
    delete define.amd;

    function fnFactory(fn) {
        return function () {
            return fn;
        };
    }

    var oldRequire = require;
    var logged = false;

    require = function (modules, cb) {
        if (typeof modules === 'string' && typeof cb === 'function') {
            if (!logged) {
                logged = true;
                /* [logging] */
                console.log('WARN: require() use with string an function has been deprecated in 2.11 and will throw an error in 3.0. Use an array of dependencies. (requiring ' + modules + ')');
                /* [logging] end */
            }
            modules = [ modules ];
        }

        //explicitly disallow use of Almond internal params.
        if (cb && typeof cb !== 'function') {
            throw new Error('Callback was not a function');
        }

        return oldRequire.call(window, modules, cb);
    };

    // predefined shims
    define('jquery', fnFactory(window.AJS ? window.AJS.$ : window.jQuery));
    define('underscore', fnFactory(window._));
    define('backbone', fnFactory(window.Backbone));
    define('brace', fnFactory(window.Brace));
    define('aui', fnFactory(window.AJS));

})(window || this);

/* module-key = 'bamboo.web.resources:util-mixins', location = '/bower/backbone.wreqr/backbone.wreqr.js' */
// Backbone.Wreqr (Backbone.Marionette)
// ----------------------------------
// v1.3.2
//
// Copyright (c)2014 Derick Bailey, Muted Solutions, LLC.
// Distributed under MIT license
//
// http://github.com/marionettejs/backbone.wreqr


(function(root, factory) {

  if (typeof define === 'function' && define.amd) {
    define(['backbone', 'underscore'], function(Backbone, _) {
      return factory(Backbone, _);
    });
  } else if (typeof exports !== 'undefined') {
    var Backbone = require('backbone');
    var _ = require('underscore');
    module.exports = factory(Backbone, _);
  } else {
    factory(root.Backbone, root._);
  }

}(this, function(Backbone, _) {
  "use strict";

  var previousWreqr = Backbone.Wreqr;

  var Wreqr = Backbone.Wreqr = {};

  Backbone.Wreqr.VERSION = '1.3.2';

  Backbone.Wreqr.noConflict = function () {
    Backbone.Wreqr = previousWreqr;
    return this;
  };

  // Handlers
  // --------
  // A registry of functions to call, given a name
  
  Wreqr.Handlers = (function(Backbone, _){
    "use strict";
    
    // Constructor
    // -----------
  
    var Handlers = function(options){
      this.options = options;
      this._wreqrHandlers = {};
      
      if (_.isFunction(this.initialize)){
        this.initialize(options);
      }
    };
  
    Handlers.extend = Backbone.Model.extend;
  
    // Instance Members
    // ----------------
  
    _.extend(Handlers.prototype, Backbone.Events, {
  
      // Add multiple handlers using an object literal configuration
      setHandlers: function(handlers){
        _.each(handlers, function(handler, name){
          var context = null;
  
          if (_.isObject(handler) && !_.isFunction(handler)){
            context = handler.context;
            handler = handler.callback;
          }
  
          this.setHandler(name, handler, context);
        }, this);
      },
  
      // Add a handler for the given name, with an
      // optional context to run the handler within
      setHandler: function(name, handler, context){
        var config = {
          callback: handler,
          context: context
        };
  
        this._wreqrHandlers[name] = config;
  
        this.trigger("handler:add", name, handler, context);
      },
  
      // Determine whether or not a handler is registered
      hasHandler: function(name){
        return !! this._wreqrHandlers[name];
      },
  
      // Get the currently registered handler for
      // the specified name. Throws an exception if
      // no handler is found.
      getHandler: function(name){
        var config = this._wreqrHandlers[name];
  
        if (!config){
          return;
        }
  
        return function(){
          return config.callback.apply(config.context, arguments);
        };
      },
  
      // Remove a handler for the specified name
      removeHandler: function(name){
        delete this._wreqrHandlers[name];
      },
  
      // Remove all handlers from this registry
      removeAllHandlers: function(){
        this._wreqrHandlers = {};
      }
    });
  
    return Handlers;
  })(Backbone, _);
  
  // Wreqr.CommandStorage
  // --------------------
  //
  // Store and retrieve commands for execution.
  Wreqr.CommandStorage = (function(){
    "use strict";
  
    // Constructor function
    var CommandStorage = function(options){
      this.options = options;
      this._commands = {};
  
      if (_.isFunction(this.initialize)){
        this.initialize(options);
      }
    };
  
    // Instance methods
    _.extend(CommandStorage.prototype, Backbone.Events, {
  
      // Get an object literal by command name, that contains
      // the `commandName` and the `instances` of all commands
      // represented as an array of arguments to process
      getCommands: function(commandName){
        var commands = this._commands[commandName];
  
        // we don't have it, so add it
        if (!commands){
  
          // build the configuration
          commands = {
            command: commandName, 
            instances: []
          };
  
          // store it
          this._commands[commandName] = commands;
        }
  
        return commands;
      },
  
      // Add a command by name, to the storage and store the
      // args for the command
      addCommand: function(commandName, args){
        var command = this.getCommands(commandName);
        command.instances.push(args);
      },
  
      // Clear all commands for the given `commandName`
      clearCommands: function(commandName){
        var command = this.getCommands(commandName);
        command.instances = [];
      }
    });
  
    return CommandStorage;
  })();
  
  // Wreqr.Commands
  // --------------
  //
  // A simple command pattern implementation. Register a command
  // handler and execute it.
  Wreqr.Commands = (function(Wreqr, _){
    "use strict";
  
    return Wreqr.Handlers.extend({
      // default storage type
      storageType: Wreqr.CommandStorage,
  
      constructor: function(options){
        this.options = options || {};
  
        this._initializeStorage(this.options);
        this.on("handler:add", this._executeCommands, this);
  
        Wreqr.Handlers.prototype.constructor.apply(this, arguments);
      },
  
      // Execute a named command with the supplied args
      execute: function(name){
        name = arguments[0];
        var args = _.rest(arguments);
  
        if (this.hasHandler(name)){
          this.getHandler(name).apply(this, args);
        } else {
          this.storage.addCommand(name, args);
        }
  
      },
  
      // Internal method to handle bulk execution of stored commands
      _executeCommands: function(name, handler, context){
        var command = this.storage.getCommands(name);
  
        // loop through and execute all the stored command instances
        _.each(command.instances, function(args){
          handler.apply(context, args);
        });
  
        this.storage.clearCommands(name);
      },
  
      // Internal method to initialize storage either from the type's
      // `storageType` or the instance `options.storageType`.
      _initializeStorage: function(options){
        var storage;
  
        var StorageType = options.storageType || this.storageType;
        if (_.isFunction(StorageType)){
          storage = new StorageType();
        } else {
          storage = StorageType;
        }
  
        this.storage = storage;
      }
    });
  
  })(Wreqr, _);
  
  // Wreqr.RequestResponse
  // ---------------------
  //
  // A simple request/response implementation. Register a
  // request handler, and return a response from it
  Wreqr.RequestResponse = (function(Wreqr, _){
    "use strict";
  
    return Wreqr.Handlers.extend({
      request: function(name){
        if (this.hasHandler(name)) {
          return this.getHandler(name).apply(this, _.rest(arguments));
        }
      }
    });
  
  })(Wreqr, _);
  
  // Event Aggregator
  // ----------------
  // A pub-sub object that can be used to decouple various parts
  // of an application through event-driven architecture.
  
  Wreqr.EventAggregator = (function(Backbone, _){
    "use strict";
    var EA = function(){};
  
    // Copy the `extend` function used by Backbone's classes
    EA.extend = Backbone.Model.extend;
  
    // Copy the basic Backbone.Events on to the event aggregator
    _.extend(EA.prototype, Backbone.Events);
  
    return EA;
  })(Backbone, _);
  
  // Wreqr.Channel
  // --------------
  //
  // An object that wraps the three messaging systems:
  // EventAggregator, RequestResponse, Commands
  Wreqr.Channel = (function(Wreqr){
    "use strict";
  
    var Channel = function(channelName) {
      this.vent        = new Backbone.Wreqr.EventAggregator();
      this.reqres      = new Backbone.Wreqr.RequestResponse();
      this.commands    = new Backbone.Wreqr.Commands();
      this.channelName = channelName;
    };
  
    _.extend(Channel.prototype, {
  
      // Remove all handlers from the messaging systems of this channel
      reset: function() {
        this.vent.off();
        this.vent.stopListening();
        this.reqres.removeAllHandlers();
        this.commands.removeAllHandlers();
        return this;
      },
  
      // Connect a hash of events; one for each messaging system
      connectEvents: function(hash, context) {
        this._connect('vent', hash, context);
        return this;
      },
  
      connectCommands: function(hash, context) {
        this._connect('commands', hash, context);
        return this;
      },
  
      connectRequests: function(hash, context) {
        this._connect('reqres', hash, context);
        return this;
      },
  
      // Attach the handlers to a given message system `type`
      _connect: function(type, hash, context) {
        if (!hash) {
          return;
        }
  
        context = context || this;
        var method = (type === 'vent') ? 'on' : 'setHandler';
  
        _.each(hash, function(fn, eventName) {
          this[type][method](eventName, _.bind(fn, context));
        }, this);
      }
    });
  
  
    return Channel;
  })(Wreqr);
  
  // Wreqr.Radio
  // --------------
  //
  // An object that lets you communicate with many channels.
  Wreqr.radio = (function(Wreqr, _){
    "use strict";
  
    var Radio = function() {
      this._channels = {};
      this.vent = {};
      this.commands = {};
      this.reqres = {};
      this._proxyMethods();
    };
  
    _.extend(Radio.prototype, {
  
      channel: function(channelName) {
        if (!channelName) {
          throw new Error('Channel must receive a name');
        }
  
        return this._getChannel( channelName );
      },
  
      _getChannel: function(channelName) {
        var channel = this._channels[channelName];
  
        if(!channel) {
          channel = new Wreqr.Channel(channelName);
          this._channels[channelName] = channel;
        }
  
        return channel;
      },
  
      _proxyMethods: function() {
        _.each(['vent', 'commands', 'reqres'], function(system) {
          _.each( messageSystems[system], function(method) {
            this[system][method] = proxyMethod(this, system, method);
          }, this);
        }, this);
      }
    });
  
  
    var messageSystems = {
      vent: [
        'on',
        'off',
        'trigger',
        'once',
        'stopListening',
        'listenTo',
        'listenToOnce'
      ],
  
      commands: [
        'execute',
        'setHandler',
        'setHandlers',
        'removeHandler',
        'removeAllHandlers'
      ],
  
      reqres: [
        'request',
        'setHandler',
        'setHandlers',
        'removeHandler',
        'removeAllHandlers'
      ]
    };
  
    var proxyMethod = function(radio, system, method) {
      return function(channelName) {
        var messageSystem = radio._getChannel(channelName)[system];
  
        return messageSystem[method].apply(messageSystem, _.rest(arguments));
      };
    };
  
    return new Radio();
  
  })(Wreqr, _);
  

  return Backbone.Wreqr;

}));

/* module-key = 'bamboo.web.resources:util-mixins', location = '/util/mixins/events.js' */
define('util/events', [
    'underscore',
    'backbone',
    'exports'
], function(_, Backbone, exports) {

    'use strict';

    var EventBus = new Backbone.Wreqr.EventAggregator();
    var EventBusMixin = {

        onEvent: function(key, callback, object) {
            var handler = function(value, callback, object) {
                EventBus.on(value, _.bind(callback, object));
            };

            if (_.isArray(key)) {
                _.each(key, _.bind(function(value) {
                    handler(value, callback, object || this);
                }, this));
            }
            else {
                handler(key, callback, object || this);
            }
        },

        triggerEvent: function(key) {
            EventBus.trigger.apply(EventBus,
                [key, this].concat(
                    Array.prototype.slice.call(arguments, 1)
                )
            );
        },

        offEvent: function(events) {
            if (_.isArray(events)) {
                _.each(events, function(event) {
                    EventBus.off(event);
                });
            }
            else {
                EventBus.off(events);
            }
        },

        offEventNamespace: function(namespace) {
            if (namespace.length) {
                _.each(_.keys(EventBus._events), _.bind(function(event) {
                    if (event.indexOf(namespace + ':') === 0) {
                        this.offEvent(event);
                    }
                }, this));
            }
        },

        proxyEvents: function(key, events, object, bindMethod) {
            var scope = object || this, self = this;
            var proxyMethod = (bindMethod) ? scope[bindMethod] : scope.on;

            _.each(events, function(event) {
                proxyMethod.apply(scope, [event, function() {
                    self.triggerEvent(
                        [key, event].join(':'), scope
                    );
                }]);
            });
        }

    };

    exports.EventBus = EventBus;
    exports.EventBusMixin = EventBusMixin;

});

/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('Bamboo.EventBus', null, require('util/events').EventBus);
    AJS.namespace('Bamboo.EventBusMixin', null, require('util/events').EventBusMixin);
}

/* module-key = 'bamboo.web.resources:util-mixins', location = '/util/mixins/json.js' */

/* module-key = 'bamboo.web.resources:util-mixins', location = '/util/mixins/elements.js' */
define('util/elements', [
    'jquery',
    'underscore'
], function(
    $,
    _
) {

    'use strict';

    var Elements = {

        getElement: function(name) {
            var item = this.elements[name];

            if (_.isUndefined(item)) {
                throw '"' + name + '" not found in elements';
            }

            if (_.isString(item)) {
                this.elements[name] = {
                    selector: item,
                    query: this.$el.find(item)
                };

                item = this.elements[name];
            }

            return item.query;
        },

        clearElementsCache: function() {
            _.each(_.keys(this.elements), _.bind(function(key) {
                var item = this.elements[key];

                if (!_.isString(item)) {
                    this.elements[key] = item.selector;
                }
            }, this));
        },

        toggleContainer: function($selector, show) {
            if (!_.isUndefined(show)) {
                return $selector.toggle(!!show);
            }
            else {
                return $selector.hide();
            }
        }

    };

    return Elements;
});

/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('Bamboo.Util.Mixins.Elements', null, require('util/elements'));
}
/* module-key = 'bamboo.web.resources:lib-marionette', location = '/bower/backbone.babysitter/backbone.babysitter.js' */
// Backbone.BabySitter
// -------------------
// v0.1.6
//
// Copyright (c)2015 Derick Bailey, Muted Solutions, LLC.
// Distributed under MIT license
//
// http://github.com/marionettejs/backbone.babysitter

(function(root, factory) {

  if (typeof define === 'function' && define.amd) {
    define(['backbone', 'underscore'], function(Backbone, _) {
      return factory(Backbone, _);
    });
  } else if (typeof exports !== 'undefined') {
    var Backbone = require('backbone');
    var _ = require('underscore');
    module.exports = factory(Backbone, _);
  } else {
    factory(root.Backbone, root._);
  }

}(this, function(Backbone, _) {
  'use strict';

  var previousChildViewContainer = Backbone.ChildViewContainer;

  // BabySitter.ChildViewContainer
  // -----------------------------
  //
  // Provide a container to store, retrieve and
  // shut down child views.
  
  Backbone.ChildViewContainer = (function (Backbone, _) {
  
    // Container Constructor
    // ---------------------
  
    var Container = function(views){
      this._views = {};
      this._indexByModel = {};
      this._indexByCustom = {};
      this._updateLength();
  
      _.each(views, this.add, this);
    };
  
    // Container Methods
    // -----------------
  
    _.extend(Container.prototype, {
  
      // Add a view to this container. Stores the view
      // by `cid` and makes it searchable by the model
      // cid (and model itself). Optionally specify
      // a custom key to store an retrieve the view.
      add: function(view, customIndex){
        var viewCid = view.cid;
  
        // store the view
        this._views[viewCid] = view;
  
        // index it by model
        if (view.model){
          this._indexByModel[view.model.cid] = viewCid;
        }
  
        // index by custom
        if (customIndex){
          this._indexByCustom[customIndex] = viewCid;
        }
  
        this._updateLength();
        return this;
      },
  
      // Find a view by the model that was attached to
      // it. Uses the model's `cid` to find it.
      findByModel: function(model){
        return this.findByModelCid(model.cid);
      },
  
      // Find a view by the `cid` of the model that was attached to
      // it. Uses the model's `cid` to find the view `cid` and
      // retrieve the view using it.
      findByModelCid: function(modelCid){
        var viewCid = this._indexByModel[modelCid];
        return this.findByCid(viewCid);
      },
  
      // Find a view by a custom indexer.
      findByCustom: function(index){
        var viewCid = this._indexByCustom[index];
        return this.findByCid(viewCid);
      },
  
      // Find by index. This is not guaranteed to be a
      // stable index.
      findByIndex: function(index){
        return _.values(this._views)[index];
      },
  
      // retrieve a view by its `cid` directly
      findByCid: function(cid){
        return this._views[cid];
      },
  
      // Remove a view
      remove: function(view){
        var viewCid = view.cid;
  
        // delete model index
        if (view.model){
          delete this._indexByModel[view.model.cid];
        }
  
        // delete custom index
        _.any(this._indexByCustom, function(cid, key) {
          if (cid === viewCid) {
            delete this._indexByCustom[key];
            return true;
          }
        }, this);
  
        // remove the view from the container
        delete this._views[viewCid];
  
        // update the length
        this._updateLength();
        return this;
      },
  
      // Call a method on every view in the container,
      // passing parameters to the call method one at a
      // time, like `function.call`.
      call: function(method){
        this.apply(method, _.tail(arguments));
      },
  
      // Apply a method on every view in the container,
      // passing parameters to the call method one at a
      // time, like `function.apply`.
      apply: function(method, args){
        _.each(this._views, function(view){
          if (_.isFunction(view[method])){
            view[method].apply(view, args || []);
          }
        });
      },
  
      // Update the `.length` attribute on this container
      _updateLength: function(){
        this.length = _.size(this._views);
      }
    });
  
    // Borrowing this code from Backbone.Collection:
    // http://backbonejs.org/docs/backbone.html#section-106
    //
    // Mix in methods from Underscore, for iteration, and other
    // collection related features.
    var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',
      'select', 'reject', 'every', 'all', 'some', 'any', 'include',
      'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',
      'last', 'without', 'isEmpty', 'pluck', 'reduce'];
  
    _.each(methods, function(method) {
      Container.prototype[method] = function() {
        var views = _.values(this._views);
        var args = [views].concat(_.toArray(arguments));
        return _[method].apply(_, args);
      };
    });
  
    // return the public API
    return Container;
  })(Backbone, _);
  

  Backbone.ChildViewContainer.VERSION = '0.1.6';

  Backbone.ChildViewContainer.noConflict = function () {
    Backbone.ChildViewContainer = previousChildViewContainer;
    return this;
  };

  return Backbone.ChildViewContainer;

}));

/* module-key = 'bamboo.web.resources:lib-marionette', location = '/bower/backbone.marionette/backbone.marionette.js' */
// MarionetteJS (Backbone.Marionette)
// ----------------------------------
// v2.4.1
//
// Copyright (c)2015 Derick Bailey, Muted Solutions, LLC.
// Distributed under MIT license
//
// http://marionettejs.com

(function(root, factory) {

  if (typeof define === 'function' && define.amd) {
    define(['backbone', 'underscore', 'backbone.wreqr', 'backbone.babysitter'], function(Backbone, _) {
      return (root.Marionette = root.Mn = factory(root, Backbone, _));
    });
  } else if (typeof exports !== 'undefined') {
    var Backbone = require('backbone');
    var _ = require('underscore');
    var Wreqr = require('backbone.wreqr');
    var BabySitter = require('backbone.babysitter');
    module.exports = factory(root, Backbone, _);
  } else {
    root.Marionette = root.Mn = factory(root, root.Backbone, root._);
  }

}(this, function(root, Backbone, _) {
  'use strict';

  var previousMarionette = root.Marionette;
  var previousMn = root.Mn;

  var Marionette = Backbone.Marionette = {};

  Marionette.VERSION = '2.4.1';

  Marionette.noConflict = function() {
    root.Marionette = previousMarionette;
    root.Mn = previousMn;
    return this;
  };

  // Get the Deferred creator for later use
  Marionette.Deferred = Backbone.$.Deferred;

  Marionette.FEATURES = {
  };
  
  Marionette.isEnabled = function(name) {
    return !!Marionette.FEATURES[name];
  };
  
  /* jshint unused: false *//* global console */
  
  // Helpers
  // -------
  
  // Marionette.extend
  // -----------------
  
  // Borrow the Backbone `extend` method so we can use it as needed
  Marionette.extend = Backbone.Model.extend;
  
  // Marionette.isNodeAttached
  // -------------------------
  
  // Determine if `el` is a child of the document
  Marionette.isNodeAttached = function(el) {
    return Backbone.$.contains(document.documentElement, el);
  };
  
  // Merge `keys` from `options` onto `this`
  Marionette.mergeOptions = function(options, keys) {
    if (!options) { return; }
    _.extend(this, _.pick(options, keys));
  };
  
  // Marionette.getOption
  // --------------------
  
  // Retrieve an object, function or other value from a target
  // object or its `options`, with `options` taking precedence.
  Marionette.getOption = function(target, optionName) {
    if (!target || !optionName) { return; }
    if (target.options && (target.options[optionName] !== undefined)) {
      return target.options[optionName];
    } else {
      return target[optionName];
    }
  };
  
  // Proxy `Marionette.getOption`
  Marionette.proxyGetOption = function(optionName) {
    return Marionette.getOption(this, optionName);
  };
  
  // Similar to `_.result`, this is a simple helper
  // If a function is provided we call it with context
  // otherwise just return the value. If the value is
  // undefined return a default value
  Marionette._getValue = function(value, context, params) {
    if (_.isFunction(value)) {
      value = params ? value.apply(context, params) : value.call(context);
    }
    return value;
  };
  
  // Marionette.normalizeMethods
  // ----------------------
  
  // Pass in a mapping of events => functions or function names
  // and return a mapping of events => functions
  Marionette.normalizeMethods = function(hash) {
    return _.reduce(hash, function(normalizedHash, method, name) {
      if (!_.isFunction(method)) {
        method = this[method];
      }
      if (method) {
        normalizedHash[name] = method;
      }
      return normalizedHash;
    }, {}, this);
  };
  
  // utility method for parsing @ui. syntax strings
  // into associated selector
  Marionette.normalizeUIString = function(uiString, ui) {
    return uiString.replace(/@ui\.[a-zA-Z_$0-9]*/g, function(r) {
      return ui[r.slice(4)];
    });
  };
  
  // allows for the use of the @ui. syntax within
  // a given key for triggers and events
  // swaps the @ui with the associated selector.
  // Returns a new, non-mutated, parsed events hash.
  Marionette.normalizeUIKeys = function(hash, ui) {
    return _.reduce(hash, function(memo, val, key) {
      var normalizedKey = Marionette.normalizeUIString(key, ui);
      memo[normalizedKey] = val;
      return memo;
    }, {});
  };
  
  // allows for the use of the @ui. syntax within
  // a given value for regions
  // swaps the @ui with the associated selector
  Marionette.normalizeUIValues = function(hash, ui, properties) {
    _.each(hash, function(val, key) {
      if (_.isString(val)) {
        hash[key] = Marionette.normalizeUIString(val, ui);
      } else if (_.isObject(val) && _.isArray(properties)) {
        _.extend(val, Marionette.normalizeUIValues(_.pick(val, properties), ui));
        /* Value is an object, and we got an array of embedded property names to normalize. */
        _.each(properties, function(property) {
          var propertyVal = val[property];
          if (_.isString(propertyVal)) {
            val[property] = Marionette.normalizeUIString(propertyVal, ui);
          }
        });
      }
    });
    return hash;
  };
  
  // Mix in methods from Underscore, for iteration, and other
  // collection related features.
  // Borrowing this code from Backbone.Collection:
  // http://backbonejs.org/docs/backbone.html#section-121
  Marionette.actAsCollection = function(object, listProperty) {
    var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',
      'select', 'reject', 'every', 'all', 'some', 'any', 'include',
      'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',
      'last', 'without', 'isEmpty', 'pluck'];
  
    _.each(methods, function(method) {
      object[method] = function() {
        var list = _.values(_.result(this, listProperty));
        var args = [list].concat(_.toArray(arguments));
        return _[method].apply(_, args);
      };
    });
  };
  
  var deprecate = Marionette.deprecate = function(message, test) {
    if (_.isObject(message)) {
      message = (
        message.prev + ' is going to be removed in the future. ' +
        'Please use ' + message.next + ' instead.' +
        (message.url ? ' See: ' + message.url : '')
      );
    }
  
    if ((test === undefined || !test) && !deprecate._cache[message]) {
      deprecate._warn('Deprecation warning: ' + message);
      deprecate._cache[message] = true;
    }
  };
  
  deprecate._warn = typeof console !== 'undefined' && (console.warn || console.log) || function() {};
  deprecate._cache = {};
  
  /* jshint maxstatements: 14, maxcomplexity: 7 */
  
  // Trigger Method
  // --------------
  
  Marionette._triggerMethod = (function() {
    // split the event name on the ":"
    var splitter = /(^|:)(\w)/gi;
  
    // take the event section ("section1:section2:section3")
    // and turn it in to uppercase name
    function getEventName(match, prefix, eventName) {
      return eventName.toUpperCase();
    }
  
    return function(context, event, args) {
      var noEventArg = arguments.length < 3;
      if (noEventArg) {
        args = event;
        event = args[0];
      }
  
      // get the method name from the event name
      var methodName = 'on' + event.replace(splitter, getEventName);
      var method = context[methodName];
      var result;
  
      // call the onMethodName if it exists
      if (_.isFunction(method)) {
        // pass all args, except the event name
        result = method.apply(context, noEventArg ? _.rest(args) : args);
      }
  
      // trigger the event, if a trigger method exists
      if (_.isFunction(context.trigger)) {
        if (noEventArg + args.length > 1) {
          context.trigger.apply(context, noEventArg ? args : [event].concat(_.drop(args, 0)));
        } else {
          context.trigger(event);
        }
      }
  
      return result;
    };
  })();
  
  // Trigger an event and/or a corresponding method name. Examples:
  //
  // `this.triggerMethod("foo")` will trigger the "foo" event and
  // call the "onFoo" method.
  //
  // `this.triggerMethod("foo:bar")` will trigger the "foo:bar" event and
  // call the "onFooBar" method.
  Marionette.triggerMethod = function(event) {
    return Marionette._triggerMethod(this, arguments);
  };
  
  // triggerMethodOn invokes triggerMethod on a specific context
  //
  // e.g. `Marionette.triggerMethodOn(view, 'show')`
  // will trigger a "show" event or invoke onShow the view.
  Marionette.triggerMethodOn = function(context) {
    var fnc = _.isFunction(context.triggerMethod) ?
                  context.triggerMethod :
                  Marionette.triggerMethod;
  
    return fnc.apply(context, _.rest(arguments));
  };
  
  // DOM Refresh
  // -----------
  
  // Monitor a view's state, and after it has been rendered and shown
  // in the DOM, trigger a "dom:refresh" event every time it is
  // re-rendered.
  
  Marionette.MonitorDOMRefresh = function(view) {
  
    // track when the view has been shown in the DOM,
    // using a Marionette.Region (or by other means of triggering "show")
    function handleShow() {
      view._isShown = true;
      triggerDOMRefresh();
    }
  
    // track when the view has been rendered
    function handleRender() {
      view._isRendered = true;
      triggerDOMRefresh();
    }
  
    // Trigger the "dom:refresh" event and corresponding "onDomRefresh" method
    function triggerDOMRefresh() {
      if (view._isShown && view._isRendered && Marionette.isNodeAttached(view.el)) {
        if (_.isFunction(view.triggerMethod)) {
          view.triggerMethod('dom:refresh');
        }
      }
    }
  
    view.on({
      show: handleShow,
      render: handleRender
    });
  };
  
  /* jshint maxparams: 5 */
  
  // Bind Entity Events & Unbind Entity Events
  // -----------------------------------------
  //
  // These methods are used to bind/unbind a backbone "entity" (e.g. collection/model)
  // to methods on a target object.
  //
  // The first parameter, `target`, must have the Backbone.Events module mixed in.
  //
  // The second parameter is the `entity` (Backbone.Model, Backbone.Collection or
  // any object that has Backbone.Events mixed in) to bind the events from.
  //
  // The third parameter is a hash of { "event:name": "eventHandler" }
  // configuration. Multiple handlers can be separated by a space. A
  // function can be supplied instead of a string handler name.
  
  (function(Marionette) {
    'use strict';
  
    // Bind the event to handlers specified as a string of
    // handler names on the target object
    function bindFromStrings(target, entity, evt, methods) {
      var methodNames = methods.split(/\s+/);
  
      _.each(methodNames, function(methodName) {
  
        var method = target[methodName];
        if (!method) {
          throw new Marionette.Error('Method "' + methodName +
            '" was configured as an event handler, but does not exist.');
        }
  
        target.listenTo(entity, evt, method);
      });
    }
  
    // Bind the event to a supplied callback function
    function bindToFunction(target, entity, evt, method) {
      target.listenTo(entity, evt, method);
    }
  
    // Bind the event to handlers specified as a string of
    // handler names on the target object
    function unbindFromStrings(target, entity, evt, methods) {
      var methodNames = methods.split(/\s+/);
  
      _.each(methodNames, function(methodName) {
        var method = target[methodName];
        target.stopListening(entity, evt, method);
      });
    }
  
    // Bind the event to a supplied callback function
    function unbindToFunction(target, entity, evt, method) {
      target.stopListening(entity, evt, method);
    }
  
    // generic looping function
    function iterateEvents(target, entity, bindings, functionCallback, stringCallback) {
      if (!entity || !bindings) { return; }
  
      // type-check bindings
      if (!_.isObject(bindings)) {
        throw new Marionette.Error({
          message: 'Bindings must be an object or function.',
          url: 'marionette.functions.html#marionettebindentityevents'
        });
      }
  
      // allow the bindings to be a function
      bindings = Marionette._getValue(bindings, target);
  
      // iterate the bindings and bind them
      _.each(bindings, function(methods, evt) {
  
        // allow for a function as the handler,
        // or a list of event names as a string
        if (_.isFunction(methods)) {
          functionCallback(target, entity, evt, methods);
        } else {
          stringCallback(target, entity, evt, methods);
        }
  
      });
    }
  
    // Export Public API
    Marionette.bindEntityEvents = function(target, entity, bindings) {
      iterateEvents(target, entity, bindings, bindToFunction, bindFromStrings);
    };
  
    Marionette.unbindEntityEvents = function(target, entity, bindings) {
      iterateEvents(target, entity, bindings, unbindToFunction, unbindFromStrings);
    };
  
    // Proxy `bindEntityEvents`
    Marionette.proxyBindEntityEvents = function(entity, bindings) {
      return Marionette.bindEntityEvents(this, entity, bindings);
    };
  
    // Proxy `unbindEntityEvents`
    Marionette.proxyUnbindEntityEvents = function(entity, bindings) {
      return Marionette.unbindEntityEvents(this, entity, bindings);
    };
  })(Marionette);
  

  // Error
  // -----
  
  var errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];
  
  Marionette.Error = Marionette.extend.call(Error, {
    urlRoot: 'http://marionettejs.com/docs/v' + Marionette.VERSION + '/',
  
    constructor: function(message, options) {
      if (_.isObject(message)) {
        options = message;
        message = options.message;
      } else if (!options) {
        options = {};
      }
  
      var error = Error.call(this, message);
      _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));
  
      this.captureStackTrace();
  
      if (options.url) {
        this.url = this.urlRoot + options.url;
      }
    },
  
    captureStackTrace: function() {
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, Marionette.Error);
      }
    },
  
    toString: function() {
      return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');
    }
  });
  
  Marionette.Error.extend = Marionette.extend;
  
  // Callbacks
  // ---------
  
  // A simple way of managing a collection of callbacks
  // and executing them at a later point in time, using jQuery's
  // `Deferred` object.
  Marionette.Callbacks = function() {
    this._deferred = Marionette.Deferred();
    this._callbacks = [];
  };
  
  _.extend(Marionette.Callbacks.prototype, {
  
    // Add a callback to be executed. Callbacks added here are
    // guaranteed to execute, even if they are added after the
    // `run` method is called.
    add: function(callback, contextOverride) {
      var promise = _.result(this._deferred, 'promise');
  
      this._callbacks.push({cb: callback, ctx: contextOverride});
  
      promise.then(function(args) {
        if (contextOverride) { args.context = contextOverride; }
        callback.call(args.context, args.options);
      });
    },
  
    // Run all registered callbacks with the context specified.
    // Additional callbacks can be added after this has been run
    // and they will still be executed.
    run: function(options, context) {
      this._deferred.resolve({
        options: options,
        context: context
      });
    },
  
    // Resets the list of callbacks to be run, allowing the same list
    // to be run multiple times - whenever the `run` method is called.
    reset: function() {
      var callbacks = this._callbacks;
      this._deferred = Marionette.Deferred();
      this._callbacks = [];
  
      _.each(callbacks, function(cb) {
        this.add(cb.cb, cb.ctx);
      }, this);
    }
  });
  
  // Controller
  // ----------
  
  // A multi-purpose object to use as a controller for
  // modules and routers, and as a mediator for workflow
  // and coordination of other objects, views, and more.
  Marionette.Controller = function(options) {
    this.options = options || {};
  
    if (_.isFunction(this.initialize)) {
      this.initialize(this.options);
    }
  };
  
  Marionette.Controller.extend = Marionette.extend;
  
  // Controller Methods
  // --------------
  
  // Ensure it can trigger events with Backbone.Events
  _.extend(Marionette.Controller.prototype, Backbone.Events, {
    destroy: function() {
      Marionette._triggerMethod(this, 'before:destroy', arguments);
      Marionette._triggerMethod(this, 'destroy', arguments);
  
      this.stopListening();
      this.off();
      return this;
    },
  
    // import the `triggerMethod` to trigger events with corresponding
    // methods if the method exists
    triggerMethod: Marionette.triggerMethod,
  
    // A handy way to merge options onto the instance
    mergeOptions: Marionette.mergeOptions,
  
    // Proxy `getOption` to enable getting options from this or this.options by name.
    getOption: Marionette.proxyGetOption
  
  });
  
  // Object
  // ------
  
  // A Base Class that other Classes should descend from.
  // Object borrows many conventions and utilities from Backbone.
  Marionette.Object = function(options) {
    this.options = _.extend({}, _.result(this, 'options'), options);
  
    this.initialize.apply(this, arguments);
  };
  
  Marionette.Object.extend = Marionette.extend;
  
  // Object Methods
  // --------------
  
  // Ensure it can trigger events with Backbone.Events
  _.extend(Marionette.Object.prototype, Backbone.Events, {
  
    //this is a noop method intended to be overridden by classes that extend from this base
    initialize: function() {},
  
    destroy: function() {
      this.triggerMethod('before:destroy');
      this.triggerMethod('destroy');
      this.stopListening();
  
      return this;
    },
  
    // Import the `triggerMethod` to trigger events with corresponding
    // methods if the method exists
    triggerMethod: Marionette.triggerMethod,
  
    // A handy way to merge options onto the instance
    mergeOptions: Marionette.mergeOptions,
  
    // Proxy `getOption` to enable getting options from this or this.options by name.
    getOption: Marionette.proxyGetOption,
  
    // Proxy `bindEntityEvents` to enable binding view's events from another entity.
    bindEntityEvents: Marionette.proxyBindEntityEvents,
  
    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.
    unbindEntityEvents: Marionette.proxyUnbindEntityEvents
  });
  
  /* jshint maxcomplexity: 16, maxstatements: 45, maxlen: 120 */
  
  // Region
  // ------
  
  // Manage the visual regions of your composite application. See
  // http://lostechies.com/derickbailey/2011/12/12/composite-js-apps-regions-and-region-managers/
  
  Marionette.Region = Marionette.Object.extend({
    constructor: function(options) {
  
      // set options temporarily so that we can get `el`.
      // options will be overriden by Object.constructor
      this.options = options || {};
      this.el = this.getOption('el');
  
      // Handle when this.el is passed in as a $ wrapped element.
      this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;
  
      if (!this.el) {
        throw new Marionette.Error({
          name: 'NoElError',
          message: 'An "el" must be specified for a region.'
        });
      }
  
      this.$el = this.getEl(this.el);
      Marionette.Object.call(this, options);
    },
  
    // Displays a backbone view instance inside of the region.
    // Handles calling the `render` method for you. Reads content
    // directly from the `el` attribute. Also calls an optional
    // `onShow` and `onDestroy` method on your view, just after showing
    // or just before destroying the view, respectively.
    // The `preventDestroy` option can be used to prevent a view from
    // the old view being destroyed on show.
    // The `forceShow` option can be used to force a view to be
    // re-rendered if it's already shown in the region.
    show: function(view, options) {
      if (!this._ensureElement()) {
        return;
      }
  
      this._ensureViewIsIntact(view);
  
      var showOptions     = options || {};
      var isDifferentView = view !== this.currentView;
      var preventDestroy  = !!showOptions.preventDestroy;
      var forceShow       = !!showOptions.forceShow;
  
      // We are only changing the view if there is a current view to change to begin with
      var isChangingView = !!this.currentView;
  
      // Only destroy the current view if we don't want to `preventDestroy` and if
      // the view given in the first argument is different than `currentView`
      var _shouldDestroyView = isDifferentView && !preventDestroy;
  
      // Only show the view given in the first argument if it is different than
      // the current view or if we want to re-show the view. Note that if
      // `_shouldDestroyView` is true, then `_shouldShowView` is also necessarily true.
      var _shouldShowView = isDifferentView || forceShow;
  
      if (isChangingView) {
        this.triggerMethod('before:swapOut', this.currentView, this, options);
      }
  
      if (this.currentView) {
        delete this.currentView._parent;
      }
  
      if (_shouldDestroyView) {
        this.empty();
  
      // A `destroy` event is attached to the clean up manually removed views.
      // We need to detach this event when a new view is going to be shown as it
      // is no longer relevant.
      } else if (isChangingView && _shouldShowView) {
        this.currentView.off('destroy', this.empty, this);
      }
  
      if (_shouldShowView) {
  
        // We need to listen for if a view is destroyed
        // in a way other than through the region.
        // If this happens we need to remove the reference
        // to the currentView since once a view has been destroyed
        // we can not reuse it.
        view.once('destroy', this.empty, this);
        view.render();
  
        view._parent = this;
  
        if (isChangingView) {
          this.triggerMethod('before:swap', view, this, options);
        }
  
        this.triggerMethod('before:show', view, this, options);
        Marionette.triggerMethodOn(view, 'before:show', view, this, options);
  
        if (isChangingView) {
          this.triggerMethod('swapOut', this.currentView, this, options);
        }
  
        // An array of views that we're about to display
        var attachedRegion = Marionette.isNodeAttached(this.el);
  
        // The views that we're about to attach to the document
        // It's important that we prevent _getNestedViews from being executed unnecessarily
        // as it's a potentially-slow method
        var displayedViews = [];
  
        var triggerBeforeAttach = showOptions.triggerBeforeAttach || this.triggerBeforeAttach;
        var triggerAttach = showOptions.triggerAttach || this.triggerAttach;
  
        if (attachedRegion && triggerBeforeAttach) {
          displayedViews = this._displayedViews(view);
          this._triggerAttach(displayedViews, 'before:');
        }
  
        this.attachHtml(view);
        this.currentView = view;
  
        if (attachedRegion && triggerAttach) {
          displayedViews = this._displayedViews(view);
          this._triggerAttach(displayedViews);
        }
  
        if (isChangingView) {
          this.triggerMethod('swap', view, this, options);
        }
  
        this.triggerMethod('show', view, this, options);
        Marionette.triggerMethodOn(view, 'show', view, this, options);
  
        return this;
      }
  
      return this;
    },
  
    triggerBeforeAttach: true,
    triggerAttach: true,
  
    _triggerAttach: function(views, prefix) {
      var eventName = (prefix || '') + 'attach';
      _.each(views, function(view) {
        Marionette.triggerMethodOn(view, eventName, view, this);
      }, this);
    },
  
    _displayedViews: function(view) {
      return _.union([view], _.result(view, '_getNestedViews') || []);
    },
  
    _ensureElement: function() {
      if (!_.isObject(this.el)) {
        this.$el = this.getEl(this.el);
        this.el = this.$el[0];
      }
  
      if (!this.$el || this.$el.length === 0) {
        if (this.getOption('allowMissingEl')) {
          return false;
        } else {
          throw new Marionette.Error('An "el" ' + this.$el.selector + ' must exist in DOM');
        }
      }
      return true;
    },
  
    _ensureViewIsIntact: function(view) {
      if (!view) {
        throw new Marionette.Error({
          name: 'ViewNotValid',
          message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'
        });
      }
  
      if (view.isDestroyed) {
        throw new Marionette.Error({
          name: 'ViewDestroyedError',
          message: 'View (cid: "' + view.cid + '") has already been destroyed and cannot be used.'
        });
      }
    },
  
    // Override this method to change how the region finds the DOM
    // element that it manages. Return a jQuery selector object scoped
    // to a provided parent el or the document if none exists.
    getEl: function(el) {
      return Backbone.$(el, Marionette._getValue(this.options.parentEl, this));
    },
  
    // Override this method to change how the new view is
    // appended to the `$el` that the region is managing
    attachHtml: function(view) {
      this.$el.contents().detach();
  
      this.el.appendChild(view.el);
    },
  
    // Destroy the current view, if there is one. If there is no
    // current view, it does nothing and returns immediately.
    empty: function(options) {
      var view = this.currentView;
  
      var preventDestroy = Marionette._getValue(options, 'preventDestroy', this);
      // If there is no view in the region
      // we should not remove anything
      if (!view) { return; }
  
      view.off('destroy', this.empty, this);
      this.triggerMethod('before:empty', view);
      if (!preventDestroy) {
        this._destroyView();
      }
      this.triggerMethod('empty', view);
  
      // Remove region pointer to the currentView
      delete this.currentView;
  
      if (preventDestroy) {
        this.$el.contents().detach();
      }
  
      return this;
    },
  
    // call 'destroy' or 'remove', depending on which is found
    // on the view (if showing a raw Backbone view or a Marionette View)
    _destroyView: function() {
      var view = this.currentView;
  
      if (view.destroy && !view.isDestroyed) {
        view.destroy();
      } else if (view.remove) {
        view.remove();
  
        // appending isDestroyed to raw Backbone View allows regions
        // to throw a ViewDestroyedError for this view
        view.isDestroyed = true;
      }
    },
  
    // Attach an existing view to the region. This
    // will not call `render` or `onShow` for the new view,
    // and will not replace the current HTML for the `el`
    // of the region.
    attachView: function(view) {
      this.currentView = view;
      return this;
    },
  
    // Checks whether a view is currently present within
    // the region. Returns `true` if there is and `false` if
    // no view is present.
    hasView: function() {
      return !!this.currentView;
    },
  
    // Reset the region by destroying any existing view and
    // clearing out the cached `$el`. The next time a view
    // is shown via this region, the region will re-query the
    // DOM for the region's `el`.
    reset: function() {
      this.empty();
  
      if (this.$el) {
        this.el = this.$el.selector;
      }
  
      delete this.$el;
      return this;
    }
  
  },
  
  // Static Methods
  {
  
    // Build an instance of a region by passing in a configuration object
    // and a default region class to use if none is specified in the config.
    //
    // The config object should either be a string as a jQuery DOM selector,
    // a Region class directly, or an object literal that specifies a selector,
    // a custom regionClass, and any options to be supplied to the region:
    //
    // ```js
    // {
    //   selector: "#foo",
    //   regionClass: MyCustomRegion,
    //   allowMissingEl: false
    // }
    // ```
    //
    buildRegion: function(regionConfig, DefaultRegionClass) {
      if (_.isString(regionConfig)) {
        return this._buildRegionFromSelector(regionConfig, DefaultRegionClass);
      }
  
      if (regionConfig.selector || regionConfig.el || regionConfig.regionClass) {
        return this._buildRegionFromObject(regionConfig, DefaultRegionClass);
      }
  
      if (_.isFunction(regionConfig)) {
        return this._buildRegionFromRegionClass(regionConfig);
      }
  
      throw new Marionette.Error({
        message: 'Improper region configuration type.',
        url: 'marionette.region.html#region-configuration-types'
      });
    },
  
    // Build the region from a string selector like '#foo-region'
    _buildRegionFromSelector: function(selector, DefaultRegionClass) {
      return new DefaultRegionClass({el: selector});
    },
  
    // Build the region from a configuration object
    // ```js
    // { selector: '#foo', regionClass: FooRegion, allowMissingEl: false }
    // ```
    _buildRegionFromObject: function(regionConfig, DefaultRegionClass) {
      var RegionClass = regionConfig.regionClass || DefaultRegionClass;
      var options = _.omit(regionConfig, 'selector', 'regionClass');
  
      if (regionConfig.selector && !options.el) {
        options.el = regionConfig.selector;
      }
  
      return new RegionClass(options);
    },
  
    // Build the region directly from a given `RegionClass`
    _buildRegionFromRegionClass: function(RegionClass) {
      return new RegionClass();
    }
  });
  
  // Region Manager
  // --------------
  
  // Manage one or more related `Marionette.Region` objects.
  Marionette.RegionManager = Marionette.Controller.extend({
    constructor: function(options) {
      this._regions = {};
      this.length = 0;
  
      Marionette.Controller.call(this, options);
  
      this.addRegions(this.getOption('regions'));
    },
  
    // Add multiple regions using an object literal or a
    // function that returns an object literal, where
    // each key becomes the region name, and each value is
    // the region definition.
    addRegions: function(regionDefinitions, defaults) {
      regionDefinitions = Marionette._getValue(regionDefinitions, this, arguments);
  
      return _.reduce(regionDefinitions, function(regions, definition, name) {
        if (_.isString(definition)) {
          definition = {selector: definition};
        }
        if (definition.selector) {
          definition = _.defaults({}, definition, defaults);
        }
  
        regions[name] = this.addRegion(name, definition);
        return regions;
      }, {}, this);
    },
  
    // Add an individual region to the region manager,
    // and return the region instance
    addRegion: function(name, definition) {
      var region;
  
      if (definition instanceof Marionette.Region) {
        region = definition;
      } else {
        region = Marionette.Region.buildRegion(definition, Marionette.Region);
      }
  
      this.triggerMethod('before:add:region', name, region);
  
      region._parent = this;
      this._store(name, region);
  
      this.triggerMethod('add:region', name, region);
      return region;
    },
  
    // Get a region by name
    get: function(name) {
      return this._regions[name];
    },
  
    // Gets all the regions contained within
    // the `regionManager` instance.
    getRegions: function() {
      return _.clone(this._regions);
    },
  
    // Remove a region by name
    removeRegion: function(name) {
      var region = this._regions[name];
      this._remove(name, region);
  
      return region;
    },
  
    // Empty all regions in the region manager, and
    // remove them
    removeRegions: function() {
      var regions = this.getRegions();
      _.each(this._regions, function(region, name) {
        this._remove(name, region);
      }, this);
  
      return regions;
    },
  
    // Empty all regions in the region manager, but
    // leave them attached
    emptyRegions: function() {
      var regions = this.getRegions();
      _.invoke(regions, 'empty');
      return regions;
    },
  
    // Destroy all regions and shut down the region
    // manager entirely
    destroy: function() {
      this.removeRegions();
      return Marionette.Controller.prototype.destroy.apply(this, arguments);
    },
  
    // internal method to store regions
    _store: function(name, region) {
      if (!this._regions[name]) {
        this.length++;
      }
  
      this._regions[name] = region;
    },
  
    // internal method to remove a region
    _remove: function(name, region) {
      this.triggerMethod('before:remove:region', name, region);
      region.empty();
      region.stopListening();
  
      delete region._parent;
      delete this._regions[name];
      this.length--;
      this.triggerMethod('remove:region', name, region);
    }
  });
  
  Marionette.actAsCollection(Marionette.RegionManager.prototype, '_regions');
  

  // Template Cache
  // --------------
  
  // Manage templates stored in `<script>` blocks,
  // caching them for faster access.
  Marionette.TemplateCache = function(templateId) {
    this.templateId = templateId;
  };
  
  // TemplateCache object-level methods. Manage the template
  // caches from these method calls instead of creating
  // your own TemplateCache instances
  _.extend(Marionette.TemplateCache, {
    templateCaches: {},
  
    // Get the specified template by id. Either
    // retrieves the cached version, or loads it
    // from the DOM.
    get: function(templateId, options) {
      var cachedTemplate = this.templateCaches[templateId];
  
      if (!cachedTemplate) {
        cachedTemplate = new Marionette.TemplateCache(templateId);
        this.templateCaches[templateId] = cachedTemplate;
      }
  
      return cachedTemplate.load(options);
    },
  
    // Clear templates from the cache. If no arguments
    // are specified, clears all templates:
    // `clear()`
    //
    // If arguments are specified, clears each of the
    // specified templates from the cache:
    // `clear("#t1", "#t2", "...")`
    clear: function() {
      var i;
      var args = _.toArray(arguments);
      var length = args.length;
  
      if (length > 0) {
        for (i = 0; i < length; i++) {
          delete this.templateCaches[args[i]];
        }
      } else {
        this.templateCaches = {};
      }
    }
  });
  
  // TemplateCache instance methods, allowing each
  // template cache object to manage its own state
  // and know whether or not it has been loaded
  _.extend(Marionette.TemplateCache.prototype, {
  
    // Internal method to load the template
    load: function(options) {
      // Guard clause to prevent loading this template more than once
      if (this.compiledTemplate) {
        return this.compiledTemplate;
      }
  
      // Load the template and compile it
      var template = this.loadTemplate(this.templateId, options);
      this.compiledTemplate = this.compileTemplate(template, options);
  
      return this.compiledTemplate;
    },
  
    // Load a template from the DOM, by default. Override
    // this method to provide your own template retrieval
    // For asynchronous loading with AMD/RequireJS, consider
    // using a template-loader plugin as described here:
    // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs
    loadTemplate: function(templateId, options) {
      var template = Backbone.$(templateId).html();
  
      if (!template || template.length === 0) {
        throw new Marionette.Error({
          name: 'NoTemplateError',
          message: 'Could not find template: "' + templateId + '"'
        });
      }
  
      return template;
    },
  
    // Pre-compile the template before caching it. Override
    // this method if you do not need to pre-compile a template
    // (JST / RequireJS for example) or if you want to change
    // the template engine used (Handebars, etc).
    compileTemplate: function(rawTemplate, options) {
      return _.template(rawTemplate, options);
    }
  });
  
  // Renderer
  // --------
  
  // Render a template with data by passing in the template
  // selector and the data to render.
  Marionette.Renderer = {
  
    // Render a template with data. The `template` parameter is
    // passed to the `TemplateCache` object to retrieve the
    // template function. Override this method to provide your own
    // custom rendering and template handling for all of Marionette.
    render: function(template, data) {
      if (!template) {
        throw new Marionette.Error({
          name: 'TemplateNotFoundError',
          message: 'Cannot render the template since its false, null or undefined.'
        });
      }
  
      var templateFunc = _.isFunction(template) ? template : Marionette.TemplateCache.get(template);
  
      return templateFunc(data);
    }
  };
  

  /* jshint maxlen: 114, nonew: false */
  // View
  // ----
  
  // The core view class that other Marionette views extend from.
  Marionette.View = Backbone.View.extend({
    isDestroyed: false,
  
    constructor: function(options) {
      _.bindAll(this, 'render');
  
      options = Marionette._getValue(options, this);
  
      // this exposes view options to the view initializer
      // this is a backfill since backbone removed the assignment
      // of this.options
      // at some point however this may be removed
      this.options = _.extend({}, _.result(this, 'options'), options);
  
      this._behaviors = Marionette.Behaviors(this);
  
      Backbone.View.call(this, this.options);
  
      Marionette.MonitorDOMRefresh(this);
    },
  
    // Get the template for this view
    // instance. You can set a `template` attribute in the view
    // definition or pass a `template: "whatever"` parameter in
    // to the constructor options.
    getTemplate: function() {
      return this.getOption('template');
    },
  
    // Serialize a model by returning its attributes. Clones
    // the attributes to allow modification.
    serializeModel: function(model) {
      return model.toJSON.apply(model, _.rest(arguments));
    },
  
    // Mix in template helper methods. Looks for a
    // `templateHelpers` attribute, which can either be an
    // object literal, or a function that returns an object
    // literal. All methods and attributes from this object
    // are copies to the object passed in.
    mixinTemplateHelpers: function(target) {
      target = target || {};
      var templateHelpers = this.getOption('templateHelpers');
      templateHelpers = Marionette._getValue(templateHelpers, this);
      return _.extend(target, templateHelpers);
    },
  
    // normalize the keys of passed hash with the views `ui` selectors.
    // `{"@ui.foo": "bar"}`
    normalizeUIKeys: function(hash) {
      var uiBindings = _.result(this, '_uiBindings');
      return Marionette.normalizeUIKeys(hash, uiBindings || _.result(this, 'ui'));
    },
  
    // normalize the values of passed hash with the views `ui` selectors.
    // `{foo: "@ui.bar"}`
    normalizeUIValues: function(hash, properties) {
      var ui = _.result(this, 'ui');
      var uiBindings = _.result(this, '_uiBindings');
      return Marionette.normalizeUIValues(hash, uiBindings || ui, properties);
    },
  
    // Configure `triggers` to forward DOM events to view
    // events. `triggers: {"click .foo": "do:foo"}`
    configureTriggers: function() {
      if (!this.triggers) { return; }
  
      // Allow `triggers` to be configured as a function
      var triggers = this.normalizeUIKeys(_.result(this, 'triggers'));
  
      // Configure the triggers, prevent default
      // action and stop propagation of DOM events
      return _.reduce(triggers, function(events, value, key) {
        events[key] = this._buildViewTrigger(value);
        return events;
      }, {}, this);
    },
  
    // Overriding Backbone.View's delegateEvents to handle
    // the `triggers`, `modelEvents`, and `collectionEvents` configuration
    delegateEvents: function(events) {
      this._delegateDOMEvents(events);
      this.bindEntityEvents(this.model, this.getOption('modelEvents'));
      this.bindEntityEvents(this.collection, this.getOption('collectionEvents'));
  
      _.each(this._behaviors, function(behavior) {
        behavior.bindEntityEvents(this.model, behavior.getOption('modelEvents'));
        behavior.bindEntityEvents(this.collection, behavior.getOption('collectionEvents'));
      }, this);
  
      return this;
    },
  
    // internal method to delegate DOM events and triggers
    _delegateDOMEvents: function(eventsArg) {
      var events = Marionette._getValue(eventsArg || this.events, this);
  
      // normalize ui keys
      events = this.normalizeUIKeys(events);
      if (_.isUndefined(eventsArg)) {this.events = events;}
  
      var combinedEvents = {};
  
      // look up if this view has behavior events
      var behaviorEvents = _.result(this, 'behaviorEvents') || {};
      var triggers = this.configureTriggers();
      var behaviorTriggers = _.result(this, 'behaviorTriggers') || {};
  
      // behavior events will be overriden by view events and or triggers
      _.extend(combinedEvents, behaviorEvents, events, triggers, behaviorTriggers);
  
      Backbone.View.prototype.delegateEvents.call(this, combinedEvents);
    },
  
    // Overriding Backbone.View's undelegateEvents to handle unbinding
    // the `triggers`, `modelEvents`, and `collectionEvents` config
    undelegateEvents: function() {
      Backbone.View.prototype.undelegateEvents.apply(this, arguments);
  
      this.unbindEntityEvents(this.model, this.getOption('modelEvents'));
      this.unbindEntityEvents(this.collection, this.getOption('collectionEvents'));
  
      _.each(this._behaviors, function(behavior) {
        behavior.unbindEntityEvents(this.model, behavior.getOption('modelEvents'));
        behavior.unbindEntityEvents(this.collection, behavior.getOption('collectionEvents'));
      }, this);
  
      return this;
    },
  
    // Internal helper method to verify whether the view hasn't been destroyed
    _ensureViewIsIntact: function() {
      if (this.isDestroyed) {
        throw new Marionette.Error({
          name: 'ViewDestroyedError',
          message: 'View (cid: "' + this.cid + '") has already been destroyed and cannot be used.'
        });
      }
    },
  
    // Default `destroy` implementation, for removing a view from the
    // DOM and unbinding it. Regions will call this method
    // for you. You can specify an `onDestroy` method in your view to
    // add custom code that is called after the view is destroyed.
    destroy: function() {
      if (this.isDestroyed) { return this; }
  
      var args = _.toArray(arguments);
  
      this.triggerMethod.apply(this, ['before:destroy'].concat(args));
  
      // mark as destroyed before doing the actual destroy, to
      // prevent infinite loops within "destroy" event handlers
      // that are trying to destroy other views
      this.isDestroyed = true;
      this.triggerMethod.apply(this, ['destroy'].concat(args));
  
      // unbind UI elements
      this.unbindUIElements();
  
      this.isRendered = false;
  
      // remove the view from the DOM
      this.remove();
  
      // Call destroy on each behavior after
      // destroying the view.
      // This unbinds event listeners
      // that behaviors have registered for.
      _.invoke(this._behaviors, 'destroy', args);
  
      return this;
    },
  
    bindUIElements: function() {
      this._bindUIElements();
      _.invoke(this._behaviors, this._bindUIElements);
    },
  
    // This method binds the elements specified in the "ui" hash inside the view's code with
    // the associated jQuery selectors.
    _bindUIElements: function() {
      if (!this.ui) { return; }
  
      // store the ui hash in _uiBindings so they can be reset later
      // and so re-rendering the view will be able to find the bindings
      if (!this._uiBindings) {
        this._uiBindings = this.ui;
      }
  
      // get the bindings result, as a function or otherwise
      var bindings = _.result(this, '_uiBindings');
  
      // empty the ui so we don't have anything to start with
      this.ui = {};
  
      // bind each of the selectors
      _.each(bindings, function(selector, key) {
        this.ui[key] = this.$(selector);
      }, this);
    },
  
    // This method unbinds the elements specified in the "ui" hash
    unbindUIElements: function() {
      this._unbindUIElements();
      _.invoke(this._behaviors, this._unbindUIElements);
    },
  
    _unbindUIElements: function() {
      if (!this.ui || !this._uiBindings) { return; }
  
      // delete all of the existing ui bindings
      _.each(this.ui, function($el, name) {
        delete this.ui[name];
      }, this);
  
      // reset the ui element to the original bindings configuration
      this.ui = this._uiBindings;
      delete this._uiBindings;
    },
  
    // Internal method to create an event handler for a given `triggerDef` like
    // 'click:foo'
    _buildViewTrigger: function(triggerDef) {
      var hasOptions = _.isObject(triggerDef);
  
      var options = _.defaults({}, (hasOptions ? triggerDef : {}), {
        preventDefault: true,
        stopPropagation: true
      });
  
      var eventName = hasOptions ? options.event : triggerDef;
  
      return function(e) {
        if (e) {
          if (e.preventDefault && options.preventDefault) {
            e.preventDefault();
          }
  
          if (e.stopPropagation && options.stopPropagation) {
            e.stopPropagation();
          }
        }
  
        var args = {
          view: this,
          model: this.model,
          collection: this.collection
        };
  
        this.triggerMethod(eventName, args);
      };
    },
  
    setElement: function() {
      var ret = Backbone.View.prototype.setElement.apply(this, arguments);
  
      // proxy behavior $el to the view's $el.
      // This is needed because a view's $el proxy
      // is not set until after setElement is called.
      _.invoke(this._behaviors, 'proxyViewProperties', this);
  
      return ret;
    },
  
    // import the `triggerMethod` to trigger events with corresponding
    // methods if the method exists
    triggerMethod: function() {
      var ret = Marionette._triggerMethod(this, arguments);
  
      this._triggerEventOnBehaviors(arguments);
      this._triggerEventOnParentLayout(arguments[0], _.rest(arguments));
  
      return ret;
    },
  
    _triggerEventOnBehaviors: function(args) {
      var triggerMethod = Marionette._triggerMethod;
      var behaviors = this._behaviors;
      // Use good ol' for as this is a very hot function
      for (var i = 0, length = behaviors && behaviors.length; i < length; i++) {
        triggerMethod(behaviors[i], args);
      }
    },
  
    _triggerEventOnParentLayout: function(eventName, args) {
      var layoutView = this._parentLayoutView();
      if (!layoutView) {
        return;
      }
  
      // invoke triggerMethod on parent view
      var eventPrefix = Marionette.getOption(layoutView, 'childViewEventPrefix');
      var prefixedEventName = eventPrefix + ':' + eventName;
  
      Marionette._triggerMethod(layoutView, [prefixedEventName, this].concat(args));
  
      // call the parent view's childEvents handler
      var childEvents = Marionette.getOption(layoutView, 'childEvents');
      var normalizedChildEvents = layoutView.normalizeMethods(childEvents);
  
      if (!!normalizedChildEvents && _.isFunction(normalizedChildEvents[eventName])) {
        normalizedChildEvents[eventName].apply(layoutView, [this].concat(args));
      }
    },
  
    // This method returns any views that are immediate
    // children of this view
    _getImmediateChildren: function() {
      return [];
    },
  
    // Returns an array of every nested view within this view
    _getNestedViews: function() {
      var children = this._getImmediateChildren();
  
      if (!children.length) { return children; }
  
      return _.reduce(children, function(memo, view) {
        if (!view._getNestedViews) { return memo; }
        return memo.concat(view._getNestedViews());
      }, children);
    },
  
    // Internal utility for building an ancestor
    // view tree list.
    _getAncestors: function() {
      var ancestors = [];
      var parent  = this._parent;
  
      while (parent) {
        ancestors.push(parent);
        parent = parent._parent;
      }
  
      return ancestors;
    },
  
    // Returns the containing parent view.
    _parentLayoutView: function() {
      var ancestors = this._getAncestors();
      return _.find(ancestors, function(parent) {
        return parent instanceof Marionette.LayoutView;
      });
    },
  
    // Imports the "normalizeMethods" to transform hashes of
    // events=>function references/names to a hash of events=>function references
    normalizeMethods: Marionette.normalizeMethods,
  
    // A handy way to merge passed-in options onto the instance
    mergeOptions: Marionette.mergeOptions,
  
    // Proxy `getOption` to enable getting options from this or this.options by name.
    getOption: Marionette.proxyGetOption,
  
    // Proxy `bindEntityEvents` to enable binding view's events from another entity.
    bindEntityEvents: Marionette.proxyBindEntityEvents,
  
    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.
    unbindEntityEvents: Marionette.proxyUnbindEntityEvents
  });
  
  // Item View
  // ---------
  
  // A single item view implementation that contains code for rendering
  // with underscore.js templates, serializing the view's model or collection,
  // and calling several methods on extended views, such as `onRender`.
  Marionette.ItemView = Marionette.View.extend({
  
    // Setting up the inheritance chain which allows changes to
    // Marionette.View.prototype.constructor which allows overriding
    constructor: function() {
      Marionette.View.apply(this, arguments);
    },
  
    // Serialize the model or collection for the view. If a model is
    // found, the view's `serializeModel` is called. If a collection is found,
    // each model in the collection is serialized by calling
    // the view's `serializeCollection` and put into an `items` array in
    // the resulting data. If both are found, defaults to the model.
    // You can override the `serializeData` method in your own view definition,
    // to provide custom serialization for your view's data.
    serializeData: function() {
      if (!this.model && !this.collection) {
        return {};
      }
  
      var args = [this.model || this.collection];
      if (arguments.length) {
        args.push.apply(args, arguments);
      }
  
      if (this.model) {
        return this.serializeModel.apply(this, args);
      } else {
        return {
          items: this.serializeCollection.apply(this, args)
        };
      }
    },
  
    // Serialize a collection by serializing each of its models.
    serializeCollection: function(collection) {
      return collection.toJSON.apply(collection, _.rest(arguments));
    },
  
    // Render the view, defaulting to underscore.js templates.
    // You can override this in your view definition to provide
    // a very specific rendering for your view. In general, though,
    // you should override the `Marionette.Renderer` object to
    // change how Marionette renders views.
    render: function() {
      this._ensureViewIsIntact();
  
      this.triggerMethod('before:render', this);
  
      this._renderTemplate();
      this.isRendered = true;
      this.bindUIElements();
  
      this.triggerMethod('render', this);
  
      return this;
    },
  
    // Internal method to render the template with the serialized data
    // and template helpers via the `Marionette.Renderer` object.
    // Throws an `UndefinedTemplateError` error if the template is
    // any falsely value but literal `false`.
    _renderTemplate: function() {
      var template = this.getTemplate();
  
      // Allow template-less item views
      if (template === false) {
        return;
      }
  
      if (!template) {
        throw new Marionette.Error({
          name: 'UndefinedTemplateError',
          message: 'Cannot render the template since it is null or undefined.'
        });
      }
  
      // Add in entity data and template helpers
      var data = this.mixinTemplateHelpers(this.serializeData());
  
      // Render and add to el
      var html = Marionette.Renderer.render(template, data, this);
      this.attachElContent(html);
  
      return this;
    },
  
    // Attaches the content of a given view.
    // This method can be overridden to optimize rendering,
    // or to render in a non standard way.
    //
    // For example, using `innerHTML` instead of `$el.html`
    //
    // ```js
    // attachElContent: function(html) {
    //   this.el.innerHTML = html;
    //   return this;
    // }
    // ```
    attachElContent: function(html) {
      this.$el.html(html);
  
      return this;
    }
  });
  
  /* jshint maxstatements: 14 */
  
  // Collection View
  // ---------------
  
  // A view that iterates over a Backbone.Collection
  // and renders an individual child view for each model.
  Marionette.CollectionView = Marionette.View.extend({
  
    // used as the prefix for child view events
    // that are forwarded through the collectionview
    childViewEventPrefix: 'childview',
  
    // flag for maintaining the sorted order of the collection
    sort: true,
  
    // constructor
    // option to pass `{sort: false}` to prevent the `CollectionView` from
    // maintaining the sorted order of the collection.
    // This will fallback onto appending childView's to the end.
    //
    // option to pass `{comparator: compFunction()}` to allow the `CollectionView`
    // to use a custom sort order for the collection.
    constructor: function(options) {
  
      this.once('render', this._initialEvents);
      this._initChildViewStorage();
  
      Marionette.View.apply(this, arguments);
  
      this.on('show', this._onShowCalled);
  
      this.initRenderBuffer();
    },
  
    // Instead of inserting elements one by one into the page,
    // it's much more performant to insert elements into a document
    // fragment and then insert that document fragment into the page
    initRenderBuffer: function() {
      this._bufferedChildren = [];
    },
  
    startBuffering: function() {
      this.initRenderBuffer();
      this.isBuffering = true;
    },
  
    endBuffering: function() {
      this.isBuffering = false;
      this._triggerBeforeShowBufferedChildren();
  
      this.attachBuffer(this);
  
      this._triggerShowBufferedChildren();
      this.initRenderBuffer();
    },
  
    _triggerBeforeShowBufferedChildren: function() {
      if (this._isShown) {
        _.each(this._bufferedChildren, _.partial(this._triggerMethodOnChild, 'before:show'));
      }
    },
  
    _triggerShowBufferedChildren: function() {
      if (this._isShown) {
        _.each(this._bufferedChildren, _.partial(this._triggerMethodOnChild, 'show'));
  
        this._bufferedChildren = [];
      }
    },
  
    // Internal method for _.each loops to call `Marionette.triggerMethodOn` on
    // a child view
    _triggerMethodOnChild: function(event, childView) {
      Marionette.triggerMethodOn(childView, event);
    },
  
    // Configured the initial events that the collection view
    // binds to.
    _initialEvents: function() {
      if (this.collection) {
        this.listenTo(this.collection, 'add', this._onCollectionAdd);
        this.listenTo(this.collection, 'remove', this._onCollectionRemove);
        this.listenTo(this.collection, 'reset', this.render);
  
        if (this.getOption('sort')) {
          this.listenTo(this.collection, 'sort', this._sortViews);
        }
      }
    },
  
    // Handle a child added to the collection
    _onCollectionAdd: function(child, collection, opts) {
      var index;
      if (opts.at !== undefined) {
        index = opts.at;
      } else {
        index = _.indexOf(this._filteredSortedModels(), child);
      }
  
      if (this._shouldAddChild(child, index)) {
        this.destroyEmptyView();
        var ChildView = this.getChildView(child);
        this.addChild(child, ChildView, index);
      }
    },
  
    // get the child view by model it holds, and remove it
    _onCollectionRemove: function(model) {
      var view = this.children.findByModel(model);
      this.removeChildView(view);
      this.checkEmpty();
    },
  
    _onShowCalled: function() {
      this.children.each(_.partial(this._triggerMethodOnChild, 'show'));
    },
  
    // Render children views. Override this method to
    // provide your own implementation of a render function for
    // the collection view.
    render: function() {
      this._ensureViewIsIntact();
      this.triggerMethod('before:render', this);
      this._renderChildren();
      this.isRendered = true;
      this.triggerMethod('render', this);
      return this;
    },
  
    // Reorder DOM after sorting. When your element's rendering
    // do not use their index, you can pass reorderOnSort: true
    // to only reorder the DOM after a sort instead of rendering
    // all the collectionView
    reorder: function() {
      var children = this.children;
      var models = this._filteredSortedModels();
      var modelsChanged = _.find(models, function(model) {
        return !children.findByModel(model);
      });
  
      // If the models we're displaying have changed due to filtering
      // We need to add and/or remove child views
      // So render as normal
      if (modelsChanged) {
        this.render();
      } else {
        // get the DOM nodes in the same order as the models
        var els = _.map(models, function(model) {
          return children.findByModel(model).el;
        });
  
        // since append moves elements that are already in the DOM,
        // appending the elements will effectively reorder them
        this.triggerMethod('before:reorder');
        this._appendReorderedChildren(els);
        this.triggerMethod('reorder');
      }
    },
  
    // Render view after sorting. Override this method to
    // change how the view renders after a `sort` on the collection.
    // An example of this would be to only `renderChildren` in a `CompositeView`
    // rather than the full view.
    resortView: function() {
      if (Marionette.getOption(this, 'reorderOnSort')) {
        this.reorder();
      } else {
        this.render();
      }
    },
  
    // Internal method. This checks for any changes in the order of the collection.
    // If the index of any view doesn't match, it will render.
    _sortViews: function() {
      var models = this._filteredSortedModels();
  
      // check for any changes in sort order of views
      var orderChanged = _.find(models, function(item, index) {
        var view = this.children.findByModel(item);
        return !view || view._index !== index;
      }, this);
  
      if (orderChanged) {
        this.resortView();
      }
    },
  
    // Internal reference to what index a `emptyView` is.
    _emptyViewIndex: -1,
  
    // Internal method. Separated so that CompositeView can append to the childViewContainer
    // if necessary
    _appendReorderedChildren: function(children) {
      this.$el.append(children);
    },
  
    // Internal method. Separated so that CompositeView can have
    // more control over events being triggered, around the rendering
    // process
    _renderChildren: function() {
      this.destroyEmptyView();
      this.destroyChildren();
  
      if (this.isEmpty(this.collection)) {
        this.showEmptyView();
      } else {
        this.triggerMethod('before:render:collection', this);
        this.startBuffering();
        this.showCollection();
        this.endBuffering();
        this.triggerMethod('render:collection', this);
  
        // If we have shown children and none have passed the filter, show the empty view
        if (this.children.isEmpty()) {
          this.showEmptyView();
        }
      }
    },
  
    // Internal method to loop through collection and show each child view.
    showCollection: function() {
      var ChildView;
  
      var models = this._filteredSortedModels();
  
      _.each(models, function(child, index) {
        ChildView = this.getChildView(child);
        this.addChild(child, ChildView, index);
      }, this);
    },
  
    // Allow the collection to be sorted by a custom view comparator
    _filteredSortedModels: function() {
      var models;
      var viewComparator = this.getViewComparator();
  
      if (viewComparator) {
        if (_.isString(viewComparator) || viewComparator.length === 1) {
          models = this.collection.sortBy(viewComparator, this);
        } else {
          models = _.clone(this.collection.models).sort(_.bind(viewComparator, this));
        }
      } else {
        models = this.collection.models;
      }
  
      // Filter after sorting in case the filter uses the index
      if (this.getOption('filter')) {
        models = _.filter(models, function(model, index) {
          return this._shouldAddChild(model, index);
        }, this);
      }
  
      return models;
    },
  
    // Internal method to show an empty view in place of
    // a collection of child views, when the collection is empty
    showEmptyView: function() {
      var EmptyView = this.getEmptyView();
  
      if (EmptyView && !this._showingEmptyView) {
        this.triggerMethod('before:render:empty');
  
        this._showingEmptyView = true;
        var model = new Backbone.Model();
        this.addEmptyView(model, EmptyView);
  
        this.triggerMethod('render:empty');
      }
    },
  
    // Internal method to destroy an existing emptyView instance
    // if one exists. Called when a collection view has been
    // rendered empty, and then a child is added to the collection.
    destroyEmptyView: function() {
      if (this._showingEmptyView) {
        this.triggerMethod('before:remove:empty');
  
        this.destroyChildren();
        delete this._showingEmptyView;
  
        this.triggerMethod('remove:empty');
      }
    },
  
    // Retrieve the empty view class
    getEmptyView: function() {
      return this.getOption('emptyView');
    },
  
    // Render and show the emptyView. Similar to addChild method
    // but "add:child" events are not fired, and the event from
    // emptyView are not forwarded
    addEmptyView: function(child, EmptyView) {
  
      // get the emptyViewOptions, falling back to childViewOptions
      var emptyViewOptions = this.getOption('emptyViewOptions') ||
                            this.getOption('childViewOptions');
  
      if (_.isFunction(emptyViewOptions)) {
        emptyViewOptions = emptyViewOptions.call(this, child, this._emptyViewIndex);
      }
  
      // build the empty view
      var view = this.buildChildView(child, EmptyView, emptyViewOptions);
  
      view._parent = this;
  
      // Proxy emptyView events
      this.proxyChildEvents(view);
  
      // trigger the 'before:show' event on `view` if the collection view
      // has already been shown
      if (this._isShown) {
        Marionette.triggerMethodOn(view, 'before:show');
      }
  
      // Store the `emptyView` like a `childView` so we can properly
      // remove and/or close it later
      this.children.add(view);
  
      // Render it and show it
      this.renderChildView(view, this._emptyViewIndex);
  
      // call the 'show' method if the collection view
      // has already been shown
      if (this._isShown) {
        Marionette.triggerMethodOn(view, 'show');
      }
    },
  
    // Retrieve the `childView` class, either from `this.options.childView`
    // or from the `childView` in the object definition. The "options"
    // takes precedence.
    // This method receives the model that will be passed to the instance
    // created from this `childView`. Overriding methods may use the child
    // to determine what `childView` class to return.
    getChildView: function(child) {
      var childView = this.getOption('childView');
  
      if (!childView) {
        throw new Marionette.Error({
          name: 'NoChildViewError',
          message: 'A "childView" must be specified'
        });
      }
  
      return childView;
    },
  
    // Render the child's view and add it to the
    // HTML for the collection view at a given index.
    // This will also update the indices of later views in the collection
    // in order to keep the children in sync with the collection.
    addChild: function(child, ChildView, index) {
      var childViewOptions = this.getOption('childViewOptions');
      childViewOptions = Marionette._getValue(childViewOptions, this, [child, index]);
  
      var view = this.buildChildView(child, ChildView, childViewOptions);
  
      // increment indices of views after this one
      this._updateIndices(view, true, index);
  
      this._addChildView(view, index);
  
      view._parent = this;
  
      return view;
    },
  
    // Internal method. This decrements or increments the indices of views after the
    // added/removed view to keep in sync with the collection.
    _updateIndices: function(view, increment, index) {
      if (!this.getOption('sort')) {
        return;
      }
  
      if (increment) {
        // assign the index to the view
        view._index = index;
      }
  
      // update the indexes of views after this one
      this.children.each(function(laterView) {
        if (laterView._index >= view._index) {
          laterView._index += increment ? 1 : -1;
        }
      });
    },
  
    // Internal Method. Add the view to children and render it at
    // the given index.
    _addChildView: function(view, index) {
      // set up the child view event forwarding
      this.proxyChildEvents(view);
  
      this.triggerMethod('before:add:child', view);
  
      // trigger the 'before:show' event on `view` if the collection view
      // has already been shown
      if (this._isShown && !this.isBuffering) {
        Marionette.triggerMethodOn(view, 'before:show');
      }
  
      // Store the child view itself so we can properly
      // remove and/or destroy it later
      this.children.add(view);
      this.renderChildView(view, index);
  
      if (this._isShown && !this.isBuffering) {
        Marionette.triggerMethodOn(view, 'show');
      }
  
      this.triggerMethod('add:child', view);
    },
  
    // render the child view
    renderChildView: function(view, index) {
      view.render();
      this.attachHtml(this, view, index);
      return view;
    },
  
    // Build a `childView` for a model in the collection.
    buildChildView: function(child, ChildViewClass, childViewOptions) {
      var options = _.extend({model: child}, childViewOptions);
      return new ChildViewClass(options);
    },
  
    // Remove the child view and destroy it.
    // This function also updates the indices of
    // later views in the collection in order to keep
    // the children in sync with the collection.
    removeChildView: function(view) {
  
      if (view) {
        this.triggerMethod('before:remove:child', view);
  
        // call 'destroy' or 'remove', depending on which is found
        if (view.destroy) {
          view.destroy();
        } else if (view.remove) {
          view.remove();
        }
  
        delete view._parent;
        this.stopListening(view);
        this.children.remove(view);
        this.triggerMethod('remove:child', view);
  
        // decrement the index of views after this one
        this._updateIndices(view, false);
      }
  
      return view;
    },
  
    // check if the collection is empty
    isEmpty: function() {
      return !this.collection || this.collection.length === 0;
    },
  
    // If empty, show the empty view
    checkEmpty: function() {
      if (this.isEmpty(this.collection)) {
        this.showEmptyView();
      }
    },
  
    // You might need to override this if you've overridden attachHtml
    attachBuffer: function(collectionView) {
      collectionView.$el.append(this._createBuffer(collectionView));
    },
  
    // Create a fragment buffer from the currently buffered children
    _createBuffer: function(collectionView) {
      var elBuffer = document.createDocumentFragment();
      _.each(collectionView._bufferedChildren, function(b) {
        elBuffer.appendChild(b.el);
      });
      return elBuffer;
    },
  
    // Append the HTML to the collection's `el`.
    // Override this method to do something other
    // than `.append`.
    attachHtml: function(collectionView, childView, index) {
      if (collectionView.isBuffering) {
        // buffering happens on reset events and initial renders
        // in order to reduce the number of inserts into the
        // document, which are expensive.
        collectionView._bufferedChildren.splice(index, 0, childView);
      } else {
        // If we've already rendered the main collection, append
        // the new child into the correct order if we need to. Otherwise
        // append to the end.
        if (!collectionView._insertBefore(childView, index)) {
          collectionView._insertAfter(childView);
        }
      }
    },
  
    // Internal method. Check whether we need to insert the view into
    // the correct position.
    _insertBefore: function(childView, index) {
      var currentView;
      var findPosition = this.getOption('sort') && (index < this.children.length - 1);
      if (findPosition) {
        // Find the view after this one
        currentView = this.children.find(function(view) {
          return view._index === index + 1;
        });
      }
  
      if (currentView) {
        currentView.$el.before(childView.el);
        return true;
      }
  
      return false;
    },
  
    // Internal method. Append a view to the end of the $el
    _insertAfter: function(childView) {
      this.$el.append(childView.el);
    },
  
    // Internal method to set up the `children` object for
    // storing all of the child views
    _initChildViewStorage: function() {
      this.children = new Backbone.ChildViewContainer();
    },
  
    // Handle cleanup and other destroying needs for the collection of views
    destroy: function() {
      if (this.isDestroyed) { return this; }
  
      this.triggerMethod('before:destroy:collection');
      this.destroyChildren();
      this.triggerMethod('destroy:collection');
  
      return Marionette.View.prototype.destroy.apply(this, arguments);
    },
  
    // Destroy the child views that this collection view
    // is holding on to, if any
    destroyChildren: function() {
      var childViews = this.children.map(_.identity);
      this.children.each(this.removeChildView, this);
      this.checkEmpty();
      return childViews;
    },
  
    // Return true if the given child should be shown
    // Return false otherwise
    // The filter will be passed (child, index, collection)
    // Where
    //  'child' is the given model
    //  'index' is the index of that model in the collection
    //  'collection' is the collection referenced by this CollectionView
    _shouldAddChild: function(child, index) {
      var filter = this.getOption('filter');
      return !_.isFunction(filter) || filter.call(this, child, index, this.collection);
    },
  
    // Set up the child view event forwarding. Uses a "childview:"
    // prefix in front of all forwarded events.
    proxyChildEvents: function(view) {
      var prefix = this.getOption('childViewEventPrefix');
  
      // Forward all child view events through the parent,
      // prepending "childview:" to the event name
      this.listenTo(view, 'all', function() {
        var args = _.toArray(arguments);
        var rootEvent = args[0];
        var childEvents = this.normalizeMethods(_.result(this, 'childEvents'));
  
        args[0] = prefix + ':' + rootEvent;
        args.splice(1, 0, view);
  
        // call collectionView childEvent if defined
        if (typeof childEvents !== 'undefined' && _.isFunction(childEvents[rootEvent])) {
          childEvents[rootEvent].apply(this, args.slice(1));
        }
  
        this.triggerMethod.apply(this, args);
      });
    },
  
    _getImmediateChildren: function() {
      return _.values(this.children._views);
    },
  
    getViewComparator: function() {
      return this.getOption('viewComparator');
    }
  });
  
  /* jshint maxstatements: 17, maxlen: 117 */
  
  // Composite View
  // --------------
  
  // Used for rendering a branch-leaf, hierarchical structure.
  // Extends directly from CollectionView and also renders an
  // a child view as `modelView`, for the top leaf
  Marionette.CompositeView = Marionette.CollectionView.extend({
  
    // Setting up the inheritance chain which allows changes to
    // Marionette.CollectionView.prototype.constructor which allows overriding
    // option to pass '{sort: false}' to prevent the CompositeView from
    // maintaining the sorted order of the collection.
    // This will fallback onto appending childView's to the end.
    constructor: function() {
      Marionette.CollectionView.apply(this, arguments);
    },
  
    // Configured the initial events that the composite view
    // binds to. Override this method to prevent the initial
    // events, or to add your own initial events.
    _initialEvents: function() {
  
      // Bind only after composite view is rendered to avoid adding child views
      // to nonexistent childViewContainer
  
      if (this.collection) {
        this.listenTo(this.collection, 'add', this._onCollectionAdd);
        this.listenTo(this.collection, 'remove', this._onCollectionRemove);
        this.listenTo(this.collection, 'reset', this._renderChildren);
  
        if (this.getOption('sort')) {
          this.listenTo(this.collection, 'sort', this._sortViews);
        }
      }
    },
  
    // Retrieve the `childView` to be used when rendering each of
    // the items in the collection. The default is to return
    // `this.childView` or Marionette.CompositeView if no `childView`
    // has been defined
    getChildView: function(child) {
      var childView = this.getOption('childView') || this.constructor;
  
      return childView;
    },
  
    // Serialize the model for the view.
    // You can override the `serializeData` method in your own view
    // definition, to provide custom serialization for your view's data.
    serializeData: function() {
      var data = {};
  
      if (this.model) {
        data = _.partial(this.serializeModel, this.model).apply(this, arguments);
      }
  
      return data;
    },
  
    // Renders the model and the collection.
    render: function() {
      this._ensureViewIsIntact();
      this._isRendering = true;
      this.resetChildViewContainer();
  
      this.triggerMethod('before:render', this);
  
      this._renderTemplate();
      this._renderChildren();
  
      this._isRendering = false;
      this.isRendered = true;
      this.triggerMethod('render', this);
      return this;
    },
  
    _renderChildren: function() {
      if (this.isRendered || this._isRendering) {
        Marionette.CollectionView.prototype._renderChildren.call(this);
      }
    },
  
    // Render the root template that the children
    // views are appended to
    _renderTemplate: function() {
      var data = {};
      data = this.serializeData();
      data = this.mixinTemplateHelpers(data);
  
      this.triggerMethod('before:render:template');
  
      var template = this.getTemplate();
      var html = Marionette.Renderer.render(template, data, this);
      this.attachElContent(html);
  
      // the ui bindings is done here and not at the end of render since they
      // will not be available until after the model is rendered, but should be
      // available before the collection is rendered.
      this.bindUIElements();
      this.triggerMethod('render:template');
    },
  
    // Attaches the content of the root.
    // This method can be overridden to optimize rendering,
    // or to render in a non standard way.
    //
    // For example, using `innerHTML` instead of `$el.html`
    //
    // ```js
    // attachElContent: function(html) {
    //   this.el.innerHTML = html;
    //   return this;
    // }
    // ```
    attachElContent: function(html) {
      this.$el.html(html);
  
      return this;
    },
  
    // You might need to override this if you've overridden attachHtml
    attachBuffer: function(compositeView) {
      var $container = this.getChildViewContainer(compositeView);
      $container.append(this._createBuffer(compositeView));
    },
  
    // Internal method. Append a view to the end of the $el.
    // Overidden from CollectionView to ensure view is appended to
    // childViewContainer
    _insertAfter: function(childView) {
      var $container = this.getChildViewContainer(this, childView);
      $container.append(childView.el);
    },
  
    // Internal method. Append reordered childView'.
    // Overidden from CollectionView to ensure reordered views
    // are appended to childViewContainer
    _appendReorderedChildren: function(children) {
      var $container = this.getChildViewContainer(this);
      $container.append(children);
    },
  
    // Internal method to ensure an `$childViewContainer` exists, for the
    // `attachHtml` method to use.
    getChildViewContainer: function(containerView, childView) {
      if ('$childViewContainer' in containerView) {
        return containerView.$childViewContainer;
      }
  
      var container;
      var childViewContainer = Marionette.getOption(containerView, 'childViewContainer');
      if (childViewContainer) {
  
        var selector = Marionette._getValue(childViewContainer, containerView);
  
        if (selector.charAt(0) === '@' && containerView.ui) {
          container = containerView.ui[selector.substr(4)];
        } else {
          container = containerView.$(selector);
        }
  
        if (container.length <= 0) {
          throw new Marionette.Error({
            name: 'ChildViewContainerMissingError',
            message: 'The specified "childViewContainer" was not found: ' + containerView.childViewContainer
          });
        }
  
      } else {
        container = containerView.$el;
      }
  
      containerView.$childViewContainer = container;
      return container;
    },
  
    // Internal method to reset the `$childViewContainer` on render
    resetChildViewContainer: function() {
      if (this.$childViewContainer) {
        delete this.$childViewContainer;
      }
    }
  });
  
  // Layout View
  // -----------
  
  // Used for managing application layoutViews, nested layoutViews and
  // multiple regions within an application or sub-application.
  //
  // A specialized view class that renders an area of HTML and then
  // attaches `Region` instances to the specified `regions`.
  // Used for composite view management and sub-application areas.
  Marionette.LayoutView = Marionette.ItemView.extend({
    regionClass: Marionette.Region,
  
    options: {
      destroyImmediate: false
    },
  
    // used as the prefix for child view events
    // that are forwarded through the layoutview
    childViewEventPrefix: 'childview',
  
    // Ensure the regions are available when the `initialize` method
    // is called.
    constructor: function(options) {
      options = options || {};
  
      this._firstRender = true;
      this._initializeRegions(options);
  
      Marionette.ItemView.call(this, options);
    },
  
    // LayoutView's render will use the existing region objects the
    // first time it is called. Subsequent calls will destroy the
    // views that the regions are showing and then reset the `el`
    // for the regions to the newly rendered DOM elements.
    render: function() {
      this._ensureViewIsIntact();
  
      if (this._firstRender) {
        // if this is the first render, don't do anything to
        // reset the regions
        this._firstRender = false;
      } else {
        // If this is not the first render call, then we need to
        // re-initialize the `el` for each region
        this._reInitializeRegions();
      }
  
      return Marionette.ItemView.prototype.render.apply(this, arguments);
    },
  
    // Handle destroying regions, and then destroy the view itself.
    destroy: function() {
      if (this.isDestroyed) { return this; }
      // #2134: remove parent element before destroying the child views, so
      // removing the child views doesn't retrigger repaints
      if (this.getOption('destroyImmediate') === true) {
        this.$el.remove();
      }
      this.regionManager.destroy();
      return Marionette.ItemView.prototype.destroy.apply(this, arguments);
    },
  
    showChildView: function(regionName, view) {
      return this.getRegion(regionName).show(view);
    },
  
    getChildView: function(regionName) {
      return this.getRegion(regionName).currentView;
    },
  
    // Add a single region, by name, to the layoutView
    addRegion: function(name, definition) {
      var regions = {};
      regions[name] = definition;
      return this._buildRegions(regions)[name];
    },
  
    // Add multiple regions as a {name: definition, name2: def2} object literal
    addRegions: function(regions) {
      this.regions = _.extend({}, this.regions, regions);
      return this._buildRegions(regions);
    },
  
    // Remove a single region from the LayoutView, by name
    removeRegion: function(name) {
      delete this.regions[name];
      return this.regionManager.removeRegion(name);
    },
  
    // Provides alternative access to regions
    // Accepts the region name
    // getRegion('main')
    getRegion: function(region) {
      return this.regionManager.get(region);
    },
  
    // Get all regions
    getRegions: function() {
      return this.regionManager.getRegions();
    },
  
    // internal method to build regions
    _buildRegions: function(regions) {
      var defaults = {
        regionClass: this.getOption('regionClass'),
        parentEl: _.partial(_.result, this, 'el')
      };
  
      return this.regionManager.addRegions(regions, defaults);
    },
  
    // Internal method to initialize the regions that have been defined in a
    // `regions` attribute on this layoutView.
    _initializeRegions: function(options) {
      var regions;
      this._initRegionManager();
  
      regions = Marionette._getValue(this.regions, this, [options]) || {};
  
      // Enable users to define `regions` as instance options.
      var regionOptions = this.getOption.call(options, 'regions');
  
      // enable region options to be a function
      regionOptions = Marionette._getValue(regionOptions, this, [options]);
  
      _.extend(regions, regionOptions);
  
      // Normalize region selectors hash to allow
      // a user to use the @ui. syntax.
      regions = this.normalizeUIValues(regions, ['selector', 'el']);
  
      this.addRegions(regions);
    },
  
    // Internal method to re-initialize all of the regions by updating the `el` that
    // they point to
    _reInitializeRegions: function() {
      this.regionManager.invoke('reset');
    },
  
    // Enable easy overriding of the default `RegionManager`
    // for customized region interactions and business specific
    // view logic for better control over single regions.
    getRegionManager: function() {
      return new Marionette.RegionManager();
    },
  
    // Internal method to initialize the region manager
    // and all regions in it
    _initRegionManager: function() {
      this.regionManager = this.getRegionManager();
      this.regionManager._parent = this;
  
      this.listenTo(this.regionManager, 'before:add:region', function(name) {
        this.triggerMethod('before:add:region', name);
      });
  
      this.listenTo(this.regionManager, 'add:region', function(name, region) {
        this[name] = region;
        this.triggerMethod('add:region', name, region);
      });
  
      this.listenTo(this.regionManager, 'before:remove:region', function(name) {
        this.triggerMethod('before:remove:region', name);
      });
  
      this.listenTo(this.regionManager, 'remove:region', function(name, region) {
        delete this[name];
        this.triggerMethod('remove:region', name, region);
      });
    },
  
    _getImmediateChildren: function() {
      return _.chain(this.regionManager.getRegions())
        .pluck('currentView')
        .compact()
        .value();
    }
  });
  

  // Behavior
  // --------
  
  // A Behavior is an isolated set of DOM /
  // user interactions that can be mixed into any View.
  // Behaviors allow you to blackbox View specific interactions
  // into portable logical chunks, keeping your views simple and your code DRY.
  
  Marionette.Behavior = Marionette.Object.extend({
    constructor: function(options, view) {
      // Setup reference to the view.
      // this comes in handle when a behavior
      // wants to directly talk up the chain
      // to the view.
      this.view = view;
      this.defaults = _.result(this, 'defaults') || {};
      this.options  = _.extend({}, this.defaults, options);
      // Construct an internal UI hash using
      // the views UI hash and then the behaviors UI hash.
      // This allows the user to use UI hash elements
      // defined in the parent view as well as those
      // defined in the given behavior.
      this.ui = _.extend({}, _.result(view, 'ui'), _.result(this, 'ui'));
  
      Marionette.Object.apply(this, arguments);
    },
  
    // proxy behavior $ method to the view
    // this is useful for doing jquery DOM lookups
    // scoped to behaviors view.
    $: function() {
      return this.view.$.apply(this.view, arguments);
    },
  
    // Stops the behavior from listening to events.
    // Overrides Object#destroy to prevent additional events from being triggered.
    destroy: function() {
      this.stopListening();
  
      return this;
    },
  
    proxyViewProperties: function(view) {
      this.$el = view.$el;
      this.el = view.el;
    }
  });
  
  /* jshint maxlen: 143 */
  // Behaviors
  // ---------
  
  // Behaviors is a utility class that takes care of
  // gluing your behavior instances to their given View.
  // The most important part of this class is that you
  // **MUST** override the class level behaviorsLookup
  // method for things to work properly.
  
  Marionette.Behaviors = (function(Marionette, _) {
    // Borrow event splitter from Backbone
    var delegateEventSplitter = /^(\S+)\s*(.*)$/;
  
    function Behaviors(view, behaviors) {
  
      if (!_.isObject(view.behaviors)) {
        return {};
      }
  
      // Behaviors defined on a view can be a flat object literal
      // or it can be a function that returns an object.
      behaviors = Behaviors.parseBehaviors(view, behaviors || _.result(view, 'behaviors'));
  
      // Wraps several of the view's methods
      // calling the methods first on each behavior
      // and then eventually calling the method on the view.
      Behaviors.wrap(view, behaviors, _.keys(methods));
      return behaviors;
    }
  
    var methods = {
      behaviorTriggers: function(behaviorTriggers, behaviors) {
        var triggerBuilder = new BehaviorTriggersBuilder(this, behaviors);
        return triggerBuilder.buildBehaviorTriggers();
      },
  
      behaviorEvents: function(behaviorEvents, behaviors) {
        var _behaviorsEvents = {};
  
        _.each(behaviors, function(b, i) {
          var _events = {};
          var behaviorEvents = _.clone(_.result(b, 'events')) || {};
  
          // Normalize behavior events hash to allow
          // a user to use the @ui. syntax.
          behaviorEvents = Marionette.normalizeUIKeys(behaviorEvents, getBehaviorsUI(b));
  
          var j = 0;
          _.each(behaviorEvents, function(behaviour, key) {
            var match     = key.match(delegateEventSplitter);
  
            // Set event name to be namespaced using the view cid,
            // the behavior index, and the behavior event index
            // to generate a non colliding event namespace
            // http://api.jquery.com/event.namespace/
            var eventName = match[1] + '.' + [this.cid, i, j++, ' '].join('');
            var selector  = match[2];
  
            var eventKey  = eventName + selector;
            var handler   = _.isFunction(behaviour) ? behaviour : b[behaviour];
  
            _events[eventKey] = _.bind(handler, b);
          }, this);
  
          _behaviorsEvents = _.extend(_behaviorsEvents, _events);
        }, this);
  
        return _behaviorsEvents;
      }
    };
  
    _.extend(Behaviors, {
  
      // Placeholder method to be extended by the user.
      // The method should define the object that stores the behaviors.
      // i.e.
      //
      // ```js
      // Marionette.Behaviors.behaviorsLookup: function() {
      //   return App.Behaviors
      // }
      // ```
      behaviorsLookup: function() {
        throw new Marionette.Error({
          message: 'You must define where your behaviors are stored.',
          url: 'marionette.behaviors.html#behaviorslookup'
        });
      },
  
      // Takes care of getting the behavior class
      // given options and a key.
      // If a user passes in options.behaviorClass
      // default to using that. Otherwise delegate
      // the lookup to the users `behaviorsLookup` implementation.
      getBehaviorClass: function(options, key) {
        if (options.behaviorClass) {
          return options.behaviorClass;
        }
  
        // Get behavior class can be either a flat object or a method
        return Marionette._getValue(Behaviors.behaviorsLookup, this, [options, key])[key];
      },
  
      // Iterate over the behaviors object, for each behavior
      // instantiate it and get its grouped behaviors.
      parseBehaviors: function(view, behaviors) {
        return _.chain(behaviors).map(function(options, key) {
          var BehaviorClass = Behaviors.getBehaviorClass(options, key);
  
          var behavior = new BehaviorClass(options, view);
          var nestedBehaviors = Behaviors.parseBehaviors(view, _.result(behavior, 'behaviors'));
  
          return [behavior].concat(nestedBehaviors);
        }).flatten().value();
      },
  
      // Wrap view internal methods so that they delegate to behaviors. For example,
      // `onDestroy` should trigger destroy on all of the behaviors and then destroy itself.
      // i.e.
      //
      // `view.delegateEvents = _.partial(methods.delegateEvents, view.delegateEvents, behaviors);`
      wrap: function(view, behaviors, methodNames) {
        _.each(methodNames, function(methodName) {
          view[methodName] = _.partial(methods[methodName], view[methodName], behaviors);
        });
      }
    });
  
    // Class to build handlers for `triggers` on behaviors
    // for views
    function BehaviorTriggersBuilder(view, behaviors) {
      this._view      = view;
      this._behaviors = behaviors;
      this._triggers  = {};
    }
  
    _.extend(BehaviorTriggersBuilder.prototype, {
      // Main method to build the triggers hash with event keys and handlers
      buildBehaviorTriggers: function() {
        _.each(this._behaviors, this._buildTriggerHandlersForBehavior, this);
        return this._triggers;
      },
  
      // Internal method to build all trigger handlers for a given behavior
      _buildTriggerHandlersForBehavior: function(behavior, i) {
        var triggersHash = _.clone(_.result(behavior, 'triggers')) || {};
  
        triggersHash = Marionette.normalizeUIKeys(triggersHash, getBehaviorsUI(behavior));
  
        _.each(triggersHash, _.bind(this._setHandlerForBehavior, this, behavior, i));
      },
  
      // Internal method to create and assign the trigger handler for a given
      // behavior
      _setHandlerForBehavior: function(behavior, i, eventName, trigger) {
        // Unique identifier for the `this._triggers` hash
        var triggerKey = trigger.replace(/^\S+/, function(triggerName) {
          return triggerName + '.' + 'behaviortriggers' + i;
        });
  
        this._triggers[triggerKey] = this._view._buildViewTrigger(eventName);
      }
    });
  
    function getBehaviorsUI(behavior) {
      return behavior._uiBindings || behavior.ui;
    }
  
    return Behaviors;
  
  })(Marionette, _);
  

  // App Router
  // ----------
  
  // Reduce the boilerplate code of handling route events
  // and then calling a single method on another object.
  // Have your routers configured to call the method on
  // your object, directly.
  //
  // Configure an AppRouter with `appRoutes`.
  //
  // App routers can only take one `controller` object.
  // It is recommended that you divide your controller
  // objects in to smaller pieces of related functionality
  // and have multiple routers / controllers, instead of
  // just one giant router and controller.
  //
  // You can also add standard routes to an AppRouter.
  
  Marionette.AppRouter = Backbone.Router.extend({
  
    constructor: function(options) {
      this.options = options || {};
  
      Backbone.Router.apply(this, arguments);
  
      var appRoutes = this.getOption('appRoutes');
      var controller = this._getController();
      this.processAppRoutes(controller, appRoutes);
      this.on('route', this._processOnRoute, this);
    },
  
    // Similar to route method on a Backbone Router but
    // method is called on the controller
    appRoute: function(route, methodName) {
      var controller = this._getController();
      this._addAppRoute(controller, route, methodName);
    },
  
    // process the route event and trigger the onRoute
    // method call, if it exists
    _processOnRoute: function(routeName, routeArgs) {
      // make sure an onRoute before trying to call it
      if (_.isFunction(this.onRoute)) {
        // find the path that matches the current route
        var routePath = _.invert(this.getOption('appRoutes'))[routeName];
        this.onRoute(routeName, routePath, routeArgs);
      }
    },
  
    // Internal method to process the `appRoutes` for the
    // router, and turn them in to routes that trigger the
    // specified method on the specified `controller`.
    processAppRoutes: function(controller, appRoutes) {
      if (!appRoutes) { return; }
  
      var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes
  
      _.each(routeNames, function(route) {
        this._addAppRoute(controller, route, appRoutes[route]);
      }, this);
    },
  
    _getController: function() {
      return this.getOption('controller');
    },
  
    _addAppRoute: function(controller, route, methodName) {
      var method = controller[methodName];
  
      if (!method) {
        throw new Marionette.Error('Method "' + methodName + '" was not found on the controller');
      }
  
      this.route(route, methodName, _.bind(method, controller));
    },
  
    mergeOptions: Marionette.mergeOptions,
  
    // Proxy `getOption` to enable getting options from this or this.options by name.
    getOption: Marionette.proxyGetOption,
  
    triggerMethod: Marionette.triggerMethod,
  
    bindEntityEvents: Marionette.proxyBindEntityEvents,
  
    unbindEntityEvents: Marionette.proxyUnbindEntityEvents
  });
  
  // Application
  // -----------
  
  // Contain and manage the composite application as a whole.
  // Stores and starts up `Region` objects, includes an
  // event aggregator as `app.vent`
  Marionette.Application = Marionette.Object.extend({
    constructor: function(options) {
      this._initializeRegions(options);
      this._initCallbacks = new Marionette.Callbacks();
      this.submodules = {};
      _.extend(this, options);
      this._initChannel();
      Marionette.Object.call(this, options);
    },
  
    // Command execution, facilitated by Backbone.Wreqr.Commands
    execute: function() {
      this.commands.execute.apply(this.commands, arguments);
    },
  
    // Request/response, facilitated by Backbone.Wreqr.RequestResponse
    request: function() {
      return this.reqres.request.apply(this.reqres, arguments);
    },
  
    // Add an initializer that is either run at when the `start`
    // method is called, or run immediately if added after `start`
    // has already been called.
    addInitializer: function(initializer) {
      this._initCallbacks.add(initializer);
    },
  
    // kick off all of the application's processes.
    // initializes all of the regions that have been added
    // to the app, and runs all of the initializer functions
    start: function(options) {
      this.triggerMethod('before:start', options);
      this._initCallbacks.run(options, this);
      this.triggerMethod('start', options);
    },
  
    // Add regions to your app.
    // Accepts a hash of named strings or Region objects
    // addRegions({something: "#someRegion"})
    // addRegions({something: Region.extend({el: "#someRegion"}) });
    addRegions: function(regions) {
      return this._regionManager.addRegions(regions);
    },
  
    // Empty all regions in the app, without removing them
    emptyRegions: function() {
      return this._regionManager.emptyRegions();
    },
  
    // Removes a region from your app, by name
    // Accepts the regions name
    // removeRegion('myRegion')
    removeRegion: function(region) {
      return this._regionManager.removeRegion(region);
    },
  
    // Provides alternative access to regions
    // Accepts the region name
    // getRegion('main')
    getRegion: function(region) {
      return this._regionManager.get(region);
    },
  
    // Get all the regions from the region manager
    getRegions: function() {
      return this._regionManager.getRegions();
    },
  
    // Create a module, attached to the application
    module: function(moduleNames, moduleDefinition) {
  
      // Overwrite the module class if the user specifies one
      var ModuleClass = Marionette.Module.getClass(moduleDefinition);
  
      var args = _.toArray(arguments);
      args.unshift(this);
  
      // see the Marionette.Module object for more information
      return ModuleClass.create.apply(ModuleClass, args);
    },
  
    // Enable easy overriding of the default `RegionManager`
    // for customized region interactions and business-specific
    // view logic for better control over single regions.
    getRegionManager: function() {
      return new Marionette.RegionManager();
    },
  
    // Internal method to initialize the regions that have been defined in a
    // `regions` attribute on the application instance
    _initializeRegions: function(options) {
      var regions = _.isFunction(this.regions) ? this.regions(options) : this.regions || {};
  
      this._initRegionManager();
  
      // Enable users to define `regions` in instance options.
      var optionRegions = Marionette.getOption(options, 'regions');
  
      // Enable region options to be a function
      if (_.isFunction(optionRegions)) {
        optionRegions = optionRegions.call(this, options);
      }
  
      // Overwrite current regions with those passed in options
      _.extend(regions, optionRegions);
  
      this.addRegions(regions);
  
      return this;
    },
  
    // Internal method to set up the region manager
    _initRegionManager: function() {
      this._regionManager = this.getRegionManager();
      this._regionManager._parent = this;
  
      this.listenTo(this._regionManager, 'before:add:region', function() {
        Marionette._triggerMethod(this, 'before:add:region', arguments);
      });
  
      this.listenTo(this._regionManager, 'add:region', function(name, region) {
        this[name] = region;
        Marionette._triggerMethod(this, 'add:region', arguments);
      });
  
      this.listenTo(this._regionManager, 'before:remove:region', function() {
        Marionette._triggerMethod(this, 'before:remove:region', arguments);
      });
  
      this.listenTo(this._regionManager, 'remove:region', function(name) {
        delete this[name];
        Marionette._triggerMethod(this, 'remove:region', arguments);
      });
    },
  
    // Internal method to setup the Wreqr.radio channel
    _initChannel: function() {
      this.channelName = _.result(this, 'channelName') || 'global';
      this.channel = _.result(this, 'channel') || Backbone.Wreqr.radio.channel(this.channelName);
      this.vent = _.result(this, 'vent') || this.channel.vent;
      this.commands = _.result(this, 'commands') || this.channel.commands;
      this.reqres = _.result(this, 'reqres') || this.channel.reqres;
    }
  });
  
  /* jshint maxparams: 9 */
  
  // Module
  // ------
  
  // A simple module system, used to create privacy and encapsulation in
  // Marionette applications
  Marionette.Module = function(moduleName, app, options) {
    this.moduleName = moduleName;
    this.options = _.extend({}, this.options, options);
    // Allow for a user to overide the initialize
    // for a given module instance.
    this.initialize = options.initialize || this.initialize;
  
    // Set up an internal store for sub-modules.
    this.submodules = {};
  
    this._setupInitializersAndFinalizers();
  
    // Set an internal reference to the app
    // within a module.
    this.app = app;
  
    if (_.isFunction(this.initialize)) {
      this.initialize(moduleName, app, this.options);
    }
  };
  
  Marionette.Module.extend = Marionette.extend;
  
  // Extend the Module prototype with events / listenTo, so that the module
  // can be used as an event aggregator or pub/sub.
  _.extend(Marionette.Module.prototype, Backbone.Events, {
  
    // By default modules start with their parents.
    startWithParent: true,
  
    // Initialize is an empty function by default. Override it with your own
    // initialization logic when extending Marionette.Module.
    initialize: function() {},
  
    // Initializer for a specific module. Initializers are run when the
    // module's `start` method is called.
    addInitializer: function(callback) {
      this._initializerCallbacks.add(callback);
    },
  
    // Finalizers are run when a module is stopped. They are used to teardown
    // and finalize any variables, references, events and other code that the
    // module had set up.
    addFinalizer: function(callback) {
      this._finalizerCallbacks.add(callback);
    },
  
    // Start the module, and run all of its initializers
    start: function(options) {
      // Prevent re-starting a module that is already started
      if (this._isInitialized) { return; }
  
      // start the sub-modules (depth-first hierarchy)
      _.each(this.submodules, function(mod) {
        // check to see if we should start the sub-module with this parent
        if (mod.startWithParent) {
          mod.start(options);
        }
      });
  
      // run the callbacks to "start" the current module
      this.triggerMethod('before:start', options);
  
      this._initializerCallbacks.run(options, this);
      this._isInitialized = true;
  
      this.triggerMethod('start', options);
    },
  
    // Stop this module by running its finalizers and then stop all of
    // the sub-modules for this module
    stop: function() {
      // if we are not initialized, don't bother finalizing
      if (!this._isInitialized) { return; }
      this._isInitialized = false;
  
      this.triggerMethod('before:stop');
  
      // stop the sub-modules; depth-first, to make sure the
      // sub-modules are stopped / finalized before parents
      _.invoke(this.submodules, 'stop');
  
      // run the finalizers
      this._finalizerCallbacks.run(undefined, this);
  
      // reset the initializers and finalizers
      this._initializerCallbacks.reset();
      this._finalizerCallbacks.reset();
  
      this.triggerMethod('stop');
    },
  
    // Configure the module with a definition function and any custom args
    // that are to be passed in to the definition function
    addDefinition: function(moduleDefinition, customArgs) {
      this._runModuleDefinition(moduleDefinition, customArgs);
    },
  
    // Internal method: run the module definition function with the correct
    // arguments
    _runModuleDefinition: function(definition, customArgs) {
      // If there is no definition short circut the method.
      if (!definition) { return; }
  
      // build the correct list of arguments for the module definition
      var args = _.flatten([
        this,
        this.app,
        Backbone,
        Marionette,
        Backbone.$, _,
        customArgs
      ]);
  
      definition.apply(this, args);
    },
  
    // Internal method: set up new copies of initializers and finalizers.
    // Calling this method will wipe out all existing initializers and
    // finalizers.
    _setupInitializersAndFinalizers: function() {
      this._initializerCallbacks = new Marionette.Callbacks();
      this._finalizerCallbacks = new Marionette.Callbacks();
    },
  
    // import the `triggerMethod` to trigger events with corresponding
    // methods if the method exists
    triggerMethod: Marionette.triggerMethod
  });
  
  // Class methods to create modules
  _.extend(Marionette.Module, {
  
    // Create a module, hanging off the app parameter as the parent object.
    create: function(app, moduleNames, moduleDefinition) {
      var module = app;
  
      // get the custom args passed in after the module definition and
      // get rid of the module name and definition function
      var customArgs = _.drop(arguments, 3);
  
      // Split the module names and get the number of submodules.
      // i.e. an example module name of `Doge.Wow.Amaze` would
      // then have the potential for 3 module definitions.
      moduleNames = moduleNames.split('.');
      var length = moduleNames.length;
  
      // store the module definition for the last module in the chain
      var moduleDefinitions = [];
      moduleDefinitions[length - 1] = moduleDefinition;
  
      // Loop through all the parts of the module definition
      _.each(moduleNames, function(moduleName, i) {
        var parentModule = module;
        module = this._getModule(parentModule, moduleName, app, moduleDefinition);
        this._addModuleDefinition(parentModule, module, moduleDefinitions[i], customArgs);
      }, this);
  
      // Return the last module in the definition chain
      return module;
    },
  
    _getModule: function(parentModule, moduleName, app, def, args) {
      var options = _.extend({}, def);
      var ModuleClass = this.getClass(def);
  
      // Get an existing module of this name if we have one
      var module = parentModule[moduleName];
  
      if (!module) {
        // Create a new module if we don't have one
        module = new ModuleClass(moduleName, app, options);
        parentModule[moduleName] = module;
        // store the module on the parent
        parentModule.submodules[moduleName] = module;
      }
  
      return module;
    },
  
    // ## Module Classes
    //
    // Module classes can be used as an alternative to the define pattern.
    // The extend function of a Module is identical to the extend functions
    // on other Backbone and Marionette classes.
    // This allows module lifecyle events like `onStart` and `onStop` to be called directly.
    getClass: function(moduleDefinition) {
      var ModuleClass = Marionette.Module;
  
      if (!moduleDefinition) {
        return ModuleClass;
      }
  
      // If all of the module's functionality is defined inside its class,
      // then the class can be passed in directly. `MyApp.module("Foo", FooModule)`.
      if (moduleDefinition.prototype instanceof ModuleClass) {
        return moduleDefinition;
      }
  
      return moduleDefinition.moduleClass || ModuleClass;
    },
  
    // Add the module definition and add a startWithParent initializer function.
    // This is complicated because module definitions are heavily overloaded
    // and support an anonymous function, module class, or options object
    _addModuleDefinition: function(parentModule, module, def, args) {
      var fn = this._getDefine(def);
      var startWithParent = this._getStartWithParent(def, module);
  
      if (fn) {
        module.addDefinition(fn, args);
      }
  
      this._addStartWithParent(parentModule, module, startWithParent);
    },
  
    _getStartWithParent: function(def, module) {
      var swp;
  
      if (_.isFunction(def) && (def.prototype instanceof Marionette.Module)) {
        swp = module.constructor.prototype.startWithParent;
        return _.isUndefined(swp) ? true : swp;
      }
  
      if (_.isObject(def)) {
        swp = def.startWithParent;
        return _.isUndefined(swp) ? true : swp;
      }
  
      return true;
    },
  
    _getDefine: function(def) {
      if (_.isFunction(def) && !(def.prototype instanceof Marionette.Module)) {
        return def;
      }
  
      if (_.isObject(def)) {
        return def.define;
      }
  
      return null;
    },
  
    _addStartWithParent: function(parentModule, module, startWithParent) {
      module.startWithParent = module.startWithParent && startWithParent;
  
      if (!module.startWithParent || !!module.startWithParentIsConfigured) {
        return;
      }
  
      module.startWithParentIsConfigured = true;
  
      parentModule.addInitializer(function(options) {
        if (module.startWithParent) {
          module.start(options);
        }
      });
    }
  });
  

  return Marionette;
}));

/* module-key = 'bamboo.web.resources:lib-marionette', location = '/util/shims/marionette.js' */
(function(window) {
    'use strict';

    _.extend(Marionette.Renderer, {

        render: function(template, data, context) {
            if (!template) {
                throw new window.Marionette.Error({
                    name: 'TemplateNotFoundError',
                    message: 'Cannot render the template since its false, null or undefined.'
                });
            }

            var templateFunc = _.isFunction(template) ?
                template : window.Marionette.TemplateCache.get(template);

            return templateFunc.call(context, data);
        }

    });

    define('marionette', function () {
        return window.Marionette;
    });

})(window || this);

/* module-key = 'bamboo.web.resources:widget-help-dialog', location = '/widget/help/help-dialog.js' */
define('widget/help-dialog', [
    'jquery',
    'underscore',
    'brace',
    'util/events'
], function(
    $,
    _,
    Brace,
    events
) {

    'use strict';

    var HelpDialog = Brace.View.extend({

        mixins: [events.EventBusMixin],

        initialize: function() {
            AJS.InlineDialog(
                this.$el, this.$el.attr('id').replace(/[:\.]/g, "-"),
                _.bind(this.onDialogShow, this), {
                    hideDelay: null,
                    offsetX: -60,
                    arrowOffsetX: 0,
                    width: 420
                }
            );
        },

        onDialogShow: function(content, trigger, showPopup) {
            content.css({ padding: '20px' })
                .html((this.options.content || this.$el.find('span:first')).html());

            showPopup();
            return false;
        }
    });

    return HelpDialog;

});


/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('Bamboo.Widget.HelpDialog', null, require('widget/help-dialog'));
}
/* module-key = 'bamboo.web.resources:widget-action-tip', location = '/widget/action-tip/action-tip.soy' */
// This file was automatically generated from action-tip.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.actionTip == 'undefined') { bamboo.widget.actionTip = {}; }


bamboo.widget.actionTip.dialog = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<p>', opt_data.content, '</p><button class="aui-button action-tip-trigger">', soy.$$escapeHtml(opt_data.label), '</button>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:widget-action-tip', location = '/widget/action-tip/action-tip.js' */
define('widget/action-tip', [
    'jquery',
    'underscore',
    'backbone',
    'util/preferences'
], function(
    $,
    _,
    Backbone,
    preferencesManager
) {

    'use strict';

    var ActionTip = Backbone.View.extend({

        template: bamboo.widget.actionTip,

        preference: function(key) {
            return ['bamboo.user.actions', key].join('.');
        },

        defaults: {
            content: '',
            params: {
                onTop: false
            }
        },

        initialize: function(options) {
            this.settings = $.extend(this.defaults, options || {});

            if (!this.settings.label) {
                this.settings.label = $.trim(this.$el.text());
            }

            var params = $.extend({
                hideCallback: _.bind(this.onClose, this),
                container: 'body',
                noBind: true
            }, this.settings.params);

            this.dialog = AJS.InlineDialog(
                this.$el, this.$el.attr('id'),
                _.bind(this.onShow, this), params
            );

            this.registerEvents();
        },

        registerEvents: function() {
            this.$el.on('click', _.bind(this.onClick, this));

            $(document).on('keydown', _.bind(function(event) {
                if (event.keyCode === 27) this.hide();
            }, this.dialog));
        },

        onClick: function() {
            var value = false;

            if (this.settings.actionKey) {
                value = preferencesManager.getBoolean(
                    this.preference(this.settings.actionKey)
                );
            }

            if (!value) {
                this.dialog.show();
                return false;
            }

            this.dialog.remove();
        },

        onShow: function(dialog, trigger, show) {
            var content = this.template.dialog({
                label: this.settings.label,
                content: this.settings.content
            });

            dialog
                .html(content)
                .addClass('action-tip')
                .find('button').on('click', _.bind(function() {
                    this.onAction.call(this);
                    this.dialog.hide();
                }, this));

            show();
        },

        onClose: function() {
            if (this.clicked) {
                this.$el.click();
                this.dialog.remove();
            }
        },

        onAction: function() {
            if (this.settings.actionKey) {
                this.clicked = true;

                if (!this.settings.callback) {
                    preferencesManager.setValue(
                        this.preference(this.settings.actionKey)
                    );
                }
                else {
                    this.settings.callback.call(this);
                }
            }
        }

    });

    return ActionTip;
});
/* module-key = 'bamboo.web.resources:help-widget', location = '/widget/help/help.soy' */
// This file was automatically generated from help.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.help == 'undefined') { bamboo.widget.help = {}; }


bamboo.widget.help.panel = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.link ? 'a' : 'div'), ' class="help-panel', (opt_data.type) ? ' help-panel-' + soy.$$escapeHtml(opt_data.type) : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.link) ? ' href="' + soy.$$escapeHtml(opt_data.link) + '"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><strong class="help-panel-title">', soy.$$escapeHtml(opt_data.title), '</strong><div class="help-panel-content">', opt_data.content, '</div></', soy.$$escapeHtml(opt_data.link ? 'a' : 'div'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:moment-js', location = '/bower/moment/moment.js' */
// moment.js
// version : 2.0.0
// author : Tim Wood
// license : MIT
// momentjs.com

(function (undefined) {

    /************************************
        Constants
    ************************************/

    var moment,
        VERSION = "2.0.0",
        round = Math.round, i,
        // internal storage for language config files
        languages = {},

        // check for nodeJS
        hasModule = (typeof module !== 'undefined' && module.exports),

        // ASP.NET json date format regex
        aspNetJsonRegex = /^\/?Date\((\-?\d+)/i,

        // format tokens
        formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,

        // parsing tokens
        parseMultipleFormatChunker = /([0-9a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)/gi,

        // parsing token regexes
        parseTokenOneOrTwoDigits = /\d\d?/, // 0 - 99
        parseTokenOneToThreeDigits = /\d{1,3}/, // 0 - 999
        parseTokenThreeDigits = /\d{3}/, // 000 - 999
        parseTokenFourDigits = /\d{1,4}/, // 0 - 9999
        parseTokenSixDigits = /[+\-]?\d{1,6}/, // -999,999 - 999,999
        parseTokenWord = /[0-9]*[a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF]+\s*?[\u0600-\u06FF]+/i, // any word (or two) characters or numbers including two word month in arabic.
        parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/i, // +00:00 -00:00 +0000 -0000 or Z
        parseTokenT = /T/i, // T (ISO seperator)
        parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123

        // preliminary iso regex
        // 0000-00-00 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000
        isoRegex = /^\s*\d{4}-\d\d-\d\d((T| )(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?/,
        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',

        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.S', /(T| )\d\d:\d\d:\d\d\.\d{1,3}/],
            ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
            ['HH:mm', /(T| )\d\d:\d\d/],
            ['HH', /(T| )\d\d/]
        ],

        // timezone chunker "+10:00" > ["10", "00"] or "-1530" > ["-15", "30"]
        parseTimezoneChunker = /([\+\-]|\d\d)/gi,

        // getter and setter names
        proxyGettersAndSetters = 'Month|Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),
        unitMillisecondFactors = {
            'Milliseconds' : 1,
            'Seconds' : 1e3,
            'Minutes' : 6e4,
            'Hours' : 36e5,
            'Days' : 864e5,
            'Months' : 2592e6,
            'Years' : 31536e6
        },

        // format function strings
        formatFunctions = {},

        // tokens to ordinalize and pad
        ordinalizeTokens = 'DDD w W M D d'.split(' '),
        paddedTokens = 'M D H h m s w W'.split(' '),

        formatTokenFunctions = {
            M    : function () {
                return this.month() + 1;
            },
            MMM  : function (format) {
                return this.lang().monthsShort(this, format);
            },
            MMMM : function (format) {
                return this.lang().months(this, format);
            },
            D    : function () {
                return this.date();
            },
            DDD  : function () {
                return this.dayOfYear();
            },
            d    : function () {
                return this.day();
            },
            dd   : function (format) {
                return this.lang().weekdaysMin(this, format);
            },
            ddd  : function (format) {
                return this.lang().weekdaysShort(this, format);
            },
            dddd : function (format) {
                return this.lang().weekdays(this, format);
            },
            w    : function () {
                return this.week();
            },
            W    : function () {
                return this.isoWeek();
            },
            YY   : function () {
                return leftZeroFill(this.year() % 100, 2);
            },
            YYYY : function () {
                return leftZeroFill(this.year(), 4);
            },
            YYYYY : function () {
                return leftZeroFill(this.year(), 5);
            },
            a    : function () {
                return this.lang().meridiem(this.hours(), this.minutes(), true);
            },
            A    : function () {
                return this.lang().meridiem(this.hours(), this.minutes(), false);
            },
            H    : function () {
                return this.hours();
            },
            h    : function () {
                return this.hours() % 12 || 12;
            },
            m    : function () {
                return this.minutes();
            },
            s    : function () {
                return this.seconds();
            },
            S    : function () {
                return ~~(this.milliseconds() / 100);
            },
            SS   : function () {
                return leftZeroFill(~~(this.milliseconds() / 10), 2);
            },
            SSS  : function () {
                return leftZeroFill(this.milliseconds(), 3);
            },
            Z    : function () {
                var a = -this.zone(),
                    b = "+";
                if (a < 0) {
                    a = -a;
                    b = "-";
                }
                return b + leftZeroFill(~~(a / 60), 2) + ":" + leftZeroFill(~~a % 60, 2);
            },
            ZZ   : function () {
                var a = -this.zone(),
                    b = "+";
                if (a < 0) {
                    a = -a;
                    b = "-";
                }
                return b + leftZeroFill(~~(10 * a / 6), 4);
            },
            X    : function () {
                return this.unix();
            }
        };

    function padToken(func, count) {
        return function (a) {
            return leftZeroFill(func.call(this, a), count);
        };
    }
    function ordinalizeToken(func) {
        return function (a) {
            return this.lang().ordinal(func.call(this, a));
        };
    }

    while (ordinalizeTokens.length) {
        i = ordinalizeTokens.pop();
        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i]);
    }
    while (paddedTokens.length) {
        i = paddedTokens.pop();
        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
    }
    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);


    /************************************
        Constructors
    ************************************/

    function Language() {

    }

    // Moment prototype object
    function Moment(config) {
        extend(this, config);
    }

    // Duration Constructor
    function Duration(duration) {
        var data = this._data = {},
            years = duration.years || duration.year || duration.y || 0,
            months = duration.months || duration.month || duration.M || 0,
            weeks = duration.weeks || duration.week || duration.w || 0,
            days = duration.days || duration.day || duration.d || 0,
            hours = duration.hours || duration.hour || duration.h || 0,
            minutes = duration.minutes || duration.minute || duration.m || 0,
            seconds = duration.seconds || duration.second || duration.s || 0,
            milliseconds = duration.milliseconds || duration.millisecond || duration.ms || 0;

        // representation for dateAddRemove
        this._milliseconds = milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 36e5; // 1000 * 60 * 60
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = days +
            weeks * 7;
        // It is impossible translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = months +
            years * 12;

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;
        seconds += absRound(milliseconds / 1000);

        data.seconds = seconds % 60;
        minutes += absRound(seconds / 60);

        data.minutes = minutes % 60;
        hours += absRound(minutes / 60);

        data.hours = hours % 24;
        days += absRound(hours / 24);

        days += weeks * 7;
        data.days = days % 30;

        months += absRound(days / 30);

        data.months = months % 12;
        years += absRound(months / 12);

        data.years = years;
    }


    /************************************
        Helpers
    ************************************/


    function extend(a, b) {
        for (var i in b) {
            if (b.hasOwnProperty(i)) {
                a[i] = b[i];
            }
        }
        return a;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.ceil(number);
        } else {
            return Math.floor(number);
        }
    }

    // left zero fill a number
    // see http://jsperf.com/left-zero-filling for performance comparison
    function leftZeroFill(number, targetLength) {
        var output = number + '';
        while (output.length < targetLength) {
            output = '0' + output;
        }
        return output;
    }

    // helper function for _.addTime and _.subtractTime
    function addOrSubtractDurationFromMoment(mom, duration, isAdding) {
        var ms = duration._milliseconds,
            d = duration._days,
            M = duration._months,
            currentDate;

        if (ms) {
            mom._d.setTime(+mom + ms * isAdding);
        }
        if (d) {
            mom.date(mom.date() + d * isAdding);
        }
        if (M) {
            currentDate = mom.date();
            mom.date(1)
                .month(mom.month() + M * isAdding)
                .date(Math.min(currentDate, mom.daysInMonth()));
        }
    }

    // check if is an array
    function isArray(input) {
        return Object.prototype.toString.call(input) === '[object Array]';
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (~~array1[i] !== ~~array2[i]) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }


    /************************************
        Languages
    ************************************/


    Language.prototype = {
        set : function (config) {
            var prop, i;
            for (i in config) {
                prop = config[i];
                if (typeof prop === 'function') {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        },

        _months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        months : function (m) {
            return this._months[m.month()];
        },

        _monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        monthsShort : function (m) {
            return this._monthsShort[m.month()];
        },

        monthsParse : function (monthName) {
            var i, mom, regex, output;

            if (!this._monthsParse) {
                this._monthsParse = [];
            }

            for (i = 0; i < 12; i++) {
                // make the regex if we don't have it already
                if (!this._monthsParse[i]) {
                    mom = moment([2000, i]);
                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                // test the regex
                if (this._monthsParse[i].test(monthName)) {
                    return i;
                }
            }
        },

        _weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdays : function (m) {
            return this._weekdays[m.day()];
        },

        _weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysShort : function (m) {
            return this._weekdaysShort[m.day()];
        },

        _weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        weekdaysMin : function (m) {
            return this._weekdaysMin[m.day()];
        },

        _longDateFormat : {
            LT : "h:mm A",
            L : "MM/DD/YYYY",
            LL : "MMMM D YYYY",
            LLL : "MMMM D YYYY LT",
            LLLL : "dddd, MMMM D YYYY LT"
        },
        longDateFormat : function (key) {
            var output = this._longDateFormat[key];
            if (!output && this._longDateFormat[key.toUpperCase()]) {
                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {
                    return val.slice(1);
                });
                this._longDateFormat[key] = output;
            }
            return output;
        },

        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'pm' : 'PM';
            } else {
                return isLower ? 'am' : 'AM';
            }
        },

        _calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[last] dddd [at] LT',
            sameElse : 'L'
        },
        calendar : function (key, mom) {
            var output = this._calendar[key];
            return typeof output === 'function' ? output.apply(mom) : output;
        },

        _relativeTime : {
            future : "in %s",
            past : "%s ago",
            s : "a few seconds",
            m : "a minute",
            mm : "%d minutes",
            h : "an hour",
            hh : "%d hours",
            d : "a day",
            dd : "%d days",
            M : "a month",
            MM : "%d months",
            y : "a year",
            yy : "%d years"
        },
        relativeTime : function (number, withoutSuffix, string, isFuture) {
            var output = this._relativeTime[string];
            return (typeof output === 'function') ?
                output(number, withoutSuffix, string, isFuture) :
                output.replace(/%d/i, number);
        },
        pastFuture : function (diff, output) {
            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
        },

        ordinal : function (number) {
            return this._ordinal.replace("%d", number);
        },
        _ordinal : "%d",

        preparse : function (string) {
            return string;
        },

        postformat : function (string) {
            return string;
        },

        week : function (mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy);
        },
        _week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    };

    // Loads a language definition into the `languages` cache.  The function
    // takes a key and optionally values.  If not in the browser and no values
    // are provided, it will load the language file module.  As a convenience,
    // this function also returns the language values.
    function loadLang(key, values) {
        values.abbr = key;
        if (!languages[key]) {
            languages[key] = new Language();
        }
        languages[key].set(values);
        return languages[key];
    }

    // Determines which language definition to use and returns it.
    //
    // With no parameters, it will return the global language.  If you
    // pass in a language key, such as 'en', it will return the
    // definition for 'en', so long as 'en' has already been loaded using
    // moment.lang.
    function getLangDefinition(key) {
        if (!key) {
            return moment.fn._lang;
        }
        if (!languages[key] && hasModule) {
            require('./lang/' + key);
        }
        return languages[key];
    }


    /************************************
        Formatting
    ************************************/


    function removeFormattingTokens(input) {
        if (input.match(/\[.*\]/)) {
            return input.replace(/^\[|\]$/g, "");
        }
        return input.replace(/\\/g, "");
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = "";
            for (i = 0; i < length; i++) {
                output += typeof array[i].call === 'function' ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return m.lang().longDateFormat(input) || input;
        }

        while (i-- && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
        }

        if (!formatFunctions[format]) {
            formatFunctions[format] = makeFormatFunction(format);
        }

        return formatFunctions[format](m);
    }


    /************************************
        Parsing
    ************************************/


    // get the regex to find the next token
    function getParseRegexForToken(token) {
        switch (token) {
        case 'DDDD':
            return parseTokenThreeDigits;
        case 'YYYY':
            return parseTokenFourDigits;
        case 'YYYYY':
            return parseTokenSixDigits;
        case 'S':
        case 'SS':
        case 'SSS':
        case 'DDD':
            return parseTokenOneToThreeDigits;
        case 'MMM':
        case 'MMMM':
        case 'dd':
        case 'ddd':
        case 'dddd':
        case 'a':
        case 'A':
            return parseTokenWord;
        case 'X':
            return parseTokenTimestampMs;
        case 'Z':
        case 'ZZ':
            return parseTokenTimezone;
        case 'T':
            return parseTokenT;
        case 'MM':
        case 'DD':
        case 'YY':
        case 'HH':
        case 'hh':
        case 'mm':
        case 'ss':
        case 'M':
        case 'D':
        case 'd':
        case 'H':
        case 'h':
        case 'm':
        case 's':
            return parseTokenOneOrTwoDigits;
        default :
            return new RegExp(token.replace('\\', ''));
        }
    }

    // function to convert string input to date
    function addTimeToArrayFromToken(token, input, config) {
        var a, b,
            datePartArray = config._a;

        switch (token) {
        // MONTH
        case 'M' : // fall through to MM
        case 'MM' :
            datePartArray[1] = (input == null) ? 0 : ~~input - 1;
            break;
        case 'MMM' : // fall through to MMMM
        case 'MMMM' :
            a = getLangDefinition(config._l).monthsParse(input);
            // if we didn't find a month name, mark the date as invalid.
            if (a != null) {
                datePartArray[1] = a;
            } else {
                config._isValid = false;
            }
            break;
        // DAY OF MONTH
        case 'D' : // fall through to DDDD
        case 'DD' : // fall through to DDDD
        case 'DDD' : // fall through to DDDD
        case 'DDDD' :
            if (input != null) {
                datePartArray[2] = ~~input;
            }
            break;
        // YEAR
        case 'YY' :
            datePartArray[0] = ~~input + (~~input > 68 ? 1900 : 2000);
            break;
        case 'YYYY' :
        case 'YYYYY' :
            datePartArray[0] = ~~input;
            break;
        // AM / PM
        case 'a' : // fall through to A
        case 'A' :
            config._isPm = ((input + '').toLowerCase() === 'pm');
            break;
        // 24 HOUR
        case 'H' : // fall through to hh
        case 'HH' : // fall through to hh
        case 'h' : // fall through to hh
        case 'hh' :
            datePartArray[3] = ~~input;
            break;
        // MINUTE
        case 'm' : // fall through to mm
        case 'mm' :
            datePartArray[4] = ~~input;
            break;
        // SECOND
        case 's' : // fall through to ss
        case 'ss' :
            datePartArray[5] = ~~input;
            break;
        // MILLISECOND
        case 'S' :
        case 'SS' :
        case 'SSS' :
            datePartArray[6] = ~~ (('0.' + input) * 1000);
            break;
        // UNIX TIMESTAMP WITH MS
        case 'X':
            config._d = new Date(parseFloat(input) * 1000);
            break;
        // TIMEZONE
        case 'Z' : // fall through to ZZ
        case 'ZZ' :
            config._useUTC = true;
            a = (input + '').match(parseTimezoneChunker);
            if (a && a[1]) {
                config._tzh = ~~a[1];
            }
            if (a && a[2]) {
                config._tzm = ~~a[2];
            }
            // reverse offsets
            if (a && a[0] === '+') {
                config._tzh = -config._tzh;
                config._tzm = -config._tzm;
            }
            break;
        }

        // if the input is null, the date is not valid
        if (input == null) {
            config._isValid = false;
        }
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function dateFromArray(config) {
        var i, date, input = [];

        if (config._d) {
            return;
        }

        for (i = 0; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // add the offsets to the time to be parsed so that we can have a clean array for checking isValid
        input[3] += config._tzh || 0;
        input[4] += config._tzm || 0;

        date = new Date(0);

        if (config._useUTC) {
            date.setUTCFullYear(input[0], input[1], input[2]);
            date.setUTCHours(input[3], input[4], input[5], input[6]);
        } else {
            date.setFullYear(input[0], input[1], input[2]);
            date.setHours(input[3], input[4], input[5], input[6]);
        }

        config._d = date;
    }

    // date from string and format string
    function makeDateFromStringAndFormat(config) {
        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var tokens = config._f.match(formattingTokens),
            string = config._i,
            i, parsedInput;

        config._a = [];

        for (i = 0; i < tokens.length; i++) {
            parsedInput = (getParseRegexForToken(tokens[i]).exec(string) || [])[0];
            if (parsedInput) {
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
            }
            // don't parse if its not a known token
            if (formatTokenFunctions[tokens[i]]) {
                addTimeToArrayFromToken(tokens[i], parsedInput, config);
            }
        }
        // handle am pm
        if (config._isPm && config._a[3] < 12) {
            config._a[3] += 12;
        }
        // if is 12 am, change hours to 0
        if (config._isPm === false && config._a[3] === 12) {
            config._a[3] = 0;
        }
        // return
        dateFromArray(config);
    }

    // date from string and array of format strings
    function makeDateFromStringAndArray(config) {
        var tempConfig,
            tempMoment,
            bestMoment,

            scoreToBeat = 99,
            i,
            currentDate,
            currentScore;

        while (config._f.length) {
            tempConfig = extend({}, config);
            tempConfig._f = config._f.pop();
            makeDateFromStringAndFormat(tempConfig);
            tempMoment = new Moment(tempConfig);

            if (tempMoment.isValid()) {
                bestMoment = tempMoment;
                break;
            }

            currentScore = compareArrays(tempConfig._a, tempMoment.toArray());

            if (currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempMoment;
            }
        }

        extend(config, bestMoment);
    }

    // date from iso format
    function makeDateFromString(config) {
        var i,
            string = config._i;
        if (isoRegex.exec(string)) {
            config._f = 'YYYY-MM-DDT';
            for (i = 0; i < 4; i++) {
                if (isoTimes[i][1].exec(string)) {
                    config._f += isoTimes[i][0];
                    break;
                }
            }
            if (parseTokenTimezone.exec(string)) {
                config._f += " Z";
            }
            makeDateFromStringAndFormat(config);
        } else {
            config._d = new Date(string);
        }
    }

    function makeDateFromInput(config) {
        var input = config._i,
            matched = aspNetJsonRegex.exec(input);

        if (input === undefined) {
            config._d = new Date();
        } else if (matched) {
            config._d = new Date(+matched[1]);
        } else if (typeof input === 'string') {
            makeDateFromString(config);
        } else if (isArray(input)) {
            config._a = input.slice(0);
            dateFromArray(config);
        } else {
            config._d = input instanceof Date ? new Date(+input) : new Date(input);
        }
    }


    /************************************
        Relative Time
    ************************************/


    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, lang) {
        return lang.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime(milliseconds, withoutSuffix, lang) {
        var seconds = round(Math.abs(milliseconds) / 1000),
            minutes = round(seconds / 60),
            hours = round(minutes / 60),
            days = round(hours / 24),
            years = round(days / 365),
            args = seconds < 45 && ['s', seconds] ||
                minutes === 1 && ['m'] ||
                minutes < 45 && ['mm', minutes] ||
                hours === 1 && ['h'] ||
                hours < 22 && ['hh', hours] ||
                days === 1 && ['d'] ||
                days <= 25 && ['dd', days] ||
                days <= 45 && ['M'] ||
                days < 345 && ['MM', round(days / 30)] ||
                years === 1 && ['y'] || ['yy', years];
        args[2] = withoutSuffix;
        args[3] = milliseconds > 0;
        args[4] = lang;
        return substituteTimeAgo.apply({}, args);
    }


    /************************************
        Week of Year
    ************************************/


    // firstDayOfWeek       0 = sun, 6 = sat
    //                      the day of the week that starts the week
    //                      (usually sunday or monday)
    // firstDayOfWeekOfYear 0 = sun, 6 = sat
    //                      the first week is the week that contains the first
    //                      of this day of the week
    //                      (eg. ISO weeks use thursday (4))
    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
        var end = firstDayOfWeekOfYear - firstDayOfWeek,
            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day();


        if (daysToDayOfWeek > end) {
            daysToDayOfWeek -= 7;
        }

        if (daysToDayOfWeek < end - 7) {
            daysToDayOfWeek += 7;
        }

        return Math.ceil(moment(mom).add('d', daysToDayOfWeek).dayOfYear() / 7);
    }


    /************************************
        Top Level Functions
    ************************************/

    function makeMoment(config) {
        var input = config._i,
            format = config._f;

        if (input === null || input === '') {
            return null;
        }

        if (typeof input === 'string') {
            config._i = input = getLangDefinition().preparse(input);
        }

        if (moment.isMoment(input)) {
            config = extend({}, input);
            config._d = new Date(+input._d);
        } else if (format) {
            if (isArray(format)) {
                makeDateFromStringAndArray(config);
            } else {
                makeDateFromStringAndFormat(config);
            }
        } else {
            makeDateFromInput(config);
        }

        return new Moment(config);
    }

    moment = function (input, format, lang) {
        return makeMoment({
            _i : input,
            _f : format,
            _l : lang,
            _isUTC : false
        });
    };

    // creating with utc
    moment.utc = function (input, format, lang) {
        return makeMoment({
            _useUTC : true,
            _isUTC : true,
            _l : lang,
            _i : input,
            _f : format
        });
    };

    // creating with unix timestamp (in seconds)
    moment.unix = function (input) {
        return moment(input * 1000);
    };

    // duration
    moment.duration = function (input, key) {
        var isDuration = moment.isDuration(input),
            isNumber = (typeof input === 'number'),
            duration = (isDuration ? input._data : (isNumber ? {} : input)),
            ret;

        if (isNumber) {
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        }

        ret = new Duration(duration);

        if (isDuration && input.hasOwnProperty('_lang')) {
            ret._lang = input._lang;
        }

        return ret;
    };

    // version number
    moment.version = VERSION;

    // default format
    moment.defaultFormat = isoFormat;

    // This function will load languages and then set the global language.  If
    // no arguments are passed in, it will simply return the current global
    // language key.
    moment.lang = function (key, values) {
        var i;

        if (!key) {
            return moment.fn._lang._abbr;
        }
        if (values) {
            loadLang(key, values);
        } else if (!languages[key]) {
            getLangDefinition(key);
        }
        moment.duration.fn._lang = moment.fn._lang = getLangDefinition(key);
    };

    // returns language data
    moment.langData = function (key) {
        if (key && key._lang && key._lang._abbr) {
            key = key._lang._abbr;
        }
        return getLangDefinition(key);
    };

    // compare moment object
    moment.isMoment = function (obj) {
        return obj instanceof Moment;
    };

    // for typechecking Duration objects
    moment.isDuration = function (obj) {
        return obj instanceof Duration;
    };


    /************************************
        Moment Prototype
    ************************************/


    moment.fn = Moment.prototype = {

        clone : function () {
            return moment(this);
        },

        valueOf : function () {
            return +this._d;
        },

        unix : function () {
            return Math.floor(+this._d / 1000);
        },

        toString : function () {
            return this.format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
        },

        toDate : function () {
            return this._d;
        },

        toJSON : function () {
            return moment.utc(this).format('YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        },

        toArray : function () {
            var m = this;
            return [
                m.year(),
                m.month(),
                m.date(),
                m.hours(),
                m.minutes(),
                m.seconds(),
                m.milliseconds()
            ];
        },

        isValid : function () {
            if (this._isValid == null) {
                if (this._a) {
                    this._isValid = !compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray());
                } else {
                    this._isValid = !isNaN(this._d.getTime());
                }
            }
            return !!this._isValid;
        },

        utc : function () {
            this._isUTC = true;
            return this;
        },

        local : function () {
            this._isUTC = false;
            return this;
        },

        format : function (inputString) {
            var output = formatMoment(this, inputString || moment.defaultFormat);
            return this.lang().postformat(output);
        },

        add : function (input, val) {
            var dur;
            // switch args to support add('s', 1) and add(1, 's')
            if (typeof input === 'string') {
                dur = moment.duration(+val, input);
            } else {
                dur = moment.duration(input, val);
            }
            addOrSubtractDurationFromMoment(this, dur, 1);
            return this;
        },

        subtract : function (input, val) {
            var dur;
            // switch args to support subtract('s', 1) and subtract(1, 's')
            if (typeof input === 'string') {
                dur = moment.duration(+val, input);
            } else {
                dur = moment.duration(input, val);
            }
            addOrSubtractDurationFromMoment(this, dur, -1);
            return this;
        },

        diff : function (input, units, asFloat) {
            var that = this._isUTC ? moment(input).utc() : moment(input).local(),
                zoneDiff = (this.zone() - that.zone()) * 6e4,
                diff, output;

            if (units) {
                // standardize on singular form
                units = units.replace(/s$/, '');
            }

            if (units === 'year' || units === 'month') {
                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2
                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());
                output += ((this - moment(this).startOf('month')) - (that - moment(that).startOf('month'))) / diff;
                if (units === 'year') {
                    output = output / 12;
                }
            } else {
                diff = (this - that) - zoneDiff;
                output = units === 'second' ? diff / 1e3 : // 1000
                    units === 'minute' ? diff / 6e4 : // 1000 * 60
                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60
                    units === 'day' ? diff / 864e5 : // 1000 * 60 * 60 * 24
                    units === 'week' ? diff / 6048e5 : // 1000 * 60 * 60 * 24 * 7
                    diff;
            }
            return asFloat ? output : absRound(output);
        },

        from : function (time, withoutSuffix) {
            return moment.duration(this.diff(time)).lang(this.lang()._abbr).humanize(!withoutSuffix);
        },

        fromNow : function (withoutSuffix) {
            return this.from(moment(), withoutSuffix);
        },

        calendar : function () {
            var diff = this.diff(moment().startOf('day'), 'days', true),
                format = diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
            return this.format(this.lang().calendar(format, this));
        },

        isLeapYear : function () {
            var year = this.year();
            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
        },

        isDST : function () {
            return (this.zone() < moment([this.year()]).zone() ||
                this.zone() < moment([this.year(), 5]).zone());
        },

        day : function (input) {
            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            return input == null ? day :
                this.add({ d : input - day });
        },

        startOf: function (units) {
            units = units.replace(/s$/, '');
            // the following switch intentionally omits break keywords
            // to utilize falling through the cases.
            switch (units) {
            case 'year':
                this.month(0);
                /* falls through */
            case 'month':
                this.date(1);
                /* falls through */
            case 'week':
            case 'day':
                this.hours(0);
                /* falls through */
            case 'hour':
                this.minutes(0);
                /* falls through */
            case 'minute':
                this.seconds(0);
                /* falls through */
            case 'second':
                this.milliseconds(0);
                /* falls through */
            }

            // weeks are a special case
            if (units === 'week') {
                this.day(0);
            }

            return this;
        },

        endOf: function (units) {
            return this.startOf(units).add(units.replace(/s?$/, 's'), 1).subtract('ms', 1);
        },

        isAfter: function (input, units) {
            units = typeof units !== 'undefined' ? units : 'millisecond';
            return +this.clone().startOf(units) > +moment(input).startOf(units);
        },

        isBefore: function (input, units) {
            units = typeof units !== 'undefined' ? units : 'millisecond';
            return +this.clone().startOf(units) < +moment(input).startOf(units);
        },

        isSame: function (input, units) {
            units = typeof units !== 'undefined' ? units : 'millisecond';
            return +this.clone().startOf(units) === +moment(input).startOf(units);
        },

        zone : function () {
            return this._isUTC ? 0 : this._d.getTimezoneOffset();
        },

        daysInMonth : function () {
            return moment.utc([this.year(), this.month() + 1, 0]).date();
        },

        dayOfYear : function (input) {
            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;
            return input == null ? dayOfYear : this.add("d", (input - dayOfYear));
        },

        isoWeek : function (input) {
            var week = weekOfYear(this, 1, 4);
            return input == null ? week : this.add("d", (input - week) * 7);
        },

        week : function (input) {
            var week = this.lang().week(this);
            return input == null ? week : this.add("d", (input - week) * 7);
        },

        // If passed a language key, it will set the language for this
        // instance.  Otherwise, it will return the language configuration
        // variables for this instance.
        lang : function (key) {
            if (key === undefined) {
                return this._lang;
            } else {
                this._lang = getLangDefinition(key);
                return this;
            }
        }
    };

    // helper for adding shortcuts
    function makeGetterAndSetter(name, key) {
        moment.fn[name] = moment.fn[name + 's'] = function (input) {
            var utc = this._isUTC ? 'UTC' : '';
            if (input != null) {
                this._d['set' + utc + key](input);
                return this;
            } else {
                return this._d['get' + utc + key]();
            }
        };
    }

    // loop through and add shortcuts (Month, Date, Hours, Minutes, Seconds, Milliseconds)
    for (i = 0; i < proxyGettersAndSetters.length; i ++) {
        makeGetterAndSetter(proxyGettersAndSetters[i].toLowerCase().replace(/s$/, ''), proxyGettersAndSetters[i]);
    }

    // add shortcut for year (uses different syntax than the getter/setter 'year' == 'FullYear')
    makeGetterAndSetter('year', 'FullYear');

    // add plural methods
    moment.fn.days = moment.fn.day;
    moment.fn.weeks = moment.fn.week;
    moment.fn.isoWeeks = moment.fn.isoWeek;

    /************************************
        Duration Prototype
    ************************************/


    moment.duration.fn = Duration.prototype = {
        weeks : function () {
            return absRound(this.days() / 7);
        },

        valueOf : function () {
            return this._milliseconds +
              this._days * 864e5 +
              this._months * 2592e6;
        },

        humanize : function (withSuffix) {
            var difference = +this,
                output = relativeTime(difference, !withSuffix, this.lang());

            if (withSuffix) {
                output = this.lang().pastFuture(difference, output);
            }

            return this.lang().postformat(output);
        },

        lang : moment.fn.lang
    };

    function makeDurationGetter(name) {
        moment.duration.fn[name] = function () {
            return this._data[name];
        };
    }

    function makeDurationAsGetter(name, factor) {
        moment.duration.fn['as' + name] = function () {
            return +this / factor;
        };
    }

    for (i in unitMillisecondFactors) {
        if (unitMillisecondFactors.hasOwnProperty(i)) {
            makeDurationAsGetter(i, unitMillisecondFactors[i]);
            makeDurationGetter(i.toLowerCase());
        }
    }

    makeDurationAsGetter('Weeks', 6048e5);


    /************************************
        Default Lang
    ************************************/


    // Set default language, other languages will inherit from English.
    moment.lang('en', {
        ordinal : function (number) {
            var b = number % 10,
                output = (~~ (number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });


    /************************************
        Exposing Moment
    ************************************/


    // CommonJS module is defined
    if (hasModule) {
        module.exports = moment;
    }
    /*global ender:false */
    if (typeof ender === 'undefined') {
        // here, `this` means `window` in the browser, or `global` on the server
        // add `moment` as a global object via a string identifier,
        // for Closure Compiler "advanced" mode
        this['moment'] = moment;
    }
    /*global define:false */
    if (typeof define === "function" && define.amd) {
        define("moment", [], function () {
            return moment;
        });
    }
}).call(this);

/* module-key = 'bamboo.web.resources:time-widget', location = '/widget/time/time.soy' */
// This file was automatically generated from time.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.time == 'undefined') { bamboo.widget.time = {}; }


bamboo.widget.time.timestamp = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  bamboo.widget.time.time(soy.$$augmentData(opt_data, {content: opt_data.format ? BAMBOO.Time.format(opt_data.datetime, opt_data.format) : BAMBOO.Time.format(opt_data.datetime, 'short')}), output);
  return opt_sb ? '' : output.toString();
};


bamboo.widget.time.relative = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  bamboo.widget.time.time(soy.$$augmentData(opt_data, {content: opt_data.format ? BAMBOO.Time.format(opt_data.datetime, opt_data.format + 'Age') : BAMBOO.Time.format(opt_data.datetime, 'shortAge')}), output);
  return opt_sb ? '' : output.toString();
};


bamboo.widget.time.time = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<time datetime="', soy.$$escapeHtml(BAMBOO.Time.format(opt_data.datetime, 'timestamp')), '" title="', soy.$$escapeHtml(BAMBOO.Time.format(opt_data.datetime, 'full')), '"');
  aui.renderExtraClasses(soy.$$augmentData(opt_data, {isFullAttr: true}), output);
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</time>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:time-widget', location = '/widget/time/time.js' */
(function (BAMBOO, moment) {
    BAMBOO.Time = {};

    var hasOwn = Object.prototype.hasOwnProperty,
        dateFormatCache = {},
        dateTokenizer = /d{1,2}|'[^']+'|M{1,4}|y{2,4}|h{1,2}|H{1,2}|m{2}|s{2}|S{1,4}|Z{1,2}|z{1,2}|a|:|-|\/|\s+/g;

    function Type(str, isAge) {
        if (this instanceof Type) {
            this.key = str;
            this.isAge = isAge;
            return this;
        } else {
            return str && hasOwn.call(Type, str) ? Type[str] : null;
        }
    }

    for (var a = ['shortAge', 'longAge', 'short', 'long', 'full', 'timestamp'], i = 0, l = a.length, t; i < l; i++) {
        t = a[i];
        Type[t] = new Type(t, t.toLowerCase().indexOf('age') !== -1);
    }

    function getTextForRelativeAge(age, type, param) {
        switch(age) {
            case 'aMomentAgo':
                return type === Type.shortAge ?
                       "A moment ago" :
                       "A moment ago";
            case 'oneMinuteAgo':
                return type === Type.shortAge ?
                       "1 min ago" :
                       "1 minute ago";
            case 'xMinutesAgo':
                return type === Type.shortAge ?
                       AJS.format("{0} mins ago", param) :
                       AJS.format("{0} minutes ago", param);
            case 'oneHourAgo':
                return type === Type.shortAge ?
                       "1 hour ago" :
                       "1 hour ago";
            case 'xHoursAgo':
                return type === Type.shortAge ?
                       AJS.format("{0} hours ago", param) :
                       AJS.format("{0} hours ago", param);
            case 'oneDayAgo':
                return type === Type.shortAge ?
                       "Yesterday" :
                       "Yesterday";
            case 'xDaysAgo':
                return type === Type.shortAge ?
                       AJS.format("{0} days ago", param) :
                       AJS.format("{0} days ago", param);
            case 'oneWeekAgo':
                return type === Type.shortAge ?
                       "1 week ago" :
                       "1 week ago";
            default:
                return null;
        }
    }

    function toMomentFormat(javaDateFormat) {
        if (hasOwn.call(dateFormatCache, javaDateFormat)) {
            return dateFormatCache[javaDateFormat];
        }
        var momentDateFormat = "", token;
        dateTokenizer.exec('');
        while (token = dateTokenizer.exec(javaDateFormat)) {
            token = token[0];
            switch(token.charAt(0)) {
                case "'":
                    momentDateFormat += '[' + token.substring(1, token.length-1) + ']';
                    break;
                case 'd':
                case 'y':
                case 'a':
                    momentDateFormat += token.toUpperCase();
                    break;
                default:
                    momentDateFormat += token;
            }
        }
        dateFormatCache[javaDateFormat] = momentDateFormat;
        return momentDateFormat;
    }
    
    function getFormatString(type) {
        switch (type.key) {
            case 'short':
            case 'shortAge':
                return "dd MMM yyyy";
            case 'long':
            case 'longAge':
                return "dd MMMM yyyy";
            case 'full':
                return "dd MMM yyyy hh:mm a";
            case 'timestamp':
                return "yyyy-MM-ddTHH:mm:ssZ";
            default:
                return null;
        }
    }

    function isYesterday(now, date) {
        var end = now.clone().add('d', 1).hours(0).minutes(0).seconds(0).milliseconds(0);
        while (end > now) {
            end.subtract('d', 1);
        }
        var start = end.clone().subtract('d', 1);
        return start <= date && date < end;
    }

    function getSecondsBetween(start, end) {
        return Math.floor(end.diff(start, 'seconds', true));
    }

    function getMinutesBetween(start, end) {
        return Math.floor(end.diff(start, 'minutes', true));
    }

    function getHoursBetween(start, end) {
        return end.diff(start, 'hours'); // diff rounds by default
    }

    function getDaysBetween(start, end) {
        return Math.floor(end.diff(start, 'days', true));
    }

    function getMonthsBetween(start, end) {
        return end.diff(start, 'months', true);
    }

    function formatDateWithFormatString(date, type) {
        var formatString = toMomentFormat(getFormatString(type));

        return date.format(formatString);
    }

    function formatDateWithRelativeAge(date, type, now) {
        now = now || moment();

        if (date <= now) {
            if (date > now.clone().subtract('m', 1)) {
                return getTextForRelativeAge('aMomentAgo', type);
            } else if (date > now.clone().subtract('m', 2)) {
                return getTextForRelativeAge('oneMinuteAgo', type);
            } else if (date > now.clone().subtract('m', 50)) {
                return getTextForRelativeAge('xMinutesAgo', type, getMinutesBetween(date, now));
            } else if (date > now.clone().subtract('m', 90)) {
                return getTextForRelativeAge('oneHourAgo', type);
            } else if (isYesterday(now, date) && date < now.clone().subtract('h', 5)) {
                return getTextForRelativeAge('oneDayAgo', type);
            } else if (date > now.clone().subtract('d', 1)) {
                return getTextForRelativeAge('xHoursAgo', type, getHoursBetween(date, now));
            } else if (date > now.clone().subtract('d', 7)) {
                return getTextForRelativeAge('xDaysAgo', type, Math.max(getDaysBetween(date, now), 2));// if it's not yesterday then don't say it's one day ago
            } else if (date > now.clone().subtract('d', 8)) {
                return getTextForRelativeAge('oneWeekAgo', type);
            }
        }
        return formatDateWithFormatString(date, type);
    }

    function formatDate(momentDate, type) {
        if (momentDate && type) {
            if (type.isAge) {
                return formatDateWithRelativeAge(momentDate, type);
            } else {
                return formatDateWithFormatString(momentDate, type);
            }
        } else {
            return null;
        }
    }

    /*
     * Currently only supports the default 'long' formatting.
     */
    function elapsedTime(dateFrom, dateTo) {
         dateTo = dateTo || moment();
         if (dateFrom && dateFrom <= dateTo) {
             var months = getMonthsBetween(dateFrom, dateTo);
             if (months < 1) {
                 var minutes = getMinutesBetween(dateFrom, dateTo);
                 if (minutes < 1) {
                     var seconds = getSecondsBetween(dateFrom, dateTo);
                     if (seconds < 1) {
                         return "\u003c 1 second";
                     } else if (seconds > 1) {
                         return AJS.format("{0} seconds", seconds);
                     } else {
                         return "1 second";
                     }
                 } else if (minutes > 1) {
                     return AJS.format("{0} minutes", minutes);
                 } else {
                     return "1 minute";
                 }
             } else {
                 return "more than a month";
             }
        }
        return null;
    }

    BAMBOO.Time.format = function (dateOrNumberOrString, typeString) {
        return formatDate(dateOrNumberOrString ? moment(dateOrNumberOrString) : null, Type(typeString));
    }

    BAMBOO.Time.elapsedTime = function (dateOrNumberOrStringFrom, dateOrNumberOrStringTo) {
        var dateFrom = dateOrNumberOrStringFrom ? moment(dateOrNumberOrStringFrom) : null;
        var dateTo = dateOrNumberOrStringTo ? moment(dateOrNumberOrStringTo) : null;
        return elapsedTime(dateFrom, dateTo);
    }

}(window.BAMBOO = (window.BAMBOO || {}), moment));
/* module-key = 'bamboo.web.resources:feature-deployment-release', location = '/feature/deployment/deployment-release.js' */
define('feature/deployment-release', [
    'jquery',
    'underscore',
    'brace',
    'util/events'
], function(
    $,
    _,
    Brace,
    events
) {

    'use strict';

    var DeploymentRelease = Brace.View.extend({

        mixins: [events.EventBusMixin],

        initialize: function(options) {
            this.data = {
                create: {},
                promote: {},
                rollback: false
            };

            if (options.event) {
                this.data[options.event] = options.data || {};
                this.triggerWrapperEvent(options.event, true);
            }

            this.onEvent([
                'release:change',
                'release:change:initial'
            ], this.onReleaseChange);

            this.onEvent([
                'branch:change',
                'branch:change:initial'
            ], this.onBranchChange);

            this.onEvent([
                'build:change',
                'build:change:initial'
            ], this.onBuildChange);

            this.onEvent('deploy:release:warning', this.onToggleWarning);
            this.onEvent('deploy:release:rollback', this.onToggleRollbackWarning);

            $(document).on('change',
                'form input:radio[name="releaseTypeOption"]',
                _.bind(this.onTypeChange, this)
            );
        },

        onBranchChange: function(instance) {
            switch (instance.$el.attr('id')) {
                case 'newReleaseBranchKey':
                    this.data.create.branch = $.trim(instance.$el.val());
                    this.triggerWrapperEvent('create');
                    break;
                case 'promoteReleaseBranchKey':
                    this.triggerWrapperEvent('promote');
                    break;
            }
        },

        onBuildChange: function(instance) {
            switch (instance.$el.attr('id')) {
                case 'newReleaseBuildResult':
                    this.data.create.build = $.trim(instance.$el.val());
                    this.data.create.resultsSummary = instance.getSelectedData();
                    this.triggerWrapperEvent('create');
                    break;
            }
        },

        onReleaseChange: function(instance) {
            switch (instance.$el.attr('id')) {
                case 'promoteVersion':
                    this.data.promote.release = $.trim(instance.$el.val());
                    this.triggerWrapperEvent('promote');
                    break;
            }
        },

        onTypeChange: function() {
            var type = $('form input:radio[name="releaseTypeOption"]:checked').val();
            var warning = $('#rollbackWarning');

            type = $.trim(type).toLowerCase();

            if (type === 'create') {
                warning.toggleClass('hidden', !this.data.rollback);
            }

            this.triggerWrapperEvent(type);
        },

        onToggleWarning: function(instance) {
            var warning = $('#emptyBuildResults');
            var container = instance.$el.parents('.radio:first');

            if (this.data.create.build) {
                this.triggerEvent('build:show', container);
                this.triggerEvent('release:show', container);

                warning.addClass('hidden');
            }
            else {
                this.triggerEvent('build:hide', container);
                this.triggerEvent('release:hide', container);

                warning.removeClass('hidden');
            }
        },

        onToggleRollbackWarning: function(state) {
            this.data.rollback = state;

            $('#rollbackWarning').toggleClass(
                'hidden', !state
            );
        },

        getSelectedType: function() {
            return $('form input:radio[name="releaseTypeOption"]:checked')
                .val().toLowerCase();
        },

        triggerWrapperEvent: function(event, force) {
            if (force || this.getSelectedType() === event) {
                this.lastEvent = [
                    'deploy:release',
                    event, this.data[event]
                ];

                setTimeout(_.bind(function() {
                    if (this.lastEvent) {
                        this.triggerEvent.apply(this, this.lastEvent);
                        this.lastEvent = null;
                    }
                }, this), 100);
            }
        }

    });

    return DeploymentRelease;
});

/* module-key = 'bamboo.web.resources:feature-release-input', location = '/feature/release/release-input.js' */
define('feature/release-input', [
    'jquery',
    'underscore',
    'backbone',
    'brace',
    'util/events',
    'util/errors'
], function(
    $,
    _,
    Backbone,
    Brace,
    events,
    errors
) {

    'use strict';

    var ReleaseInputModel = Backbone.Model.extend({

        url: [
            AJS.contextPath(),
            'rest/api/latest/deploy/preview/versionName'
        ].join('/'),

        initialize: function(params) {
            this.initialParams = params || {};
        },

        fetch: function(options) {
            options.data = _.extend(
                this.initialParams,
                options.data
            );

            return Backbone.Model.prototype.fetch.call(this, options);
        }
    });

    var ReleaseInput = Brace.View.extend({

        mixins: [events.EventBusMixin],

        initialize: function(options) {
            this.params = null;
            this.data = null;

            this.$el.on('keyup', _.bind(_.debounce(
                this.onContentChange, 320 || options.timeout
            ), this));

            this.settings = {
                masterPickerId: options.masterPickerId
            };

            this.$icon = $(bamboo.feature.release.input.icon());
            this.$el.parent().append(this.$icon);

            this.dialog = AJS.InlineDialog(
                this.$icon, this.$icon.attr('id'),
                _.bind(this.onDialogShow, this), {
                    hideDelay: null,
                    offsetX: -60,
                    arrowOffsetX: -7,
                    width: 420
                }
            );

            this.model = new ReleaseInputModel(options.params);

            this.onEvent('build:change', this.onMasterChange);
            this.onEvent('build:change:initial', this.onMasterChangeInitial);
            this.onEvent('build:hide', this.onHide);
            this.onEvent('build:show', this.onShow);
        },

        onContentChange: function() {
            this.triggerEvent('release:change');
        },

        onMasterChange: function(instance) {
            if (
                this.settings.masterPickerId &&
                instance.$el.attr('id') !== this.settings.masterPickerId
            ) {
                return;
            }

            this.data = null;
            this.params = null;
            this.$el.val('');

            if (instance.$el.val()) {
                this.params = {
                    resultKey: instance.$el.val()
                };

                this.loadData(_.bind(function() {
                    this.$el.val(this.data.nextVersionName);
                    this.onContentChange();
                }, this));
            }
        },

        onMasterChangeInitial: function(instance) {
            if (
                this.settings.masterPickerId &&
                instance.$el.attr('id') !== this.settings.masterPickerId
            ) {
                return;
            }

            if (instance.$el.val()) {
                this.params = {
                    resultKey: instance.$el.val()
                };

                this.loadData();
            }
        },

        onDialogShow: function(content, trigger, showPopup) {
            content.css({ padding: '20px' });

            var handler = _.bind(function() {
                content.html(bamboo.feature.release.input.content({
                    item: this.data
                }));

                showPopup();
            }, this);

            if (this.data) {
                handler();
            }
            else {
                this.loadData(handler);
            }

            return false;
        },

        onHide: function(instance, container) {
            if (!container || container.find(this.$el).length) {
                this.$el.parents('.field-group:first').hide();
            }
        },

        onShow: function(instance, container) {
            if (!container || container.find(this.$el).length) {
                this.$el.parents('.field-group:first').show();
            }
        },

        loadData: function(callback) {
            if (this.params) {
                this.model.fetch({
                    data: this.params,
                    error: errors,
                    success: _.bind(function(instance, data) {
                        this.data = this.model.toJSON();

                        if (callback) {
                            callback();
                        }
                    }, this)
                });
            }
            else if (callback) {
                callback();
            }
        }

    });

    return ReleaseInput;

});

/* module-key = 'bamboo.web.resources:feature-release-input', location = '/feature/release/release-input.soy' */
// This file was automatically generated from release-input.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.release == 'undefined') { bamboo.feature.release = {}; }
if (typeof bamboo.feature.release.input == 'undefined') { bamboo.feature.release.input = {}; }


bamboo.feature.release.input.icon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a id="helpDialog-releaseInput" href="#" rel="help"><span class="aui-icon aui-icon-small aui-iconfont-info" data-unicode="UTF+E012" original-title="">Info</span></a>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.release.input.content = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="release-input-info">', (opt_data.item) ? (opt_data.item.isBranch) ? '<h3>' + soy.$$escapeHtml("Release version naming for branch deployments") + '</h3><br/>' + soy.$$escapeHtml("When creating releases from a plan branch, the following naming scheme applies:") + '<br><br><span>&lt;branchname&gt;-&lt;incremented number&gt;</span><br><br>' + soy.$$escapeHtml("Changing the release name in this form is a one-time change. The subsequent release from a plan branch will once again use the naming scheme above.") + '<br><br>' + AJS.format("Only releases from your default branch make use of the \x3ca href\x3d\x22{0}\x22\x3erelease version naming scheme\x3c/a\x3e.","" + '/deploy/config/configureDeploymentProjectVersioning.action?id=' + opt_data.item.deploymentProjectId) : '<h3>' + soy.$$escapeHtml("Release version naming scheme") + '</h3><br/>' + soy.$$escapeHtml("Releases in this deployment project are named according to the following release version naming scheme:") + '<br><span>' + soy.$$escapeHtml(opt_data.item.versionNamingScheme) + '</span><br><br>' + soy.$$escapeHtml("The default value in the Release field was computed using this formula. Changing the release name in this form is a one-time change and will not influence the release version naming scheme for subsequent releases.") + '<br><br>' + AJS.format("You can \x3ca href\x3d\x22{0}\x22\x3echange the release version naming scheme\x3c/a\x3e for permanent changes.","" + '/deploy/config/configureDeploymentProjectVersioning.action?id=' + opt_data.item.deploymentProjectId) : '<span>' + soy.$$escapeHtml("Please select a build result.") + '</span>', '</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:widget-autocomplete', location = '/widget/autocomplete/autocomplete.js' */
define('widget/autocomplete', [
    'jquery',
    'underscore',
    'brace',
    'util/events'
], function(
    $,
    _,
    Brace,
    events
) {

    'use strict';

    var Autocomplete = Brace.View.extend({

        mixins: [
            events.EventBusMixin
        ],

        initialize: function(options) {
            this.data = [];

            options.initialValue = $.parseJSON(
                options.initialValue || null
            );

            if (_.isFunction(this.onInitSelection)) {
                options.initSelection = _.bind(this.onInitSelection, this);
            }

            this.settings = $.extend({
                escapeMarkup: function(m) {
                    return m;
                },
                placeholder: ' '
            }, options || {});

            if (!this.$el.val()) {
                if (!options.initialValue && options.loadAndProcess && this.onLoadAndProcess) {
                    this.settings.initSelection = _.bind(this.onLoadAndProcess, this);
                    this.$el.val('__LOADING__');
                }
            }

            this.$el.auiSelect2(this.settings);
            this.$el.on('change', _.bind(function() {
                $('#select2-drop-mask').hide();

                this.$el.auiSelect2('dropdown').hide();
                this.$el.auiSelect2('container')
                    .removeClass('select2-dropdown-open')
                    .removeClass('select2-container-active');
            }, this));

            this.onRegisterEvents();
        },

        onRegisterEvents: function() {
            this.proxyEvents('select',
                ['change', 'select2-open', 'select2-blur'],
                this.$el
            );
        },

        getSelectedData: function(callback) {
            var selected = this.$el.auiSelect2('data');

            if (!selected) {
                selected = _.find(this.data.results, _.bind(callback || function(item) {
                    return item.id === this.$el.val();
                }, this));
            }

            return selected;
        },

        initConfig: function(values) {
            var defaults = _.defaults(values || {}, {
                placeholder: this.settings.placeholder,
                data: []
            });

            this.$el.auiSelect2(_.defaults(
                defaults,
                this.settings
            ));

            return this;
        },

        getContainer: function() {
            return this.$el.auiSelect2('container');
        },

        addLoadingIcon: function() {
            var $icon = $(document.createElement('span'))
                .addClass('aui-icon aui-icon-wait');

            this.$el.siblings('.select2-container:first').append($icon);
            return this;
        },

        removeLoadingIcon: function() {
            setTimeout(_.bind(function() {
                this.$el.parent().find('.aui-icon-wait').fadeOut();
            }, this), 500);

            return this;
        },

        clearValue: function() {
            this.$el.auiSelect2('data', null);
            return this;
        },

        processData: function(data) {
            this.data = data;
            return this.data;
        },

        disable: function() {
            this.$el.auiSelect2('enable', false);
            return this;
        },

        enable: function() {
            this.$el.auiSelect2('enable', true);
            return this;
        }

    });

    return Autocomplete;

});

/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('Bamboo.Widget.Autocomplete', null, require('widget/autocomplete'));
}
/* module-key = 'bamboo.web.resources:widget-autocomplete', location = '/widget/autocomplete/autocomplete.soy' */
// This file was automatically generated from autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.autocomplete == 'undefined') { bamboo.widget.autocomplete = {}; }


bamboo.widget.autocomplete.result = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(soy.$$escapeHtml(opt_data.name));
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.selection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(soy.$$escapeHtml(opt_data.name));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:widget-autocomplete-ajax', location = '/widget/autocomplete/autocomplete-ajax.js' */
define('widget/autocomplete-ajax', [
    'jquery',
    'underscore',
    'widget/autocomplete',
    'util/events',
    'util/ajax',
    'util/errors'
], function(
    $,
    _,
    Autocomplete,
    events,
    ajax,
    errors
) {

    'use strict';

    var AutocompleteAjax = Autocomplete.extend({

        mixins: [
            events.EventBusMixin
        ],

        initialize: function(options) {
            this.params = $.extend({
                'max-results': 10
            }, this.params || {});

            if (_.isFunction(this.onFormatSelection)) {
                options.formatSelection = _.bind(this.onFormatSelection, this);
            }

            if (_.isFunction(this.onFormatResult)) {
                options.formatResult = _.bind(this.onFormatResult, this);
            }

            options.ajax.quietMillis = options.ajax.quietMillis || 320;

            if (_.isUndefined(options.cache) || !!options.cache) {
                options.ajax.resultsCallback = options.ajax.results;
                options.ajax.results = null;

                options.query = _.debounce(
                    _.bind(this.queryAjaxCache, this),
                    options.ajax.quietMillis
                );

                if (!options.ajax.params) {
                    if (_.isFunction(this.onRemoteData)) {
                        options.ajax.params = {
                            error: _.bind(this.onRemoteData, this)
                        };
                    }
                    else {
                        options.ajax.params = {
                            error: _.bind(function(jqXHR, textStatus, errorThrown) {
                                this.$el.auiSelect2('close');
                                errors(
                                    jqXHR, textStatus, errorThrown
                                );
                            }, this)
                        };
                    }
                }
            }

            Autocomplete.prototype.initialize.apply(
                this, [options || {}]
            );
        },

        queryAjaxCache: function(query) {
            this.cache = this.cache || {
                initial: {},
                term: {}
            };

            var term = $.trim(query.term);

            query.key = JSON.stringify(
                this.settings.ajax.data(term, query.page || 1, true)
            );

            var cache = (term.length) ?
                this.cache.term[query.key] :
                this.cache.initial[query.key];

            if (!_.isEmpty(cache)) {
                query.callback(cache);
                return;
            }

            this.settings.ajax.results = _.bind(function(data, page) {
                var response = this.settings.ajax
                    .resultsCallback(data, page);

                if (!response.results.length && this.settings.ajax.empty) {
                    response = {
                        results: this.settings.ajax.empty.call(this, query.term),
                        more: false
                    };
                }

                if (term) {
                    this.cache.term[query.key] = response;
                }
                else {
                    this.cache.initial[query.key] = response;
                }

                return response;
            }, this);

            window.Select2.query.ajax($.extend({
                transport: ajax
            }, this.settings.ajax))(query);
        },

        addQueryCache: function(request, data) {
            var key = JSON.stringify(request);
            data = data || this.data;

            if (!key.query || !key.query.length) {
                this.cache.initial[key] = data;
            }
            else {
                this.cache.term[key] = data;
            }

            return this;
        },

        clearQueryCache: function() {
            this.cache = {
                initial: {},
                term: {}
            };

            return this;
        }

    });

    return AutocompleteAjax;

});

/* module-key = 'bamboo.web.resources:feature-release-autocomplete', location = '/feature/release/release-autocomplete.js' */
define('feature/release-autocomplete', [
    'jquery',
    'underscore',
    'widget/autocomplete-ajax',
    'util/events',
    'util/ajax'
], function(
    $,
    _,
    AutocompleteAjax,
    events,
    ajax
) {

    'use strict';

    var ReleaseAutocomplete = AutocompleteAjax.extend({

        mixins: [events.EventBusMixin],

        initialize: function(options) {
            this.params = options.params || {};

            if (options.params) {
                delete options.params;
            }

            var dataCallback = _.bind(function(term, page) {
                return $.extend({
                    searchTerm: term,
                    'start-index': Math.max(
                        (page - 1) * this.params['max-results'], 0
                    ),
                    chronologicalOrder: true
                }, this.params);
            }, this);

            var settings = {
                minimumInputLength: 0,
                ajax: {
                    url: AJS.contextPath() + '/rest/api/latest/search/versions',
                    dataType: 'json',
                    data: dataCallback,
                    results: _.bind(function(data, page) {
                        return this.processData({
                            results: data.searchResults,
                            more: data.size ? data.size > (page * this.params['max-results']) : false
                        });
                    }, this)
                }
            };

            AutocompleteAjax.prototype.initialize.apply(
                this, [$.extend(settings, options || {})]
            );
        },

        onRegisterEvents: function() {
            this.proxyEvents('release', ['change'], this.$el);
            var events = ['branch:change'];

            if (!this.$el.val()) {
                events.push('branch:change:initial');
            }

            this.onEvent(events, this.onMasterChange);
        },

        onLoadAndProcess: function(element, callback) {
            var settings = _.defaults({
                data: this.settings.ajax.data('', 1)
            }, this.settings.ajax);

            ajax(settings)
                .done(_.bind(function(data) {
                    var selected = data.searchResults[0];

                    if (selected && selected.id) {
                        this.$el.val(selected.id);
                        this.$el.select2('data', selected);
                    }

                    this.processData({
                        results: data.searchResults,
                        more: data.size ? data.size > this.params['max-results'] : false
                    });

                    this.triggerEvent('release:change');

                    if (callback) {
                        callback(selected);
                    }
                }, this));
        },

        onFormatResult: function(item) {
            if (!_.isEmpty(item)) {
                return bamboo.widget.autocomplete.result({
                    name: item.searchEntity.name
                });
            }
        },

        onFormatSelection: function(item) {
            if (!_.isEmpty(item)) {
                return bamboo.widget.autocomplete.selection({
                    name: item.searchEntity.name
                });
            }
        },

        onMasterChange: function(instance) {
            if (
                this.settings.masterPickerId &&
                instance.$el.attr('id') !== this.settings.masterPickerId
            ) {
                return;
            }

            this.params.branchKey = '';
            this.clearValue();

            var value = instance.getSelectedData();

            if (value) {
                this.params.branchKey = value.searchEntity.key;
                this.onLoadAndProcess();
            }
        }

    });

    return ReleaseAutocomplete;
});

/* module-key = 'bamboo.web.resources:feature-release-autocomplete', location = '/feature/release/release-autocomplete.soy' */
// This file was automatically generated from release-autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.release == 'undefined') { bamboo.feature.release = {}; }
if (typeof bamboo.feature.release.autocomplete == 'undefined') { bamboo.feature.release.autocomplete = {}; }


bamboo.feature.release.autocomplete.result = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(soy.$$escapeHtml(opt_data.item.name));
  return opt_sb ? '' : output.toString();
};


bamboo.feature.release.autocomplete.selection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(soy.$$escapeHtml(opt_data.item.name));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:piecon-js', location = '/scripts/piecon/piecon.js' */
//
// piecon.js
//
// https://github.com/lipka/piecon
//
// Copyright (c) 2012 Lukas Lipka <lukaslipka@gmail.com>. All rights reserved.
//
// Licenced under MIT Licence
//
// Modified by Atlassian
(function($, Piecon) {
    var currentFavicon = null;
    var originalFavicon = null;
    var originalTitle = null;
    var canvas = null;
    var options = {};
    var defaults = {
        color: '#3b73af',
        //background: '#999',
        background: '#ccd9ea',
        shadow: '#fff',
        fallback: false
    };

    var isRetina = window.devicePixelRatio > 1;

    var ua = (function () {
        var agent = navigator.userAgent.toLowerCase();
        return function (browser) {
            return agent.indexOf(browser) !== -1;
        };
    }());

    var browser = {
        ie: ua('msie'),
        chrome: ua('chrome'),
        webkit: ua('chrome') || ua('safari'),
        safari: ua('safari') && !ua('chrome'),
        mozilla: ua('mozilla') && !ua('chrome') && !ua('safari')
    };

    var getFaviconTag = function() {
        var links = $("head").find("link");

        for (var l = links.length, i = l-1; i >= 0; i--) {
            if (links[i].getAttribute('rel') === 'icon' || links[i].getAttribute('rel') === 'shortcut icon') {
                return links[i];
            }
        }
        return false;
    };

    var removeFaviconTag = function() {
        var $head = $("head");
        $head.find("link[rel='icon']").remove();
        $head.find("link[rel='shortcut icon']").remove();
    };

    var setFaviconTag = function(url) {
        removeFaviconTag();
        $("head").append("<link rel='icon' type='image/x-icon' href='" + url + "'/>")
    };

    var getCanvas = function () {
        if (!canvas) {
            canvas = document.createElement("canvas");
            if (isRetina) {
                canvas.width = 32;
                canvas.height = 32;
            } else {
                canvas.width = 16;
                canvas.height = 16;
            }
        }

        return canvas;
    };

    var drawFavicon = function(percentage) {
        var canvas = getCanvas();
        var context = canvas.getContext("2d");
        var percentage = percentage || 0;
        var src = currentFavicon;

        var faviconImage = new Image();
        faviconImage.onload = function() {
            if (context) {
                context.clearRect(0, 0, canvas.width, canvas.height);

                // Draw empty circle
                context.beginPath();
                context.arc(canvas.width / 2, canvas.height / 2, Math.min(canvas.width / 2 -1 , canvas.height / 2 -1), 0, Math.PI * 2, false);
                context.strokeStyle = options.color;
                context.stroke();

                // Draw pie
                if (percentage > 0) {
                    context.beginPath();
                    context.moveTo(canvas.width / 2, canvas.height / 2);
                    context.arc(canvas.width / 2, canvas.height / 2, Math.min(canvas.width / 2 - 1, canvas.height / 2 -1), (-0.5) * Math.PI, (-0.5 + 2 * percentage / 100) * Math.PI, false);
                    context.lineTo(canvas.width / 2, canvas.height / 2);
                    context.fillStyle = options.color;
                    context.fill();
                }

                setFaviconTag(canvas.toDataURL());
            }
        };

        // allow cross origin resource requests if the image is not a data:uri
        // as detailed here: https://github.com/mrdoob/three.js/issues/1305
        if (!src.match(/^data/)) {
            faviconImage.crossOrigin = 'anonymous';
        }

        faviconImage.src = src;
    };

    var updateTitle = function(percentage) {
        if (percentage > 0) {
            document.title = '(' + percentage + '%) ' + originalTitle;
        } else {
            document.title = originalTitle;
        }
    };

    Piecon.setOptions = function(custom) {
        options = {};

        for (var key in defaults){
            options[key] = custom.hasOwnProperty(key) ? custom[key] : defaults[key];
        }

        return this;
    };

    Piecon.setProgress = function(percentage) {
        if (!originalTitle) {
            originalTitle = document.title;
        }

        if (!originalFavicon || !currentFavicon) {
            var tag = getFaviconTag();
            originalFavicon = currentFavicon = tag ? tag.getAttribute('href') : '/favicon.ico';
        }

        if (!isNaN(parseFloat(percentage)) && isFinite(percentage)) {
            if (!getCanvas().getContext || browser.ie || browser.safari || options.fallback === true) {
                // Fallback to updating the browser title if unsupported
                return updateTitle(percentage);
            } else if (options.fallback === 'force') {
                updateTitle(percentage);
            }

            return drawFavicon(percentage);
        }

        return false;
    };

    Piecon.reset = function() {
        if (originalTitle) {
            document.title = originalTitle;
        }

        if (originalFavicon) {
            currentFavicon = originalFavicon;
            setFaviconTag(currentFavicon);
        }
    };

    Piecon.setFavicon = function(url)
    {
        if (!browser.ie)
        {
            setFaviconTag(url);
        }
    };

    Piecon.browserSupportsDynamicFavicon = function()
    {
        return !browser.ie && !browser.safari;
    };

    Piecon.setOptions(defaults);
}(jQuery, window.Piecon = (window.Piecon || {})));

/* module-key = 'bamboo.web.resources:piecon-js', location = '/scripts/piecon/favicon-update.js' */
(function ($, BAMBOO) {
    BAMBOO.FaviconUpdate = function (opts) {
        var resourcePrefix = opts.resourcePrefix,
            url = opts.faviconRestUrl,
            update = function () {
                $.ajax({
                           url: url,
                           dataType: "json",
                           cache: false,
                           success: function (json) {
                               Piecon.setFavicon(resourcePrefix + json.faviconUrl);
                           }
                       });
                // Update again in 20 seconds
                setTimeout(update, 20000);
            };
        return {
            init: function () {
                update();
            }
        };
    }
}(jQuery, window.BAMBOO = (window.BAMBOO || {})));

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/widget/icons.soy' */
// This file was automatically generated from icons.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.icons == 'undefined') { widget.icons = {}; }


widget.icons.icon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="icon icon-', soy.$$escapeHtml(opt_data.type), '"', (opt_data.text && opt_data.showTitle) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '"' : '', '>', (opt_data.text) ? '<span>' + soy.$$escapeHtml(opt_data.text) + '</span>' : '', '</span>');
  return opt_sb ? '' : output.toString();
};


widget.icons.fontIcon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="aui-icon aui-icon-small aui-iconfont-', soy.$$escapeHtml(opt_data.type), '"', (opt_data.text && opt_data.showTitle) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '"' : '', '>', (opt_data.text) ? '<span>' + soy.$$escapeHtml(opt_data.text) + '</span>' : '', '</span>');
  return opt_sb ? '' : output.toString();
};


widget.icons.auiFontLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a ', (opt_data.text) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '" ' : '', 'href="', soy.$$escapeHtml("" + opt_data.relativeUrl), '"><span class="aui-icon aui-icon-small aui-iconfont-', soy.$$escapeHtml(opt_data.iconType), '">', (opt_data.text) ? soy.$$escapeHtml(opt_data.text) : '', '</span></a>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/widget/lozenges.soy' */
// This file was automatically generated from lozenges.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.lozenges == 'undefined') { widget.lozenges = {}; }


widget.lozenges.lozenge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="lozenge lozenge-', soy.$$escapeHtml(opt_data.colour ? opt_data.colour : 'default'), soy.$$escapeHtml(opt_data.subtle ? ' lozenge-subtle' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.showTitle) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', soy.$$escapeHtml(opt_data.text), '</span>');
  return opt_sb ? '' : output.toString();
};


widget.lozenges.auilozenge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="aui-lozenge aui-lozenge-', soy.$$escapeHtml(opt_data.colour ? opt_data.colour : 'default'), soy.$$escapeHtml(opt_data.subtle ? ' aui-lozenge-subtle' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.showTitle) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', soy.$$escapeHtml(opt_data.text), '</span>');
  return opt_sb ? '' : output.toString();
};


widget.lozenges.branch = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="', (opt_data.cssClass) ? soy.$$escapeHtml(opt_data.cssClass) : 'lozenge-newline', '">', (opt_data.label) ? '<span class="inline-label">' + soy.$$escapeHtml(opt_data.label) + '</span> ' : '', '<span class="lozenge branch-lozenge monospace" title="', soy.$$escapeHtml(opt_data.planBranchName), '"><span class="branch">');
  aui.icons.icon({icon: 'devtools-branch-small', useIconFont: true}, output);
  output.append('<span class="name">', soy.$$escapeHtml(opt_data.planBranchName), '</span></span></span></span>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/widget/agent.soy' */
// This file was automatically generated from agent.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.agent == 'undefined') { widget.agent = {}; }


widget.agent.renderAgentNameLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.type == 'ELASTIC') {
    if (true) {
      output.append('<a href="', soy.$$escapeHtml("" + '/admin/elastic/manageElasticInstances.action'), '">');
      widget.icons.icon({type: 'elastic', text: '(elastic)', showTitle: true}, output);
      output.append('</a>');
    } else {
      widget.icons.icon({type: 'elastic', text: '(elastic)', showTitle: true}, output);
    }
  }
  output.append((opt_data.showAdminLink) ? '<a href="' + soy.$$escapeHtml("" + '/admin/agent/viewAgent.action?agentId=' + opt_data.id) + '">' + soy.$$escapeHtml(opt_data.name) + '</a>' : '<a href="' + soy.$$escapeHtml("" + '/agent/viewAgent.action?agentId=' + opt_data.id) + '">' + soy.$$escapeHtml(opt_data.name) + '</a>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/widget/plan.soy' */
// This file was automatically generated from plan.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.plan == 'undefined') { widget.plan = {}; }


widget.plan.renderPlanNameLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', (opt_data.url) ? soy.$$escapeHtml(opt_data.url) : soy.$$escapeHtml("" + '/browse/' + opt_data.plan.key), '" ', (opt_data.plan.description) ? 'title="' + soy.$$escapeHtml(opt_data.plan.description) + '"' : '', '>', soy.$$escapeHtml(opt_data.plan.project.name), ' &rsaquo; ');
  if (opt_data.plan.master) {
    output.append(soy.$$escapeHtml(opt_data.plan.master.buildName), ' &rsaquo; ');
    aui.icons.icon({icon: 'devtools-branch-small', useIconFont: true}, output);
    output.append(' ');
  }
  output.append(soy.$$escapeHtml(opt_data.plan.buildName), '</a>');
  return opt_sb ? '' : output.toString();
};


widget.plan.renderPlanNameLinkWithoutBranch = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', (opt_data.url) ? soy.$$escapeHtml(opt_data.url) : soy.$$escapeHtml("" + '/browse/' + opt_data.plan.key), '" ', (opt_data.plan.description) ? 'title="' + soy.$$escapeHtml(opt_data.plan.description) + '"' : '', '>', soy.$$escapeHtml(opt_data.plan.project.name), ' &rsaquo; ', (opt_data.plan.master) ? soy.$$escapeHtml(opt_data.plan.master.buildName) : soy.$$escapeHtml(opt_data.plan.buildName), '</a>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/widget/buildresult.soy' */
// This file was automatically generated from buildresult.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.buildresult == 'undefined') { widget.buildresult = {}; }


widget.buildresult.resultStatusAndLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  widget.status.buildResultStatusIcon(opt_data, output);
  var resultClass__soy5 = new soy.StringBuilder();
  widget.status.buildResultStatusClass(opt_data, resultClass__soy5);
  resultClass__soy5 = resultClass__soy5.toString();
  output.append(' <a href="', soy.$$escapeHtml("" + '/browse/' + opt_data.resultSummary.planResultKey.key), '" class="', soy.$$escapeHtml(resultClass__soy5), '">', soy.$$escapeHtml('#' + opt_data.resultSummary.planResultKey.resultNumber), '</a>');
  return opt_sb ? '' : output.toString();
};


widget.buildresult.resultStatus = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  widget.status.buildResultStatusIcon(opt_data, output);
  var resultClass__soy18 = new soy.StringBuilder();
  widget.status.buildResultStatusClass(opt_data, resultClass__soy18);
  resultClass__soy18 = resultClass__soy18.toString();
  output.append(' <span class="', soy.$$escapeHtml(resultClass__soy18), '">', soy.$$escapeHtml('#' + opt_data.resultSummary.planResultKey.resultNumber), '</span>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/jquery/plugins/bamboo/progressbar.js' */
/**
 * Progress Bar jQuery plugin
 *
 * Options:
 * - value  {number}    Default: 0
 *      The value of the progressBar.
 *      Can be set when initialising (first creating) the progressBar.
 *          eg. $(".selector").progressBar({ value: 40 });
 *      Get or set the value option after initialisation:
 *          //getter
 *          var value = $(".selector").progressBar("option", "value");
 *          //setter
 *          $(".selector").progressBar("option", "value", 40);
 *
 * - text   {string}    Default: &nbsp;
 *      The text shown in the progressBar.
 *      Can be set when initialising (first creating) the progressBar.
 *          eg. $(".selector").progressBar({ text: "40% complete" });
 *      Get or set the value option after initialisation:
 *          //getter
 *          var text = $(".selector").progressBar("option", "text");
 *          //setter
 *          $(".selector").progressBar("option", "text", "40% complete");
 *
 * Initialisation:
 * $("#myBar").progressBar();
 *
 * This will turn the target element (in this case <div id="myBar"></div>) into a progress bar using the
 * default options. If the HTML for the progress bar is already contained within the target element the plugin will
 * initialise by extracting the data from the HTML, which from then onward can be updated using the plugin methods.
 *
 * You could also pass an object as the first parameter containing your own options with which to initialise the
 * progress bar. eg. $("#myBar").progressBar({ value: 40, text: "40% complete" });
 *
 * Methods:
 * - progressBar("destroy")
 *      Removes any data and bindings that were added to the element by the plugin leaving just the HTML.
 *
 * - progressBar("option", optionName, [value])
 *      Get or set any progressBar option. If no value is specified, will act as a getter.
 *
 * - progressBar("option", [options])
 *      Get or set multiple progressBar options at once by providing an options object. If options is not specified,
 *      will act as a getter.
 * 
 */
(function ($) {
    $.fn.progressBar = function (options) {
        if (typeof options == "string") {
            if (options == "option") {
                if (arguments.length == 1) { // getter
                    var retArr = [];
                    this.each(function () {
                        retArr.push($(this).data("options"));
                    });
                    return retArr;
                } else if (arguments.length == 2 && typeof arguments[1] == "string") { // individual option getter
                    var ret,
                        opt = arguments[1];
                    this.each(function () {
                        var $el = $(this);
                        ret = (typeof ret == "undefined") ? $el.data("options")[opt] : ret + $el.data("options")[opt];
                    });
                    return ret;
                } else if (arguments.length == 2 && typeof arguments[1] == "object") { // option object setter
                    var newOpts = arguments[1];
                    if (typeof newOpts.text != "undefined" && (newOpts.text == null || newOpts.text == "")) {
                        newOpts.text = $.fn.progressBar.defaults.text;
                    }
                    return this.each(function () {
                        var $el = $(this);
                        $el.data("options", $.extend($el.data("options"), newOpts)).trigger("updateProgressBar");
                    });
                } else if (arguments.length == 3 && typeof arguments[1] == "string") { // individual option setter
                    var key = arguments[1],
                        newVal = arguments[2];
                    if (key == "text" && (newVal == null || newVal == "")) {
                        newVal = $.fn.progressBar.defaults.text;
                    }
                    return this.each(function () {
                        var $el = $(this);
                        var currentOptions = $el.data("options");
                        currentOptions[key] = newVal;
                        $el.data("options", currentOptions).trigger("updateProgressBar");
                    });
                }
            } else if (options == "destroy") {
                return this.each(function () {
                    $(this).removeData("options").removeData("bar").removeData("text").unbind("updateProgressBar");
                });
            }
        } else { // init
            if (typeof options != "undefined" && typeof options.text != "undefined" && (options.text == null || options.text == "")) {
                delete options.text;
            }
            var opts = $.extend({}, $.fn.progressBar.defaults, options);
            return this.each(function () {
                var $el = $(this);
                $el.bind("updateProgressBar", function (e) {
                    var $el = $(this),
                        options = $el.data("options");
                    $el.data("bar").width(Math.max(0, Math.min(100, options.value)) + "%");
                    $el.data("text").html(options.text);
                });
                if ($(".progress-bar, .progress-text", this).length == 2) { // check if HTML for progressBar already exists
                    var bar = $(".progress-bar", this),
                        text = $(".progress-text", this),
                        optsFromExisting = {};
                    if (typeof options == "undefined") {
                        var barWidth = bar.clone().width(), // clone the element so we're working with a detached element, then get the detached element's width which won't be in px, it'll be the proper percentage
                            barText = text.text();
                        optsFromExisting.value = barWidth;
                        if (barText != null && barText != "") {
                            optsFromExisting.text = barText;
                        }
                    }
                    $el.data("options", $.extend({}, opts, optsFromExisting))
                       .data("bar", bar)
                       .data("text", text)
                       .trigger("updateProgressBar");
                } else {
                    $el.empty()
                       .data("options", opts)
                       .data("bar", $('<div class="progress-bar" style="width: ' + Math.max(0, Math.min(100, opts.value)) + '%;" />').appendTo(this))
                       .data("text", $('<div class="progress-text">' + opts.text + '</div>').appendTo(this));
                }
                if (!$el.hasClass("progress")) {
                    $el.addClass("progress");
                }
            });
        }
    };
    $.fn.progressBar.defaults = {
        value: 0,
        text: "&nbsp;"
    };
})(jQuery);
/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/jquery/plugins/bamboo/cronbuilder.js' */
(function ($)
{
    /**
     * Creates a Cron builder on the page for a specific field.  The builder makes up two form components, the text display
     * (showing the pretty cron expression) and a hidden field (with the raw cron expression)
     * The value to be submitted can only be updated via the cron buidler dialog.
     *
     * USAGE
     * ------
     * Call against display field e.g:
     *
     *   AJS.$("#displayFieldId").cronBuilder({});
     *
     * Arguments (all required)
     *
     * opts {
     *  hiddenFieldSelector:    selector for the field that will be submited as part of the form (usually a hidden field)
     *  dialogTrigger:          html for the cron builder trigger
     *  eventNamespace:         unique namespace for this dialog click event
     *  contextPath:            context path for bamboo instance (used when generating urls;)
     *  dialogSubmitButtonText: text for the dialog submit button
     *  dialogHeadingText:      text for the dialog heading
     * }
     });
     */
    $.fn.cronBuilder = function (opts)
    {
        return this.each(function ()
                         {
                             var $this = $(this),
                                     initialCron = $(opts.hiddenFieldSelector).val(),
                                     $dialogTrigger = $(opts.dialogTrigger),

                                     addCronExpression = function (result)
                                     {
                                         //update fields
                                         $(opts.hiddenFieldSelector).val(result.cronExpression);
                                         $this.text(result.prettyCronExpression);

                                         // need to remove the old dialog and reattach with the new cron expression as the arg.
                                         $($dialogTrigger).unbind("click." + opts.eventNamespace);
                                         attachCronDialog(result.cronExpression);
                                     },

                                     attachCronDialog = function (cron)
                                     {
                                         simpleDialogForm($dialogTrigger, opts.contextPath + "/ajax/editCronExpression.action?cronExpression=" + encodeURIComponent(cron),
                                                          620, 480, opts.dialogSubmitButtonText, "ajax", addCronExpression, null, opts.dialogHeadingText, opts.eventNamespace);
                                     };

                             // generate pretty string
                             $.get(opts.contextPath + "/ajax/getPrettyCronExpression.action?cronExpression=" + encodeURIComponent(initialCron), function (result)
                             {
                                 $this.text(result.prettyCronExpression);
                             });

                             // add the link to the right spot - needed cause it avoids playing with the form templates.
                             $dialogTrigger.insertAfter($this);

                             attachCronDialog(initialCron);
                         });

    };

    /**
     * Replaces an element containing a cron expression with the pretty version of that expression.
     *
     * Usage:  e.g. AJS.$("#element").cronBuilder(${req.contextPath});
     *
     */
    $.fn.cronDisplay = function (contextPath)
    {
        return this.each(function ()
                         {
                             var $this = $(this),
                                     cron = $this.text();

                             // generate pretty string
                             $.get(contextPath + "/ajax/getPrettyCronExpression.action?cronExpression=" + encodeURIComponent(cron), function (result)
                             {
                                 $this.text(result.prettyCronExpression);
                             });
                         });
    };
})(jQuery);
/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/jquery/plugins/bamboo/reload-image.js' */
(function ($) {
    $.fn.reloadImage = function (options) {
        var defaults = {
            text: "Reload image",
            cssClass: "image-reload"
        };
        var opts = $.extend(defaults, options);

        return this.each(function () {
            var $this = $(this);
            $('<span class="' + opts.cssClass + '" title="' + opts.text + '" />').insertAfter($this).click(function (e) {
                var src = $this.attr("src"),
                    pos = src.indexOf("&v="),
                    date = new Date();
                if (pos >= 0) {
                    src = src.substr(0, pos);
                }
                $this.attr("src", src + "&v=" + date.getTime());
                e.preventDefault();
            });
        });
    }
})(jQuery);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/build-decorator.js' */
(function ($, BAMBOO) {
    BAMBOO.BUILDRESULT = {};
    BAMBOO.PLAN = {};

    BAMBOO.BUILDRESULT.StatusRibbon = function (opts) {
        var defaults = {
                ribbonSelector: null,
                key: null,
                progressBarContainerSelector: '.status-ribbon-progress-bar'
            },
            options = $.extend(true, defaults, opts),
            isJobResult,
            $ribbon,
            $progressBar,
            $buildingForText,
            updateProgressBar = function (progress) {
                var progressPercentage = Math.ceil(100 - (progress['percentageCompleted'] * 100));
                if (!$progressBar.length) {
                    $progressBar = $('<div />', { id: 'sr-pb-' + options.key }).progressBar().appendTo($ribbon.find(options.progressBarContainerSelector));
                    $ribbon.trigger('createprogressbar.buildresult', [ progress ]);
                }
                if (progressPercentage < $progressBar.progressBar('option', 'value')) { // this progress bar works backwards
                    $progressBar.progressBar('option', 'value', progressPercentage);
                }
                updateBuildTime(progress[(progress['averageBuildDuration'] > 0 ? 'prettyTimeRemaining' : 'prettyBuildTime')], { prefix: '&ndash; ' });
                $ribbon.trigger('updateprogressbar.buildresult', [ progress ]);
                if (progressPercentage > 0)
                {
                    Piecon.setOptions({fallback: 'force'});
                    Piecon.setProgress(100 - progressPercentage);
                }
                else
                {
                    Piecon.reset();
                }
            },
            updateBuildTime = function (time, options) {
                options || (options = {});
                var prefix = options['prefix'] || '';
                var suffix = options['suffix'] || '';

                if (!$buildingForText.length) { return; }
                if (time) {
                    $buildingForText.text(time + suffix).prepend(prefix).show();
                } else {
                    $buildingForText.hide();
                }
            },
            res = {
                refresh: function (e, json) {
                    var progress, stages = json['stages']['stage'];

                    if (isJobResult) {
                        if (stages.length) {
                            for (var i = 0, ii = stages.length; i < ii && !progress; i++) {
                                var jobs = stages[i]['results']['result'];

                                for (var j = 0, jj = jobs.length; j < jj; j++) {
                                    var job = jobs[j];

                                    if (job['key'] == options.key) {
                                        progress = job['progress'];
                                        if (job['queued']) {
                                            updateBuildTime(job['prettyQueuedTime']);
                                        } else if (job['updatingSource']) {
                                            updateBuildTime(job['prettyVcsUpdateDuration']);
                                        } else if (progress) {
                                            updateProgressBar(progress);
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                    } else {
                        progress = json['progress'];
                        if (!progress['buildTime']) {
                            updateBuildTime(json['prettyQueuedTime']);
                        } else {
                            updateProgressBar(progress);
                        }
                    }
                }
            };

        $(function () {
            $ribbon = $(options.ribbonSelector);
            $progressBar = $ribbon.find('.progress');
            $buildingForText = $ribbon.find('.operation-time');
            isJobResult = $ribbon.hasClass('has-job');
            $(document).bind('update.buildresult', res.refresh);
        });

        return res;
    };

    BAMBOO.BUILDRESULT.PlanNavigator = function (opts) {
        var defaults = {
                planNavigatorSelector: null,
                key: null
            },
            options = $.extend(true, defaults, opts),
            $planNavigator,
            $stageElements,
            hiddenClass = 'collapsed',
            updateIcon = function ($icon, iconType) {
                var fullIconType = 'icon-' + iconType;

                if (!$icon.hasClass(fullIconType)) {
                    $icon.attr('class', 'icon ' + fullIconType);
                }
            },
            togglePlanNav = function () {
                if ($planNavigator.parent().hasClass(hiddenClass)) {
                    $planNavigator.parent().removeClass(hiddenClass);
                    $(this).attr('title', "Hide");
                } else {
                    $planNavigator.parent().addClass(hiddenClass);
                    $(this).attr('title', "Show");
                }
            },
            addPlanNavToggle = function () {
                $('<button />', { title: ($planNavigator.parent().hasClass(hiddenClass) ? "Show" : "Hide"), id: 'plan-nav-toggle', click: togglePlanNav }).insertAfter($planNavigator);
            },
            res = {
                refresh: function (e, json) {
                    var jobs = [], stages = json['stages']['stage'];

                    if (stages.length) {
                        for (var i = 0, ii = stages.length, k = stages[0].index; i < ii; i++, k++) {
                            var stage = stages[i],
                                $stageElement = $($stageElements[k]),
                                $stageIcon = $('.stageIcon', $stageElement);

                            jobs = jobs.concat(stage['results']['result']);
                            if (stage['isBuilding']) {
                                $stageElement.removeClass('Pending').addClass('InProgress');
                                if ($stageIcon.length) {
                                    updateIcon($stageIcon, 'stage-InProgress stageIcon');
                                }
                            } else if (stage['isCompleted']) {
                                $stageElement.removeClass('Pending InProgress').addClass(stage['isSuccessful'] ? 'Successful' : 'Failed');
                                if ($stageIcon.length) {
                                    updateIcon($stageIcon, stage['isSuccessful'] ? 'stage-Successful stageIcon' : 'stage-Failed stageIcon');
                                }
                            } else {
                                $stageElement.addClass('Pending');
                                if ($stageIcon.length) {
                                    updateIcon($stageIcon, 'stage-Pending stageIcon');
                                }
                            }
                        }
                        for (var j = 0, jj = jobs.length; j < jj; j++) {
                            var job = jobs[j],
                                $job = $('#job-' + job['key']),
                                $icon = $job.find('.icon'),
                                $progress = $job.find('.progress'),
                                progressPercentage;

                            $job.trigger('updatejob.buildresult', [ job ]);
                            
                            if (job['finished']) {
                                updateIcon($icon, job['state']);
                                if ($progress.length) {
                                    $progress.remove();
                                }
                            } else if (job['progress'] && !job['queued']) {
                                progressPercentage = Math.ceil(100 - (job['progress']['percentageCompleted'] * 100));
                                updateIcon($icon, 'InProgress');
                                if (!$progress.length) {
                                    $progress = $('<div />', { id: 'navPb' + job['key'] }).progressBar().prependTo($job);
                                }
                                if (progressPercentage < $progress.progressBar('option', 'value')) { // this progress bar works backwards
                                    $progress.progressBar('option', 'value', progressPercentage);
                                }
                            } else {
                                updateIcon($icon, 'Queued');
                            }
                        }
                    }
                }
            };

        $(function () {
            $planNavigator = $(options.planNavigatorSelector);
            $stageElements = $planNavigator.find("> ul > li");
            addPlanNavToggle();
            $(document).bind('update.buildresult', res.refresh);
        });

        return res;
    };

    BAMBOO.BUILDRESULT.BuildResult = (function () {
        var opts = {
                currentKey: null,
                getStatusUrl: null,
                jobStatus: null,
                isActive: false,
                ribbonSelector: '#status-ribbon'
            },
            planNavigator,
            statusRibbon,
            getJobStatus = function (job) {
                if (job['finished']) {
                    return job['state'];
                } else if (job['waiting']) {
                    return "Pending";
                } else if (job['progress'] && !job['queued']) {
                    if (job['updatingSource']) {
                        return "updatingSource";
                    } else {
                        return "InProgress";
                    }
                } else {
                    return "Queued";
                }
            },
            updateTimeout,
            update = function () {
                $.ajax({
                    url: opts.getStatusUrl,
                    cache: false,
                    data: {
                        expand: "stages.stage.results.result"
                    },
                    dataType: "json",
                    contentType: "application/json",
                    success: function (json) {
                        if (json['finished']) {
                            reloadThePage();
                            return;
                        }

                        $(document).trigger('update.buildresult', [ json ]);

                        // Update again in 5 seconds
                        updateTimeout = setTimeout(update, 5000);
                    },
                    error: function (XMLHttpRequest) {
                        // 404 for status means either no such result key exists OR build is not executing
                        // both cases are a good reason to reload, otherwise just wait
                        if (XMLHttpRequest.status == 404) {
                            reloadThePage();
                            return;
                        }
                        // Error occurred when doing the update, try again in 30 sec
                        updateTimeout = setTimeout(update, 30000);
                    }
                });
            },
            refreshDetails = function (e, progress) {
                if (progress) {
                    $(".started + dd > time").attr("datetime", progress['startedTimeFormatted']).html(progress['startedTime'] + ' &ndash; <span>' + progress['prettyStartedTime'] + '</span>');
                }
            },
            onJobUpdated = function (e, job) {
                if (opts.jobStatus && job['key'] == opts.currentKey && opts.jobStatus != getJobStatus(job)) {
                    reloadThePage();
                }
            };

        return {
            init: function (options) {
                $.extend(true, opts, options);

                if ($.browser.msie && parseInt($.browser.version, 10) <= 8) {
                    $(function () {
                        $(opts.ribbonSelector).prepend('<span class="before"></span>').append('<span class="after"></span>');
                    });
                }

                planNavigator = new BAMBOO.BUILDRESULT.PlanNavigator({ planNavigatorSelector: '#plan-navigator', key: opts.currentKey });

                if (opts.isActive) {
                    $(document)
                        .bind('updateprogressbar.buildresult', refreshDetails)
                        .bind('updatejob.buildresult', onJobUpdated)
                        .bind('createprogressbar.buildresult', function () { reloadThePage(); }); // TODO: Remove this when we can update the build results page dynamically without needing to refresh manually

                    statusRibbon = new BAMBOO.BUILDRESULT.StatusRibbon({ ribbonSelector: opts.ribbonSelector, key: opts.currentKey });

                    update();
                }
            }
        }
    }());

    BAMBOO.PLAN.LinkedJiraIssueDescription = (function (opts) {
        var options = $.extend(true, {
                planKey: null,
                issueSelector: '.plan-description'
            }, opts),
            $description = $(options.issueSelector),
            issueKey = $description.data('jiraIssueKey'),
            keyLink = AJS.contextPath() + '/project/jiraRedirect.action?jiraIssueKey=' + issueKey,
            remoteJiraLinkRequired = $description.data('remoteJiraLinkRequired');

        $(bamboo.feature.jiraIssueList.singleIssueLoading({
            key: issueKey,
            keyLink: keyLink
        })).appendTo($description);
        $.ajax({
            url: AJS.contextPath() + '/rest/api/latest/plan/' + options.planKey + '/issue/' + issueKey,
            cache: false,
            dataType: 'json'
        }).done(update).fail(error);

        function update(issue, textStatus, jqXHR) {
            var summary = issue['summary'];

            if (summary) {
                $description.html(bamboo.feature.jiraIssueList.singleIssue(issue));
                if (remoteJiraLinkRequired) {
                    showRemoteJiraLinkButton();
                }
            } else {
                error(jqXHR);
            }
        }
        function error(jqXHR) {
            var response, authUrl, authInstance;

            try {
                response = $.parseJSON(jqXHR.responseText);
                authUrl = response['authenticationRedirectUrl'];
                authInstance = response['authenticationInstanceName'] || "JIRA";
            }
            catch (e) {}
            if (authUrl) {
                $description.html(bamboo.feature.jiraIssueList.singleIssueOAuth({
                    key: issueKey,
                    keyLink: keyLink,
                    authenticationRedirectUrl: authUrl + '&redirectUrl=' + encodeURIComponent(document.location.href),
                    authenticationInstanceName: authInstance
                }));
            } else {
                $description.html(bamboo.feature.jiraIssueList.singleIssueRetrievalError({
                    key: issueKey,
                    keyLink: keyLink
                }));
            }
        }
        function showRemoteJiraLinkButton() {
            var disabledProperty = 'aria-disabled',
                $button = $('<button/>', { 'class': 'aui-button aui-style', text: "Create link in JIRA" }).click(initiateLink).insertAfter($description),
                $icon = $(widget.icons.icon({ type: 'loading' }));

            function initiateLink() {
                if (!$button.attr(disabledProperty)) {
                    $button.attr(disabledProperty, true).append($icon);

                    $.ajax({
                        url: AJS.contextPath() + '/ajax/createRemoteIssueLink.action',
                        cache: false,
                        dataType: 'json',
                        type: 'POST',
                        data: {
                            planKey: options.planKey,
                            issueKey: issueKey
                        }
                    }).done(linkCreated).fail(linkFailed);
                }
            }
            function linkCreated(response, textStatus, jqXHR) {
                if (response['status'] == "ERROR") {
                    linkFailed(jqXHR);
                } else {
                    $icon.replaceWith(widget.icons.icon({ type: 'tick-agent' }));
                    setTimeout(function () {
                        $button.fadeOut(function () { $(this).remove(); });
                    }, 1500);
                }
            }
            function linkFailed(jqXHR) {
                var response, authUrl, authInstance, authMessage, errors;

                try {
                    response = $.parseJSON(jqXHR.responseText);
                    errors = response['errors'];
                    authUrl = response['authorisationURI'];
                    authInstance = response['context'] || "JIRA";
                    authMessage = response['message'];
                }
                catch (e) {}

                if (authUrl) {
                    showMessageDialog(authMessage, BAMBOO.buildAUIMessage([ bamboo.feature.jiraIssueList.linkedIssueOAuth({
                        authenticationRedirectUrl: authUrl + '&redirectUrl=' + encodeURIComponent(document.location.href),
                        authenticationInstanceName: authInstance,
                        reason: 'in order to create a remote issue link'
                    }) ], 'warning', { escapeTitle: false }));
                } else {
                    if (!errors || !errors.length) {
                        errors = [ "Unable to link JIRA issue to branch" ];
                    }
                    showMessageDialog("Error while linking JIRA issue to branch", BAMBOO.buildAUIErrorMessage(errors));
                }
                $button.removeAttr(disabledProperty);
                $icon.remove();
            }
            function showMessageDialog(title, content) {
                var dialog = new AJS.Dialog({
                    width: 600
                }).addHeader(title).addPanel('', content).addButton("Close", function () { dialog.remove(); });

                dialog.show().updateHeightProperly();
            }
        }
    });
}(jQuery, window.BAMBOO = (window.BAMBOO || {})));
/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/bamboo.js' */
//  ######
//  #     #  ######  #####   #####   ######   ####     ##     #####  ######  #####
//  #     #  #       #    #  #    #  #       #    #   #  #      #    #       #    #
//  #     #  #####   #    #  #    #  #####   #       #    #     #    #####   #    #
//  #     #  #       #####   #####   #       #       ######     #    #       #    #
//  #     #  #       #       #   #   #       #    #  #    #     #    #       #    #
//  ######   ######  #       #    #  ######   ####   #    #     #    ######  #####

// Constants
var BAMBOO_DASH_DISPLAY_TOGGLES = "bamboo.dash.display.toggles",
    BAMBOO_EVENT_ON_DASHBOARD_RELOADED = "BAMBOO_EVENT_ON_DASHBOARD_RELOADED";

window.BAMBOO = (window.BAMBOO || {});
BAMBOO.reloadDashboardTimeout = 20;
//
// Display the given help page in a separate window
//
function openHelp(helpPage) {
    window.open(helpPage, 'manualPopup', 'width=770,height=550,scrollbars=yes,status=yes,resizable=yes');
}

function reloadThePage() {
    window.location.reload(true);
}

function redirectAfterReturningFromDialog(response) {
    if (response.redirectUrl) {
        window.location = AJS.contextPath() + response.redirectUrl;
    } else {
        reloadThePage();
    }
}

function isDefinedObject(reference) {
    return (typeof reference !== "undefined") && (reference !== null);
}

if (!jQuery.isNumeric) {
    jQuery.isNumeric = function (n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    };
}

/**
 * Any href clicked with rel=help (e.g. our help bubbles) will open in new window.
 * Any element with id=addPlanLabel will trigger the edit labels dialog
 * Applies to all of Bamboo.
**/
AJS.$(document).delegate("a[rel~='help']", "click", function (e) {
    var $this = AJS.$(this);
    e.preventDefault();
    if ($this.data('useHelpPopup')) {
        openHelp(this.href);
    } else {
        window.open(this.href);
    }
});


/**
 * Workaround for Cancel links in Dialog which append a hash to URL by default
 */
AJS.$("a.button-panel-link[href='#']").live("click", function (e) {
    e.preventDefault();
});

/**
 * AJS.BambooDialog
 */
AJS.BambooDialog = function(options, onSubmitCallback, onCancelCallback) {
    var dialog;
    options = options || {};
    options = jQuery.extend({}, options, {
        keypressListener: function(e) {
            if (e.which == jQuery.ui.keyCode.ESCAPE) {
                 if (isDefinedObject(onCancelCallback)) {
                     onCancelCallback(dialog);
                 } else {
                     dialog.remove();
                 }
            } else if (e.which == jQuery.ui.keyCode.ENTER && isDefinedObject(onSubmitCallback)) {
                onSubmitCallback(dialog);
                if (options.submitMode && options.submitMode == "ajax") {
                    e.preventDefault();
                }
            }
        }
    });
    dialog = new AJS.Dialog(options);
    return dialog;
};
AJS.Dialog.prototype.addHelpText = function (template, args) {
    if (!template) {
        // Don't do anything if there is no text to add.
        // This stops us printing 'undefined'.
        return;
    }

    var text = template;
    if (args) {
        text = AJS.template(template).fill(args).toString();
    }

    var page = this.page[this.curpage];
    if (!page.buttonpanel) {
        page.addButtonPanel();
    }

    // The text may include html i.e. links or strongs
    var tip = AJS.$("<div class='dialog-tip'></div>").html(text);
    page.buttonpanel.append(tip);
    tip.find("a").click(function() {
        window.open(this.href, '_blank').focus();
        return false;
    });
};
AJS.Dialog.prototype.updateHeightProperly = function () {
    this.updateHeight();
    this.getCurrentPanel().body.css('height', '');
};

String.prototype.replaceAll = function(pcFrom, pcTo) {
    var MARKER = "js___bmbo_mrk",
        i = this.indexOf(pcFrom),
        c = this;
    while (i > -1) {
        c = c.replace(pcFrom, MARKER);
        i = c.indexOf(pcFrom);
    }

    i = c.indexOf(MARKER);
    while (i > -1) {
        c = c.replace(MARKER, pcTo);
        i = c.indexOf(MARKER);
    }

    return c;
};


if (!jQuery.generateId) {
  jQuery.generateId = function() {
    return arguments.callee.prefix + arguments.callee.count++;
  };
  jQuery.generateId.prefix = 'jq-';
  jQuery.generateId.count = 0;

  jQuery.fn.generateId = function() {
    return this.each(function() {
      this.id = jQuery.generateId();
    });
  };
}

// Cookie handling functions

function saveToConglomerateCookie(cookieName, name, value)
{
    var cookieValue = getCookieValue(cookieName);
    cookieValue = addOrAppendToValue(name, value, cookieValue);

    saveCookie(cookieName, cookieValue, 365);
}

function readFromConglomerateCookie(cookieName, name, defaultValue)
{
    var cookieValue = getCookieValue(cookieName);
    var value = getValueFromCongolmerate(name, cookieValue);
    if (value != null)
    {
        return value;
    }

    return defaultValue;
}

function eraseFromConglomerateCookie(cookieName, name)
{
    saveToConglomerateCookie(cookieName, name, "");
}

function getValueFromCongolmerate(name, cookieValue)
{
    var newCookieValue = null;
    // a null cookieValue is just the first time through so create it
    if (cookieValue == null)
    {
        cookieValue = "";
    }
    var eq = name + "-";
    var cookieParts = cookieValue.split('|');
    for (var i = 0; i < cookieParts.length; i++)
    {
        var cp = cookieParts[i];
        while (cp.charAt(0) == ' ')
        {
            cp = cp.substring(1, cp.length);
        }
        // rebuild the value string exluding the named portion passed in
        if (cp.indexOf(name) == 0)
        {
            return cp.substring(eq.length, cp.length);
        }
    }
    return null;
}

//either append or replace the value in the cookie string
function addOrAppendToValue(name, value, cookieValue)
{
    var newCookieValue = "";
    // a null cookieValue is just the first time through so create it
    if (cookieValue == null)
    {
        cookieValue = "";
    }

    var cookieParts = cookieValue.split('|');
    for (var i = 0; i < cookieParts.length; i++)
    {
        var cp = cookieParts[i];

        // ignore any empty tokens
        if (cp != "")
        {
            while (cp.charAt(0) == ' ')
            {
                cp = cp.substring(1, cp.length);
            }
            // rebuild the value string exluding the named portion passed in
            if (cp.indexOf(name) != 0)
            {
                newCookieValue += cp + "|";
            }
        }
    }

    // always append the value passed in if it is not null or empty
    if (value != null && value != '')
    {
        var pair = name + "-" + value;
        if ((newCookieValue.length + pair.length) < 4020)
        {
            newCookieValue += pair;
        }
    }
    return newCookieValue;
}

function getCookieValue(name, defaultString)
{
    var eq = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++)
    {
        var c = ca[i];
        while (c.charAt(0) == ' ')
        {
            c = c.substring(1, c.length);
        }
        if (c.indexOf(eq) == 0)
        {
            return c.substring(eq.length, c.length);
        }
    }

    return defaultString;
}

function saveCookie(name, value, days)
{
    var ex;
    if (days)
    {
        var d = new Date();
        d.setTime(d.getTime() + (days * 24 * 60 * 60 * 1000));
        ex = "; expires=" + d.toGMTString();
    }
    else
    {
        ex = "";
    }
    document.cookie = name + "=" + value + ex + ";path=" + (!AJS.contextPath().length ? "/" : AJS.contextPath());
}

/*
Reads a cookie. If none exists, then it returns and
*/
function readCookie(name, defaultValue)
{
    var cookieVal = getCookieValue(name);
    if (cookieVal != null)
    {
        return cookieVal;
    }

    // No cookie found, then save a new one as on!
    if (defaultValue)
    {
        saveCookie(name, defaultValue, 365);
        return defaultValue;
    }
    else
    {
        return null;
    }
}

function eraseCookie(name)
{
    saveCookie(name, "", -1);
}

function toggleOn(e, toggleGroup_id)
{
    var onToggle = document.getElementById(toggleGroup_id + "_toggler_on");
    var offToggle = document.getElementById(toggleGroup_id + "_toggler_off");
    var target = document.getElementById(toggleGroup_id + "_target");
    onToggle.style.display = 'block';
    offToggle.style.display = 'none';
    target.style.display = 'block';
    saveToConglomerateCookie(BAMBOO_DASH_DISPLAY_TOGGLES, toggleGroup_id, null);
}

function toggleOff(e, toggleGroup_id)
{
    var onToggle = document.getElementById(toggleGroup_id + "_toggler_on");
    var offToggle = document.getElementById(toggleGroup_id + "_toggler_off");
    var target = document.getElementById(toggleGroup_id + "_target");
    onToggle.style.display = 'none';
    offToggle.style.display = 'block';
    target.style.display = 'none';
    saveToConglomerateCookie(BAMBOO_DASH_DISPLAY_TOGGLES, toggleGroup_id, '0');
}

function restoreTogglesFromCookie(toggleGroup_id)
{
    var elem = document.getElementById(toggleGroup_id + "_target");
    if (elem)
    {
        if (readFromConglomerateCookie(BAMBOO_DASH_DISPLAY_TOGGLES, toggleGroup_id, null) == '0')
        {
            toggleOff(null, toggleGroup_id);
        }
        else
        {
            toggleOn(null, toggleGroup_id);
        }
    }
}

// Forms JS
function toggleContainingCheckbox(e)
{
    if (e && e.target.tagName == "INPUT")
    {
        return true;
    }

    AJS.$(this).find("input:checkbox").each(function(){
        this.checked = !this.checked;
    });

    return true;
}

function toggleIconOff(dom)
{
    dom.src = dom.src.replace('_on.', '_off.');
}

function toggleIconOn(dom)
{
    dom.src = dom.src.replace('_off.', '_on.');
}

/*
*   For user picker - when you click "Check All' all the select boxes are changed
*/
    var selectedBoxes = [];

    function setCheckboxes()
    {
        var numelements = document.selectorform.elements.length;
        var item0 = document.selectorform.elements[0];
        var item1;

        for (var i=1 ; i < numelements ; i++)
        {
            item1 = document.selectorform.elements[i];
            item1.checked = item0.checked;
            if (!selectedBoxes[item1.name])
                selectedBoxes[item1.name] = [];
            selectedBoxes[item1.name][item1.value] = item1.checked;
        }
    }

/*
*  For User Picker - checkboxes are named after users so by compiling a list of all selected checkboxes
*   we have a list of users (comma seperated)
*/
    function getEntityNames()
    {
        var numelements = document.selectorform.elements.length;
        var item;
        var checkedList = "";

        var sep = "";
        for (var i = 0 ; i < numelements ; i++)
        {
            item = document.selectorform.elements[i];
            if (item != null && item.type == "checkbox" && item.name != "all" && item.checked == true)
            {
                var itemValue = item.value;
                itemValue = itemValue.replace(/\\/g, "\\\\").replace(/,/g, "\\,");
                checkedList  = checkedList + sep + itemValue;
                sep = ", ";
            }
        }

        return checkedList;
    }

/*
*   For User Picker - takes comma seperated list of users and places them in specified field.
*/
   function addUsers(commaDelimitedUserNames, fieldID, multiSelect)
    {
        var element = document.getElementById(fieldID);
        var currentUsers = element.value;
        if (!multiSelect) {
            element.value = commaDelimitedUserNames;
        } else if (currentUsers != null && currentUsers != ""){
            element.value = currentUsers + ", " + commaDelimitedUserNames;
        } else {
            element.value = commaDelimitedUserNames;
        }
    }

var STATUS_PREFIX = 'statusSection';
var REASON_PREFIX = 'reasonSummary';
var DURATION_PREFIX = 'durationSummary';
var LAST_BUILT = 'lastBuiltSummary';
var TESTCOUNT_PREFIX = 'testSummary';
var LATEST_BUILD_PREFIX = 'latestBuild';
var PLAN_PROPS = [LATEST_BUILD_PREFIX, REASON_PREFIX, DURATION_PREFIX, TESTCOUNT_PREFIX, LAST_BUILT];

function updatePlan(plan, toHide, toShow)
{
    try
    {
        var planKey = plan.planKey;

        //the following for loops have len initialised as such for improved performance
        for (var i = 0, len = PLAN_PROPS.length; i < len; i++)
        {
            var propPrefix =  PLAN_PROPS[i];
            var elem = AJS.$("#" + propPrefix + planKey);
            if (LATEST_BUILD_PREFIX == propPrefix)
            {
                // Update the status when first item and clear the existing classes on this element

                elem.closest(".planKeySection").attr('class', 'planKeySection ' + plan.statusClass);
            }
            elem.html(plan[propPrefix]);
        }

        AJS.$("#" + STATUS_PREFIX + planKey).find(".icon").each(function(){
            if (!AJS.$(this).hasClass(plan.statusIconClass)){
                AJS.$(this).removeAttr('class').addClass("icon " + plan.statusIconClass).attr("title", plan.statusText);
            }
        });

        //Update link
        var link = AJS.$("a#" + STATUS_PREFIX + planKey);
        if (link.length) {
            if (plan.lastResultKey != null) {
                link.attr("href", AJS.contextPath() + "/browse/" + plan.lastResultKey);
            } else {
                link.attr("href", AJS.contextPath() + "/browse/" + planKey);
            }
        }

        // Update favourites
        var faves = AJS.$('#favouriteIconFor_' + planKey);
        for (var i = 0, len = faves.length; i < len; i++)
        {
            var fave = faves.get(i);
            if (plan.favourite)
            {
                toggleIconOn(fave);
            }
            else
            {
                toggleIconOff(fave);
            }
        }

        if (plan.suspendedFromBuilding) {
            toShow.push('#resumeBuild_' + planKey);
            toHide.push( '#stopSingleBuild_' + planKey, '#stopMultipleBuilds_' + planKey, '#manualBuild_' + planKey);
        } else {
            toHide.push('#resumeBuild_' + planKey);
            if (plan.allowStop) {
                toHide.push('#manualBuild_' + planKey);
                if (plan.numberOfCurrentlyBuildingPlans > 1) {
                    toHide.push('#stopSingleBuild_' + planKey);
                    toShow.push('#stopMultipleBuilds_' + planKey);
                } else {
                    toShow.push('#stopSingleBuild_' + planKey);
                    toHide.push('#stopMultipleBuilds_' + planKey);
                }
            } else {
                toHide.push('#stopSingleBuild_' + planKey, '#stopMultipleBuilds_' + planKey);
                toShow.push('#manualBuild_' + planKey);
            }
        }
    } catch(ex) {
        //alert(ex);
        console.warn(ex);
    }
}

function updatePlans(sinceSystemTime) {
    // Make the call to the server for JSON data
    if (!sinceSystemTime) sinceSystemTime = 0;

    var $showMoreTrigger = AJS.$(".show-more-plans");
    var lastProjectKey = $showMoreTrigger.length ? $showMoreTrigger.data("lastProjectKey") : "";

    // Define the callbacks for the asyncRequest
    var timeout,
        panelId = 'dashboardUpdatePlans',
        callbacks = {
            dataType: 'json',
            url:AJS.contextPath() + "/ajax/viewPlanUpdates.action",
            data: { sinceSystemTime: sinceSystemTime,
                    lastProject: lastProjectKey
            },
            success : function (response) {
                if (!BAMBOO.reloadDashboard) return; // do nudda

                // Process the JSON data returned from the server
                try {
                    if (response.plans) {
                        var plans = response.plans,
                            toHide = [], toShow = [];
                        //Using toHide/toShow arrays here and deferring hide/show improved performance 20x,
                        //do not change it without heavy performance testing (on 2000 top level plans) please
                        for (var i = 0, len = plans.length; i < len; i++) {
                            var plan = plans[i];
                            updatePlan(plan, toHide, toShow);
                        }
                        if (toHide.length) {
                            AJS.$(toHide.join(',')).hide();
                        }
                        if (toShow.length) {
                            AJS.$(toShow.join(',')).show();
                        }
                    }
                } catch (x) {
                    console.warn("JSON Parse failed! " + x + "\n", response);
                }

                sinceSystemTime = response ? response.currentTime : 0;

                BAMBOO.panelTimeouts[panelId] = setTimeout(function () { updatePlans(sinceSystemTime); }, BAMBOO.reloadDashboardTimeout * 1000);
                hideAjaxErrorMessage();
                AJS.$("body").trigger(BAMBOO_EVENT_ON_DASHBOARD_RELOADED);
            },
            error : function (XMLHttpRequest) {
                showAjaxErrorMessage(XMLHttpRequest);
            },
            timeout : 60000
        };

    if (typeof BAMBOO.panelTimeouts === "undefined") {
        BAMBOO.panelTimeouts = {};
    } else {
        timeout = BAMBOO.panelTimeouts[panelId];
        clearTimeout(timeout);
    }
    AJS.$.ajax(callbacks);
}

function reloadPanel(id, url, reloadEvery, loadScripts, previousText, callback) {
    var timeout;
    if (typeof BAMBOO.panelTimeouts === "undefined") {
        BAMBOO.panelTimeouts = {};
    } else {
        timeout = BAMBOO.panelTimeouts[id];
        clearTimeout(timeout);
    }
    AJS.$.get(processReloadUrl(url), function(data) {
        var reponseText = data;

        if (!document.getElementById(id)) { return false; } // don't bother updating if the target isn't available to update

        if (!previousText || previousText != reponseText) {
            // only update if the previous response is different
            updateDomObject(reponseText, id, loadScripts, callback);
        }
        if (reloadEvery) {
            BAMBOO.panelTimeouts[id] = setTimeout(function () { reloadPanel(id, url, reloadEvery, loadScripts, reponseText, callback); }, reloadEvery * 1000);
        }
    });
}

function processReloadUrl(url)
{
    if (BAMBOO.buildLastCurrentStatus)
    {
        var indexOfCurrentStatus = url.indexOf("&lastCurrentStatus");
        if (indexOfCurrentStatus != -1)
        {
            url = url.substring(0, indexOfCurrentStatus);
        }

        return url + "&lastCurrentStatus=" + BAMBOO.buildLastCurrentStatus;

    }
    else
    {
        return url;
    }
}

function updateDomObject(html, targetId, loadScripts, callback)
{
    if(typeof html == 'undefined'){
        html = '';
    }
    if(loadScripts !== true){
        AJS.$("#" + targetId).html(html);
        if (AJS.$.isFunction(callback))
        {
            AJS.$("#" + targetId).each(callback);
        }
        return;
    }
    var id = AJS.$.generateId();
    html += '<span id="' + id + '"></span>';

    AJS.$("#" + id).ready(function(){
        var hd = document.getElementsByTagName("head")[0];
        var re = /(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)/img;
        var srcRe = /\ssrc=([\'\"])(.*?)\1/i;
        var match;
        while(match = re.exec(html)){
            var srcMatch = match[0].match(srcRe);
            if(srcMatch && srcMatch[2]){
                var s = document.createElement("script");
                s.src = srcMatch[2];
                hd.appendChild(s);
            }else if(match[1] && match[1].length > 0){
                eval(match[1]);
            }
        }
        var el = document.getElementById(id);
        if(el){el.parentNode.removeChild(el);}
    });
    var newHtml = html.replace(/(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)/img, '');
    AJS.$("#" + targetId).html(newHtml);

    if (AJS.$.isFunction(callback))
    {
        AJS.$("#" + targetId).each(callback);
    }
    return;
}


function updateInlineSection(url, sectionName)
{
     AJS.$.get(processReloadUrl(url), function(data)
      {
          updateDomObject(data, sectionName, "true", "null");
      });
}


function addConfirmationToLinks() {
    AJS.$(document).on(
        'click',
        '.requireConfirmation',
        function(e) {
            var $el = AJS.$(this);
            var isConfirmed = confirm('Please confirm that you are about to \n' + ($el.attr("title") ? $el.attr("title") : AJS.$.trim($el.text())));
            if (isConfirmed && $el.hasClass("mutative")) {
                e.preventDefault();
                $el.trigger("clickMutativeLink");
            }
            return isConfirmed;
        }
    );
}

/**
 * Build queue related stuff
 */
var buildQueue = function()
{
    AJS.$(document).ready(function () {
        if (buildQueue) {
            buildQueue.portletReloadCallback();
        }
    });

    return {
        /**
         * Shows and hides Build Queue's action panels
         */
        displayActions : function(actionsId)
        {
            var prevActionsId = readFromConglomerateCookie(BAMBOO_DASH_DISPLAY_TOGGLES, "buildQueueActions", actionsId);
            AJS.$("#builders").removeClass(prevActionsId);
            AJS.$("#builders").addClass(actionsId);

            saveToConglomerateCookie(BAMBOO_DASH_DISPLAY_TOGGLES, "buildQueueActions", actionsId);
        },

        restoreDisplayActionsFromCookie : function()
        {
            this.displayActions(readFromConglomerateCookie(BAMBOO_DASH_DISPLAY_TOGGLES, "buildQueueActions", "actions-queueControl"));
        },

        portletReloadCallback : function()
        {
            buildQueue.restoreDisplayActionsFromCookie();
        }
    };
}();


function initCommitsTooltip(targetId, planKey, buildNumber)
{
    AJS.InlineDialog(AJS.$("#" + targetId),
                 targetId,
                 AJS.contextPath() + "/build/ajax/viewBuildCommits.action?buildKey=" + planKey + "&buildNumber=" + buildNumber,
                {onHover: true, fadeTime: 50, hideDelay: 0, showDelay: 100, width: 300, offsetX: 0,offsetY: 10});
}

function initCommentTooltip(targetId, planKey, buildNumber)
{
    var link = AJS.$("#" + targetId);
    AJS.InlineDialog(link,
             targetId,
             AJS.contextPath() + "/build/ajax/viewBuildComments.action?buildKey=" + planKey + "&buildNumber=" + buildNumber,
            {onHover: true, fadeTime: 50, hideDelay: 0, showDelay: 100, width: 300, offsetX: 0,offsetY: 10});
}

/**
 * This function is not mentioned to be used directly but rather via @dj.simpleDialogForm FTL macro defined in dojo.ftl
 *
 * All the input params are also described in the dojo.ftl
 */
function simpleDialogForm(triggerSelector, getDialogBodyUrl, dialogWidth, dialogHeight, submitLabel, submitMode, submitCallback, cancelCallback, header, eventNamespace)
{
    function clearAllErrors(formJQ)
    {
        formJQ.find('.error,.aui-message').remove();
    }

    function addActionError(formJQ, errors)
    {
        formJQ.find(".field-group:first").before(BAMBOO.buildAUIErrorMessage(errors));
    }

    function applyErrors(formJQ, result)
    {
        if (result.fieldErrors) {
            for (var fieldName in result.fieldErrors) {
                BAMBOO.addFieldErrors(formJQ, fieldName, result.fieldErrors[fieldName]);
            }
        }

        if (result.errors) {
            addActionError(formJQ, result.errors);
        }
    }

    /**
     * This is called where callee requests non-ajax submit.
     * 1st phase is to call validation via AJAX using form's action attribute and then submit form in a classical way.
     *
     * @param formJQ  form to be submitted
     */
    function validateSubmitForm(formJQ)
    {
        clearAllErrors(formJQ);

        function validationCallback(result)
        {
            if (result.status.toUpperCase() == "OK")
            {
                formJQ.submit();
            }
            else
            {
               applyErrors(formJQ, result);
            }
        }

        AJS.$.post(formJQ.attr("action"), formJQ.serialize() + '&bamboo.enableJSONValidation=true', validationCallback, "json");
    }

    /**
     * For Ajax submit there's no separate validation phase.
     * Assumption is made that action will validate itself and will return proper JSON response in case of validation errors.
     *
     * @param formJQ          jQuery wrapper for form
     * @param submitCallback
     */
    function ajaxSubmitForm(formJQ, submitCallback)
    {
        clearAllErrors(formJQ);

        function successCallback(result)
        {
            if (result.status.toUpperCase()  == "OK")
            {
                submitCallback(result);
            }
            else
            {
               applyErrors(formJQ, result);
            }
        }

         function errorCallback(result)
        {
            if (result.status == 500)
            {
                addActionError(formJQ, Array("An internal server error has occurred. Please check the logs for more details."));
            }
            else
            {
                addActionError(formJQ, Array("An unknown error has occurred."));
            }
        }

        AJS.$.ajax({
            type: "POST",
            url: formJQ.attr("action"),
            data: formJQ.serialize(),
            success: successCallback,
            error: errorCallback,
            dataType: "json"
        });
    }

    function showDialog(linkElementJQ) {
        var $loading = AJS.$('<span class="icon icon-loading aui-dialog-content-loading" />'),
            $dialogForm = AJS.$("<div id='simpleDialogForm'/>").html($loading),
            setFocus = function () {
                var $firstError = $dialogForm.find(":input:visible:enabled.errorField:first").focus();
                if (!$firstError.length) {
                    $dialogForm.find(":input:visible:enabled:first").focus();
                }
            },
            onSubmitCallback = function(dialog) {
                var formJQ = AJS.$("#simpleDialogForm form");

                if (submitMode == "ajax") {
                    ajaxSubmitForm(formJQ, function(result) {
                        if (AJS.$.isFunction(submitCallback)) {
                            submitCallback(result);
                        }
                        dialog.remove();
                        $dialogForm.html($loading);
                    });
                } else {
                    validateSubmitForm(formJQ);
                }
            },
            onCancelCallback = function(dialog) {
                if (AJS.$.isFunction(cancelCallback)) {
                    cancelCallback();
                }
                dialog.remove();
                $dialogForm.html($loading);
            },
            $popup = new AJS.BambooDialog({width: dialogWidth, height: dialogHeight, submitMode: submitMode}, onSubmitCallback, onCancelCallback);

        $popup.addHeader(header != null ? header : linkElementJQ.attr('title'))
              .addPanel("I am invisible", $dialogForm)
              .addCancel("Cancel", onCancelCallback);

        AJS.$.get(getDialogBodyUrl, function(data) {
            $dialogForm.html(data);
            $popup.addSubmit(submitLabel, onSubmitCallback);
            $popup.getPage(0).button[1].moveLeft();
            setFocus();
            BAMBOO.DynamicFieldParameters.syncFieldShowHide($dialogForm, false);
        });
        $popup.show();
    }

    if (triggerSelector) {
        var namespace = "click";
        if (eventNamespace && eventNamespace.length) {
            namespace += "." + eventNamespace;
        }
        AJS.$(triggerSelector).bind(namespace, function(e) {
            showDialog(AJS.$(this));
            //disable the default behaviour (we don't want link to be followed when we display dialog)
            e.preventDefault();
        });
    } else {
        showDialog(AJS.$(this));
    }

}

/**
 * Asynchronous form handler
 * @param options
 *  - target        String - selector targeting the form
 *  - success       Function - handles JSON response from successful form submission
 *  - cancel        Function - handles what to do when the cancel link is clicked
 *  - formReplaced  Function - is fired after the form is replaced
 *  - $delegator    jQuery Object - where the event handler should be bound
 */
BAMBOO.asyncForm = function (options) {
    var $ = AJS.$,
        defaults = {
            target: null,
            success: null,
            cancel: null,
            formReplaced: null,
            error: null,
            $delegator: $(document),
            resetOnSuccess: false,
            loadingIconInsertionMethod: 'prepend'
        },
        handleSubmit = function (e) {
            var $form = $(this),
                cancelOnClick = function (e) { e.stopPropagation(); };

            e.preventDefault();
            $form.ajaxSubmit({
                data: {
                    "bamboo.successReturnMode": "json",
                    decorator: "nothing",
                    confirm: true
                },
                dataType: "html",
                beforeSerialize: function ($form, options) {
                    var fileInputs = $form.find('input:file').length > 0,
                        mp = 'multipart/form-data',
                        multipart = ($form.attr('enctype') == mp || $form.attr('encoding') == mp);

                    if (options.iframe !== false && (fileInputs || options.iframe || multipart)) {
                        this.data["bamboo.successReturnMode"] = "json-as-html";
                    }
                },
                beforeSubmit: function (formData, $form) {
                    $form
                        .find(".buttons")[options.loadingIconInsertionMethod]('<span class="icon icon-loading"/>')
                        .find('input:submit').prop('disabled', true).end()
                        .find('.cancel').addClass('disabled').on('click', cancelOnClick);
                },
                success: function (data) {
                    var $data, json, messages, warnings;

                    if (typeof data == "object") {
                        // Returned data is JSON
                        json = data;
                    } else {
                        // Returned data is string
                        try {
                            // Try to parse string as JSON
                            json = $.parseJSON(data);
                        }
                        catch (e1) {
                            // Must be HTML
                            $data = $(data);
                            try {
                                // Check if the response only contains a textarea, if so it probably just contains JSON
                                if ($data.length == 1 && !$data.children().length && $data.is("textarea")) {
                                    json = $.parseJSON($data[0].value);
                                }
                            }
                            catch (e2) {}
                        }
                    }

                    if (json) {
                        $form.trigger("asyncform-success", [ json ]);

                        messages = json['messages'];
                        warnings = json['warnings'];
                        if (messages || warnings) {
                            $form.trigger("asyncform-notification", [ messages, warnings ]);
                        }

                        if (options.resetOnSuccess) {
                            $form
                                .find(".buttons").find('.icon-loading').remove().end()
                                .find('input:submit').prop('disabled', false).end()
                                .find('.cancel').removeClass('disabled').off('click', cancelOnClick);
                        }

                        options.success(json);
                    } else if ($data) {
                        $form.trigger("asyncform-replaced", [ $data ]);
                        // Returned data isn't JSON, isn't JSON in a textarea, assume it's straight HTML
                        if (!$data.is("form")) {
                            // Should have been a form, probably IE stripping the form element, will just replace form contents instead
                            $form.html($data);
                        } else {
                            $form.replaceWith($data);
                        }
                        if ($.isFunction(options.formReplaced)) {
                            options.formReplaced($data);
                        }
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $form.trigger("asyncform-error", [ jqXHR, textStatus, errorThrown ]);
                    if ($.isFunction(options.error)) {
                        options.error(jqXHR, textStatus, errorThrown);
                    } else {
                        var $dummy = $('<div />'), $stackTrace;

                        try {
                            $stackTrace = $(jqXHR.responseText).filter('pre');
                        }
                        catch (e) {}

                        if (!$stackTrace || !$stackTrace.length) {
                            $stackTrace = $('<p/>', { text: errorThrown });
                        }

                        AJS.messages.error($dummy, { title: "An unexpected error has occurred", body: $stackTrace.wrap('<div/>').parent().html(), closeable: false });
                        $form.replaceWith($dummy.children());
                    }
                }
            });
        },
        handleCancel = function (e) {
            e.preventDefault();
            options.cancel(e);
        };

    options = $.extend(defaults, options);

    if ($.isFunction(options.success)) { // No point in an async form if there's no success callback to handle a successful post
        options.$delegator.undelegate(options.target, "submit.asyncform").delegate(options.target, "submit.asyncform", handleSubmit);
    }

    if ($.isFunction(options.cancel)) {
        options.$delegator.undelegate(options.target + " .cancel", "click.asyncform").delegate(options.target + " .cancel", "click.asyncform", handleCancel);
    }
};

/**
 * Handles form input in dialogs
 * @param options
 *  - trigger       String - selector targeting the element that triggers the popup
 *  - dialogWidth   Number - dialog width
 *  - dialogHeight  Number - dialog height
 *  - success       Function - handles JSON response from successful form submission
 *  - cancel        Function - handles what to do when the cancel link is clicked
 *  - header        String - header for the dialog
 */
BAMBOO.simpleDialogForm = function (options) {
    var defaults = {
        trigger: null,
        dialogWidth: null,
        dialogHeight: null,
        success: null,
        cancel: null,
        header: null,
        help: null
    };
    options = AJS.$.extend(defaults, options);
    var $trigger,
        $loading = AJS.$('<span class="icon icon-loading aui-dialog-content-loading" />'),
        $formContainer = AJS.$('<div class="aui-dialog-content"/>').html($loading),
        dialog,
        setFocus = function () {
            var $firstError = $formContainer.find(":input:visible:enabled.errorField:first").focus();
            if (!$firstError.length) {
                $formContainer.find(":input:visible:enabled:first").focus();
            }
        },
        setupDialogContent = function (html) {
            $formContainer.html(html);
            setupForm($formContainer.find("form"));
            BAMBOO.asyncForm({
                $delegator: $formContainer,
                target: "form",
                success: function (data) {
                    if (AJS.$.isFunction(options.success)) {
                        options.success(data);
                    }
                    dialog.remove();
                    $formContainer.html($loading);
                },
                cancel: function (e) {
                    e.preventDefault();
                    if (AJS.$.isFunction(options.cancel)) {
                        options.cancel(e);
                    }
                    dialog.remove();
                    $formContainer.html($loading);
                },
                formReplaced: setupForm
            });
        },
        setupForm = function ($dialogForm) {
            if (options.help) {
                addHelp();
            }
            setFocus();
            BAMBOO.DynamicFieldParameters.syncFieldShowHide($dialogForm, false);
        },
        showDialog = function () {
            dialog = new AJS.Dialog({
                width: options.dialogWidth,
                height: options.dialogHeight,
                keypressListener: function (e) {
                    if (e.which == jQuery.ui.keyCode.ESCAPE) {
                        dialog.remove();
                        $formContainer.html($loading);
                    }
                }
            });
            var header = options.header ? options.header : $trigger.attr("title");
            if (header) {
                dialog.addHeader(header);
            }
            dialog.addPanel("", $formContainer);

            // $trigger.attr("data-dialog-href") won't be needed once we're on jQuery 1.4.3
            AJS.$.ajax({
                url: $trigger.attr("href") || $trigger.data("dialog-href") ||  $trigger.attr("data-dialog-href"),
                data: { 'bamboo.successReturnMode': 'json', decorator: 'nothing', confirm: true },
                success: setupDialogContent,
                cache: false
            });

            dialog.show();
        },
        addHelp = function () {
            return AJS.$('<div />', {
                'class': 'dialog-tip',
                html: options.help
            }).prependTo($formContainer.find('.buttons-container'));
        };

    if (options.trigger) {
        var namespace = "click";
        if (options.eventNamespace && options.eventNamespace.length) {
            namespace += "." + options.eventNamespace;
        }
        AJS.$(document).undelegate(options.trigger, namespace);
        AJS.$(document).delegate(options.trigger, namespace, function (e) {
            $trigger = AJS.$(this);
            e.preventDefault();
            showDialog();
        });
    } else {
        showDialog();
    }
};

/**
 * Displays confirmation dialog that is consistent in style with simpleDialogForm but with content
 * generated without additional server request.
 */
function simpleConfirmationDialog(dialogWidth, dialogHeight, content, header, submitLabel, cancelLabel, onSubmit, onCancel) {
    var confirmDialog = new AJS.BambooDialog({width: dialogWidth, height: dialogHeight, submitMode: "ajax"}),
            doSubmit = function(dialog)
            {
                if (AJS.$.isFunction(onSubmit)) {
                    onSubmit();
                }
                dialog.remove();
            },
            doCancel = function(dialog)
            {
                if (AJS.$.isFunction(onCancel))
                {
                    onCancel();
                }
                dialog.remove();
            };
    confirmDialog.addHeader(header);

    // @TODO a workaround to some bug... We should revisit this post AUI 2.0 upgrade
    confirmDialog.addPanel("nothing", "nothing");
    confirmDialog.addButton(submitLabel, doSubmit);
    confirmDialog.addCancel(cancelLabel, doCancel);

    confirmDialog.getCurrentPanel().html("<div id='simpleDialogForm'>" + content + "</div>");
    confirmDialog.show();
}

/**
 * General checkbox tree utilities.
 */
var checkboxTree = function() {
    return {
        DONT_ENABLE_PARENT_ON_ALL_CHILDREN_ENABLED : 1 << 0,
        DISABLE_CHILDREN_ON_PARENT_CHECKED : 1 << 1,
        /**
         * Cascade state of a parent checkbox to collection of children checkboxes.
         * @param jqParent    parent checkbox (jQuery object)
         * @param jqChildren  children checkboxes (jQuery object)
         */
        cascadeToChildren : function(jqParent, jqChildren, options) {
            if (jqParent.is(":checked")) {
                jqChildren.attr("checked", "checked");
            } else {
                jqChildren.removeAttr("checked");
            }
            if (options & this.DISABLE_CHILDREN_ON_PARENT_CHECKED) {
                if (jqParent.is(":checked")) {
                    jqChildren.attr("disabled", "disabled");
                } else {
                    jqChildren.removeAttr("disabled");
                }
            }
        },

        /**
         * Propagate state of children checkboxes to parent checkbox.
         * @param jqParent    parent checkbox (jQuery object)
         * @param jqChildren  children checkboxes (jQuery object)
         * @param options     options that modify default behavior
         */
        propagateToParent : function(jqParent, jqChildren, options) {
            if (jqChildren.is(":not(:checked)")) {
                jqParent.removeAttr("checked");
            } else {
                if (!(options & this.DONT_ENABLE_PARENT_ON_ALL_CHILDREN_ENABLED))
                {
                    jqParent.attr("checked", "checked");
                }
            }
        }
    };
}();

function enableShowSnapshotsForMaven2Dependencies(showAllSelector, showOnlySnapshotsSelector, tableSelector, hasSnapshots)
{
    AJS.$(document).ready(function() {
        var showAllLink = AJS.$(showAllSelector);
        var showOnlySnapshotsLink = AJS.$(showOnlySnapshotsSelector);
        var table = AJS.$(tableSelector);

        showAllLink.click(function() {
            showOnlySnapshotsLink.show();
            showAllLink.hide();
            AJS.$('.gav-tbody-releases').show();
        });

        showOnlySnapshotsLink.click(function() {
            showAllLink.show();
            showOnlySnapshotsLink.hide();
            AJS.$('.gav-tbody-releases').hide();
        });

        if (hasSnapshots) {
            showOnlySnapshotsLink.click();
        } else {
            showAllLink.hide();
            showOnlySnapshotsLink.hide();
        }
    });
}

function removeError(errorNumber)
{
    var removeErrorForm = window.opener.AJS.$('#removeErrorHiddenForm_' + errorNumber);
    removeErrorForm.submit();
    window.close();
}

function addAliasSubmitCallback(result) {
    AJS.$("select.selectAlias").append(AJS.$("<option />", { text: result.aliasName, selected: "selected", val: result.aliasId }))
                               .val(result.aliasId);
}

/**
 * Checks if any forms on the page need a submit on change hook.
 */
AJS.$(function($){
    $(".submitOnChange").change(function(){ $(this).closest("form").submit(); });
});

/**
 * Current Activity screen
 */
var CurrentActivity = {
    // Default options
    options: {
        contextPath: null,
        getBuildsUrl: null,
        viewAgentUrl: null,
        reorderBuildUrl: null,
        stopBuildUrl: null,
        stopDeploymentUrl: null,
        manageElasticInstancesUrl: null,
        emptyQueueText: null,
        emptyBuildingText: null,
        cancellingBuildText: null,
        cancelBuildText: null,
        cancelDeploymentText: null,
        queueOutOfDateText: null,
        canBuildElastically: null,
        canBuildElasticallyAdmin: null,
        fetchingBuildData: null,
        hasAdminPermission: false,
        caParent: null,
        buildingParent: null,
        queueParent: null,
        activityStream: null,
        agentSummary: null
    },
    updateTimeout: null, // ID of timeout which determines when the data will be next fetched from the server
    building: null, // jQuery object referring to the list holding the currently building builds (set on init)
    queue: null, // jQuery object referring to the list holding the queued builds (set on init)
    noBuilding: null, // jQuery object referring to the message shown when there are no currently building builds (set on init)
    noQueued: null, // jQuery object referring to the message shown when there are no queued builds (set on init)
    loadingBuilding: null, // jQuery object referring to the loading indicator shown while currently building data is being fetched the first time (set on init)
    loadingQueued: null, // jQuery object referring to the loading indicator shown while queue data is being fetched the first time (set on init)
    queueOutOfDate: null, // jQuery object referring to the message shown when the queue order has been updated remotely and is not reflected locally (set on init)
    updateTimestamp: null, // Timestamp (represented as milliseconds since the Unix epoch) that the builds were last updated
    isBeingSorted: false, // Is the queue currently being sorted?
    disabledStopHTML: '', // HTML to replace the stop button with if it's disabled (set on init)
    /**
     * Generates a nice, readable string of Agents that the Plan can build on
     * @param executableAgents - Array of Agent objects
     * @returns {String} A readable sentence containing the list of agents
     */
    generateBuildableAgentsText: function (executableAgents) {
        var agentNames = [];

        for (var i = 0; i < executableAgents.length; i++) {
            agentNames.push(executableAgents[i].name);
        }
        return "Can build on " + agentNames.join(", ");
    },
    generateListItem: function (queueItem) {
        if (queueItem.itemType == 'BUILD') {
            return CurrentActivity.generateBuildListItem(queueItem);
        }
        else {
            return CurrentActivity.generateDeploymentListItem(queueItem);
        }
    },
    /**
     * Generates the list item
     * @param deployment - Deployment object
     * @returns {Object} containing the list item or false if no list item is built (would require build.status to be something other than BUILDING or QUEUED)
     */
    generateDeploymentListItem: function(deployment)
    {
        var ca = CurrentActivity,
            o = ca.options,
            handle = o.hasAdminPermission ? '<span class="handle"></span>' : '',
            el = '';
        if (deployment.hasReadPermission) {
            var name = 'Deployment of ' + deployment.deploymentProjectName + ' &rsaquo; ' + _.escape(deployment.versionName) + ' to     ' + deployment.environmentName;
            var resultLink = '<a href="' + o.contextPath + '/deploy/viewDeploymentResult.action?deploymentResultId=' + deployment.resultId + '">' + name + '</a>'

            if (deployment.status == "BUILDING") {
                var buildAgentInfo = deployment.agent ? ' running on <a href="' + o.viewAgentUrl + '?agentId=' + deployment.agent.id + '" class="' + deployment.agent.type.toLowerCase() + '">' + deployment.agent.name + '</a>' : '';
                el = '<li id="b' + deployment.resultKey + '" class="buildRow"><div class="buildInfo">' + resultLink + buildAgentInfo + '</div><div class="message ' + deployment.messageType.toLowerCase() + '">' + deployment.messageText + '</div>';
                if (deployment.hasBuildPermission) {
                    var stopButtonHTML = (deployment.isBeingStopped) ? ca.disabledStopHTML : '<a href="' + o.stopDeploymentUrl + '?deploymentResultId=' + deployment.resultId + '" class="build-stop">' + widget.icons.icon({ type: 'build-stop', text: o.cancelDeploymentText, showTitle: true }) + '</a>';
                    el += '<ul class="buildActions"><li>' + stopButtonHTML + '</li></ul>'
                }
                el += '</li>';
            } else if (deployment.status == "QUEUED") {
                var title = deployment.executableAgents ? ' title="' + ca.generateBuildableAgentsText(deployment.executableAgents) + '"' : '',
                        handle = o.hasAdminPermission ? '<span class="handle"></span>' : '';

                el = '<li id="b' + deployment.resultKey + '" class="buildRow"><div class="buildInfo">' + handle + resultLink + '</div>';
                el += '<div class="message ' + deployment.messageType.toLowerCase() + '"' + title + '>' + deployment.messageText + '</div>'

                if (deployment.executableElasticImages || deployment.hasBuildPermission) {
                    el += '<ul class="buildActions">';
                    if (deployment.executableElasticImages) {
                        if (o.hasAdminPermission) {
                            el += '<li><a href="' + o.manageElasticInstancesUrl + '">' + widget.icons.icon({ type: 'elastic', text: o.canBuildElasticallyAdmin, showTitle: true }) + '</a></li>';
                        } else {
                            el += '<li>' + widget.icons.icon({ type: 'elastic-disabled', text: o.canBuildElastically, showTitle: true }) + '</li>';
                        }
                    }
                    if (deployment.hasBuildPermission) {
                        el += '<li><a href="' + o.stopDeploymentUrl + '?deploymentResultId=' + deployment.resultId + '" class="build-stop">' + widget.icons.icon({ type: 'build-stop', text: o.cancelDeploymentText, showTitle: true }) + '</a></li>'
                    }
                    el += '</ul>';
                }
                el += '</li>';
            }
        } else {
            el = '<li id="b' + deployment.resultKey + '" class="buildRow"><div class="buildInfo">' + _.escape(deployment.versionName) + '</div><span class="message ' + deployment.messageType.toLowerCase() + '">' + deployment.messageText + '</span></li>';
        }
       return (el.length == 0 ? false : AJS.$(el).data("item-type", "DEPLOYMENT"));
    },
    /**
     * Generates the list item
     * @param build - Build object
     * @returns {Object} containing the list item or false if no list item is built (would require build.status to be something other than BUILDING or QUEUED)
     */
    generateBuildListItem: function (build) {
        var ca = CurrentActivity,
            o = ca.options,
            el = "";

        if (build.hasReadPermission) {
            var masterName = build.isBranch ? build.planName.split(" - ", 2)[1] + ' &rsaquo; <span class="aui-icon aui-icon-small aui-iconfont-devtools-branch"/> ' : "";
            var buildLink = '<a href="' + o.contextPath + '/browse/' + build.planResultKey + '/">' + build.projectName + ' &rsaquo; ' + masterName + build.chainName + ' &rsaquo; #' + build.buildNumber + '</a> &rsaquo; <a href="' + o.contextPath + '/browse/' + build.buildResultKey + '/">' + build.jobName + '</a>';

            if (build.status == "BUILDING") {
                var msgHtml = build.messageType == "PROGRESS" ? '<div class="progress-bar" style="width:' + build.percentageComplete + '%;"></div><div class="progress-text">' + build.messageText + '</div>' : build.messageText;
                var buildAgentInfo = build.agent ? ' building on <a href="' + o.viewAgentUrl + '?agentId=' + build.agent.id + '" class="' + build.agent.type.toLowerCase() + '">' + build.agent.name + '</a>' : '';
                el = '<li id="b' + build.buildResultKey + '" class="buildRow"><div class="buildInfo">' + buildLink + buildAgentInfo + '</div><div class="message ' + build.messageType.toLowerCase() + '">' + msgHtml + '</div>'; //Current Activity
                if (build.hasBuildPermission) {
                    var stopButtonHTML = (build.isBeingStopped) ? ca.disabledStopHTML : '<a href="' + o.stopBuildUrl + '?planResultKey=' + build.buildResultKey + '" class="build-stop">' + widget.icons.icon({ type: 'build-stop', text: o.cancelBuildText, showTitle: true }) + '</a>';
                    el += '<ul class="buildActions"><li>' + stopButtonHTML + '</li></ul>';
                }
                el += '</li>';
            } else if (build.status == "QUEUED") {
                var title = build.executableAgents ? ' title="' + ca.generateBuildableAgentsText(build.executableAgents) + '"' : '',
                    handle = o.hasAdminPermission ? '<span class="handle"></span>' : '';
                el = '<li id="b' + build.buildResultKey + '" class="buildRow"><div class="buildInfo">' + handle + buildLink + '</div><div class="message ' + build.messageType.toLowerCase() + '"' + title + '>' + build.messageText + '</div>';  //Current Activity
                if (build.executableElasticImages || build.hasBuildPermission) {
                    el += '<ul class="buildActions">';
                    if (build.executableElasticImages) {
                        if (o.hasAdminPermission) {
                            el += '<li><a href="' + o.manageElasticInstancesUrl + '">' + widget.icons.icon({ type: 'elastic', text: o.canBuildElasticallyAdmin, showTitle: true }) + '</a></li>';
                        } else {
                            el += '<li>' + widget.icons.icon({ type: 'elastic-disabled', text: o.canBuildElastically, showTitle: true }) + '</li>';
                        }
                    }
                    if (build.hasBuildPermission) {
                        el += '<li><a href="' + o.stopBuildUrl + '?planResultKey=' + build.buildResultKey + '" class="build-stop">' + widget.icons.icon({ type: 'build-stop', text: o.cancelBuildText, showTitle: true }) + '</a></li>'
                    }
                    el += '</ul>';
                }
                el += '</li>';
            }
        } else {
            el = '<li id="b' + build.buildResultKey + '" class="buildRow"><div class="buildInfo">' + build.planName + '</div><span class="message ' + build.messageType.toLowerCase() + '">' + build.messageText + '</span></li>';
        }
        return (el.length == 0 ? false : AJS.$(el).data("item-type", "BUILD"));
    },
    /**
     * Checks if an activity stream is available, and if it is (and there are no activity stream comment forms open -
     * which would indicate the user is probably in the middle of adding a comment) then trigger a refresh.
     */
    updateActivityStream: function () {
        var o = CurrentActivity.options;

        if (o.activityStream && AJS.$(".activity-item-comment-form:visible", document.getElementById("feedContainer-" + o.activityStream.feedId)).length == 0) {
            o.activityStream.populateFeed();
        }
    },
    /**
     * Checks the time the build was last updated with the time the last data was retrieved.
     * Removes the build if it's older than the last update.
     * @param li - List item containing the build
     * @returns {Boolean} indicating whether the build was removed or not
     */
    checkLastUpdated: function (li) {
        var b = AJS.$(li);

        if (b.data("lastUpdated") < CurrentActivity.updateTimestamp) {
            b.remove();
            return true;
        } else {
            return false;
        }
    },
    /**
     * Checks if build lists are empty and if so, hide the list and display a message, otherwise show the list and hide the message.
     */
    checkListsHaveBuilds: function () {
        var ca = CurrentActivity;

        if (ca.building.children().length == 0) {
            ca.building.hide();
            ca.noBuilding.show();
        } else {
            ca.building.show();
            ca.noBuilding.hide();
        }
        if (ca.queue.children().length == 0) {
            ca.queue.hide();
            ca.noQueued.show();
            // If queue is empty but "queue is out-of-date" message is being displayed then hide the message and re-enable sorting
            if (ca.queueOutOfDate.is(":visible")) {
                ca.queue.sortable("enable");
                ca.queueOutOfDate.hide();
            }
        } else {
            ca.queue.show();
            ca.noQueued.hide();
        }
    },
    /**
     * Checks if current activity container exists and is in DOM
     * @returns {Boolean} indicating whether the container exists in the DOM
     */
    isCurrentActivityPresent: function () {
        var o = CurrentActivity.options;

        return (!o.caParent || !o.caParent.length || !o.caParent.parent().length);
    },
    /**
     * Retrieves the build JSON from the server and adds/removes/changes builds in the currently building and queue as needed.
     * @param callback - Allows the ability to execute a callback once the update has completed
     */
    updateBuilds: function (callback) {
        var ca = CurrentActivity,
            o = ca.options;

        ca.updateTimestamp = (new Date()).getTime();
        // Get builds from API
        AJS.$.ajax({
            url: o.getBuildsUrl,
            dataType: 'json',
            cache: false,
            success: function (json) {
                if (ca.isCurrentActivityPresent()) {
                    return false;
                }

                // If a callback was supplied to updateBuilds, fire it
                if (callback && AJS.$.isFunction(callback)) {
                    callback.call();
                }
                // Update agent summary text if available
                if (o.agentSummary) {
                    o.agentSummary.text(json.agentSummary);
                }
                // Go through each build returned and either update or insert as required
                AJS.$.each(json.builds, function () {
                    var build = AJS.$("#b" + this.buildResultKey),
                        msg, progress, messageType, stopButton;

                    if (build.length > 0) { // Check if the build already exists in building/queue
                        if (this.status == "BUILDING") {
                            // Check if build has started, if so move to building
                            if (build.closest(".buildContainer")[0] == o.queueParent[0]) {
                                build.remove();
                                build = ca.generateListItem(this).appendTo(ca.building);
                                progress = AJS.$(".progress", build[0]);
                                if (progress.length > 0) {
                                    progress.progressBar();
                                }
                            } else {
                                msg = AJS.$(".message", build[0]);
                                messageType = this.messageType.toLowerCase();

                                if (messageType == "progress" && msg.hasClass(messageType)) {
                                    msg.progressBar("option", { value: this.percentageComplete, text: this.messageText });
                                } else if (messageType == "progress") {
                                    msg.attr("class", "message").progressBar({ value: this.percentageComplete, text: this.messageText });
                                } else {
                                    if (msg.hasClass("progress")) {
                                        msg.progressBar("destroy");
                                    }
                                    if (!msg.hasClass(messageType)) {
                                        msg.attr("class", "message " + messageType).text(this.messageText);
                                    } else {
                                        msg.text(this.messageText);
                                    }
                                }
                                if (this.hasBuildPermission && this.isBeingStopped) {
                                    stopButton = AJS.$(".build-stop", build[0]);
                                    if (stopButton.length > 0) {
                                        stopButton.replaceWith(ca.disabledStopHTML);
                                    }
                                }
                            }
                        } else if (this.status == "QUEUED") {
                            msg = AJS.$(".message", build[0]).text(this.messageText).attr("title", (this.executableAgents ? ca.generateBuildableAgentsText(this.executableAgents) : null));
                            if (!msg.hasClass(this.messageType.toLowerCase())) {
                                msg.attr("class", "message " + this.messageType.toLowerCase());
                            }
                        }
                    } else {
                        if (this.status == "BUILDING") {
                            build = ca.generateListItem(this).appendTo(ca.building);
                            progress = AJS.$(".progress", build[0]);
                            if (progress.length > 0) {
                                progress.progressBar();
                            }
                        } else if (this.status == "QUEUED") {
                            build = ca.generateListItem(this).appendTo(ca.queue);
                        }
                    }
                    // Check if queue order is correct and reorder if required
                    if (!ca.isBeingSorted && typeof(this.queueIndex) != "undefined" && this.queueIndex != build.prevAll().length) {
                        build.insertBefore(ca.queue.children("li:eq(" + this.queueIndex + ")"));
                    }
                    build.data("lastUpdated", ca.updateTimestamp);
                });

                // Clean up builds not returned in JSON
                var numRemoved = 0;
                ca.building.children().each(function () {
                    if (ca.checkLastUpdated(this)) { numRemoved++; }
                });
                ca.queue.children().each(function () {
                    if (ca.checkLastUpdated(this)) { numRemoved++; }
                });
                if (numRemoved > 0) { ca.updateActivityStream(); }

                if (o.hasAdminPermission) {
                    // Refresh sorting
                    ca.queue.sortable("refresh");
                }

                ca.checkListsHaveBuilds();

                // Clear timeout to ensure we don't have multiple running
                clearTimeout(ca.updateTimeout);

                ca.updateTimeout = setTimeout(ca.updateBuilds, 10000);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (ca.isCurrentActivityPresent()) {
                    return false;
                }

                // Clear timeout to ensure we don't have multiple running
                clearTimeout(ca.updateTimeout);

                // Error occurred when doing the update, try again in 30 sec, making sure the callback is passed so that it will actually get executed when it finally succeeds
                ca.updateTimeout = setTimeout(function () { ca.updateBuilds(callback); }, 30000);
            }
        });
    },
    /**
     * Strips a build list item's id down to a build result key
     * @param buildListItemID - String containing the build list item's id - eg. bBAM-FUNC-1234
     * @returns {String} containing the build result key - eg. BAM-FUNC-1234
     */
    buildListItemIDToBuildResultKey: function (buildListItemID) {
        return buildListItemID.substr(1);
    },
    /**
     * Initialisation for the Current Activity
     * @param options - Object containing the options to overwrite our defaults
     */
    init: function (options) {
        var ca = CurrentActivity,
            o = ca.options;

        AJS.$.extend(o, options);

        ca.building = AJS.$("<ul/>").appendTo(o.buildingParent).hide();
        ca.queue = AJS.$("<ul/>").appendTo(o.queueParent).hide();
        ca.noBuilding = AJS.$("<p>" + o.emptyBuildingText + "</p>").appendTo(o.buildingParent).hide();
        ca.noQueued = AJS.$("<p>" + o.emptyQueueText + "</p>").appendTo(o.queueParent).hide();
        ca.queueOutOfDate = AJS.$("<p>" + o.queueOutOfDateText + "</p>").insertBefore(ca.queue).hide();
        ca.loadingBuilding = AJS.$('<p class="loading">' + o.fetchingBuildData + '</p>').appendTo(o.buildingParent);
        ca.loadingQueued = AJS.$('<p class="loading">' + o.fetchingBuildData + '</p>').appendTo(o.queueParent);
        ca.disabledStopHTML = widget.icons.icon({ type: 'build-stop-disabled', text: o.cancellingBuildText, showTitle: true });

        clearTimeout(ca.updateTimeout);
        ca.updateTimestamp = null;

        o.caParent.delegate(".buildActions a.build-stop", "click", function (e) {
            var el = AJS.$(this),
                li = el.closest(".buildRow");
            AJS.$.post(this.href, function () {
                // Only remove from the queue immediately - currently building builds may take a while to stop and clean up - let the next updateBuilds() that runs clean it up
                if (li.closest(".buildContainer")[0] == o.queueParent[0]) {
                    li.remove();
                }
                ca.checkListsHaveBuilds();
            });
            el.replaceWith(ca.disabledStopHTML);
            e.preventDefault();
        });
        AJS.$("a", ca.queueOutOfDate[0]).click(function (e) {
            clearTimeout(ca.updateTimeout);
            ca.queue.empty().sortable("enable");
            AJS.$(this).parent().hide();
            ca.updateBuilds();
            ca.updateActivityStream();
            e.preventDefault();
        });
        if (o.hasAdminPermission) {
            ca.queue.sortable({
                handle: "span.handle",
                update: function (event, ui) {
                    var self = AJS.$(ui.item),
                        resultKey = ca.buildListItemIDToBuildResultKey(self.attr("id")),
                        checkListItemExists = function ($el) {
                            if ($el.length > 0) {
                                return ca.buildListItemIDToBuildResultKey($el.attr("id"));
                            } else {
                                return "";
                            }
                        },
                        prevResultKey = checkListItemExists(self.prev()),
                        itemType = self.data("item-type");
                    AJS.$.post(o.reorderBuildUrl,
                        { resultKey: resultKey, prevResultKey: prevResultKey, itemType: itemType },
                        function (json) {
                            // If an error is returned show the queue out of date message. The next update will restore the correct queue order.
                            if (json.status == "ERROR") {
                                ca.queueOutOfDate.show();
                                ca.queue.sortable("disable");
                            }
                        }, "json");
                },
                start: function (event, ui) {
                    ca.isBeingSorted = true;
                },
                stop: function (event, ui) {
                    ca.isBeingSorted = false;
                }
            });
        }
        ca.updateBuilds(function () {
            ca.loadingBuilding.hide();
            ca.loadingQueued.hide();
        });
    }
};

/**
 * Agent Manager dropdown
 */
var AgentManager = {
    // Default options
    options: {
        contextPath: null,
        getAgentsUrl: null,
        enableAgentUrl: null,
        disableAgentUrl: null,
        enableAllAgentsUrl: null,
        disableAllAgentsUrl: null,
        viewAgentUrl: null,
        enableAgentText: null,
        disableAgentText: null,
        enableAllAgentsText: null,
        disableAllAgentsText: null,
        onlineAgentsText: null,
        defaultRemoteAgentSummaryText: null,
        onlineOnly: false,
        includeRemoteAgentSummary: false,
        triggerId: null,
        dedicatedLozenge: null
    },
    $agentList: null, // jQuery object referring to the list holding the agents
    $dialog: null, // jQuery object referring to the AUI Inline Dialog
    $remoteAgentSummary: null, // jQuery object referring to the paragraph containing the remote agent summary text
    /**
     * Generates the list item
     * @param agent - Agent object
     * @returns {Object} containing the list item or false if no list item is built
     */
    generateListItem: function (agent) {
        var am = AgentManager,
            o = am.options,
            el = "";
        el = '<li class="' + agent.type.toLowerCase() + ' ' + (agent.enabled ? "enabled" : "disabled") + '"><h3><a href="' + o.viewAgentUrl + '?agentId=' + agent.id + '">' + agent.name + '</a>' + (agent.isDedicated ? ' ' + o.dedicatedLozenge : '') + '</h3><span>' + (agent.agentStatus == "Building" ? agent.agentStatus + ' - <a href="' + o.contextPath + agent.buildLogUrl + '">' + agent.buildDisplayName + '</a>' : agent.agentStatus) + '</span> <button class="aui-button ' + (agent.enabled ? "disable" : "enable") + '">' + (agent.enabled ? o.disableAgentText : o.enableAgentText) + '</button></li>';
        return (el.length == 0 ? false : AJS.$(el).data("agentId", agent.id));
    },
    /**
     * Updates the list of agents
     * @param $contents - jQuery element of the Inline Dialog's contents
     * @param $trigger - jQuery element that is triggering the popup
     * @param doShowPopup - function to display the popup
     */
    updateAgents: function ($contents, $trigger, doShowPopup) {
        var am = AgentManager,
            o = am.options;
        AJS.$.ajax({
            url: o.getAgentsUrl,
            data: { onlineOnly: o.onlineOnly, includeRemoteAgentSummary: o.includeRemoteAgentSummary },
            dataType: 'json',
            cache: false,
            success: function (json) {
                if (o.includeRemoteAgentSummary && json.remoteAgentSummary) {
                    am.$remoteAgentSummary.html(json.remoteAgentSummary);
                } else if (o.includeRemoteAgentSummary) {
                    am.$remoteAgentSummary.html(o.defaultRemoteAgentSummaryText);
                }
                am.$agentList.empty();
                AJS.$.each(json.agents, function () {
                    am.$agentList.append(am.generateListItem(this));
                });
                if (doShowPopup) {
                    doShowPopup();
                }
            }
        });
    },
    /**
     * Initialisation for the Agent Manager
     * @param options - Object containing the options to overwrite our defaults
     */
    init: function (options) {
        var am = AgentManager,
            o = am.options;

        // Don't init if already created
        if (am.$dialog) { return false; }

        AJS.$.extend(o, options);

        am.$dialog = AJS.InlineDialog("#" + o.triggerId, o.triggerId, am.updateAgents, {
            onHover: true,
            width: 400,
            offsetX: 0,
            offsetY: 3,
            cacheContent: false,
            useLiveEvents: true
        });
        var $contents = am.$dialog.find(".contents").addClass("agentManager");
        am.$agentList = AJS.$('<ul />').appendTo($contents).before('<h2>' + o.onlineAgentsText + '</h2>');
        if (o.includeRemoteAgentSummary) {
            am.$remoteAgentSummary = AJS.$('<p>' + o.defaultRemoteAgentSummaryText + '</p>').insertBefore(am.$agentList);
        }
        var $buttons = AJS.$('<div class="aui-buttons"></div>').appendTo($contents);
        AJS.$('<button class="aui-button">' + o.enableAllAgentsText + '</button>').appendTo($buttons).click(function () {
            var el = AJS.$(this);
            el.attr("disabled", "disabled");
            AJS.$.post(o.enableAllAgentsUrl, function () {
                el.removeAttr("disabled");
                am.updateAgents();
            });
        });
        AJS.$('<button class="aui-button">' + o.disableAllAgentsText + '</button>').appendTo($buttons).click(function () {
            var el = AJS.$(this);
            el.attr("disabled", "disabled");
            AJS.$.post(o.disableAllAgentsUrl, function () {
                el.removeAttr("disabled");
                am.updateAgents();
            });
        });
        // FF not firing buttons on click for some reason, mouseup is okay though?!!
        var dialogId = am.$dialog.attr("id");
        AJS.$("#" + dialogId + " button.enable").live("mouseup", function () {
            var el = AJS.$(this),
                li = el.closest("li");
            var agentId = li.data("agentId");
            el.attr("disabled", "disabled");
            AJS.$.post(o.enableAgentUrl, { agentId: agentId }, function () {
                el.text(o.disableAgentText).attr("class", "aui-button disable").removeAttr("disabled").parent().removeClass("disabled");
            });
        });
        AJS.$("#" + dialogId + " button.disable").live("mouseup", function () {
            var el = AJS.$(this),
                li = el.closest("li");
            var agentId = li.data("agentId");
            el.attr("disabled", "disabled");
            AJS.$.post(o.disableAgentUrl, { agentId: agentId }, function () {
                el.text(o.enableAgentText).attr("class", "aui-button enable").removeAttr("disabled").parent().addClass("disabled");
            });
        });
    }
};

var SelectionActions = function() {
    return {
        init: function (formId) {
            registerSelectionActions();

            function registerSelectionActions() {
                AJS.$("span[selector='"+formId+"_all']").click( function() {
                    clearSelectionStatus();

                    getSelectAllWarning().show();
                    getAllPagesSelectedInfo().hide();

                    getAllCheckBoxes("").attr("checked", "checked");
                });
                AJS.$("span[selector='"+formId+"_none']").click( function() {
                    clearSelectionStatus();
                });
                AJS.$("span[selector='"+formId+"_disabled']").click( function() {
                    clearSelectionStatus();
                    getAllCheckBoxes("[class~='selectorAgentEnabled_false']").attr("checked", "checked");
                });
                AJS.$("span[selector='"+formId+"_idle']").click( function() {
                    clearSelectionStatus();
                    getAllCheckBoxes("[class~='selectorAgentStatus_Idle']").attr("checked", "checked");
                });
                AJS.$("span[selector='"+formId+"_allPages']").click( function() {
                    setCompleteContentSelected(true);
                    getSelectAllWarning().hide();
                    getAllPagesSelectedInfo().show();
                });
            }

            function getAllCheckBoxes(selector) {
                return AJS.$("input:checkbox.selectorAgentType_"+formId+"[name='selectedAgents']"+selector);
            }

            function setCompleteContentSelected(newValue) {
                AJS.$('.'+formId+'_completeContentSelected').val(newValue);
            }

            function clearSelectionStatus() {
                AJS.$('.'+formId+'_paginatedWarning').hide();
                getAllCheckBoxes("").removeAttr("checked");
                setCompleteContentSelected(false);
            }

            function getSelectAllWarning() {
                return AJS.$('.'+formId+'_paginatedSelectAllWarning');
            }

            function getAllPagesSelectedInfo() {
                return AJS.$('.'+formId+'_paginatedAllPagesSelected');
            }
        }
    };
}();

/**
 * Generic selection in table control without support for pagination.
 * Selectors need to have 2 attributes :
 *  - data-selector-id (must match name of the checkbox group)
 *  - data-selector-type (ALL, NONE or custom selector that will be match by discriminators)
 *
 * Checkboxes can specify a comma-separated list of discriminators for selection in
 * the 'data-selector-discriminator' attribute.
 *
 */
var GenericSelectionActions = function($) {
    var SELECT_ALL = "ALL", DESELECT_ALL = "NONE";

    return {

        init: function (formId, checkboxName) {
            registerSelectionActions();

            function registerSelectionActions() {
                var $form = $(BAMBOO.escapeIdToJQuerySelector("#" + formId));
                if ($form.length === 0) {
                    return;
                }
                $form.find("span[data-selector-id='"+checkboxName+"']").click(function() {
                        discriminator = $(this).data("selectorType");
                    applyToCheckboxes($form, discriminator);
                });
            }

            function applyToCheckboxes($inForm, discriminator) {
                $inForm.find("input:checkbox").each(function() {
                    var $this = $(this);
                    if (matchesDiscriminator($this, discriminator)) {
                        $this.attr("checked", "checked");
                    } else {
                        $this.removeAttr("checked");
                    }
                });
            }

            function matchesDiscriminator($checkbox, selector) {
                var found = false;
                if (selector === SELECT_ALL) {
                    return true;
                } else if (selector === DESELECT_ALL) {
                    return false;
                } else {
                    $.each($checkbox.data("selectorDiscriminator").split(","), function(index, value) {
                        if (value === selector) {
                            found = true;
                            return true;
                        }
                    });
                    return found;
                }
            }
        }
    };
}(AJS.$);

var BulkSelectionActions = function() {
    return {
        init: function (formId) {
            registerSelectionActions();

            function registerSelectionActions() {
                AJS.$("span[selector='bulk_selector_all']").click( function() {
                    clearSelectionStatus();
                    getAllCheckBoxes("").attr("checked", "checked");
                });
                AJS.$("span[selector='bulk_selector_none']").click( function() {
                    clearSelectionStatus();
                });
                AJS.$("span[selector='bulk_selector_plans']").click( function() {
                    clearSelectionStatus();
                    getAllCheckBoxes("Plan").attr("checked", "checked");
                });
                AJS.$("span[selector='bulk_selector_jobs']").click( function() {
                    clearSelectionStatus();
                    getAllCheckBoxes("Job").attr("checked", "checked");
                });
            }

            function getAllCheckBoxes(selector) {
                return AJS.$("input:checkbox.bulk"+selector);
            }

            function setCompleteContentSelected(newValue) {
                AJS.$('.'+formId+'_completeContentSelected').val(newValue);
            }

            function clearSelectionStatus() {
                getAllCheckBoxes("").removeAttr("checked");
                setCompleteContentSelected(false);
            }
        }
    };
}();

var BulkSubtreeSelectionActions = function() {
    return {
        init: function (formId, enableProjectCheckbox) {
            registerSelectionActions(enableProjectCheckbox);

            function registerSelectionActions(enableProjectCheckbox) {
                AJS.$("span[selector='bulk_selector_sub_"+formId+"']").click( function() {
                    clearSelectionStatus();
                    getAllCheckBoxes(formId).attr("checked", "checked");
                });
                AJS.$("span[selector='bulk_selector_sub_none_"+formId+"']").click( function() {
                    clearSelectionStatus();
                });
                AJS.$("span[selector='bulk_selector_sub_plans_"+formId+"']").click( function() {
                    clearSelectionStatus();
                    getAllCheckBoxes("Plan" + formId).attr("checked", "checked");
                });
                AJS.$("span[selector='bulk_selector_sub_jobs_"+formId+"']").click( function() {
                    clearSelectionStatus();
                    getAllCheckBoxes("Job" + formId).attr("checked", "checked");
                });

                if (enableProjectCheckbox) {
                    AJS.$("#checkbox_"+formId).change( function() {
                        var val = AJS.$(this).is(":checked");
                        clearSelectionStatus();
                        if (val) {
                            getAllCheckBoxes(formId).attr("checked", "checked");
                        }
                    });
                }
            }

            function getAllCheckBoxes(selector) {
                return AJS.$("input:checkbox.bulk"+selector);
            }

            function clearSelectionStatus() {
                getAllCheckBoxes(formId).removeAttr("checked");
            }
        }
    };
}();

var ConfigurableSelectionActions = function() {
    return {
        init: function (formId) {
            var formIdSelector = formId.replace(/([\.:])/g, "\\$1");
            registerSelectionActions();

            function registerSelectionActions() {
                AJS.$("span[selector='"+formId+"_all']").click( function() {
                    getAllCheckBoxes("").attr("checked", "checked");
                });
                AJS.$("span[selector='"+formId+"_none']").click( function() {
                    clearSelectionStatus();
                });

                AJS.$("span[selector^='"+formId+"_'][selector!='"+formId+"_none'][selector!='"+formId+"_all']").each(function () {
                    var span = AJS.$(this),
                        selector = span.attr("selector").substring(formId.length + 1);
                    span.click( function() {
                        clearSelectionStatus();
                        getAllCheckBoxes("[class~='selector_"+selector+"_true']").attr("checked", "checked");
                    });
                });
            }

            function getAllCheckBoxes(selector) {
                return AJS.$("input:checkbox.selectorScope_"+formIdSelector+selector);
            }

            function clearSelectionStatus() {
                getAllCheckBoxes("").removeAttr("checked");
            }
        }
    };
}();

/**
 * Live Activity for Plans
 */
var LiveActivity = function ($) {
    var opts = {
        planKey: null,
        container: null,
        getBuildsUrl: null,
        getResultUrl: null,
        getChangesUrl: null,
        queueEmptyText: null,
        cancellingBuildText: null,
        noAdditionalInfoText: null,
        defaultIssueIconUrl: null,
        defaultIssueType: null,
        slideSpeed: 600,
        templates: {
            buildListItemTemplate: null,
            buildingOnTemplate: null,
            buildMessageTemplate: null,
            jiraIssueTemplate: null,
            codeChangeTemplate: null,
            codeChangeChangesetLinkTemplate: null,
            codeChangeChangesetDisplayTemplate: null,
            currentStageTemplate: null,
            toggleDetailsButton: AJS.template('<span class="toggle-details"></span>')
        }
    },
    $buildList, // jQuery object referring to the list holding the builds
    $noBuilds, // jQuery object referring to the message that shows when there are no builds
    disabledStopHTML, // HTML fragment that replaces the stop button when a user clicks it (so it can't be clicked multiple times)
    toggleDetailsHTML, // HTML fragment inserted to enable the user to toggle the display of additional information
    /**
     * Checks if build list is empty and if so, hide the list and display a message, otherwise show the list and hide the message.
     */
    checkListHasBuilds = function () {
        if ($buildList.children().length == 0) {
            $buildList.hide();
            $noBuilds.show();
        } else {
            $buildList.show();
            $noBuilds.hide();
        }
    },
    updateTimeout, // ID of timeout which determines when the data will be next fetched from the server
    updateTimestamp, // Timestamp (represented as milliseconds since the Unix epoch) that the builds were last updated
    /**
     * Retrieves the build JSON from the server and adds/removes/changes builds in the build list as needed.
     */
    update = function () {
        // Otherwise switching to history tab results in undefined behaviour
        if($('#liveActivity').length == 0) return;
        updateTimestamp = (new Date()).getTime();
        $.ajax({
            url: opts.getBuildsUrl,
            data: { planKey: opts.planKey },
            dataType: "json",
            cache: false,
            success: function (json) {
                // Go through each build returned and either update or insert as required
                $.each(json.builds, function () {
                    var $build = $("#b" + this.buildResultKey),
                        messageType = this.messageType.toLowerCase(),
                        status = this.status.toLowerCase();
                    if ($build.length > 0) { // Check if the build already exists in list
                        var $msg = $(".message", $build[0]),
                            $stageInfo = $(".stage-info", $build[0]),
                            $agentInfo = $(".agent-info", $build[0]);
                        if (messageType == "progress" && $msg.hasClass(messageType)) {
                            $msg.progressBar("option", { value: this.percentageComplete, text: this.messageText });
                        } else if (messageType == "progress") {
                            $msg.attr("class", "message").progressBar({ value: this.percentageComplete, text: this.messageText });
                        } else {
                            if ($msg.hasClass("progress")) {
                                $msg.progressBar("destroy");
                            }
                            if (!$msg.hasClass(messageType)) {
                                $msg.attr("class", "message " + messageType).text(this.messageText);
                            } else {
                                $msg.text(this.messageText);
                            }
                        }
                        if (status == "building") {
                            if ($agentInfo.length == 0 && this.agent != null) {
                                var buildingOnHTML = status == "building" ? AJS.template.load(opts.templates.buildingOnTemplate).fill({ agentId: this.agent.id, agentType: this.agent.type.toLowerCase(), agentName: this.agent.name }).toString() : "";
                                $(".build-description", $build[0]).append(buildingOnHTML);
                            }
                            if (this.stage != null && $stageInfo.length > 0) {
                                var currentStageHTML = (status == "building" ? AJS.template.load(opts.templates.currentStageTemplate).fill({ stageName: this.stage.name, stageNumber: this.stage.number, totalStages: this.stage.totalStages }).toString() : "");
                                $stageInfo.html($.trim(currentStageHTML));
                            }
                        }
                        if (!$build.hasClass(status)) {
                            $build.removeClass(status == "building" ? "queued" : "building").addClass(status);
                        }
                    } else {
                        var buildingOnHTML = (status == "building" && this.agent != null) ? AJS.template.load(opts.templates.buildingOnTemplate).fill({ agentId: this.agent.id, agentType: this.agent.type.toLowerCase(), agentName: this.agent.name }).toString() : "",
                            currentStageHTML = (status == "building" && this.stage != null) ? AJS.template.load(opts.templates.currentStageTemplate).fill({stageName: this.stage.name, stageNumber: this.stage.number, totalStages: this.stage.totalStages }).toString() : "",
                            buildMessageHTML = AJS.template.load(opts.templates.buildMessageTemplate).fill({ type: messageType, text: this.messageText }).toString(),
                            listItemHTML = AJS.template.load(opts.templates.buildListItemTemplate).fill({
                                buildResultKey: this.buildResultKey,
                                cssClass: status,
                                planKey: this.planKey
                            }).fillHtml({
                                buildingOn: buildingOnHTML,
                                triggerReason: this.triggerReason,
                                currentStage: currentStageHTML,
                                buildMessage: buildMessageHTML
                            }).toString();
                        $build = $(listItemHTML).appendTo($buildList);
                        var $msg = $(".message", $build[0]);
                        $build.addClass("collapsed").prepend(toggleDetailsHTML);
                        $(".additional-information", $build).hide();
                        if (messageType == "progress") {
                            $msg.progressBar({ value: this.percentageComplete, text: this.messageText });
                        }
                    }
                    $build.data("lastUpdated", updateTimestamp);
                });

                // Clean up builds not returned in JSON
                var planResultKeys = [];
                $buildList.children().each(function () {
                    var b = $(this);
                    if (b.data("lastUpdated") < updateTimestamp) {
                        b.fadeOut(500, function () {
                            $(this).remove();
                            checkListHasBuilds();
                        })
                        planResultKeys.push(b.attr('id').substring(1));
                    }
                });
                if (planResultKeys.length > 0) {
                    // Pet peeve - reverse mutates in place :(
                    planResultKeys.reverse();
                    $.ajax({
                        url: opts.getResultUrl,
                        data: { planResultKeys: planResultKeys },
                        success: function (result) {
                            $('.buildResultsNone').hide();
                            $('#buildResultsTable').show().find('tbody').prepend($(result).find('tr'));
                        }
                    });
                }

                checkListHasBuilds();

                // Update again in 5 seconds if something is going on, later if everything is calm
                updateTimeout = setTimeout(update, json.builds && json.builds.length ? 5000 : 15000);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                // Error occurred when doing the update, try again in 30 sec
                updateTimeout = setTimeout(update, 30000);
            }
        });
    };
    return {
        /**
         * Initialisation for the Live Activity
         * @param options - Object containing the options to overwrite our defaults
         */
        init: function (options) {
            $.extend(true, opts, options);
            disabledStopHTML = widget.icons.icon({ type: 'build-stop-disabled', text: opts.cancellingBuildText, showTitle: true });
            if (opts.templates.toggleDetailsButton) {
                toggleDetailsHTML = opts.templates.toggleDetailsButton.toString();
            }

            $buildList = $("> ul", opts.container);
            if ($buildList.length == 0) {
                $buildList = $("<ul />").hide().prependTo(opts.container);
            } else {
                $buildList.children().addClass("collapsed").prepend(toggleDetailsHTML);
                $(".additional-information", $buildList).hide();
            }
            $noBuilds = $("> p", opts.container);
            if ($noBuilds.length == 0) {
                $noBuilds = $("<p>" + opts.queueEmptyText + "</p>").hide().appendTo(opts.container);
            }

            $("#" + opts.container.attr("id") + " a.build-stop").live("click", function (e) {
                var el = $(this),
                    li = el.closest("li");
                $.post(this.href, function () {
                    // Only remove from the queue immediately - currently building builds may take a while to stop and clean up - let the next updateBuilds() that runs clean it up
                    if (li.hasClass("queued")) {
                        li.fadeOut(500, function () {
                            $(this).remove();
                            checkListHasBuilds();
                        })
                    }
                });
                el.replaceWith(disabledStopHTML);
                e.preventDefault();
            });

            $("#" + opts.container.attr("id") + " .collapsed .toggle-details").live("click", function (e) {
                var el = $(this),
                    li = el.closest("li"),
                    additionalInfo = $(".additional-information", li[0]),
                    buildResultKey = li.attr("id").substring(1);

                if (!additionalInfo.data("data-retrieved")) {
                    li.removeClass("collapsed");
                    $.ajax({
                        url: opts.getChangesUrl + buildResultKey,
                        data: {
                            expand: "jiraIssues,vcsRevisions.vcsRevision.changes.change"
                        },
                        dataType: "json",
                        contentType: "application/json",
                        success: function (json) {
                            var issues = "";
                            if (json.jiraIssues && json.jiraIssues.size > 0) {
                                $.each(json.jiraIssues.issue, function () {
                                    if (this.url && this.url.href && this.key && this.summary) {
                                        issues += AJS.template.load(opts.templates.jiraIssueTemplate).fill({
                                            url: this.url.href,
                                            issueType: (this.issueType && this.issueType.length > 0) ? this.issueType : opts.defaultIssueType,
                                            issueIconUrl: (this.iconUrl && this.iconUrl.length > 0) ? this.iconUrl : opts.defaultIssueIconUrl,
                                            key: this.key,
                                            details: this.summary
                                        }).toString();
                                    }
                                });
                            }

                            var changes = "";
                            if (json.vcsRevisions && json.vcsRevisions.size > 0) {
                                $.each(json.vcsRevisions.vcsRevision, function() {
                                    if (this.changes && this.changes.size > 0) {
                                        $.each(this.changes.change, function () {
                                            if (this.author && this.comment) {
                                                changes += AJS.template.load(opts.templates.codeChangeTemplate).fill({
                                                    authorOrUser: (this.userName && this.userName.length > 0) ? "user" : "author",
                                                    author: (this.userName && this.userName.length > 0) ? this.userName : this.author,
                                                    displayName: (this.fullName && this.fullName.length > 0) ? this.fullName : this.author,
                                                    comment: this.comment
                                                }).fillHtml({
                                                    changesetInfo: this.changesetId ? AJS.template.load(this.commitUrl ? opts.templates.codeChangeChangesetLinkTemplate : opts.templates.codeChangeChangesetDisplayTemplate).fill({
                                                        commitUrl: this.commitUrl ? this.commitUrl : null,
                                                        changesetId: this.changesetId
                                                    }).toString() : ""
                                                }).toString();
                                            }
                                        });
                                    }
                                });
                            }

                            if (issues.length == 0 && changes.length == 0) {
                                additionalInfo.text(opts.noAdditionalInfoText);
                            } else {
                                if (issues.length == 0) {
                                    $(".issueSummary", additionalInfo[0]).remove();
                                } else {
                                    $(".issueSummary", additionalInfo[0]).append("<ul>" + issues + "</ul>");
                                }
                                if (changes.length == 0) {
                                    $(".changesSummary", additionalInfo[0]).remove();
                                } else {
                                    $(".changesSummary", additionalInfo[0]).append("<ul>" + changes + "</ul>");
                                }
                            }

                            li.addClass("expanded");
                            additionalInfo.data("data-retrieved", true, true).stop(true).slideDown(opts.slideSpeed);
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            li.addClass("collapsed");
                        }
                    });
                } else {
                    li.removeClass("collapsed").addClass("expanded");
                    additionalInfo.stop(true, true).slideDown(opts.slideSpeed);
                }
            });

            $("#" + opts.container.attr("id") + " .expanded .toggle-details").live("click", function (e) {
                var el = $(this),
                    li = el.closest("li");
                li.removeClass("expanded").addClass("collapsed");
                $(".additional-information", li[0]).stop(true, true).slideUp(opts.slideSpeed);
            });

            // Trigger the first update
            update();
        }
    }
}(jQuery);


function showAjaxErrorMessage(XMLHttpRequest) {
    AJS.$(".ajaxErrorMessage").html('"' + getMessageToShow(XMLHttpRequest.statusText) + '"');
    AJS.$("#ajaxErrorHolder").removeClass("hidden").show();
}

/**
 * Translates indecipherable messages into something more readable
 *
 * @param originalMessage the original message
 * @returns {string} either the original message passed in (if it's not indecipherable) or a generic message
 */
function getMessageToShow(originalMessage) {
    originalMessage = AJS.$.trim(originalMessage);
    if (originalMessage === "" || originalMessage === "error") {
        return "Error whilst communicating with server";
    }
    return originalMessage;
}

function hideAjaxErrorMessage() {
    AJS.$(".ajaxErrorMessage").empty();
    AJS.$("#ajaxErrorHolder").hide();
}

/**
 * Usage: init(selector, reloadEvent) . Calling init function multiple times on the same page is safe regardless of used selectors.
 *
 * @param selector the jQuery selector used to mark asynchronously executed links
 * @param resetLinkStateEventName (optional, nullable) the event causing the "executed" status of links to be cleared
 * @param onUrlCallFinished (optional) handler to call when url processing is finished
 */
var AsynchronousRequestManager = function($) {
    var IN_PROGRESS_KEY = "isInProgress";
    var registeredResetLinkStateHandlers = {};

    function isInProgress(link) {
        return link.data(IN_PROGRESS_KEY);
    }

    function setInProgress(link, newValue) {
        link.data(IN_PROGRESS_KEY, newValue);
        if (newValue) {
            link.fadeTo("slow", 0.4);
        } else {
            link.fadeTo("slow", 1);
        }
    }

    var onAsynchronousLinkClick = function (event) {
        var $this = $(this);
        if (!isInProgress($this)) {
            $.ajax({
                url: this.href,
                type: $this.hasClass("usePostMethod") ? "POST" : "GET",
                error: function (XMLHttpRequest) {
                    setInProgress($this, false);
                    if (event.data.failureHandler) {
                        event.data.failureHandler();
                    }
                    showAjaxErrorMessage(XMLHttpRequest);
                },
                success: function (htmlOrJson) {
                    if (htmlOrJson.status && htmlOrJson.status == "ERROR") {
                        if (event.data.failureHandler) {
                            event.data.failureHandler(htmlOrJson);
                        }
                    } else {
                        if (event.data.successHandler) {
                            event.data.successHandler();
                        }
                    }
                    setInProgress($this, false);
                }
            });
            setInProgress($this, true);
        }
        event.preventDefault();
    };

    function makePair(first, second) {
        return first + "##" + second;
    }

    return {
        init: function (selector, resetLinkStateEventName, onUrlCallFinished) {
            var $selector = $(selector);
            if (resetLinkStateEventName) {
                var pair = makePair(resetLinkStateEventName, selector);
                if (!(pair in registeredResetLinkStateHandlers)) {
                    $("body").bind(resetLinkStateEventName, function () {
                        $selector.filter(":visible").each(function () {
                            setInProgress($(this), false);
                        });
                    });
                    registeredResetLinkStateHandlers[pair] = true;
                }
            }

            $(document)
                .off("click", selector, onAsynchronousLinkClick)
                .on("click", selector, {
                    successHandler: onUrlCallFinished,
                    failureHandler: onUrlCallFinished
                }, onAsynchronousLinkClick);
        }
    }
}(AJS.$);



/**
 * JobResultSummary page
 */
var JobResultSummaryLiveActivity = function ($) {
    var opts = {
        buildResultKey: null,
        buildLifeCycleState: null,
        container: null,
        getBuildUrl: null,
        reloadUrl: null,
        templates: {
            disabledStopButton: null,
            logTableRow: null,
            progressOverAverage: null,
            progressUnderAverage: null,
            queueDurationDescription: null,
            queuePositionDescription: null,
            updatingSourceFor: null
        }
    },
    linesOfLogToDisplay = 10,
    $linesOfLogToDisplaySelect,
    $logBody,
    $logContainer,
    $logLoading,
    $progressBarContainer,
    $queueDurationDescriptionContainer,
    $queuePositionDescriptionContainer,
    queueDuration,
    updateTimeout,
    update = function () {

        clearTimeout(updateTimeout);

        var ajaxData = $logContainer.is(":visible") ? {
            expand: 'logEntries[-' + linesOfLogToDisplay + ':]',
            'max-results': linesOfLogToDisplay
        } : {};

        $.ajax({
            url: opts.getBuildUrl,
            data: ajaxData,
            dataType: "json",
            contentType: "application/json",
            cache: false,
            success: function (buildResult) {
                if (buildResult.lifeCycleState != opts.buildLifeCycleState) {
                    document.location = opts.reloadUrl;
                    return;
                } else if (buildResult.lifeCycleState == "Pending" || buildResult.lifeCycleState == "Queued") {
                    if (queueDuration != buildResult.queueDuration) {
                        var queueDurationMarkup = AJS.template.load(opts.templates.queueDurationDescription)
                                .fill({ durationDescription: DurationUtils.getPrettyPrint(buildResult.queueDuration)}).toString();
                        $queueDurationDescriptionContainer.html(queueDurationMarkup);
                        $queueDurationDescriptionContainer.show();
                        queueDuration = buildResult.queueDuration;
                    }

                    var queuePositionMarkup = AJS.template.load(opts.templates.queuePositionDescription)
                            .fill({
                                position: buildResult.queue.position + 1,
                                length: buildResult.queue.length
                            }).toString();
                    $queuePositionDescriptionContainer.html(queuePositionMarkup);
                    $queuePositionDescriptionContainer.show();

                } else if (buildResult.lifeCycleState == "InProgress") {
                    if (buildResult.progress) {

                        var pbOptions = {};

                        if (buildResult.buildStartedTime) {
                            pbOptions.value = buildResult.progress.percentageCompleted * 100;
                            if (buildResult.progress.isUnderAverageTime) {
                                pbOptions.text = AJS.template.load(opts.templates.progressUnderAverage).fill({
                                    elapsed: buildResult.progress.prettyBuildTime,
                                    remaining: buildResult.progress.prettyTimeRemainingLong
                                }).toString();
                            } else {
                                pbOptions.text = AJS.template.load(opts.templates.progressOverAverage).fill({
                                    elapsed: buildResult.progress.prettyBuildTime,
                                    remaining: buildResult.progress.prettyTimeRemainingLong
                                }).toString();
                            }
                        } else {
                            pbOptions.value = 0;
                            pbOptions.text = AJS.template.load(opts.templates.updatingSourceFor).fill({
                                prettyVcsUpdateDuration: buildResult.prettyVcsUpdateDuration
                            }).toString();
                        }

                        $progressBarContainer.progressBar(pbOptions);
                    }

                    if (buildResult.logEntries && buildResult.logEntries.logEntry) {

                        var newLogBody = '';

                        for (var i = 0, ii = buildResult.logEntries.logEntry.length; i < ii; i++) {
                            var logEntry = buildResult.logEntries.logEntry[i];
                            newLogBody += AJS.template.load(opts.templates.logTableRow)
                                    .fill({ time: logEntry.formattedDate })
                                    .fillHtml({ log: logEntry.log }).toString();
                        }
                        if ($logBody.html() != newLogBody) {
                            $logBody.html(newLogBody);
                        }
                        if ($logLoading.is(":visible")) {
                            $logLoading.hide();
                            $logBody.parent().removeClass("hidden");
                        }
                    }
                }

                // Update again in 5 seconds
                updateTimeout = setTimeout(update, 5000);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                // Error occurred when doing the update, try again in 30 sec
                updateTimeout = setTimeout(update, 30000);
            }
        });
    };
    return {
        init: function (options) {
            $.extend(true, opts, options);

            $linesOfLogToDisplaySelect = $("#linesToDisplay");
            $logBody = $("#buildLog tbody");
            $logContainer = $logBody.parent().parent();
            $logLoading = $(".loading", $logContainer[0]);
            $progressBarContainer = $("#pb" + opts.buildResultKey);
            $queueDurationDescriptionContainer = $("#queueDurationDescription");
            $queuePositionDescriptionContainer = $("#queuePositionDescription");

            // Get our default in line with what was set previously
            linesOfLogToDisplay = $linesOfLogToDisplaySelect.val();

            $linesOfLogToDisplaySelect.change(function () {
                linesOfLogToDisplay = $(this).val();
                saveCookie("BAMBOO-MAX-DISPLAY-LINES", linesOfLogToDisplay, 365);
                update();
            });

            if (opts.templates.disabledStopButton)
            {
                var disabledStopHTML = opts.templates.disabledStopButton.toString();
                $("#buildResults a.build-stop").live("click", function (e) {
                    var $el = $(this);
                    $.post(this.href);
                    $el.replaceWith(disabledStopHTML);
                    e.preventDefault();
                });
            }

            // Trigger the first update
            update();
        }
    }
}(jQuery);


var DurationUtils = function() {
    var opts = {
        format: "{value} {unit}",
        units: {
            SEC: ["second", "seconds"],
            MIN: ["minute", "minutes"]
        }
    },
    MILLIS_IN_MINUTE = 60 * 1000,
    MILLIS_IN_SECOND = 1000,
    describeValueAs = function(value, unit) {
        return opts.format.replace("{value}", value).replace("{unit}", value == 1 ? unit[0] : unit[1]);
    };
    return {
        init: function (options) {
            $.extend(true, opts, options);
        },
        getPrettyPrint: function(elapsedTimeMillis) {
            if (elapsedTimeMillis >= MILLIS_IN_MINUTE) {
                return describeValueAs(Math.floor(elapsedTimeMillis / MILLIS_IN_MINUTE), opts.units.MIN)
            } else if (elapsedTimeMillis >= MILLIS_IN_SECOND) {
                return describeValueAs(Math.floor(elapsedTimeMillis / MILLIS_IN_SECOND), opts.units.SEC)
            } else {
                return "< 1 {unit}".replace("{unit}", opts.units.SEC[0]);
            }
        }
    }
}();

/**
 * BuildResultSummary page
 */
var BuildResultSummaryLiveActivity = function ($) {
    var opts = {
        getBuildUrl: null,
        activeJobResultKey: null,
        templates: {
            logMessagePending: null,
            logMessageQueued: null,
            logMessageFinished: null,
            logTableRow: null
        }
    },
    displayLogActivity = function(logBody) {
        $logMessage.hide();
        $logLoading.hide();
        if ($logBody.html() != logBody) {
            $logBody.html(logBody);
        }
        $logBody.parent().show();
        $logContainer.show();
    },
    displayLogLoading = function() {
        $logMessage.hide();
        $logBody.parent().hide();
        $logLoading.show();
        $logContainer.show();
    },
    displayLogMessage = function(template) {
        $logContainer.hide();
        $logMessage.html(AJS.template.load(template).fill({job: jobName})).show();
    },
    $jobResultKeyForLogDisplaySelect,
    jobResultKey,
    jobName,
    linesOfLogToDisplay = 10,
    $linesOfLogToDisplaySelect,
    $logBody,
    $logContainer,
    $logLoading,
    $logMessage,
    updateTimeout,
    update = function () {

        clearTimeout(updateTimeout);

        $.ajax({
            url: opts.getBuildUrl.replace("@KEY@", jobResultKey),
            data: {
                expand: 'logEntries[-' + linesOfLogToDisplay + ':]',
                'max-results': linesOfLogToDisplay
            },
            dataType: "json",
            contentType: "application/json",
            cache: false,
            success: function (buildResult) {
                if (buildResult.lifeCycleState == "Pending") {
                    displayLogMessage(opts.templates.logMessagePending);
                } else if (buildResult.lifeCycleState == "Queued") {
                    displayLogMessage(opts.templates.logMessageQueued);
                } else if (buildResult.lifeCycleState == "InProgress") {
                    if (buildResult.logEntries && typeof(buildResult.logEntries.logEntry) != "undefined") {
                        var newLogBody = '';
                        for (var i = 0, ii = buildResult.logEntries.logEntry.length; i < ii; i++) {
                            var logEntry = buildResult.logEntries.logEntry[i];
                            newLogBody += AJS.template.load(opts.templates.logTableRow)
                                    .fill({ time: logEntry.formattedDate })
                                    .fillHtml({ log: logEntry.log }).toString();
                        }
                        displayLogActivity(newLogBody);
                    } else {
                        displayLogLoading();
                    }
                } else if (buildResult.lifeCycleState == "Finished") {
                    displayLogMessage(opts.templates.logMessageFinished);
                }

                // Update again in 5 seconds
                updateTimeout = setTimeout(update, 5000);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                // Error occurred when doing the update, try again in 30 sec
                updateTimeout = setTimeout(update, 30000);
            }
        });
    };
    return {
        init: function(options) {
            $.extend(true, opts, options);
            $jobResultKeyForLogDisplaySelect = $("#jobResultKeyForLogDisplay");
            $linesOfLogToDisplaySelect = $("#linesToDisplay");
            $logContainer = $("#buildResultSummaryLogs");
            $logBody = $("table > tbody", $logContainer[0]);
            $logLoading = $(".loading", $logContainer[0]);
            $logMessage = $("#buildResultSummaryLogMessage");

            // Get our default in line with what was set previously
            linesOfLogToDisplay = $linesOfLogToDisplaySelect.val();

            $jobResultKeyForLogDisplaySelect.change(function () {
                jobResultKey = $jobResultKeyForLogDisplaySelect.val();
                jobName = $jobResultKeyForLogDisplaySelect.find("option:selected").text();
                update();
            });

            $linesOfLogToDisplaySelect.change(function () {
                linesOfLogToDisplay = $linesOfLogToDisplaySelect.val();
                saveCookie("BAMBOO-MAX-DISPLAY-LINES", linesOfLogToDisplay, 365);
                update();
            });

            // Trigger the first update
            if (opts.activeJobResultKey) {
                $jobResultKeyForLogDisplaySelect.val(opts.activeJobResultKey);
            }
            $jobResultKeyForLogDisplaySelect.change();
        }
    }
}(jQuery);


var ChainConfiguration = function ($) {
    var opts = {
        $list: null,
        moveStageUrl: null,
        moveJobUrl: null,
        confirmStageMoveUrl: null,
        confirmJobMoveJobUrl: null,
        chainKey: null,
        canReorder: false,
        stageMoveHeader: "Move Stage",
        jobMoveHeader: "Move Job"
    };
    return {
        init: function (options) {
            $.extend(true, opts, options);
            opts.$list.children(":last-child").addClass("last");

            if (!opts.canReorder) {
                return;
            }

            opts.$list.sortable({
                cursor: "move",
                distance: 5,
                handle: "dl",
                start: function (event, ui) {
                    var $self = $(ui.item);
                    $self.data("movedFromPos", $self.prevAll().length);
                },
                update: function (event, ui) {
                    var $self = $(ui.item),
                        revertMove = function(index) {
                            if ((opts.$list.children().length - 1) == $self.data("movedFromPos")) {
                                $self.appendTo(opts.$list).removeData("movedFromPos");
                            } else {
                                $self.insertBefore(opts.$list.children("li:eq(" + ($self.data("movedFromPos") + (($self.data("movedFromPos") > index)?1:0)) + ")")).removeData("movedFromPos");
                            }
                        },
                        showError = function () {
                            var message = arguments.length ? arguments[0] : "There was a problem moving your stage.",
                                errorDialog = new AJS.Dialog(400, 150);
                            errorDialog.addHeader("Stage move failed").addPanel("errorPanel", '<div class="fieldError errorText">' + message + '</div>').addButton("Close", function (dialog) {
                                dialog.hide();
                            });
                            errorDialog.show();
                            revertMove();
                        },
                        callMoveAction = function() {
                            var stageId = $self.attr("id").split("_")[1],
                                index = $self.prevAll().length;
                            $.ajax({
                                type: "POST",
                                url: opts.moveStageUrl,
                                data: { buildKey: opts.chainKey, stageId: stageId, index: index},
                                success: function (json) {
                                    if (json.status == "ERROR") {
                                        if (json.errors && json.errors.length > 0) {
                                            var message = json.errors.join("<br>");
                                            showError(message);
                                        } else {
                                            showError();
                                        }
                                    } else if (json.status == "CONFIRM") {
                                        var cancelCallback = function (dialog) {
                                            revertMove(index);
                                        };
                                        simpleDialogForm(null, opts.confirmStageMoveUrl + "?buildKey=" + opts.chainKey + "&stageId=" + stageId + "&index=" + index, 600, 500, opts.stageMoveHeader, "ajax", null, cancelCallback, opts.stageMoveHeader);
                                    } else {
                                        opts.$list.children(":last-child").addClass("last").siblings().removeClass("last");
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    showError();
                                },
                                dataType: "json"
                            });
                        };
                    callMoveAction();
                }
            });

            var jobLists = opts.$list.find("> li > div > ul");
            jobLists.children("[id^='job_']").draggable({
                cursor: "move",
                handle: ".handle",
                revert: "invalid",
                revertDuration: 300,
                scope: "jobs",
                start: function (event, ui) {
                    var $self = $(this);
                    $self.data("movedFrom", $self.parent()).data("movedFromPos", $self.prevAll().length);

                    // Add a z-index to the stage when someone drags a job to fix IE7's crappy stacking
                    if ($.browser.msie && parseInt($.browser.version, 10) == 7) {
                        $self.closest("li[id^='stage_']").css("zIndex", 1).siblings().css("zIndex", "")
                    }
                }
            });
            jobLists.droppable({
                accept: function (li) {
                    return (this != li.parent()[0]); // prevents being able to drop to the same stage
                },
                activeClass: "ui-state-active",
                drop: function (event, ui) {
                    var $self = ui.draggable,
                        revertMove = function () {
                            var $originalFollowingElement = $self.data("movedFrom").children("li:eq(" + $self.data("movedFromPos") + ")");
                            if ($originalFollowingElement.length == 0)  {
                                $self.appendTo($self.data("movedFrom")).removeData("movedFrom").removeData("movedFromPos");
                            } else  {
                                $self.insertBefore($originalFollowingElement).removeData("movedFrom").removeData("movedFromPos");
                            }
                        },
                        showError = function () {
                            var message = arguments.length ? arguments[0] : "There was a problem moving your Job.",
                                errorDialog = new AJS.Dialog(400, 150);

                            errorDialog.addHeader("Job move failed").addPanel("errorPanel", '<div class="fieldError errorText">' + message + '</div>').addButton("Close", function (dialog) {
                                 dialog.hide();
                            });
                            errorDialog.show();
                            revertMove();
                        },
                        callMoveAction = function() {
                            var stageId = $self.closest("li[id^='stage_']").attr("id").split("_")[1],
                                jobKey = $self.attr("id").split("_")[1];
                            $.ajax({
                                type: "POST",
                                url: opts.moveJobUrl,
                                data: { buildKey: opts.chainKey, stageId: stageId, jobKey: jobKey },
                                success: function (json) {
                                    if (json.status == "ERROR") {
                                        if (json.errors && json.errors.length > 0) {
                                            var message = json.errors.join("<br>");
                                            showError(message);
                                        } else {
                                            showError();
                                        }
                                    } else if (json.status == "CONFIRM") {
                                        var cancelCallback = function () {
                                            revertMove();
                                        };
                                        simpleDialogForm(null, opts.confirmJobMoveJobUrl + "?buildKey=" + opts.chainKey + "&stageId=" + stageId + "&jobKey=" + jobKey, 600, 500, opts.jobMoveHeader, "ajax", null, cancelCallback, opts.jobMoveHeader);
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    showError();
                                },
                                dataType: "json"
                            });
                        };
                    $self.prependTo(this).css({ left: "", top: "" });
                    callMoveAction();
                },
                hoverClass: "ui-state-hover",
                scope: "jobs"
            });
        }
    }
}(jQuery);

var ArtifactDefinitionEdit = function ($) {
    var opts = {
        html: {
            artifactSharingToggleContentShared: null,
            artifactSharingToggleContentUnshared: null
        },
        i18n: {
            artifact_definition_shareToggle_error: null,
            artifact_definition_shareToggle_error_header: null,
            global_buttons_close: null
        },
        deletePackageItem: {
            actionUrl: null,
            submitLabel: null,
            title: null
        },
        editPackageItem: {
            actionUrl: null,
            submitLabel: null,
            title: null
        },
        renameArtifactDefinitionToEnableSharing: {
            actionUrl: null,
            submitLabel: null,
            title: null
        },
        toggleArtifactDefinitionSharing: {
            actionUrl: null,
            submitLabel: null,
            title: null
        },
        confirmToggleArtifactDefinitionSharing: {
            actionUrl: null,
            submitLabel: null,
            title: null
        }
    },
    $artifactDefinitionsTable,
    deleteArtifactDefinitionCallback = function (result) {
        var artifact = result.artifactDefinition;

        (($("tbody > tr", $artifactDefinitionsTable).length == 1) ? $artifactDefinitionsTable : $("#artifactDefinition-" + artifact.id)).remove();
    },
    deleteArtifactDefinitionOnClick = function() {
        var artifactId = this.id.split("-")[1],
            hasDependencies = $(this).hasClass("hasDependencies");

        simpleDialogForm(null,
                         opts.deletePackageItem.actionUrl + "&artifactId=" + artifactId,
                         hasDependencies ? 600 : 400,
                         hasDependencies ? 500 : 200,
                         opts.deletePackageItem.submitLabel,
                         "ajax",
                         deleteArtifactDefinitionCallback,
                         null,
                         opts.deletePackageItem.title,
                         null);
    },
    editArtifactDefinitionOnClick = function() {
        var artifactId = this.id.split("-")[1];

        simpleDialogForm(null,
                         opts.editPackageItem.actionUrl + "&artifactId=" + artifactId,
                         800,
                         600,
                         opts.editPackageItem.submitLabel,
                         "ajax",
                         updateArtifactDefinitionCallback,
                         null,
                         opts.editPackageItem.title,
                         null);
    },
    toggleArtifactDefinitionSharingOnClick = function() {
        var artifactId = this.id.split("-")[1],
            showError = function () {
                var message = arguments.length ? arguments[0] : opts.i18n.artifact_definition_shareToggle_error,
                    errorDialog = new AJS.Dialog(400, 150);
                errorDialog.addHeader(opts.i18n.artifact_definition_shareToggle_error_header)
                        .addPanel("errorPanel", '<div class="fieldError errorText">' + message + '</div>')
                        .addCancel(opts.i18n.global_buttons_close, function (dialog) { dialog.hide(); })
                        .show();
            };

        AJS.$.ajax({
            type: "POST",
            url: opts.toggleArtifactDefinitionSharing.actionUrl,
            data: { artifactId: artifactId },
            success: function (json) {
                if (json.status == "ERROR") {
                    if (json.errors && json.errors.length) {
                        showError(json.errors.join("<br>"));
                    } else if (json.fieldErrors) {
                        if (json.fieldErrors.name && json.fieldErrors.name.length) {
                            simpleDialogForm(null,
                                             opts.renameArtifactDefinitionToEnableSharing.actionUrl + "&artifactId=" + artifactId,
                                             700, 300,
                                             opts.renameArtifactDefinitionToEnableSharing.submitLabel,
                                             "ajax",
                                             updateArtifactDefinitionCallback, null,
                                             opts.renameArtifactDefinitionToEnableSharing.title);
                        } else {
                            var errorMessages = [];
                            for (var fieldError in json.fieldErrors) {
                                errorMessages.push(json.fieldErrors[fieldError].join("<br>"));
                            }
                            showError(errorMessages.join("<br>"));
                        }
                    } else {
                        showError();
                    }
                } else {
                    if (json.status == "CONFIRM") {
                        simpleDialogForm(null,
                                         opts.confirmToggleArtifactDefinitionSharing.actionUrl + "&artifactId=" + artifactId,
                                         600, 500,
                                         opts.confirmToggleArtifactDefinitionSharing.submitLabel,
                                         "ajax",
                                         updateArtifactDefinitionCallback, null,
                                         opts.confirmToggleArtifactDefinitionSharing.title);
                    } else {
                        updateArtifactDefinitionCallback(json);
                    }
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                showError();
            },
            dataType: "json"
        });
    },
    updateArtifactDefinitionCallback = function (result) {
        var artifact = result.artifactDefinition,
            $cells = $("#artifactDefinition-" + artifact.id + " > td");

        $($cells[0]).find("span.artifactName").text(artifact.name);
        $($cells[0]).find("span.icon").attr("class", artifact.sharedArtifact ? "icon icon-artifact-shared" : "icon icon-artifact");

        $($cells[1]).text(artifact.location);
        $($cells[2]).text(artifact.copyPattern);

        $("#toggleArtifactDefinitionSharing-" + artifact.id).html(artifact.sharedArtifact ? opts.html.artifactSharingToggleContentShared : opts.html.artifactSharingToggleContentUnshared);

        $artifactDefinitionsTable.trigger("update").trigger("sorton", [$artifactDefinitionsTable.get(0).config.sortList]);
    };

    return {
        init: function (options) {
            $.extend(true, opts, options);

            $artifactDefinitionsTable = $("#artifactDefinitions");

            // initialize table sorter
            $artifactDefinitionsTable.tablesorter({
                headers: {3:{sorter:false},4:{sorter:false}},
                sortList: [[0,0]]
            });
            $artifactDefinitionsTable.delegate("a.deleteArtifactDefinition", "click", deleteArtifactDefinitionOnClick)
                                     .delegate("a.editArtifactDefinition", "click", editArtifactDefinitionOnClick)
                                     .delegate("a.toggleArtifactDefinitionSharing", "click", toggleArtifactDefinitionSharingOnClick);
        }
    }
}(jQuery);


var LinkedJiraProjects = function ($) {
    var defaults = {
        deleteItem: {
            title: null
        }
    },
    $table,
    deleteItemCallback = function (result) {
        var item = result.linkedJiraProject;
        (($("tbody > tr", $table).length == 1) ? $table : $(BAMBOO.escapeIdToJQuerySelector("#linkedJiraProject-" + item.id))).remove();
    };

    return {
        init: function (options) {
            options = AJS.$.extend(defaults, options);

            $table = $("#linkedJiraProjects");

            // initialize table sorter
            $table.tablesorter({
                headers: {2:{sorter:false}},
                sortList: [[0,0]]
            });

            BAMBOO.simpleDialogForm({
                trigger: '#linkedJiraProjects a.deleteLinkedJiraProject',
                dialogWidth: 400,
                dialogHeight: 200,
                success: deleteItemCallback,
                header: options.deleteItem.title
            });
        }
    }
}(jQuery);


/* Tests Tables */
AJS.$(document).delegate(".tests-table > tbody > tr > .twixie > span", "click", function (e) {
    var $twixie = AJS.$(this),
        $tr = $twixie.closest("tr"),
        $stack = $tr.next(),
        newTwixieText = !$twixie.hasClass("icon-collapse") ? "Collapse" : "Expand"; //negated because we toggle the class later
    $stack[$tr.hasClass("collapsed") ? "show" : "hide"]();
    $tr.toggleClass("collapsed expanded");
    $twixie.toggleClass("icon-collapse icon-expand").attr("title", newTwixieText).html("<span>" + newTwixieText + "</span>");
});
AJS.$(document).delegate(".tests-table-container > .controls li", "click", function (e) {
    var $trigger = AJS.$(this),
        $li = $trigger.closest("li"),
        $table = $trigger.closest(".controls").prevAll(".tests-table");
    if ($li.hasClass("expand-all")) {
        $table.find("tbody > .collapsed .twixie > span").click();
    } else if ($li.hasClass("collapse-all")) {
        $table.find("tbody > .expanded .twixie > span").click();
    }
});


/**
 * Strip given prefix from input.
 * Can handle String and jQuery object input.
 *
 * @param prefix String                   prefix to be stripped from input
 * @param input  String or jQuery object
 */
BAMBOO.stripPrefixFromId = function(prefix, input) {
    if (typeof(input) == 'string') {
        if (input.indexOf(prefix) == 0) {
            return input.slice(prefix.length);
        } else {
            return input;
        }
    } else {
        return this.stripPrefixFromId(prefix, AJS.$(input).attr("id"));
    }
};

/**
 * Unsafe (for jQuery id's) character regex
 * Reference: http://docs.jquery.com/Frequently_Asked_Questions#How_do_I_select_an_element_by_an_ID_that_has_characters_used_in_CSS_notation.3F
 */
BAMBOO.unsafeIdCharacterRegex = /(:|\.)/g;

/**
 * Escape characters in element id to use it as jQuery selector
 * @param id
 */
BAMBOO.escapeIdToJQuerySelector = function(id) {
    return id.replace(BAMBOO.unsafeIdCharacterRegex, '\\$1');
};

BAMBOO.buildAUIMessage = function (messages, type, opts) {
    var defaults = {
            escapeTitle : true
        },
        options = AJS.$.extend(true, defaults, opts),
        msg,
        $dummy = AJS.$('<div/>');
    if (messages.length == 1) {
        msg = (options.escapeTitle ? messages[0] : '<strong>' + messages[0] + '</strong>');
        AJS.messages[type]($dummy, (options.escapeTitle ? {title: msg, closeable: false} : {body: msg, closeable: false}));
    } else if (messages.length > 1) {
        var list = ['<ul>'];
        for (var i = 0, ii = messages.length; i < ii; i++) {
            list.push('<li>', messages[i], '</li>');
        }
        list.push('</ul>');
        AJS.messages[type]($dummy, {body: list.join(''), closeable: false});
    }
    return $dummy.children();
};

BAMBOO.buildAUIErrorMessage = function(errors) {
    return BAMBOO.buildAUIMessage(errors, 'error', {});
};

BAMBOO.buildAUIWarningMessage = function(warnings) {
    return BAMBOO.buildAUIMessage(warnings, 'warning', {});
};

BAMBOO.buildFieldError = function(errors) {
    var $dummy = AJS.$('<div/>');
    for (var i = 0, ii = errors.length; i < ii; i++) {
        $dummy.append(AJS.$('<div class="error"/>').html(errors[i]));
    }
    return $dummy.children();
};

/**
 * Add errors to a form field
 * @param $form
 * @param fieldName
 * @param {Array} errors
 * @param {boolean=} animate - display the error(s) with an animation
 */
BAMBOO.addFieldErrors = function($form, fieldName, errors, animate) {
    var $field = AJS.$('#fieldArea_' + $form.attr('id') + '_' + fieldName.replace(BAMBOO.addFieldErrorsFieldNameRegex, "_")),
        $input = AJS.$('#' + $form.attr('id') + '_' + fieldName.replace(BAMBOO.addFieldErrorsFieldNameRegex, "_")),
        $description = $field.find('.description'),
        $errors = BAMBOO.buildFieldError(errors);

    if (animate) {
        $errors.hide();
    }
    if ($description.length) {
        $description.before($errors);
    } else if ($field.length) {
        $field.append($errors);
    } else {
        $input.after($errors);
    }
    if (animate) {
        $errors.slideDown();
    }
};
BAMBOO.addFieldErrorsFieldNameRegex = /\./g;

(function ($) {
    var i18nCollapse = "Collapse",
        i18nExpand = "Expand";

    $(document).delegate(".collapsible-section > .summary > h3, .collapsible-section > .summary > .icon", "click", function (e) {
        var $summary = $(this).parent(),
            $section = $summary.closest(".collapsible-section"),
            $details = $section.children(".collapsible-details"),
            $icon = $summary.children(".icon");

        if ($section.hasClass("collapsed")) {
            $icon.addClass("icon-collapse").removeClass("icon-expand").attr({ title: i18nCollapse }).children().text(i18nCollapse);
            $details.stop(true, true).slideDown(function() {
                $section.removeClass("collapsed");
            });
        } else {
            $icon.addClass("icon-expand").removeClass("icon-collapse").attr({ title: i18nExpand }).children().text(i18nExpand);
            $details.stop(true, true).slideUp(function() {
                $section.addClass("collapsed");
            });
        }
    });
})(AJS.$);

/**
 * TODO: extend this with automatic link adding (which will work also for AJAX loaded forms).
 */
BAMBOO.JdkBuilderSelectWidget = function(options) {
    var opts = {
            dialog: {
                height: 320,
                width: 540
            }
        };

    AJS.$.extend(true, opts, options);

    BAMBOO.simpleDialogForm({
        trigger: options.clickTarget,
        dialogWidth: opts.dialog.width,
        dialogHeight: opts.dialog.height,
        success: function(result) {
            AJS.$(opts.displayTarget).append(AJS.$("<option />", { val: result.capability.label, text: result.capability.label })).val(result.capability.label);
        }
    });
};

AJS.$(function ($) {
    addConfirmationToLinks();

    /* Default options for jQuery's tablesorter plugin */
    if ($.tablesorter) {
        // use 'zebra' plugin by default
        $.tablesorter.defaults.widgets = ['zebra'];
        // use AUI compatible classes
        $.tablesorter.defaults.widgetZebra = {css: ['', 'zebra']};
    }

    // Drop down for user profile
    AJS.$("#header > .global > .secondary .aui-dd-parent").dropDown("Standard", { trigger: "span.aui-dd-trigger" });
});

BAMBOO.JdkBuilderSelectWidget({clickTarget: "a.addSharedJdkCapability", displayTarget: "select.jdkSelectWidget"});
BAMBOO.JdkBuilderSelectWidget({clickTarget: "a.addSharedBuilderCapability", displayTarget: "select.builderSelectWidget"});

/**
 * Small jQuery method to check if the element has been clipped (content breaking outside it's bounding box) or not
 */
jQuery.fn.isClipped = function () {
    var $el = this.filter(':first');
    return ($el.prop('scrollWidth') > $el.prop('clientWidth'));
};

BAMBOO.openJiraIssueTransitionDialog = function(e) {
    e.preventDefault();
    var $trigger = AJS.$(this),
            dialog = new AJS.Dialog({
                width: 720,
                height: 350,
                keypressListener: function (e) {
                    if (e.which == jQuery.ui.keyCode.ESCAPE) {
                        dialog.remove();
                    }
                }
            });
    dialog.addHeader("Transition Issue").addCancel("Done", function () {
//      dialog.remove();
        reloadThePage();
    });
    AJS.$.ajax({
        url: $trigger.attr("href"),
        data: { 'bamboo.successReturnMode': 'json', decorator: 'rest', confirm: true },
        success: function (html) {
            var $html = AJS.$(html);

            dialog.addPanel("", $html).show();
            BAMBOO.JIRAISSUETRANSITION.init({
                issueKey: $trigger.attr("issueKey"),
                returnUrl: $trigger.attr("returnUrl")
            });
        },
        cache: false
    });
};

BAMBOO.isFlashInstalled = (function() {
    var flashInstalled = function(a,b){try{a=new ActiveXObject(a+b+'.'+a+b)}catch(e){a=navigator.plugins[a+' '+b]}return!!a}('Shockwave','Flash')
    if (!flashInstalled) {
        AJS.$('html').addClass("no-flash");
    }
    return flashInstalled;
}());

(function ($) {
    $(document).on('aui-message-close', function(e,a) {
        if (a.hasClass('system-error-message')) {
            var $link = a.find('.system-error-message-remove');
            if ($link.length) {
                $.post($link.attr('href'));
            }
        }
    });
}(AJS.$));

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/dynamic-field-parameters.js' */
BAMBOO.DynamicFieldParameters = (function ($) {
    var handleOnSelectShowHideSelector = ".handleOnSelectShowHide",
        handleDynamicDescriptionSelector = ".handleDynamicDescription",
        // lifted straight from jQuery, just changed the order
        fxAttrs = [
            // height animations
            [ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
            // opacity animations
            [ "opacity" ],
            // width animations
            [ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ]
        ],
        // object to handle the methods we make 'public'
        ret = {};

    /**
     * Handles form select field dynamic description updating
     */
    function handleDynamicSelectDescription() {
        var $select = $(this);

        $select.nextAll(".description").html($select.find("option:selected").attr("data-dynamic-select-description") || null);
    }

    /**
     * Syncs form display states for handleOnSelectShowHide fields and select field dynamic description updating
     * @param context (optional) - DOM Element, Document or jQuery object to use as context
     * @param animate (optional) - force transition animations
     */
    ret.syncFieldShowHide = function (context, animate) {
        if (typeof context === "boolean") {
            animate = context;
            context = null;
        }
        $(".handleOnSelectShowHide", context).each(function () { handleOnSelectShowHide.call(this, animate); });
        $(handleDynamicDescriptionSelector, context).each(handleDynamicSelectDescription);
    };

    function escapeCss(str) {
        var charsToEscape = /[!"#$%&'()*+,.\/:;<=>?@\[\\\]^`{|}~]/g; //from jQuery docs
        return str.replace(charsToEscape, '\\$&');
    }

    /**
     * Runs on a change of a field
     */
    function handleOnSelectShowHide(e) {
        var $el = $(this),
            dependsOnSelector = (".dependsOn" + escapeCss($el.prop("name"))),
            switchValue = getSwitchValue($el),
            showPattern, hidePattern,
            useAnimations = (e instanceof jQuery.Event || (typeof e === "boolean" && e)),
            showFn = !useAnimations ? jQuery.fn.show : function () {
                this.animate(genFx("show", 2), function () { $(this).show(); });
            },
            hideFn = !useAnimations ? jQuery.fn.hide : function () {
                this.animate(genFx("hide", 2), function () { $(this).hide(); });
            };

        if (!(!switchValue && $el.is(":radio"))) {
            showPattern = "showOn" + switchValue;
            hidePattern = "showOn__" + switchValue;

            $el.closest("form").find(dependsOnSelector).each(function () {
                var $deps = $(this);

                if ($deps.prop("class").indexOf("showOn__") != -1) {
                    if ($deps.hasClass(hidePattern)) {
                        hideFn.call($deps);
                    } else {
                        showFn.call($deps);
                    }
                } else {
                    if ($deps.hasClass(showPattern)) {
                        showFn.call($deps);
                    } else {
                        hideFn.call($deps);
                    }
                }
                if ($deps.hasClass(hidePattern)) {
                    hideFn.call($deps);
                }
            });
        }
    }

    /**
     * JSOn listData looks like:
     *
     *  [data: [{value: 'key1', text: 'name for the screen', supportedValues: ['dependencyKey1', 'dependencyKey2']},
     *   {value: 'key2', text: "name 2", supportedValues: ['dependencyKey1']}]]
     *
     * If supportedValues is empty it will be shown for all selections in selParentJQ.
     *
     * @param selParentJQ - the select list that the your data depends on
     * @param selToMutateJQ - the select list that you want to mutate based on the contents of the selDependency
     * @param listDataJson - the json containing all information required to generate the selToMutate
     */
    ret.mutateSelectListContent = function (selParentJQ, selToMutateJQ, listDataJson) {
        var selToMutate = selToMutateJQ[0],
            currentSelectedValue = selToMutateJQ.val(),
            switchValue = getSwitchValue(selParentJQ),
            listData = listDataJson.data;

        //wipe existing items
        selToMutate.options.length = 0;

        // go through selToMutate check if each item is in allowed Items, if not remove?
        for (var i = 0; i<listData.length; i++){
            var value = listData[i].value,
                text = listData[i].text,
                allowedOptions = listData[i].supportedValues,
                show = allowedOptions === null || allowedOptions.length <= 0 || !switchValue;

            if (!show) {
                for (var x = 0; x < allowedOptions.length; x++) {
                    var allowedOption = allowedOptions[x];
                    if (switchValue === allowedOption) {
                        show = true;
                        break;
                    }
                }
            }

            if (show) {
                selToMutate.options[selToMutate.options.length] = new Option(text, value, false, value === currentSelectedValue);
            }
        }

        // make sure we update the dependents of the mutated list.
        handleOnSelectShowHide.call(selToMutate)
    };

    function getSwitchValue($el) {
        if ($el.is("select") && $el.prop("selectedIndex") > -1) {
            var $opt = $el.find("option:selected").filter(":first"),
                optClass = $opt.prop("class");

            //  Special uiSwitch* class prefix
            if (optClass.indexOf('uiSwitch') != -1) {
                return optClass.substring(optClass.lastIndexOf("uiSwitch") + 8);
            } else {
                return $el.val();
            }
        } else if ($el.is(":radio") || $el.is(":checkbox")) {
            return ($el.is(":checked") ? $el.val() : false);
        } else {
            return $el.val();
        }
    }

    ret.selectFirstFieldOfForm = function (formId) {
        var $form = $("#" + formId),
            $firstError = $form.find(":input:visible:enabled.errorField:first").focus();

        if (!$firstError.length) {
            $form.find(":input:visible:enabled:first").focus();
        }
    };

    /** Generate parameters to create a standard animation
     * This has been lifted straight from jQuery
     * @param type
     * @param num
     */
    function genFx( type, num ) {
        var obj = {};

        jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice(0,num)), function() {
            obj[ this ] = type;
        });

        return obj;
    }

    // handleOnSelectShowHide functionality
    $(document)
        .delegate('input' + handleOnSelectShowHideSelector, 'click', handleOnSelectShowHide)
        .delegate('select, input' + handleOnSelectShowHideSelector, 'change', handleOnSelectShowHide)
        .delegate(handleDynamicDescriptionSelector, 'change', handleDynamicSelectDescription);

    $(function () {
        ret.syncFieldShowHide();
    });

    return ret;
})(jQuery);
/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/config-panel-editor.js' */
BAMBOO.ConfigPanelEditor = function () {
    var events = require('util/events');
    var $ = AJS.$,
        defaults = {
            editor: null,
            configContainer: null,
            itemList: null,
            deleteItemKey: null,
            configFormSuccess: $.noop,
            configFormWarnings: $.noop,
            checkListHasItems: $.noop,
            templates: {
                item: null,
                icon: null
            },
            i18n: {
                confirmAbandonItem: null,
                itemDeleteSuccess: null,
                sortingHasUnsavedItemError: null,
                sortingHasUnspecifiedError: null,
                sortingErrorDialogHeader: null,
                defaultDisplayText: null,
                defaultDisplayTextDescription: null
            },
            sortable: {
                enabled: true,
                items: "> li",
                moveItem: $.noop
            },
            deleteDialogHeight: 200,
            onShowData: null
        },
        options,
        $editor,
        $configContainer,
        $itemList,
        displayMessages = function (messages) {
            var $dummy = $("<div/>"),
                $messages,
                $form = $configContainer.children("form"),
                defaultMsgType = "success";

            for (var i = 0, ii = messages.length; i < ii; i++) {
                var message = messages[i],
                    msgType = message.type || defaultMsgType;
                
                AJS.messages[msgType]($dummy, { title: message.title, closeable: (msgType != defaultMsgType), body: message.body });
            }

            $messages = $dummy.children();

            if ($form.length) {
                $form.css("visibility", "hidden").slideUp(function () { $(this).remove(); }).before($messages);
            } else {
                $configContainer.append($messages);
            }

            $messages.filter("." + defaultMsgType).delay(3000).fadeOut(function () {
                $(this).remove();
            });
            insertDefaultText();
        },
        setFocus = function () {
            var $firstError = $configContainer.find(":input:visible:enabled.errorField:first").focus();

            if (!$firstError.length) {
                $configContainer.find(":input:visible:enabled:first").focus();
            }
        },
        insertDefaultText = function () {
            var noItemId = "no-item-selected",
                $noItem = $("#" + noItemId);

            if (!$noItem.length) {
                $noItem = $("<div/>", { "id": noItemId })
                    .append($("<h2/>", { text: options.i18n.defaultDisplayText }))
                    .append($("<p/>", { text: options.i18n.defaultDisplayTextDescription }))
                    .hide()
                    .prependTo($configContainer)
                    .fadeIn();
            }
            return $noItem;
        },
        setupAsyncForm = function ($item) {
            BAMBOO.asyncForm({
                $delegator: $configContainer,
                target: "form",
                success: function (data) {
                    var $newItem = options.configFormSuccess(data, $item.hasClass("unsaved"));
                    $item.replaceWith($newItem);
                    if (data.warnings) {
                        options.configFormWarnings(data.warnings);
                    }
                    setTimeout(function () { $newItem.removeClass("active"); }, 0); // this is so that the class doesn't get removed immediately after the DOM element is replaced which would causes the CSS transition (fading) not to be applied
                },
                cancel: function () {
                    $configContainer.children("form").css("visibility", "hidden").slideUp(function () {
                        $(this).remove();
                    });

                    // clean previous widgets
                    events.EventBus.trigger('unbind');

                    if ($item.hasClass("unsaved")) {
                        $item.remove();
                        checkListHasItems();
                    } else {
                        $item.removeClass("active");
                    }
                    insertDefaultText();
                },
                formReplaced: asyncFormReplaced
            });
        },
        asyncFormReplaced = function () {
            handleOnShow();
            setFocus();
        },
        showItemLoadingIndicator = function ($item) {
            var $configLink;
            if (!$item) {
                $item = $itemList.find('.active');
            }
            $configLink = $item.find("> a:not(.delete)");
            $(AJS.template.load(options.templates.icon).fill({ type: "loading" }).toString()).insertAfter($configLink);
        },
        hideItemLoadingIndicator = function ($item) {
            if (!$item) $item = $itemList.find('.active');
            $item.find(".icon-loading").remove();
        },
        hasUnsavedItem = function () {
            var $unsaved = $itemList.find(".unsaved");

            return ($unsaved.length ? $unsaved : false);
        },
        isOkayToProceedWithUnsavedItem = function () {
            var $unsavedItem = hasUnsavedItem();

            if ($unsavedItem) {
                if (confirm(options.i18n.confirmAbandonItem)) {
                    $unsavedItem.remove();
                    $configContainer.empty();
                    checkListHasItems();
                } else {
                    return false;
                }
            }
            return true;
        },
        checkListHasItems = function () {
            var hasItems = $itemList.children(".item").length;

            $editor.toggleClass("no-items", !hasItems);
            options.checkListHasItems(hasItems);
        },
        add = function (url, $item, attachMethod, attachTarget) {
            // clean previous widgets
            events.EventBus.trigger('unbind');

            return $.ajax({
                url: url,
                data: { decorator: 'nothing', confirm: true },
                success: function (html) {
                    $item[attachMethod](attachTarget).addClass("active unsaved").siblings().removeClass("active");
                    checkListHasItems();
                    $configContainer.html(html);
                    handleOnShow();
                    setupAsyncForm($item);
                    setFocus();
                    if (options.onShowData) {
                        options.onShowData();
                    }
                },
                cache: false
            });
        },
        edit = function (e) {
            var $item = $(this),
                $target = $(e.target),
                showData = function (html) {
                    $configContainer.html(html);
                    handleOnShow();
                    hideItemLoadingIndicator($item);
                    $item.addClass("active").siblings().removeClass("active");
                    setupAsyncForm($item);
                    setFocus();
                    if (options.onShowData) {
                        options.onShowData();
                    }
                };

            if (!$target.hasClass("delete") && !$target.hasClass("icon-delete") && !$target.is(":input")) {
                e.preventDefault();
                if ($item.hasClass("active") || !isOkayToProceedWithUnsavedItem()) {
                    setFocus();
                } else {
                    showItemLoadingIndicator($item);

                    // clean previous widgets
                    events.EventBus.trigger('unbind');

                    $.ajax({
                        url: $item.find("> a:not(.delete)").attr("href"),
                        data: { decorator: 'nothing', confirm: true },
                        success: showData,
                        error: function (data) {
                            showData(data.responseText ? data.responseText : data.responseXML);
                        },
                        cache: false
                    });
                }
            }
        },
        sortUpdate = function (event, ui) {
            if (hasUnsavedItem()) {
                alert(options.i18n.sortingHasUnsavedItemError);
                $itemList.sortable("cancel");
                return;
            }
            var $item = $(ui.item),
                showSortingError = function () {
                    var message = arguments.length ? arguments[0] : BAMBOO.buildAUIErrorMessage([ options.i18n.sortingHasUnspecifiedError ]),
                        errorDialog = new AJS.Dialog(400, 180),
                        index = $item.prevAll().length;

                    errorDialog.addHeader(options.i18n.sortingErrorDialogHeader).addPanel("errorPanel", message).addButton("Close", function (dialog) {
                        dialog.hide();
                    });
                    errorDialog.show();

                    if (($itemList.children().length - 1) == $item.data("movedFromPos")) {
                        $item.appendTo($itemList).removeData("movedFromPos");
                    } else {
                        $item.insertBefore($itemList.children("li:eq(" + ($item.data("movedFromPos") + (($item.data("movedFromPos") > index) ? 1 : 0)) + ")")).removeData("movedFromPos");
                    }
                },
                jqXHR = options.sortable.moveItem($item);

            if (jqXHR) {
                jqXHR.done(function (json) {
                    if (json.status == "ERROR") {
                        if (json.errors && json.errors.length) {
                            showSortingError(BAMBOO.buildAUIErrorMessage(json.errors));
                        } else {
                            showSortingError();
                        }
                    }
                }).fail(function () {
                    showSortingError();
                });
            }
        },
        sortStart = function (event, ui) {
            var $self = $(ui.item);

            $self.data("movedFromPos", $self.prevAll().length);
        },
        handleOnShow = function () {
            BAMBOO.DynamicFieldParameters.syncFieldShowHide($configContainer);
            AJS.messages.setup();
        };

    return {
        init: function (opts) {
            options = $.extend(true, defaults, opts);

            $(document)
                .delegate(options.itemList + " > .item", "click", edit)
                .delegate("#finalisePlanCreation, #finaliseJobCreation", "submit", function (e) {
                    if (!isOkayToProceedWithUnsavedItem()) {
                        e.preventDefault();
                    }
                });

            $(function () {
                $editor = $(options.editor);
                $configContainer = $(options.configContainer)
                    .delegate("form", "submit", function () {
                        showItemLoadingIndicator();

                        // clean previous widgets
                        events.EventBus.trigger('unbind');
                    })
                    .delegate("form", "asyncform-error asyncform-replaced", function () {
                        hideItemLoadingIndicator();
                    });
                $itemList = $(options.itemList);
                if (options.sortable.enabled) {
                    $itemList.sortable({
                        cursor: "move",
                        items: options.sortable.items,
                        update: sortUpdate,
                        start: sortStart
                    });
                }

                BAMBOO.simpleDialogForm({
                    $delegator: $itemList,
                    trigger: "a.delete",
                    dialogWidth: 540,
                    dialogHeight: options.deleteDialogHeight,
                    success: function (data) {
                        displayMessages([{ title: options.i18n.itemDeleteSuccess }]);
                        $("#item-" + data[options.deleteItemKey].id).remove();
                        checkListHasItems();
                        events.EventBus.trigger('config-panel-item-removed', data);
                    }
                });
                insertDefaultText();
            });
        },
        add: add,
        setFocus: setFocus,
        displayMessages: displayMessages,
        isOkayToProceedWithUnsavedItem: isOkayToProceedWithUnsavedItem,
        checkListHasItems: checkListHasItems,
        updateUnspecifiedSortingErrorText: function (updatedText) {
            options.i18n.sortingHasUnspecifiedError = updatedText;
        }
    }
};

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/tasks.js' */
BAMBOO.TASKS = {};

BAMBOO.TASKS.tasksConfig = function ($) {
    var events = require('util/events');
    var defaults = {
        addTaskTrigger: null,
        taskSetupContainer: null,
        taskConfigContainer: null,
        taskList: null,
        defaultTaskToSelect: null,
        taskTypeCategories: { categories: [] },
        taskTypesDialog: {
            id: "task-types-dialog",
            header: "Task types",
            width: 865,
            height: 530,
            filterForm: null
        },
        templates: {
            taskListItem: null,
            lozengeDisabled: null,
            iconTemplate: null,
            getMoreOnPac: null
        },
        i18n: {
            cancel: "Cancel",
            confirmAbandonTask: "The new task has not yet been saved. If you continue you will abandon the new task.\n\nAre you sure you want to continue?",
            tasksAddSuccess: "Task created successfully.",
            tasksAddSuccessWarning: "Possible conflicting requirements found.",
            tasksEditSuccess: "Task saved successfully.",
            tasksEditSuccessWarning: "Possible conflicting requirements found.",
            tasksDeleteSuccess: "Task deleted successfully.",
            sortingHasUnsavedTaskError: "Please save the new task before reordering.",
            sortingHasUnspecifiedError: "There was a problem moving your task.",
            sortingErrorDialogHeader: "Task move failed",
            defaultDisplayText: "No task selected",
            defaultDisplayTextDescription: "Select a task from the list on the left to configure it."
        },
        agentAvailabilityDescriptionContainer: null,
        agentAvailabilityDescriptionUrl: null,
        moveTaskUrl: null,
        moveFinalBarUrl: null
    },
    options,
    editor = new BAMBOO.ConfigPanelEditor(),
    $filterForm,
    $taskTypesDialog,
    $taskSetupContainer,
    $taskConfigContainer,
    $taskList,
    $loadingIndicator,
    $finalTasksBar,
    taskTypesDialog,
    updateAgentAvailabilityDescription = function () {
        $.ajax({
            url: options.agentAvailabilityDescriptionUrl,
            data: { decorator: "nothing", confirm: true },
            cache: false
          }).done(function (data) {
                $(options.agentAvailabilityDescriptionContainer).html(data);
          });
    },
    displaySuccessMessageAndPossibleWarning = function (isNew, data) {
        var list,
            messages = [{ title: (isNew ? options.i18n.tasksAddSuccess : options.i18n.tasksEditSuccess) }];

        if (data.taskResult.warning.requirementsConflicts) {
            list = ["<ul>"];
            for (var r = 0, rr = data.taskResult.warning.requirementsConflicts.length; r < rr; r++) {
                var req = data.taskResult.warning.requirementsConflicts[r],
                    reqKey = req.group,
                    conflicts = req.labels;

                list.push("<li>", reqKey, "</li><ul>");
                for (var i = 0, ii = conflicts.length; i < ii; i++) {
                    list.push("<li>", conflicts[i], "</li>");
                }
                list.push("</ul>");
            }
            list.push("</ul>");
            messages.unshift({ title: (isNew ? options.i18n.tasksAddSuccessWarning : options.i18n.tasksEditSuccessWarning), type: "warning", body: list.join("") });
        }
        editor.displayMessages(messages);
    },
    configFormSuccess = function (data, isUnsaved) {
        updateAgentAvailabilityDescription();
        displaySuccessMessageAndPossibleWarning(isUnsaved, data);
        var taskItem = $(AJS.template.load(options.templates.taskListItem).fill({ name: data.taskResult.task.name, description: data.taskResult.task.description, id: data.taskResult.task.id, valid : data.taskResult.task.valid }).toString()).addClass("active");
        if (data.taskResult.task.isEnabled === false) {
            $(AJS.template.load(options.templates.lozengeDisabled).toString()).insertBefore(taskItem.find(".delete"));
        }
        return taskItem;
    },
    addTask = function (e) {
        var $taskTypeListItem = $(this).append($(AJS.template.load(options.templates.iconTemplate).fill({ type: "loading" }).toString())),
            $taskConfigLink = $taskTypeListItem.find(".task-type-title > a"),
            $taskListItem = $(AJS.template.load(options.templates.taskListItem).fill({ name: $taskConfigLink.text(), description: "", id: "" , valid : true }).toString());

        e.preventDefault();

        editor.add($taskConfigLink.attr("href"), $taskListItem, "insertBefore", $finalTasksBar).success(function () {
            taskTypesDialog.remove();
        });
    },
    setupTaskTypesDialogContent = function (html) {
        var $html = $(html);

        $loadingIndicator.hide();

        taskTypesDialog.addPanel("All", $html);
        for (var i = 0, ii = options.taskTypeCategories.length; i < ii; i++) {
            var category = options.taskTypeCategories[i],
                $categoryTasks = $html.clone();
            $categoryTasks.children(":not(.task-type-category-" + category.key + ")").remove();
            if ($categoryTasks.children().length) {
                taskTypesDialog.addPanel(category.label, $categoryTasks);
            }
        }

        taskTypesDialog.show().gotoPanel(0);

        $taskTypesDialog = $("#" + options.taskTypesDialog.id).delegate(".task-type-list > li", "click", addTask);

        if (options.taskTypesDialog.filterForm) {
            $filterForm.find("> input").focus();
        }
    },
    showTaskTypesPicker = function (e) {
        var $addTaskTrigger = $(this),
            header = options.taskTypesDialog.header ? options.taskTypesDialog.header : $addTaskTrigger.text();

        e.preventDefault();

        if (!editor.isOkayToProceedWithUnsavedItem()) {
            editor.setFocus();
            return false;
        }

        if (!$loadingIndicator) {
            $loadingIndicator = $(AJS.template.load(options.templates.iconTemplate).fill({ type: "loading" }).toString()).insertAfter($addTaskTrigger.closest(".aui-toolbar"));
        } else {
            $loadingIndicator.show();
        }

        taskTypesDialog = new AJS.Dialog({
            id: options.taskTypesDialog.id,
            width: options.taskTypesDialog.width,
            height: options.taskTypesDialog.height,
            keypressListener: function (e) {
                if (e.which == jQuery.ui.keyCode.ESCAPE) {
                    taskTypesDialog.remove();
                }
            }
        });

        if (header) {
            taskTypesDialog.addHeader(header);

            if (options.taskTypesDialog.filterForm) {
                $filterForm = $(options.taskTypesDialog.filterForm).appendTo(taskTypesDialog.page[0].header);

                $filterForm.submit(function (e) { e.preventDefault(); }).find("> input").bind("keypress keyup click", function (e) {
                    var textToLookFor = $(this).val().toUpperCase();

                    e.stopPropagation();
                    $taskTypesDialog.find(".task-type-list > li").each(function () {
                        var $li = $(this);

                        $li[( $li.text().toUpperCase().indexOf(textToLookFor) >= 0 ? "show" : "hide" )]();
                    });
                });
            }
        }
        taskTypesDialog.addCancel(options.i18n.cancel, function () { taskTypesDialog.remove(); });
        if (options.templates.getMoreOnPac) {
            taskTypesDialog.addHelpText(options.templates.getMoreOnPac, {});
        }

        $.ajax({
            url: $addTaskTrigger.attr("href"),
            data: { decorator: "nothing", confirm: true },
            success: setupTaskTypesDialogContent,
            cache: false
        });
    },
    moveTask = function ($taskListItem) {
        var isMovedToFinal, status,
            requestComplete = function () {
                if (!status || status == "ERROR") {
                    triggerReflowOnPrompt();
                }
            };

        triggerReflowOnPrompt();

        if ($taskListItem.hasClass("final-tasks-bar")) {
            editor.updateUnspecifiedSortingErrorText("There was a problem moving the final tasks bar.");

            return $.ajax({
                type: "POST",
                url: options.moveFinalBarUrl,
                data: {
                    afterId: $taskListItem.nextAll(".item:first").data("item-id"),
                    beforeId: $taskListItem.prevAll(".item:first").data("item-id")
                },
                dataType: "json",
                complete: requestComplete
            }).done(function (json) {
                status = json.status;
                if (status != "ERROR") {
                    $taskListItem.nextAll(".item").addClass("final").end().prevAll(".item").removeClass("final");
                }
            });
        } else {
            isMovedToFinal = !!$taskListItem.prevAll(".final-tasks-bar").length;
            editor.updateUnspecifiedSortingErrorText(options.i18n.sortingHasUnspecifiedError);

            return $.ajax({
                type: "POST",
                url: options.moveTaskUrl,
                data: {
                    taskId: $taskListItem.data("item-id"),
                    afterId: $taskListItem.nextAll(".item:first").data("item-id"),
                    beforeId: $taskListItem.prevAll(".item:first").data("item-id"),
                    finalising: isMovedToFinal
                },
                dataType: "json",
                complete: requestComplete
            }).done(function (json) {
                status = json.status;
                if (status != "ERROR") {
                    $taskListItem.toggleClass("final", isMovedToFinal);
                }
            });
        }
    },
    triggerReflowOnPrompt = function () {
        var prompt;

        if ($.browser.msie && parseInt($.browser.version, 10) <= 8) {
            prompt = $("#final-tasks-prompt")[0];
            prompt.style.zoom = "100%";
            prompt.style.zoom = "normal";
        }
    };

    return {
        init: function (opts) {

            options = $.extend(true, defaults, opts);

            editor.init({
                editor: options.taskSetupContainer,
                configContainer: options.taskConfigContainer,
                itemList: options.taskList,
                deleteItemKey: "taskResult",
                configFormSuccess: configFormSuccess,
                templates: {
                    item: options.templates.taskListItem,
                    icon: options.templates.iconTemplate
                },
                i18n: {
                    confirmAbandonItem: options.i18n.confirmAbandonTask,
                    itemDeleteSuccess: options.i18n.tasksDeleteSuccess,
                    sortingHasUnsavedItemError: options.i18n.sortingHasUnsavedTaskError,
                    sortingHasUnspecifiedError: options.i18n.sortingHasUnspecifiedError,
                    sortingErrorDialogHeader: options.i18n.sortingErrorDialogHeader,
                    defaultDisplayText: options.i18n.defaultDisplayText,
                    defaultDisplayTextDescription: options.i18n.defaultDisplayTextDescription
                },
                sortable: {
                    items: "> li:not(#final-tasks-prompt)",
                    moveItem: moveTask
                }
            });

            $(document).undelegate(options.addTaskTrigger, "click");
            $(document)
                    .delegate(options.addTaskTrigger, "click", showTaskTypesPicker);

            events.EventBus.on('config-panel-item-removed', updateAgentAvailabilityDescription);

            $(function () {
                $taskSetupContainer = $(options.taskSetupContainer);
                $taskList = $(options.taskList);
                $taskConfigContainer = $(options.taskConfigContainer);
                $finalTasksBar = $taskList.find(".final-tasks-bar");

                options.defaultTaskToSelect && $taskList.find("#item-" + options.defaultTaskToSelect).click();
            });
        }
    }
}(jQuery);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/repository.js' */
(function ($, BAMBOO) {
    BAMBOO.REPOSITORY = {};

    BAMBOO.REPOSITORY.repositoryConfig = (function () {
        var events = require('util/events');
        var defaults = {
                addRepositoryTrigger: null,
                repositorySetupContainer: null,
                repositoryConfigContainer: null,
                repositoryList: null,
                selectRepositorySelector: "#selectedRepository",
                templates: {
                    repositoryListItem: null,
                    repositoryListItemDefaultMarker: null,
                    iconTemplate: null
                },
                i18n: {
                    cancel: "Cancel",
                    confirmAbandonRepository: "The new repository has not yet been saved. If you continue you will abandon the new repository.\n\nAre you sure you want to continue?",
                    repositoryAddSuccess: "Repository created successfully.",
                    repositoryEditSuccess: "Repository updated successfully.",
                    repositoryDeleteSuccess: "Repository deleted successfully.",
                    sortingHasUnsavedRepositoryError: "Please save the new repository before reordering.",
                    defaultDisplayText: "No repository selected",
                    defaultDisplayTextDescription: "Select a repository from the list on the left to configure it.",
                    repositoryMovingError: AJS.I18n.getText("There was a problem moving your repository."),
                    repositoryMovingFailure: AJS.I18n.getText("Repository move failed")
                },
                moveRepositoryUrl: null,
                markDefault: true,
                getRepoConfigUrl: null,
                preselectItemId: null
            },
            options,
            editor = new BAMBOO.ConfigPanelEditor(),
            $repositorySetupContainer,
            $repositoryConfigContainer,
            $repositoryList,
            $loadingIndicator,
            checkListHasItems = function(hasItems) {
                if (hasItems) {
                    markDefaultRepository();
                }
            },
            configFormSuccess = function (data, isUnsaved) {
                editor.displayMessages([{ title: (isUnsaved ? options.i18n.repositoryAddSuccess : options.i18n.repositoryEditSuccess) }]);
                return $(AJS.template.load(options.templates.repositoryListItem).fill({ name: data.repositoryResult.name, id: data.repositoryResult.id }).toString()).addClass("active");
            },
            configFormWarnings = function (warnings) {
                for (var i = 0, ii = warnings.length; i < ii; i++) {
                    editor.displayMessages([{ type: "warning", title: warnings[i] }]);
                }
            },
            markDefaultRepository = function() {
                if (options.markDefault) {
                    $repositoryList.find(".item-default").removeClass("item-default").find(".item-default-marker").remove();
                    $repositoryList.find(".item:first").addClass("item-default").find(".item-title").append(
                        AJS.template.load(options.templates.repositoryListItemDefaultMarker).toString()
                    );
                }
            },
            addRepository = function (e) {
                var $addRepositoryTrigger = $(this),
                    $repositoryListItem = $(AJS.template.load(options.templates.repositoryListItem).fill({ name: "New Repository", id: "" }).toString());

                e.preventDefault();

                if (!editor.isOkayToProceedWithUnsavedItem()) {
                    editor.setFocus();
                    return false;
                }

                if (!$loadingIndicator) {
                    $loadingIndicator = $(AJS.template.load(options.templates.iconTemplate).fill({ type: "loading" }).toString()).insertAfter($addRepositoryTrigger.closest(".aui-toolbar"));
                } else {
                    $loadingIndicator.show();
                }

                editor.add($addRepositoryTrigger.attr("href"), $repositoryListItem, "appendTo", $repositoryList).success(function () {
                    $loadingIndicator.hide();
                });

                markDefaultRepository();
            },
            moveRepository = function ($repositoryListItem) {
                return $.post(options.moveRepositoryUrl, {
                    repositoryId: $repositoryListItem.data("item-id"),
                    afterPosition: $repositoryListItem.nextAll(".item:first").data("item-id"),
                    beforePosition: $repositoryListItem.prevAll(".item:first").data("item-id"),
                    "bamboo.successReturnMode": "json"
                }).done(markDefaultRepository);
            },
            loadRepoConfigJqXHR,
            triggerSelectorEvent = function ($element) {
                var $selected = $element.find(":selected");
                var isLinked = !!$selected.data('shared');

                events.EventBus.trigger('repository:selector:change',
                    {}, isLinked ? 'LINKED' : 'NEW', $selected.val()
                );
            },
            selectRepositoryType = function (e) {
                var $selectRepository = $(this),
                    $selectRepositoryFieldGroup = $selectRepository.closest(".field-group"),
                    $selectRepositoryError = $selectRepositoryFieldGroup.next(".aui-message.error"),
                    val = $selectRepository.val(),
                    $loading = $selectRepository.next(".icon-loading"),
                    $repoConfig = $("#repository-configuration"),
                    $repoAdvanced = $repoConfig.find('.collapsible-section'),
                    $convertToLinked = $('.convertRepositoryToLinked'),
                    $repoEdit = $("#repository-edit-" + BAMBOO.escapeIdToJQuerySelector(val)),
                    isGlobal = $.isNumeric(val),
                    data = {
                        decorator: "nothing",
                        confirm: true,
                        selectedRepository: val // this makes the dependsOn stuff on the ui.bambooSection not add display:none; to the fieldset
                    };

                $convertToLinked.toggle(!isGlobal);

                if ($selectRepositoryError.length) {
                    $selectRepositoryError.remove();
                }

                if ($repoEdit.length) {
                    // manually trigger selector change event
                    triggerSelectorEvent($selectRepository);
                }
                else {
                    e && e.stopPropagation();

                    if ($loading.length) {
                        $loading.show();
                    } else {
                        $loading = $(AJS.template.load(options.templates.iconTemplate).fill({ type: "loading" }).toString()).insertAfter($selectRepository);
                    }

                    data[(isGlobal ? "globalRepositoryId" : "repositoryPluginKey")] = val;

                    // Cancel pending request (if applicable)
                    if (loadRepoConfigJqXHR && loadRepoConfigJqXHR.readyState < 4) {
                        loadRepoConfigJqXHR.abort();
                    }

                    loadRepoConfigJqXHR = $.get(options.getRepoConfigUrl, data).done(function (html) {
                        var $html = $(html),
                            $basic = $html.filter("#repository-edit-html").children(),
                            $advanced = $html.filter("#repository-advanced-edit-html").children(),
                            $scripts = $html.filter("script");

                        if ($basic.length) {
                            $repoAdvanced.before($basic.hide());
                        }
                        if ($advanced.length) {
                            $repoAdvanced.children(".collapsible-details").prepend($advanced.hide());
                        }
                        if ($basic.length || $advanced.length) {
                            BAMBOO.DynamicFieldParameters.syncFieldShowHide($repositoryConfigContainer, true);
                        }

                        // If any scripts were returned append them to the <head> so that they get executed
                        if ($scripts.length) {
                            $scripts.appendTo("head");
                        }

                        // manually trigger selector change event
                        triggerSelectorEvent($selectRepository);
                    }).fail(function (jqXHR, textStatus) {
                        if (textStatus != "abort") {
                            $selectRepositoryError = BAMBOO.buildAUIErrorMessage([ "An error occurred while retrieving the configuration for " + $selectRepository.find(":selected").text() ])
                                .append('<p>Try to <a class="try-again">load the configuration</a> again, or if the problem persists please <a href="' + AJS.contextPath() + '/viewAdministrators.action">contact your administrators</a>.</p>')
                                .delegate("a.try-again", "click", function () { selectRepositoryType.call($selectRepository[0]); })
                                .insertAfter($selectRepositoryFieldGroup);
                        }
                    }).always(function (jqXHR, textStatus) {
                        if (textStatus != "abort") {
                            $loading.hide();
                        }
                    });
                }
            };

        return {
            init: function (opts) {
                options = $.extend(true, defaults, opts);

                editor.init({
                    editor: options.repositorySetupContainer,
                    configContainer: options.repositoryConfigContainer,
                    itemList: options.repositoryList,
                    deleteItemKey: "repositoryResult",
                    checkListHasItems: checkListHasItems,
                    configFormSuccess: configFormSuccess,
                    configFormWarnings: configFormWarnings,
                    templates: {
                        item: options.templates.repositoryListItem,
                        icon: options.templates.iconTemplate
                    },
                    i18n: {
                        confirmAbandonItem: options.i18n.confirmAbandonRepository,
                        itemDeleteSuccess: options.i18n.repositoryDeleteSuccess,
                        sortingHasUnsavedItemError: options.i18n.sortingHasUnsavedRepositoryError,
                        sortingHasUnspecifiedError: options.i18n.repositoryMovingError,
                        sortingErrorDialogHeader: options.i18n.repositoryMovingFailure,
                        defaultDisplayText: options.i18n.defaultDisplayText,
                        defaultDisplayTextDescription: options.i18n.defaultDisplayTextDescription
                    },
                    sortable: {
                        enabled: !!options.moveRepositoryUrl,
                        items: "> li:not(#repository-trigger-item)",
                        moveItem: moveRepository
                    },
                    deleteDialogHeight: 540
                });

                $(function () {
                    $repositorySetupContainer = $(options.repositorySetupContainer)
                        .delegate(options.addRepositoryTrigger, "click", addRepository)
                        .delegate(options.selectRepositorySelector, "change", selectRepositoryType);
                    $repositoryList = $(options.repositoryList);
                    $repositoryConfigContainer = $(options.repositoryConfigContainer);

                    editor.checkListHasItems();

                    if (options.preselectItemId) {
                        $(options.repositoryList).children("#item-" + options.preselectItemId).click();
                    }
                });
            }
        }
    }());


    BAMBOO.REPOSITORY.buildStrategyToggle = (function () {
        var defaults = {
                noVcsStrategyOptions : null,
                vcsStrategyOptions : null,
                strategyList: null
            },
            options,
            $strategyList,
            toggleStrategiesForCreate = function () {
                if (!$strategyList) {
                    $strategyList = $(options.strategyList);
                }
                var value = $strategyList.val();
                $strategyList.attr("disabled", "disabled");
                if ($(this).val() == "nullRepository") {
                    $strategyList.html(options.noVcsStrategyOptions);
                } else {
                    $strategyList.html(options.vcsStrategyOptions);
                }
                $strategyList.removeAttr("disabled").val(value).change();
            };
        return {
            init: function (opts) {
                options = $.extend(true, defaults, opts);
                $(document).delegate("#selectedRepository", "change", toggleStrategiesForCreate);
            }
        }
    }());

    BAMBOO.REPOSITORY.CheckoutTaskConfiguration = (function () {
        var defaults = {
                addCheckoutSelector: null,
                removeCheckoutSelector: '.toolbar-trigger',
                checkoutListSelector: null,
                checkoutDirectorySelector: null,
                selectedRepositorySelector: 'select[name^="selectedRepository_"]',
                templates: {
                    checkoutListItem: null
                },
                i18n: {
                    checkoutDirectoryInUse: null
                }
            },
            options,
            $list,
            $form,
            addCheckoutListItem = function () {
                var newIndex, $lastCheckout;

                $lastCheckout = $list.children(':last');
                newIndex = ($lastCheckout.length ? (parseInt($lastCheckout.attr('data-checkout-id'), 10) + 1) : 0);

                $(AJS.template.load(options.templates.checkoutListItem).fill({ index: newIndex }).toString())
                    .hide().appendTo($list)
                    .find(options.selectedRepositorySelector).end()
                    .slideDown();

                BAMBOO.DynamicFieldParameters.syncFieldShowHide($list);
            },
            removeCheckoutListItem = function () {
                $(this).closest('.aui-toolbar').closest('li').slideUp(function () { $(this).remove(); });
            },
            validateForm = function (e) {
                var checkoutDirectories = {},
                    hasError = false,
                    checkField = function () {
                        var $field = $(this),
                            val = $field.val();

                        if (checkoutDirectories.hasOwnProperty(val)) {
                            $('<div/>', { 'class': 'error', text: options.i18n.checkoutDirectoryInUse }).insertAfter($field.next('.description'));
                            hasError = true;
                        } else {
                            checkoutDirectories[val] = true;
                        }
                    },
                    $trigger = $(this),
                    $fieldsToCheck = $form.find(options.checkoutDirectorySelector);

                $form.find('.error').remove();

                if ($trigger.is(':text')) {
                    $fieldsToCheck = $fieldsToCheck.not($trigger);
                    $fieldsToCheck.each(checkField);
                    checkField.apply(this);
                } else {
                    $fieldsToCheck.each(checkField);
                    if (hasError) {
                        e.preventDefault();
                        e.stopPropagation();
                    }
                }
            };

        return {
            init: function (opts) {
                options = $.extend(true, defaults, opts);

                $(function () {
                    $list = $(options.checkoutListSelector)
                        .delegate(options.removeCheckoutSelector, 'click', removeCheckoutListItem)
                        .delegate(options.checkoutDirectorySelector, 'blur', validateForm);

                    $form = $list.closest('form').submit(validateForm);
                    $(options.addCheckoutSelector).click(addCheckoutListItem);
                });
            }
        };
    }());

    BAMBOO.REPOSITORY.viewUsages = (function () {
        var defaults = {
                trigger: ".viewRepositoryUsagesTrigger",
                labelsDialog: {
                    id: "repositoryUsagesDialog",
                    header: null,
                    width: 600,
                    height: 300
                },
                i18n: {
                    close: "Close"
                },
                templates: {
                    iconTemplate: '<span class="icon icon-{type}"></span>'
                }
            },
            options,
            dialog,
            initialised = false,
            setupDialogContent = function (html) {
                var $html = $(html);
                dialog.addPanel("All", $html).show();
                $("#viewRepositoryUsagesForm .buttons-container").hide();
            },
            showDialog = function (e) {
                e.preventDefault();
                var $trigger = $(this);

                dialog = new AJS.Dialog({
                    id: options.labelsDialog.id,
                    width: options.labelsDialog.width,
                    height: options.labelsDialog.height,
                    keypressListener: function (e) {
                        if (e.which == jQuery.ui.keyCode.ESCAPE) {
                            dialog.remove();
                        }
                    }
                });

                dialog.addCancel(options.i18n.close, function () { dialog.remove(); })
                    .addHeader(options.labelsDialog.header);

                $.ajax({
                    url: $trigger.attr("href"),
                    data: { decorator: 'nothing', confirm: true },
                    success: setupDialogContent,
                    cache: false
                });
            };
        return {
            init: function (opts) {
                if (!initialised) {
                    options = $.extend(true, defaults, opts);

                    $(document).undelegate("." + options.labelsDialog.id)
                        .delegate(options.trigger, "click." + options.labelsDialog.id, showDialog);
                    initialised = true;
                }
            }
        };
    }());
}(jQuery, window.BAMBOO = (window.BAMBOO || {})));
/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/chainTriggers.js' */
(function ($, BAMBOO) {
    BAMBOO.TRIGGER = {};

    BAMBOO.TRIGGER.chainTriggerConfig = (function () {
        var defaults = {
                    addTriggerTrigger: null,
                    triggerSetupContainer: null,
                    triggerConfigContainer: null,
                    triggerList: null,
                    templates: {
                        triggerListItem: null,
                        triggerListItemDefaultMarker: null,
                        iconTemplate: null,
                        lozengeDisabled: null
                    },
                    triggerTypesDialog: {
                        id: "trigger-types-dialog",
                        header: "Select trigger",
                        width: 865,
                        height: 530,
                        filterForm: null
                    },
                    i18n: {
                        cancel: "Cancel",
                        confirmAbandonTrigger: "The new trigger has not yet been saved. If you continue you will abandon the new trigger.\n\nAre you sure you want to continue?",
                        triggerAddSuccess: "Trigger created successfully.",
                        triggerEditSuccess: "Trigger saved successfully.",
                        triggerDeleteSuccess: "Trigger deleted successfully.",
                        defaultDisplayText: "No trigger selected",
                        defaultDisplayTextDescription: "Select a trigger from the list on the left to configure it."
                    },
                    preselectItemId: null
                },
                options,
                editor = new BAMBOO.ConfigPanelEditor(),
                $triggerSetupContainer,
                $triggerConfigContainer,
                $triggerList,
                $loadingIndicator,
                $triggerTypesDialog,
                triggerTypesDialog,
                checkListHasItems = function(hasItems) {
                },
                configFormSuccess = function (data, isUnsaved) {
                    editor.displayMessages([{ title: (isUnsaved ? options.i18n.triggerAddSuccess : options.i18n.triggerEditSuccess) }]);
                    var triggerItem = $(AJS.template.load(options.templates.triggerListItem).fill({ name: data.triggerResult.name, id: data.triggerResult.id, description: data.triggerResult.description }).toString()).addClass("active");
                    if (data.triggerResult.isEnabled === false) {
                        $(AJS.template.load(options.templates.lozengeDisabled).toString()).insertBefore(triggerItem.find(".delete"));
                    }
                    return triggerItem;
                },
                configFormWarnings = function (warnings) {
                    for (var i = 0, ii = warnings.length; i < ii; i++) {
                        editor.displayMessages([{ type: "warning", title: warnings[i] }]);
                    }
                },
                addTrigger = function (e) {
                    var $triggerTypeListItem = $(this).append($(AJS.template.load(options.templates.iconTemplate).fill({ type: "loading" }).toString())),
                        $triggerConfigLink = $triggerTypeListItem.find(".trigger-type-title > a"),
                        $triggerListItem = $(AJS.template.load(options.templates.triggerListItem).fill({ name: $triggerConfigLink.text(), description: "", id: "" , valid : true }).toString());

                    e.preventDefault();

                    editor.add($triggerConfigLink.attr("href"), $triggerListItem, "appendTo", $triggerList).success(function () {
                        triggerTypesDialog.remove();
                    });

                },
                setupTriggerTypesDialogContent = function (html) {
                    var $html = $(html);

                    $loadingIndicator.hide();

                    triggerTypesDialog.addPanel("All", $html);
                    triggerTypesDialog.show().gotoPanel(0);

                    $triggerTypesDialog = $("#" + options.triggerTypesDialog.id).delegate(".trigger-type-list > li", "click", addTrigger);

                    if (options.triggerTypesDialog.filterForm) {
                        $filterForm.find("> input").focus();
                    }
                },
                showTaskTypesPicker = function (e) {
                    var $addTriggerTrigger = $(this),
                        header = options.triggerTypesDialog.header ? options.triggerTypesDialog.header : $addTriggerTrigger.text();

                    e.preventDefault();

                    if (!editor.isOkayToProceedWithUnsavedItem()) {
                        editor.setFocus();
                        return false;
                    }

                    if (!$loadingIndicator) {
                        $loadingIndicator = $(AJS.template.load(options.templates.iconTemplate).fill({ type: "loading" }).toString()).insertAfter($addTriggerTrigger.closest(".aui-toolbar"));
                    } else {
                        $loadingIndicator.show();
                    }

                    triggerTypesDialog = new AJS.Dialog({
                                                         id: options.triggerTypesDialog.id,
                                                         width: options.triggerTypesDialog.width,
                                                         height: options.triggerTypesDialog.height,
                                                         keypressListener: function (e) {
                                                             if (e.which == jQuery.ui.keyCode.ESCAPE) {
                                                                 triggerTypesDialog.remove();
                                                             }
                                                         }
                                                     });

                    if (header) {
                        triggerTypesDialog.addHeader(header);

                        if (options.triggerTypesDialog.filterForm) {
                            $filterForm = $(options.triggerTypesDialog.filterForm).appendTo(triggerTypesDialog.page[0].header);

                            $filterForm.submit(function (e) { e.preventDefault(); }).find("> input").bind("keypress keyup click", function (e) {
                                var textToLookFor = $(this).val().toUpperCase();

                                e.stopPropagation();
                                $triggerTypesDialog.find(".trigger-type-list > li").each(function () {
                                    var $li = $(this);

                                    $li[( $li.text().toUpperCase().indexOf(textToLookFor) >= 0 ? "show" : "hide" )]();
                                });
                            });
                        }
                    }
                    triggerTypesDialog.addCancel(options.i18n.cancel, function () { triggerTypesDialog.remove(); });
                    if (options.templates.getMoreOnPac) {
                        triggerTypesDialog.addHelpText(options.templates.getMoreOnPac, {});
                    }

                    $.ajax({
                               url: $addTriggerTrigger.attr("href"),
                               data: { decorator: "nothing", confirm: true },
                               success: setupTriggerTypesDialogContent,
                               cache: false
                           });
                };

        return {
            init: function (opts) {
                options = $.extend(true, defaults, opts);

                editor.init({
                                editor: options.triggerSetupContainer,
                                configContainer: options.triggerConfigContainer,
                                itemList: options.triggerList,
                                deleteItemKey: "triggerResult",
                                checkListHasItems: checkListHasItems,
                                configFormSuccess: configFormSuccess,
                                configFormWarnings: configFormWarnings,
                                templates: {
                                    item: options.templates.triggerListItem,
                                    icon: options.templates.iconTemplate
                                },
                                i18n: {
                                    confirmAbandonItem: options.i18n.confirmAbandonTrigger,
                                    itemDeleteSuccess: options.i18n.triggerDeleteSuccess,
                                    defaultDisplayText: options.i18n.defaultDisplayText,
                                    defaultDisplayTextDescription: options.i18n.defaultDisplayTextDescription
                                },
                                sortable: {
                                    enabled: false
                                }
                            });

                $(function () {
                    $triggerSetupContainer = $(options.triggerSetupContainer)
                            .delegate(options.addTriggerTrigger, "click", showTaskTypesPicker);
                    $triggerList = $(options.triggerList);
                    $triggerConfigContainer = $(options.triggerConfigContainer);

                    editor.checkListHasItems();

                    if (options.preselectItemId) {
                        $(options.triggerList).children("#item-" + options.preselectItemId).click();
                    }
                });
            }
        }
    }());
}(jQuery, window.BAMBOO = (window.BAMBOO || {})));
/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/labels.js' */
(function ($, BAMBOO) {
    BAMBOO.LABELS = {};
    BAMBOO.LABELS.LabelDialog = LabelDialog;

    function LabelDialog(opts) {
        var defaults = {
                trigger: '.labels-edit',
                labelView: '.label-list, .label-none',
                labelsDialog: {
                    id: 'labels-dialog',
                    header: null,
                    width: 550,
                    height: 250,
                    shortcutKey: "L"
                },
                removeUrl: ''
            },
            options = $.extend(true, defaults, opts),
            $loadingIndicator,
            dialog,
            setupDialogContent = function (html) {
                var $html = $(html);
                $loadingIndicator.hide();

                dialog.addPanel('All', $html).show();
            },
            showDialog = function (e) {
                e.preventDefault();
                var $trigger = $(this);

                if (!$loadingIndicator) {
                    $loadingIndicator = $(widget.icons.icon({ type: 'loading' })).insertAfter($trigger);
                } else {
                    $loadingIndicator.show();
                }

                dialog = new AJS.Dialog({
                    id: options.labelsDialog.id,
                    width: options.labelsDialog.width,
                    height: options.labelsDialog.height,
                    keypressListener: function (e) {
                        if (e.which == jQuery.ui.keyCode.ESCAPE) {
                            dialog.remove();
                        }
                    }
                });

                dialog.addCancel("Close", function () { dialog.remove(); })
                      .addHeader(options.labelsDialog.header);

                if (options.labelsDialog.shortcutKey) {
                    dialog.addHelpText(AJS.format("Shortcut tip: pressing \u003ckbd\u003e{0}\u003c/kbd\u003e also opens this dialog box", options.labelsDialog.shortcutKey));
                }

                $.ajax({
                    url: $trigger.attr('href'),
                    data: { decorator: 'nothing', confirm: true },
                    success: setupDialogContent,
                    cache: false
                });
                $('#' + options.labelsDialog.id).addClass('labels-dialog');
            },
            addLabels = function (e) {
                e.preventDefault();

                var $form = $(this),
                    $input = $form.find('input:text').attr('readonly', 'readonly'),
                    $submit = $form.find('input:submit').attr('disabled', 'disabled'),
                    $loading = $(widget.icons.icon({ type: 'loading' })).insertAfter($submit);

                $.post($form.attr('action'), $form.serialize(), function (data) {
                    var fieldErrors;
                    $form.find('.error,.aui-message').remove();
                    if (typeof data == 'object') {
                        // Returned data is JSON
                        fieldErrors = data.fieldErrors;
                        if (fieldErrors) {
                            for (var fieldName in fieldErrors) {
                                if (fieldErrors.hasOwnProperty(fieldName)) {
                                    BAMBOO.addFieldErrors($form, fieldName, fieldErrors[fieldName]);
                                }
                            }
                        }
                        if (data.errors) {
                            $form.prepend(BAMBOO.buildAUIErrorMessage(data.errors));
                        }
                    } else {
                        // Returned data isn't JSON, assume it's HTML
                        updateDisplay(data);
                        $form.find('input:text').val('');
                    }
                    $input.removeAttr('readonly');
                    $submit.removeAttr('disabled');
                    $loading.remove();
                    $form.find('input:text').focus();
                });
            },
            deleteLabel = function (e) {
                e.preventDefault();

                $.post(options.removeUrl, { selectedLabel: $(this).closest('.aui-label').attr('data-label') }).done(updateDisplay);
            },
            updateDisplay = function (data) {
                var $html = $(data),
                    edit = $html.filter('.label-edit-mode').html(),
                    view = $html.filter('.label-view-mode').html();

                $(options.labelView).each(function () {
                    var $replaceTarget = $(this);
                    $replaceTarget.replaceWith($replaceTarget.closest('#' + options.labelsDialog.id).length ? edit : view);
                });


                var labels = AJS.$('#plan-labels');
                if (labels.length) {
                    var $container = $('<div/>').append(view);
                    $container.find('.label-none').remove();

                    labels.html($container.html());
                }

            },
            handlersBoundKey = options.labelsDialog.id + 'handlersBound';

        if (!$(document).data(handlersBoundKey)) {
            $(document)
                .undelegate('.' + options.labelsDialog.id)
                .delegate(options.trigger, 'click.' + options.labelsDialog.id, showDialog)
                .delegate('#' + options.labelsDialog.id + ' form', 'submit.' + options.labelsDialog.id, addLabels)
                .delegate('#' + options.labelsDialog.id + ' .aui-icon-close', 'click.' + options.labelsDialog.id, deleteLabel);

            if (options.labelsDialog.shortcutKey) {
                $(function(){
                    AJS.whenIType(options.labelsDialog.shortcutKey).click(options.trigger);
                });
            }
            $(document).data(handlersBoundKey, true);
        }
    }
}(AJS.$, window.BAMBOO = (window.BAMBOO || {})));

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/logs.js' */
/* Chain Log Tables */
(function ($) {
    var BAMBOO = window.BAMBOO || {};
    BAMBOO.LOGS = {};
    BAMBOO.LOGS.chainTableLiveView = (function () {
        var opts = {
            getBuildUrl: null,
            chainStatus: "",
            noLogsFound: 'No logs were found for this Job',
            templates: {
                logTableRow: null
            }
        },
        updateTimeout,
        update = function () {
            clearTimeout(updateTimeout);
            updateLogDisplay();

            //If build not finished update again in 5 seconds
            if (opts.chainStatus != "Finished" && opts.chainStatus != "NotBuilt") {
                updateTimeout = setTimeout(update, 5000);
            }
        },
        updateLogDisplay = function() {
            $(".chain-logs-table > tbody > tr.log-trace > td.code table").each(function() {
                var $logContainer = $(this),
                    $tr = $logContainer.closest("tr").prev();

                if ($tr.hasClass("expanded")) {
                    updateSingleLog($tr.find(".twixie > span"));
                }
            });
        },
        updateSingleLog = function ($twixie) {
            var $tr = $twixie.closest("tr"),
                $stack = $tr.next(),
                $logContainer = $stack.find("table"),
                $loading = $('<span />', { 'class': 'icon icon-loading' });

            if ($logContainer.data('dontUpdate') || $logContainer.data('updateInProgress')) {
                return;
            }
            $logContainer.data('updateInProgress', true);

            $twixie.hide().before($loading);

            $.ajax({
                url: opts.getBuildUrl.replace("@KEY@", $logContainer.attr("id")),
                data: {
                    expand: 'logEntries[-' + 25 + ':]',
                    'max-results': 25
                },
                dataType: "json",
                contentType: "application/json",
                cache: false,
                success: function (buildResult) {
                    var newLogBody = '';

                    if (buildResult.lifeCycleState == "Finished" || buildResult.lifeCycleState == "NotBuilt") {
                        //if build result is finished there will be no more log changes
                        $logContainer.data('dontUpdate', true);
                    }
                    if (buildResult.logEntries && typeof(buildResult.logEntries.logEntry) != "undefined") {
                        for (var i = 0, ii = buildResult.logEntries.logEntry.length; i < ii; i++) {
                            var logEntry = buildResult.logEntries.logEntry[i];

                            newLogBody += AJS.template.load(opts.templates.logTableRow)
                                .fill({ time: logEntry.formattedDate })
                                .fillHtml({ log: logEntry.log }).toString();
                        }
                    }

                    if ($.trim(newLogBody).length) {
                        $logContainer.html(newLogBody);
                    } else {
                        $logContainer.html(AJS.template.load(opts.templates.logTableRow)
                            .fill({time : ''})
                            .fillHtml({ log: opts.noLogsFound }).toString());
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Error occurred when doing the update, try again in 30 sec
                    $logContainer.html(opts.noLogsFound);
                },
                complete: function (jqXHR, textStatus) {
                    $loading.remove();
                    $twixie.show();
                    $logContainer.data('updateInProgress', false);
                }
            });
        };

        return {
            init: function(options) {
                var twixieSelector = ".chain-logs-table > tbody > tr > .twixie > span",
                    twixieAllSelector = ".chain-logs-table > thead > tr > .twixie span[role]";

                $.extend(true, opts, options);

                $(document)
                    .undelegate(twixieSelector, "click")
                    .delegate(twixieSelector, "click", function (e) {
                        var $twixie = $(this),
                                $tr = $twixie.closest("tr"),
                                $stack = $tr.next(),
                                newTwixieText = !$twixie.hasClass("icon-collapse") ? "Collapse" : "Expand"; //negated because we toggle the class later

                        $stack[$tr.hasClass("collapsed") ? "show" : "hide"]();
                        $tr.toggleClass("collapsed expanded");
                        $twixie.toggleClass("icon-collapse icon-expand").attr("title", newTwixieText).html("<span>" + newTwixieText + "</span>");
                        if ($tr.hasClass("expanded")) {
                            updateSingleLog($twixie);
                        }
                    })
                    .undelegate(twixieAllSelector, "click")
                    .delegate(twixieAllSelector, "click", function (e) {
                        var $trigger = $(this),
                                $li = $trigger.closest("li"),
                                $table = $trigger.closest("table");

                        if ($li.hasClass("expand-all")) {
                            $table.find("tbody > .collapsed .twixie > span").click();
                        } else if ($li.hasClass("collapse-all")) {
                            $table.find("tbody > .expanded .twixie > span").click();
                        }
                    });

                update();
            }
        }
    })();
})(jQuery);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/plugin-content.js' */
(function ($) {
    var BAMBOO = window.BAMBOO || {};
    BAMBOO.AGGREGATE_PLUGIN_CONTENT = {};
    BAMBOO.AGGREGATE_PLUGIN_CONTENT.loadPluginContent = (function () {
        var opts = {
            pluginUrl: null,
            jobKeySelector: null,
            contentSelector: null
        },
        $content,
        $jobDropdown,
        update = function () {
            var jobKey = $jobDropdown.val(),
                buildUrl = AJS.template(opts.pluginUrl).fill({ buildKey: jobKey, planKey: jobKey }).toString(),
                $tabsContainer = $('.aui-tabs.aui-tabs-disabled').addClass('loading');

            $.ajax({
                cache: false,
                url: buildUrl,
                beforeSend: function (jqXHR) {
                    jqXHR.setRequestHeader('X-No-Decorate', true);
                },
                success: function (data, textStatus, jqXHR) {
                    // If no data is returned, or an entire web page, go directly to that page for normal error handling
                    if (!$.trim(data) || /<html/i.test(data)) {
                        return window.location = this.url;
                    }
                    $content.html(data);
                    $tabsContainer.removeClass('loading');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    if (textStatus != 'abort') {
                        return window.location = this.url;
                    }
                }
            });
        };

        return {
            init: function (options) {
                opts = $.extend(true, options);

                $(function () {
                    $content = $(opts.contentSelector);
                    $jobDropdown = $(opts.jobKeySelector).change(update);
                    update();
                });
            }
        }
    })();
})(jQuery);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/manual-stages.js' */
(function($) {
    var BAMBOO = window.BAMBOO || {};
    BAMBOO.STAGES = {};
    BAMBOO.STAGES.manualStagesSelection = (function () {
        return {
            init: function() {
               $("#stageContainer").delegate("input:checkbox", "click", function() {
                    var $checkbox = $(this),
                        checked = $checkbox.is(":checked"),
                        $selectedStage = $("#selectedStage"),
                        prevManualFound = false;

                    if (checked) {
                        $selectedStage.val($checkbox.val());
                    } else {
                        $selectedStage.val("");
                    }

                    $checkbox.parent().closest(".checkbox").toggleClass("selected", checked).prevAll(".checkbox").each(function () {
                        var $checkboxContainer = $(this),
                            $checkbox = $checkboxContainer.children("input:checkbox"),
                            isManual = $checkboxContainer.hasClass("manual");
                        if (checked) {
                            $checkboxContainer.addClass("selected");
                            if (isManual) {
                                $checkbox.attr("checked", "checked").attr("disabled", "disabled");
                            }
                        } else {
                            if (isManual && !prevManualFound) {
                                $selectedStage.val($checkbox.val());
                                $checkbox.removeAttr("disabled");
                                prevManualFound = true;
                            }
                        }
                    }).end().nextAll(".checkbox").each(function () {
                        var $checkboxContainer = $(this);
                        if ($checkboxContainer.hasClass("manual")) {
                            return false; // breaks the loop
                        } else {
                            $checkboxContainer.toggleClass("selected", checked);
                        }
                    });
                });
            }
        }
    })();
})(jQuery);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/dashboard.js' */
(function($, BAMBOO){
    BAMBOO.DASHBOARD = {};

    BAMBOO.DASHBOARD.Expander = function (opts) {
        var defaults = {
                toggleFilterClass: null,
                triggerSelector: null,
                triggerRootSelector: null,
                tableSelector: null,
                pageSize: 50,
                disabledAttr: 'aria-disabled',
                disabledProperty: 'disabled',
                editFilterClass: 'edit-project-filter',
                icons: {
                    filter: 'filter',
                    loading: 'loading'
                }
            },
            options = $.extend(true, defaults, opts),
            request,
            iconClassPrefix = 'icon-',
            iconFilterClass = iconClassPrefix + options.icons.filter,
            iconLoadingClass = iconClassPrefix + options.icons.loading,
            showMorePlans = function (e) {
                var $loading,
                    $trigger = $(this),
                    lastProjectKey = $trigger.closest(options.triggerRootSelector).data('lastProjectKey');

                if ($(e.target).hasClass(options.editFilterClass) || $trigger.is(':disabled')) {
                    return;
                }

                $loading = $(widget.icons.icon({ type: options.icons.loading }));
                $trigger.append($loading).prop(options.disabledProperty, true);

                getPlans(AJS.contextPath() + '/allPlansSnippet.action', {
                    pageSize: options.pageSize,
                    lastProject: lastProjectKey
                }).done(updateTable).fail(showError);

                function showError() {
                    $loading.remove();
                    $trigger.prop(options.disabledProperty, false).html("Bamboo appears to be unresponsive, \u003cspan class=\"try-again\"\u003etry again\u003c/span\u003e?");
                }
            },
            updateTable = function (response) {
                var $table = $(options.tableSelector),
                    $htmlResponse = $(response);

                $table.append($htmlResponse.find('tbody'));
                $table.find('tfoot').replaceWith($htmlResponse.find('tfoot'));
            },
            toggleFilter = function (e, enable) {
                var $button = $('#toggle-project-filter'),
                    filterEnabled = (typeof enable === 'boolean' ? !enable : $button.is('[aria-pressed="true"]')),
                    updateButton = function () {
                        $button.attr('aria-pressed', !filterEnabled).removeAttr(options.disabledAttr);
                        if ($button.hasClass(options.editFilterClass)) {
                            $button.removeClass(options.editFilterClass).addClass(options.toggleFilterClass);
                        }
                        $button.html(widget.icons.icon({ type: options.icons.filter }) + '&nbsp;' + (filterEnabled ? "Filter is off" : "Filter is on"));
                    },
                    restoreButton = function () {
                        $button.removeAttr(options.disabledAttr)
                            .find('.icon').removeClass(iconLoadingClass).addClass(iconFilterClass);
                    };

                e && e.preventDefault();

                if ($button.is('[' + options.disabledAttr + '="true"]')) {
                    return;
                }
                $button.attr(options.disabledAttr, true)
                    .find('.icon').removeClass(iconFilterClass).addClass(iconLoadingClass);

                getPlans(AJS.contextPath() + '/toggleDashboardFilterInline.action', { filterEnabled: !filterEnabled })
                    .done(replaceTable).done(updateButton)
                    .fail(restoreButton);
            },
            replaceTable = function (response) {
                $(options.tableSelector).replaceWith(response);
            },
            getPlans = function (url, data) {
                if (request) {
                    request.abort();
                }
                return request = $.ajax({
                    url: url,
                    type: 'POST',
                    cache: false,
                    dataType: 'html',
                    data: $.extend(true, { decorator: 'nothing', confirm: true }, data || {})
                });
            },
            enableFilter = function () {
                toggleFilter(null, true);
            };

        return {
            init: function ()  {
                $(options.tableSelector).on('click', options.triggerSelector, showMorePlans);
                $(document).on('click', makeClassSelector(options.toggleFilterClass), toggleFilter);

                BAMBOO.simpleDialogForm({
                    trigger: makeClassSelector(options.editFilterClass),
                    dialogWidth: 640,
                    dialogHeight: 420,
                    success: enableFilter,
                    header: "Filter projects"
                });

                AJS.whenIType("L").click('#main-edit-project-filter');
            }
        };
    };

    BAMBOO.DASHBOARD.InlineActions = function () {
        var options = {
            classes: {
                favourite: 'markBuildFavourite',
                unfavourite: 'unmarkBuildFavourite',
                enable: 'enableBuild',
                loading: 'loading',
                icon: 'icon',
                iconFavourite: 'icon-favourite',
                iconUnfavourite: 'icon-favourite-remove'
            }
        };

        $(document)
            .on('click', makeClassSelector([ options.classes.favourite, options.classes.unfavourite ]), toggleFavourite)
            .on('click', makeClassSelector(options.classes.enable), enableBuild);

        function toggleFavourite(e) {
            var $this = $(this),
                planKey = $this.data('planKey'),
                icon = $this.children(makeClassSelector(options.classes.icon)),
                isFavourite = $this.hasClass(options.classes.unfavourite),
                endpoint = AJS.contextPath() + '/rest/api/latest/plan/' + planKey + '/favourite';

            e.preventDefault();

            if ($this.hasClass(options.classes.loading)) {
                return;
            }
            $this.addClass(options.classes.loading);

            $.ajax({
                url: endpoint,
                type: (isFavourite ? 'DELETE' : 'POST'),
                dataType: 'json'
            }).done((isFavourite ? unmark : mark)).always(reset);

            function mark() {
                $this.removeClass(options.classes.favourite).addClass(options.classes.unfavourite);
                icon.removeClass(options.classes.iconFavourite).addClass(options.classes.iconUnfavourite);
            }
            function unmark() {
                $this.removeClass(options.classes.unfavourite).addClass(options.classes.favourite);
                icon.removeClass(options.classes.iconUnfavourite).addClass(options.classes.iconFavourite);
            }
            function reset() {
                $this.removeClass(options.classes.loading);
            }
        }

        function enableBuild(e) {
            var $this = $(this),
                planKey = $this.data('planKey');

            e.preventDefault();

            if ($this.hasClass(options.classes.loading)) {
                return;
            }
            $this.addClass(options.classes.loading);

            $.ajax({
                type: 'POST',
                url: AJS.contextPath() + '/rest/api/latest/plan/' + planKey + '/enable',
                dataType: 'json'
            }).done(enable).always(reset);

            function enable() {
                $this.hide();
                $('#manualBuild_' + planKey).css("display", "");
            }
            function reset() {
                $this.removeClass(options.classes.loading);
            }
        }
    };
    BAMBOO.DASHBOARD.InlineActions();

    function makeClassSelector(classes) {
        var classArr = (typeof classes === 'string' ? [ classes ] : classes);
        return '.' + classArr.join(',.');
    }
}(jQuery, window.BAMBOO = (window.BAMBOO || {})));
/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/jira-issues.js' */
(function ($) {
    BAMBOO.JIRAISSUES = (function () {
        var opts = {
                resultSummaryKey: null,
                getIssuesUrl: null,
                currentFullUrl: null,
                defaultIssueIconUrl: null,
                defaultIssueType: null,
                defaultIssueDetails: null,
                newIssueKey: null,
                jiraTabUrl: null,
                maxIssues: null,
                hideStatus: null,
                templates: {
                    authenticationRequiredTemplate: null
                }
            },
            $issuesPanel,
            refresh = function () {
                opts.newIssueKey = (arguments.length ? arguments[0] : null);

                return ($issuesPanel && $issuesPanel.length ? $.ajax({
                    url: opts.getIssuesUrl + opts.resultSummaryKey,
                    cache: false,
                    data: {
                        expand: "jiraIssues[0:" + (opts.maxIssues - 1) + "]",
                        returnUrl: opts.currentFullUrl
                    },
                    dataType: "json",
                    contentType: "application/json"
               }).done(update).fail(error) : false);
            },
            update = function (json) {
                if (json.jiraIssues && json.jiraIssues.issue && json.jiraIssues.issue.length) {
                    $issuesPanel
                        .find('> table')
                        .replaceWith(bamboo.feature.jiraIssueList.jiraIssueList({
                            issues: json.jiraIssues.issue,
                            defaultIssueType: opts.defaultIssueType,
                            defaultIssueIconUrl: opts.defaultIssueIconUrl,
                            hideStatus: opts.hideStatus,
                            jiraTabUrl: opts.jiraTabUrl,
                            maxIssues: opts.maxIssues,
                            issuesCount: json.jiraIssues.size
                        }));

                    $issuesPanel.removeClass('hidden').show();
                    if (opts.newIssueKey) {
                        highlightIssue($issuesPanel.find("tr:contains('" + opts.newIssueKey + "')"));
                    }
                } else {
                    $issuesPanel.hide();
                }
            },
            error = function (jqXHR, textStatus, errorThrown) {
                var response, authUrl, authInstance,
                    $issueTable = $issuesPanel.find('> table');

                try {
                    response = $.parseJSON(jqXHR.responseText);
                    authUrl = response['authenticationRedirectUrl'];
                    authInstance = response['authenticationInstanceName'] || "JIRA";
                }
                catch (e) {}

                $issueTable.removeClass('loading');
                if (authUrl) {
                    $(AJS.template.load(opts.templates.authenticationRequiredTemplate).fill({ authenticationUrl: authUrl, authenticationInstanceName: authInstance }).toString()).insertBefore($issueTable);
                }
            };
        
        function highlightIssue($newIssue) {
            if ($newIssue.length) {
                var oldColor = $newIssue.css("backgroundColor");
                $newIssue.css("backgroundColor", "#FFFFDD").delay(3000).animate({ backgroundColor:oldColor }, 1500, "swing");
            }
        }
        
        return {
            /**
             * @param options - Object containing the options to overwrite our defaults
             */
            init: function (options) {
                $.extend(true, opts, options);
                $(function () {
                    $issuesPanel = $(".issueSummary");
                    refresh();
                });
            },
            refresh: refresh,
            highlightIssue: highlightIssue
        }
    })();

    BAMBOO.JIRATEASER = (function () {
        var jiraTeaserPopup,
            dialogOptions = {
                width: 420,
                hideDelay: 36e5
            },
            generatePopup = function ($contents, trigger, doShowPopup) {
                // hide popup hooks
                var doHidePopup = function () {
                    jiraTeaserPopup.hide();
                    return false;
                };

                $(document).keyup(function (e) {
                    if (e.which == jQuery.ui.keyCode.ESCAPE) {
                        doHidePopup();
                        $(document).unbind("keyup", arguments.callee);
                        return false;
                    }
                    return true;
                });

                // replace container contents with teaser
                $contents
                    .html(AJS.template.load("jira-teaser-popup").fill())
                    .find(".close-dialog").click(doHidePopup).end()
                    .find(".jiraTeaserCheckbox").change(function (e) {
                        var val = $(this).is(":checked");
                        $.ajax({
                            url: AJS.contextPath() + "/rest/pref/latest/user",
                            type: "post",
                            data: {
                                "bamboo.user.jira.teaser.hide" : val
                            }
                        });
                    });

                doShowPopup();
            };

        $(function ($) {
            if ($("#jira-teaser-template").length) {
                jiraTeaserPopup = AJS.InlineDialog($("#changesSummary .jiraIssueLink:last"), "jiraChangesSummary", generatePopup, dialogOptions);
                jiraTeaserPopup.show();
            }
        });
    }());
})(AJS.$);

var JiraIssueLinkManager = (function ($) {
    var globalBambooProjectKey,
        addLink = function () {
            var $this = $(this),
                jiraIssueKey = $this.data("issue-key"),
                bambooProjectKey = $this.data("bamboo-project-key") || globalBambooProjectKey,
                href = AJS.contextPath() + "/project/jiraRedirect.action?jiraIssueKey=" + jiraIssueKey;

            if (bambooProjectKey) {
                href += "&bambooProjectKey=" + bambooProjectKey;
            }
            $this.attr("href", href);
        };

    return {
        init: function (bambooProjectKey) {
            globalBambooProjectKey = bambooProjectKey;
            $(function () {
                $("a.jiraIssueLink").each(addLink);
           });
        }
    };
})(AJS.$);

var JiraRelatedIssues = (function ($) {
    return {
        init: function() {
            BAMBOO.JIRAISSUES.highlightIssue($(".newJiraIssue"));
        }
    }
})(AJS.$);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/jiraIssueCreation.js' */
BAMBOO.JIRAISSUECREATION = (function ($) {
    var defaults = {
            planResultKey: null,
            applinkId: null,
            projectId: null,
            returnUrl: null,
            issueTypeId: null,
            noProjectsMessage: null,
            templates: {
                authenticationRequiredTemplate: null,
                cannotCreateTemplate: null,
                shortcutHint: null,
                genericErrorHelpLink: null
            }
        },
        options,
        firstTime = true,
        setRequiredField = function ($selectField, value) {
            var $label = $("label[for="+$selectField.attr('id')+"]");
            $label.find("span").remove();
            if (value) {
                $label.append("<span class=\"aui-icon icon-required\"></span><span class=\"content\"> (required)</span>");
            }
        },
        hideSelect = function ($selectField) {
            $selectField.parent().hide();
            $selectField.find("option").remove();
        },
        populateMultiSelect = function ($selectField, fieldSchema) {
            var show = false;
            setRequiredField($selectField, fieldSchema.required);

            $(fieldSchema.allowedValues).each(function () {
                $('<option />', {
                    val: this.id,
                    text: this.name,
                    title: this.description
                }).appendTo($selectField);
               show = true;
            });
            if (show) {
                $selectField.parent().show();
            }
        },
        populateErrors = function (data) {
            var $messageContainer = $("#cannot-create-message-container"),
                $issueContainer = $("#issue-contents-container"),
                $message;
            /* other error cases */
            if (data.errors && data.errors.length) {
                $message = BAMBOO.buildAUIErrorMessage(data.errors);
            } else if (data.fieldErrors && data.fieldErrors.length) {
                var renderedErrors = [];
                for (var fieldError in data.fieldErrors){
                    if (data.fieldErrors.hasOwnProperty(fieldError)) {
                        renderedErrors.push(fieldError + ": " + data.fieldErrors[fieldError]);
                    }
                }
                $message = BAMBOO.buildAUIErrorMessage(renderedErrors);
            } else if (data.messages && data.messages.length) {
                $message = BAMBOO.buildAUIWarningMessage(data.messages);
            }
            $message.append(AJS.template.load(options.templates.genericErrorHelpLink).toString());
            $messageContainer.append($message).show();
        },
        clearErrors = function () {
            $("#executeCreateNewJiraIssue div.error").remove();
        },
        populateForm = function (projectKey, issueTypeId) {
            var $versionSelectField = $("#jiraProjectVersions"),
                $componentSelectField =$("#jiraProjectComponents"),
                $messageContainer = $("#cannot-create-message-container"),
                $fieldContainer = $("#issue-fields-container"),
                $loadingSpinner = $("#fields-loading-spinner"),
                $createButton = $("#executeCreateNewJiraIssue_save");

            $messageContainer.hide().children().remove();
            $fieldContainer.hide();
            $loadingSpinner.show();
            $createButton.attr("disabled", "disabled");
            hideSelect($versionSelectField);
            hideSelect($componentSelectField);

            $.ajax({
                url: AJS.contextPath() + "/ajax/issueTypeSchema.action",
                data: {
                    appLinkId: $("#jiraServer option:selected").val(),
                    projectKey: projectKey,
                    issueTypeId: issueTypeId,
                    returnUrl: options.returnUrl
                },
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    if (data.status != 'ERROR') {
                        var fields = data.projects[0].issuetypes[0].fields,
                            unhandledRequiredFields = "";

                        for (var fieldName in fields) {
                            if (fields.hasOwnProperty(fieldName)) {
                                var field = fields[fieldName];
                                if (fieldName == "summary") {
                                    setRequiredField($("#jiraIssueSummary"), field.required);
                                } else if (fieldName == "description") {
                                    setRequiredField($("#issueDescription"), field.required);
                                } else if (fieldName == "components") {
                                    populateMultiSelect($componentSelectField, field);
                                } else if (fieldName == "versions") {
                                    populateMultiSelect($versionSelectField, field);
                                } else if (field.required && fieldName != "issuetype" && fieldName != "reporter" && fieldName != "project" && fieldName != "assignee") {
                                    unhandledRequiredFields = unhandledRequiredFields + " " + field.name;
                                }
                            }
                        }
                        $loadingSpinner.hide();
                        if (unhandledRequiredFields.length) {
                            $messageContainer.append(AJS.template.load(options.templates.cannotCreateTemplate).fill({issueTypeName: data.projects[0].issuetypes[0].name, fieldNames: unhandledRequiredFields}).toString()).show();
                        } else {
                            $createButton.removeAttr("disabled");
                            $fieldContainer.show();
                        }
                    } else {
                        populateErrors(data);
                    }
                },
                error: function (request, textStatus, errorThrown) {}
            });
        },
        serverSelect = function () {
            var projectsById = {},
                $loginDanceContainer = $("#login-dance-message-container"),
                $issueContainer = $("#issue-contents-container"),
                $messageContainer = $("#cannot-create-message-container");

            $("#executeCreateNewJiraIssue_save").attr("disabled", "disabled");
            $("#jiraServer").attr("disabled", "disabled");
            $loginDanceContainer.hide();
            $issueContainer.hide();
            $("#cannot-create-message-container").hide();
            $("#issue-loading-spinner").show();
            $('#jiraProjectKey option').remove();
            $('#jiraIssueType option').remove();
            $messageContainer.hide().children().remove();

            $.ajax({
                url: AJS.contextPath() + "/ajax/jiraIssueSchema.action",
                data: {
                    appLinkId: $("#jiraServer option:selected").val(),
                    returnUrl: options.returnUrl
                },
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    if (data.status != 'ERROR') {
                        var $projects = $('#jiraProjectKey'),
                            projectIdExists = false;

                        // there is a slight chance of multiple requests being made via selenium or bad programming.
                        // this prevents the project list from getting duplicate options
                        $projects.children().remove();

                        if (data.projects && data.projects.length) {
                            $(data.projects).each(function () {
                                projectsById[this.id] = this;
                                $('<option />', {
                                    val: this.id,
                                    text: this.name
                                }).appendTo($projects);
                                if (this.id == options.projectId) {
                                    projectIdExists = true;
                                }
                            });

                            $projects.unbind();
                            var updateForProject = function () {
                                var project = $('option:selected', $projects),
                                    projectScheme = projectsById[project.val()],
                                    issueTypeExists = false,
                                    $types = $('#jiraIssueType');

                                $types.find("option").remove();
                                $types.unbind();
                                $(projectScheme.issuetypes).each(function () {
                                    if (!this.subtask) {
                                        $('<option />', {
                                            val: this.id,
                                            text: this.name,
                                            title: this.description
                                        }).appendTo($types);
                                        if (this.id == options.issueTypeId) {
                                            issueTypeExists = true;
                                        }
                                    }
                                });

                                var updateForType = function () {
                                    populateForm(projectScheme.key, $types.val());
                                };
                                $types.change(function () {
                                    clearErrors();
                                    updateForType();
                                });
                                if (firstTime && issueTypeExists) {
                                    $types.val(options.issueTypeId);
                                }
                                updateForType();
                            };
                            $projects.change(function () {
                                clearErrors();
                                updateForProject();
                            });
                            if (firstTime && projectIdExists) {
                                $projects.val(options.projectId);
                            }
                            updateForProject();
                            $projects.focus();
                            $loginDanceContainer.hide();
                            $issueContainer.show();
                            firstTime=false;
                        } else {
                            var $message = BAMBOO.buildAUIErrorMessage([options.noProjectsMessage]);
                            $message.append(AJS.template.load(options.templates.genericErrorHelpLink).toString());
                            $messageContainer.append($message).show();
                        }
                    } else if (data.authenticationRedirectUrl && data.authenticationRedirectUrl.length) {
                        $loginDanceContainer.children().remove();
                        $loginDanceContainer.append(AJS.template.load(options.templates.authenticationRequiredTemplate).fill({ authenticationUrl: data.authenticationRedirectUrl, authenticationInstanceName: (data['authenticationInstanceName'] || "JIRA") }).toString()).show();
                        $issueContainer.hide();
                    } else {
                        populateErrors(data);
                    }
                    $("#issue-loading-spinner").hide();
                    $("#jiraServer").removeAttr("disabled");
                },
                error: function (request, textStatus, errorThrown) {}
            });
        };

    return {
        init: function (opts) {
            options = $.extend(true, defaults, opts);
            firstTime = true;
            $("#executeCreateNewJiraIssue").find(".buttons-container").prepend(AJS.template.load(options.templates.shortcutHint).toString());
            var $jiraServer = $("#jiraServer");
            $jiraServer.change(function () {
                clearErrors();
                serverSelect();
            });
            if (options.applinkId && $jiraServer.find("option[value='" + options.applinkId + "']").length) {
                $jiraServer.val(options.applinkId);
            }
            serverSelect();
            $jiraServer.closest('form').bind('asyncform-notification', function (e, messages, warnings) {
                var messageDialog, $messages = $('<div />');

                if (messages && messages.length) {
                    $messages.append(BAMBOO.buildAUIMessage(messages, 'success', {escapeTitle: false}));
                }
                if (warnings && warnings.length) {
                    var $message = BAMBOO.buildAUIWarningMessage(warnings);
                    $message.append(AJS.template.load(options.templates.genericErrorHelpLink).toString());
                    $messages.append($message);
                }
                if ($messages.children().length) {
                    $messages.hide().appendTo(document.body); // append to the DOM so we can calculate how big the dialog should be to accommodate the messages
                    messageDialog = new AJS.Dialog({
                        width: 600,
                        height: $messages.innerHeight() + 70 // ~70px should be enough for the button bar plus a bit of padding
                    });
                    messageDialog.addPanel('', $messages.remove().html());
                    messageDialog.addButton("Close", function (dialog) {
                        dialog.remove();
                    });
                    messageDialog.show();
                }
            });
        },
        returnFromDialog: function (response) {
            BAMBOO.JIRAISSUES.refresh(response['newIssueKey']);
        }
    };
})(jQuery);


BAMBOO.JIRAISSUECREATION.NOAPPLINK = (function ($) {
    var defaults = {
        trigger: null,
        contentTemplate: null,
        appLinksAdminUrl: null,
        admin: null
    },
    options,
    showDialog = function () {
        var dialog = new AJS.Dialog({
            width: 600,
            height: 600,
            keypressListener: function (e) {
                if (e.which == jQuery.ui.keyCode.ESCAPE) {
                    dialog.remove();
                }
            }
        });
        dialog.addHeader("Create issue for build");
        dialog.addPanel("", AJS.template.load(options.contentTemplate).toString());
        if (options.admin) {
            dialog.addButton("Connect to JIRA", function (dialog) {
                window.location = options.appLinksAdminUrl;
            });
        }
        dialog.addCancel("Cancel", function (dialog)
        {
            dialog.hide();
        });
        dialog.show();
    };

    return {
        init: function (opts) {
            options = $.extend(true, defaults, opts);
            $(document).delegate(options.trigger, "click", function (e) {
                e.preventDefault();
                showDialog();
            });
        }
    }
})(AJS.$);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/transition-jira-issue.js' */
BAMBOO.JIRAISSUETRANSITION = (function ($) {
    var opts = {
        issueKey: null,
        returnUrl: null
    },
    $errorMessagesContainer,
    $issueControlsContainer,
    $loginDanceMessageContainer,
    $loadingSpinner,
    $issueDetails,
    $issueStatus,
    $transitionButton,
    $transitionSelect,
    $transitionIssueResolution,
    $resolutionButton,
    $resolutionSelect,

    onTransitionClick = function() {
        $transitionButton.attr("disabled", "disabled");
        $transitionSelect.attr("disabled", "disabled");
        $resolutionButton.attr("disabled", "disabled");
        $resolutionSelect.attr("disabled", "disabled");
        $loadingSpinner.show();
        AJS.$.ajax({
            url: AJS.contextPath() + "/ajax/transitionIssue.action?issueKey=" + opts.issueKey + "&transitionId=" + $transitionButton.val()
                    + ($transitionIssueResolution.is(":visible") ? ("&resolutionId=" + $resolutionButton.val()) : "")
                    + "&returnUrl=" + encodeURIComponent(opts.returnUrl),
            dataType: 'json',
            contentType: 'application/json',
            success: function(response) {
                if (response.status != 'ERROR') {
                    if (response.requireResolution) {
                        $resolutionSelect.children().remove();
                        $(response.resolution.allowedValues).each(function(){
                            $('<option value="' + this.id + '"></option>').appendTo($resolutionSelect).text(this.name);
                        });
                        $resolutionSelect.change();
                        $resolutionButton.removeAttr("disabled");
                        $resolutionSelect.removeAttr("disabled");
                        $transitionIssueResolution.show();
                        $loadingSpinner.hide();
                    } else {
                        refreshIssueStatus();
                    }
                } else {
                    handleErrorResponse(response);
                }
                handleLoginDanceResponse(response);
            },
            error: function (request, textStatus, errorThrown) {
                $transitionButton.removeAttr("disabled");
                $transitionSelect.removeAttr("disabled");
                $resolutionButton.removeAttr("disabled");
                $resolutionSelect.removeAttr("disabled");
            }
        });

    },

    onChangeTransition = function() {
        $transitionButton.val($transitionSelect.val());
        $transitionButton.text($(":selected", $transitionSelect).text());
    },

    onChangeResolution = function() {
        $resolutionButton.val($resolutionSelect.val());
        $resolutionButton.text($(":selected", $resolutionSelect).text());
    },

    refreshIssueStatus = function() {
        $loadingSpinner.show();
        AJS.$.ajax({
            url: AJS.contextPath() + "/ajax/issueDetails.action?issueKey=" + opts.issueKey
                    + "&returnUrl=" + encodeURIComponent(opts.returnUrl),
            dataType: 'json',
            contentType: 'application/json',
            success: function(response) {
                if (response.status != 'ERROR') {
                    $issueDetails.children().remove();
                    $issueDetails.append(AJS.template.load("issueDetails-template").fill({url: response.issueUrl, title: response.fields.summary, iconUrl: response.fields.issuetype.iconUrl, key: response.key}).toString());

                    $issueStatus.children().remove();
                    $issueStatus.append(AJS.template.load("issueStatus-template").fill({iconUrl: response.fields.status.iconUrl, name: response.fields.status.name}).toString());
                    refreshTransitions();
                } else {
                    handleErrorResponse(response);
                }
                handleLoginDanceResponse(response);
            },
            error: function (request, textStatus, errorThrown) {
            }
        });
    },

    refreshTransitions = function() {
        AJS.$.ajax({
            url: AJS.contextPath() + "/ajax/issueTransitions.action?issueKey=" + opts.issueKey
                    + "&returnUrl=" + encodeURIComponent(opts.returnUrl),
            dataType: 'json',
            contentType: 'application/json',
            success: function(response) {
                if (response.status != 'ERROR') {
                    $transitionSelect.children().remove();
                    $(response.transitions).each(function(){
                        $('<option value="' + this.id + '"></option>').appendTo($transitionSelect).text(this.name);
                    });
                    $transitionSelect.change();
                    $issueControlsContainer.show();
                } else {
                    handleErrorResponse(response);
                }
                $loadingSpinner.hide();
                $transitionButton.removeAttr("disabled");
                $transitionSelect.removeAttr("disabled");
                $transitionIssueResolution.hide();
                handleLoginDanceResponse(response);
            },
            error: function (request, textStatus, errorThrown) {
            }
        });
    },

    handleLoginDanceResponse = function(response) {
        if (isDefinedObject(response.authenticationRedirectUrl)) {
            $loginDanceMessageContainer.children().remove();
            $loginDanceMessageContainer.append(AJS.template.load("authenticationRequired-template").fill({authenticationUrl: response.authenticationRedirectUrl}).toString()).show();
            $loginDanceMessageContainer.show();
            $issueControlsContainer.hide();
        } else {
            $loginDanceMessageContainer.hide();
        }
    },

    handleErrorResponse = function(response) {
        $errorMessagesContainer.children().remove();
        $(response.errors).each(function(){
            AJS.messages.error($errorMessagesContainer, { body: this, closeable: false });
        });
        $issueControlsContainer.hide();
        $errorMessagesContainer.show();
        $loadingSpinner.hide();
    };

    return {
        init: function (options) {
            $.extend(true, opts, options);
            $errorMessagesContainer = $("#error-messages-container");
            $issueControlsContainer = $("#issue-controls-container");
            $loginDanceMessageContainer = $("#login-dance-message-container");
            $loadingSpinner = $("#loading-spinner");
            $issueDetails = $("#issue-details");
            $issueStatus = $("#issue-status");
            $transitionButton = $("#transition-button");
            $transitionButton.click(onTransitionClick);
            $transitionSelect = $("#transition-select");
            $transitionSelect.change(onChangeTransition);
            $transitionIssueResolution = $("#transition-issue-resolution");
            $resolutionButton = $("#resolution-button");
            $resolutionButton.click(onTransitionClick);
            $resolutionSelect = $("#resolution-select");
            $resolutionSelect.change(onChangeResolution);
            refreshIssueStatus();
        }
    }
})(jQuery);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/test-actions.js' */
BAMBOO.TESTACTIONS = (function ($, _) {
    var toggleFail = function (jqXHR) {
        var json,
                message = 'An error occurred while connecting to Bamboo server. Please refresh the page and try again.';

        try {
            json = $.parseJSON(jqXHR.responseText);
            if (json.errors && json.errors.length) {
                message += "\n\n" + json.errors.join("\n");
            }
        }
        catch (e) {}
        alert(message); //todo: ask Matty how to better present error message
    };

    $(document).delegate(".unlink-test-to-jira-action", "click", function (e) {
        var $button = $(this),
                $toolbarItem = $button.closest(".toolbar-item"),
                isDisabledClass = "disabled",
                jqXHR;

        e.preventDefault();

        if (!$toolbarItem.hasClass(isDisabledClass)) {
            $toolbarItem.addClass(isDisabledClass);
            jqXHR = $.post($button.attr("href"), { "bamboo.successReturnMode": "json" }).fail(toggleFail).always(function () { $toolbarItem.removeClass(isDisabledClass); });

            jqXHR.done(function (json) {
                if (json && json.status && json.status == "OK") {
                    var $tableRows = AJS.$(".test-case-row-"+$button.data('testCaseId'));
                    $tableRows.find(".linked-jira-issue").html('');

                    $tableRows.find(".link-test-to-jira-action").toggleClass("hidden", false);
                    $tableRows.find(".create-jira-issue-for-test-action").toggleClass("hidden", false);
                    $tableRows.find(".unlink-test-to-jira-action").toggleClass("hidden", true);
                } else {
                    toggleFail(jqXHR);
                }
            });
        }
    });

    var renderLinkedJiraIssue = function ($element, issue) {
        $element.html(bamboo.feature.jiraIssueList.singleIssue(issue));
    };

    return {
        onReturnFromLinkingIssueManually: function (json) {
            if (json && json.status && json.status == "OK") {
                var $tableRows = AJS.$(".test-case-row-"+json.testCaseId),
                        $linkedJiraIssueContainers = $tableRows.find(".linked-jira-issue");

                if (json.authenticationRedirectUrl)
                {
                    $linkedJiraIssueContainers.html(bamboo.feature.jiraIssueList.singleIssueOAuth({
                        key: json.issue.key,
                        keyLink: AJS.contextPath() + '/project/jiraRedirect.action?jiraIssueKey=' + json.issue.key,
                        authenticationRedirectUrl: json.authenticationRedirectUrl + '&redirectUrl=' + encodeURIComponent(document.location.href),
                        authenticationInstanceName: json.authenticationInstanceName
                    }));
                }
                else
                {
                    renderLinkedJiraIssue($linkedJiraIssueContainers, json.issue);
                }

                $tableRows.find(".unlink-test-to-jira-action").toggleClass("hidden", false);
                $tableRows.find(".link-test-to-jira-action").toggleClass("hidden", true);
                $tableRows.find(".create-jira-issue-for-test-action").toggleClass("hidden", true);
            } else {
                //show some error alert?... shouldn't happen anyway...
            }
        }
    };

})(jQuery, _);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/config-sidebar.js' */
BAMBOO.ConfigSidebar = (function ($) {
    var classes = {
            animating: "animating",
            collapsed: "collapsed",
            expanded: "expanded",
            icons: {
                collapse: "icon-collapse",
                expand: "icon-expand"
            }
        },
        toggleState = function (shouldExpand) {
            var $h2 = $(this),
                $icon = $h2.children(".icon").addClass(classes.animating),
                $listOrMessage = $h2.next();

            $listOrMessage[shouldExpand ? "slideDown" : "slideUp"](function () {
                $h2.removeClass(shouldExpand ? classes.collapsed : classes.expanded).addClass(shouldExpand ? classes.expanded : classes.collapsed);
                $icon
                    .removeClass(classes.animating)
                    .removeClass(shouldExpand ? classes.icons.expand : classes.icons.collapse)
                    .addClass(shouldExpand ? classes.icons.collapse : classes.icons.expand);
                AJS.Cookie.save("config.sidebar." + $h2.data("sidebarSection") + ".expanded", shouldExpand, 365);
            });
        };

    return {
        init: function () {
            $(function () {
                var $configSidebar = $("#config-sidebar")
                    .delegate("." + classes.collapsed, "click", function () { toggleState.call(this, true); })
                    .delegate("." + classes.expanded, "click", function () { toggleState.call(this, false); });

                $configSidebar.find("ul a").each(function () {
                    var $a = $(this);

                    if ($a.isClipped() && !$a.attr("title")) {
                        $a.attr("title", $a.text());
                    }
                });
                $configSidebar.children("." + classes.collapsed).each(function () {
                    $(this).next().hide();
                });
            });
        }
    };
})(AJS.$);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/plan-branches.js' */
BAMBOO.BRANCHES = {};

BAMBOO.BRANCHES.EditChainBranchDetails = function (opts) {
    var $ = AJS.$,
            defaults = {
                controls : {
                    form: null,
                    integrationEnabled: null,
                    integrationStrategy: null,
                    gateKeeperCheckoutBranch: null,
                    gateKeeperPushBranch: null,
                    integrationStrategies: '.integration-strategy'
                }
            },
            options = $.extend(true, defaults, opts),
            $controls = {
                form: null,
                integrationStrategy: null,
                gateKeeperPushBranch: null
            },
            onChangeGateKeeperCheckoutBranch = function() {
                var gateKeeperBranch = $(this).find('option:selected').text();
                $controls.gateKeeperPushBranch.text(gateKeeperBranch);
            },
            onChangeIntegrationEnabled = function() {
                if ($(this).is(':checked')) {
                    if (!$controls.integrationStrategy.is(':checked')) {
                        $controls.integrationStrategy.filter(':first').prop('checked', true);
                    }
                    indicateActiveStrategy();
                }
            },
            indicateActiveStrategy = function () {
                $controls.integrationStrategy.each(function () {
                    var $radio = $(this);

                    $radio.closest(options.controls.integrationStrategies).toggleClass('active', $radio.is(':checked'));
                });
            },
            onClickInStrategy = function () {
                $(this).find(options.controls.integrationStrategy).prop('checked', true);
                indicateActiveStrategy();
            };

    return {
        init: function () {
            $controls.form = $(options.controls.form);
            $controls.integrationStrategy = $controls.form.find(options.controls.integrationStrategy).click(indicateActiveStrategy);
            $controls.gateKeeperPushBranch = $controls.form.find(options.controls.gateKeeperPushBranch);

            $controls.form.find(options.controls.gateKeeperCheckoutBranch).change(onChangeGateKeeperCheckoutBranch).each(onChangeGateKeeperCheckoutBranch);
            $controls.form.find(options.controls.integrationEnabled).change(onChangeIntegrationEnabled).each(onChangeIntegrationEnabled);
            $controls.form.find(options.controls.integrationStrategies).click(onClickInStrategy);
        }
    };
};

BAMBOO.BRANCHES.BranchesSplashScreen = (function ($) {
    var defaults = {
            content: null,
            contentId: 'branch-splash-content',
            dialog: {
                width: 688,
                height: 480,
                id: 'branch-splash',
                keypressListener: function (e) {
                    if (e.which == jQuery.ui.keyCode.ESCAPE) {
                        dialog.remove();
                    }
                }
            },
            templates: {
                dontShowCheckbox: null
            }
        },
        options,
        dialog,
        $dontShowCheckbox;

    return {
        init: function (opts) {
            options = $.extend(true, defaults, opts);

            dialog = new AJS.Dialog(options.dialog)
                .addHeader("Building branches")
                .addPanel('', $('<div />', { html: options.content, id: options.contentId }))
                .addButton("Close", function () { dialog.remove(); });

            $dontShowCheckbox = $(AJS.template.load(options.templates.dontShowCheckbox).toString())
                .prependTo($(dialog.page[0].element).find('.dialog-button-panel'))
                .find('input:checkbox');

            dialog.show();

            $(window).bind('remove.dialog', function (e, data) {
                if (data.dialog.id === options.dialog.id && $dontShowCheckbox.is(':checked')) {
                    $.post(AJS.contextPath() + '/rest/pref/latest/user', { 'bamboo.user.branches.splashscreen.hide': true });
                }
            });
        }
    }
})(jQuery);
/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/plan-branch-selector.js' */
BAMBOO.PlanBranchSelector = function (opts) {
    var $ = AJS.$,
        defaults = {
            trigger: null,
            planKey: null,
            id: 'plan-branch-selector',
            includeMaster: false,
            masterBranchName: null,
            masterBranchDescription: null,
            includeLatestResult: false,
            inlineDialogClass: null,
            maxBranches: 10,
            getPlanDetailsUrl: AJS.contextPath() + '/rest/api/latest/plan/{planKey}/branch',
            templates: {
                branchItem: null,
                branchItemActiveBuild: null
            }
        },
        options = $.extend(true, defaults, opts),
        inlineDialog,
        createInlineDialogContent = function ($contents, trigger, showInlineDialog) {
            var $trigger = $(trigger),
                planKey = (options.planKey || $trigger.data('planKey'));

            $contents.html(widget.icons.icon({ type: 'loading' }));

            if (!inlineDialog.is(':visible')) {
                showInlineDialog();
            }
            inlineDialog.refresh();

            getPlanDetails(planKey).done(function (json) {
                var $ul = $('<ul/>'),
                    branches = json['branches']['branch'];

                if (options.includeMaster) {
                    $(AJS.template.load(options.templates.branchItem).fill({ 'key': planKey, 'shortName': options.masterBranchName, 'description': options.masterBranchDescription }).toString()).addClass('master').appendTo($ul);
                }

                for (var i = 0, ii = branches.length; i < ii; i++) {
                    var branchData = branches[i],
                        defaultBranchData = {
                            latestResult: {
                                key: branchData['key'] + '/latest',
                                state: 'NeverExecuted',
                                number: '--',
                                suspendedClass: "",
                                description: ""
                            }
                        },
                        branch = $.extend(true, defaultBranchData, branchData),
                        latestResultNumber = branch['latestResult']['number'];

                    if (typeof latestResultNumber == 'number') {
                        branch['latestResult']['number'] = '#' + latestResultNumber;
                    }

                    if (!branchData.enabled) {
                        branch.latestResult.suspendedClass = "Suspended";
                    }
                    $(AJS.template.load((options.templates.branchItemActiveBuild && branch['latestCurrentlyActive'] ? options.templates.branchItemActiveBuild : options.templates.branchItem)).fill(branch).toString()).appendTo($ul);
                }

                $contents.html($ul);
                $('<a/>', {
                    text: "View all branches",
                    href: AJS.contextPath() + '/browse/' + planKey + '/branches',
                    'class': 'complete-listing'
                }).insertAfter($ul);

                showInlineDialog();
            });
        },
        getPlanDetails = function (planKey) {
            return $.ajax({
                url: options.getPlanDetailsUrl.replace('{planKey}', planKey),
                cache: false,
                dataType: 'json',
                data: {
                    expand: (options.includeLatestResult ? 'branches.branch' : 'branches'),
                    'max-results': (options.maxBranches || 0)
                }
            });
        };

    return {
        init: function () {
            inlineDialog = AJS.InlineDialog(options.trigger, options.id, createInlineDialogContent, {
                fadeTime: 0,
                showDelay: 0,
                useLiveEvents: true,
                width: 250,
                offsetY: 14,
                arrowOffsetX: 10
            }).addClass('plan-branch-selector ' + (options.inlineDialogClass || ''));
            
            $(document).delegate(options.trigger, 'keydown', function (e) {
                if (e.which == jQuery.ui.keyCode.ENTER) {
                    e.preventDefault();
                    inlineDialog.show.call(this);
                }
            });
        }
    };
};

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/scripts/branch-creation.js' */
BAMBOO.BranchCreation = (function ($) {
    var defaults = {
        containerSelector: null,
        checkBoxFieldSetSelector: null,
        showMoreSelector: null,
        placeHolderSelector: null,
        optionsSelector: null,
        getBranchesUrl: null,
        planKey: null,
        templates: {
            branchesList: null,
            branchesItem: null,
            branchesNone: null,
            branchesTooMany: null,
            branchesTimeout: null,
            branchesError: null
        }
    },
    options,
    lastResult = 0,
    $container,
    execute = function () {
        var $branchesCheckboxes = $(options.checkBoxFieldSetSelector);
        if (!$branchesCheckboxes.length)  {
            lastResult = 0; /*reset if there is no checkboxes on the page*/
        }
        $.ajax({
            url: options.getBranchesUrl,
            cache: false,
            dataType: 'json',
            data: {
                planKey: options.planKey,
                "start-index": lastResult,
                "max-results": lastResult > 0 ? 100 : 30
            }
        }).done(function (json) {
            $(options.placeHolderSelector).remove();
            var branches = json["branches"]["branch"];
            if (branches && branches.length > 0) {
                var $toAppend = $();
                for (var i = 0, ii = branches.length; i < ii; i++) {
                    $toAppend = $toAppend.add($(AJS.template.load(options.templates.branchesItem).fill({branch: branches[i].name, itemCount: (i+lastResult)}).toString()));
                }

                if (!$branchesCheckboxes.length) {
                    var $branchesContent = $(AJS.template.load(options.templates.branchesList).toString());
                    $branchesCheckboxes = $branchesContent.filter(options.checkBoxFieldSetSelector);
                    $toAppend.appendTo($branchesCheckboxes);
                    $branchesContent.appendTo($container);
                } else {
                    $toAppend.appendTo($branchesCheckboxes);
                }

                var $tooManyBranches = $(options.showMoreSelector);
                lastResult = json.branches["max-result"] + json.branches["start-index"];
                if (!$tooManyBranches.length && json.branches["size"] > lastResult) {
                    $(AJS.template.load(options.templates.branchesTooMany).toString()).appendTo($container);
                } else if ($tooManyBranches.length && json.branches["size"] <= lastResult) {
                    $tooManyBranches.remove();
                }
                $(options.optionsSelector).show().removeClass("hidden");
            } else {
                $(AJS.template.load(options.templates.branchesNone).toString()).appendTo($container);
            }
        }).error(function(jqXHR, textStatus, errorThrown) {
            $(options.placeHolderSelector).remove();
            if (textStatus === "timeout") {
                BAMBOO.buildAUIMessage([AJS.template.load(options.templates.branchesTimeout).toString()], "error", {escapeTitle:false}).appendTo($container);
            } else {
                BAMBOO.buildAUIMessage([AJS.template.load(options.templates.branchesError).toString()], "error", {escapeTitle:false}).appendTo($container);
            }
        });
    },
    switchToAuto = function() {
                 $("#autoBranchCreation").show().removeClass("hidden");
                 $("#manualBranchCreation").hide().addClass("hidden");
                 $("#creationOption").val("AUTO");
    },
    switchToManual = function(){
                 $("#manualBranchCreation").show().removeClass("hidden");
                 $("#autoBranchCreation").hide().addClass("hidden");
                 $("#creationOption").val("MANUAL");
    };

    return {
        init: function (opts) {
            options = $.extend(true, defaults, opts);
            $("#createPlanBranch").delegate(".switchToAuto", "click", switchToAuto)
                                  .delegate(".switchToManual", "click", switchToManual)
                                  .delegate(options.showMoreSelector, "click", execute);
            $container = $(options.containerSelector);
            execute();
        }
    };
})(AJS.$);

/* module-key = 'bamboo.web.resources:bamboo-js', location = '/widget/error/error.js' */
define('widget/generate-error-messages', [
    'jquery',
    'underscore'
], function(
    $,
    _
) {

    'use strict';

    var generateErrorMessages = function(jqXHR, textStatus, errorThrown) {
        var $message, data;
        try {
            data = $.parseJSON(jqXHR.responseText);
            if (data.errors && data.errors.length) {
                $message = BAMBOO.buildAUIErrorMessage(data.errors);
            } else if (data.fieldErrors && data.fieldErrors.length) {
                var renderedErrors = [];
                for (var fieldError in data.fieldErrors) {
                    if (data.fieldErrors.hasOwnProperty(fieldError)) {
                        renderedErrors.push(fieldError + ': ' + data.fieldErrors[fieldError]);
                    }
                }
                $message = BAMBOO.buildAUIErrorMessage(renderedErrors);
            } else if (data.messages && data.messages.length) {
                $message = BAMBOO.buildAUIWarningMessage(data.messages);
            }
        } catch (ignore) {}
        return $message;
    };

    return generateErrorMessages;

});

/* module-key = 'bamboo.web.resources.common:widget-dialog', location = '/widget/dialog/dialog.js' */
define('widget/dialog', [
    'jquery',
    'underscore',
    'brace',
    'util/events'
], function($, _, Brace, Events) {

    'use strict';

    var Dialog = Brace.View.extend({

        mixins: [
            Events.EventBusMixin
        ],

        /**
         * Combines default settings with provided options
         * and checks if trigger element was registered.
         */
        initialize: function(options) {
            this.settings = $.extend({
                templateContent: bamboo.widget.dialog.content,
                keypressListener: _.bind(this.onKeyPress, this),
                height: 400,
                width: 800,
                buttons: [{
                    id: 'cancel',
                    label: "Close",
                    type: 'link'
                }]
            }, options || {});

            if (this.settings.$triggerEl) {
                this.settings.$triggerEl.on('click', _.bind(function(event) {
                    event.preventDefault();
                    this.createInstance();
                }, this));
            } else {
                this.createInstance();
            }
        },

        /**
         * Create Dialog and proxy events
         * through application eventbus.
         */
        createInstance: function() {
            this.dialog = new AJS.Dialog(this.settings);
            this.proxyEvents('dialog',
                ['show.dialog', 'hide.dialog', 'remove.dialog'],
                AJS, 'bind'
            );

            this.onCreateInstance();

            // hack to remove existing css class from button (in case we are providing own)
            _.each(this.dialog.getPage(0).button, function(element) {
                if (element.item.attr('class') !== 'button-panel-button') {
                    element.item.removeClass('button-panel-button');
                }
            });

            this.dialog.show();
        },

        /**
         * Main callback which configures
         * dialog (buttons & content).
         */
        onCreateInstance: function() {
            this.$dialogContent = $(this.settings.templateContent({
                content: bamboo.widget.dialog.loading()
            }));

            this.dialog.addPanel('', this.$dialogContent);

            if (this.settings.header) {
                this.dialog.addHeader(this.settings.header);
            } else if (this.settings.$triggerEl) {
                this.dialog.addHeader(this.settings.$triggerEl.attr('title'));
            }

            // process button configuration
            if (this.settings.buttons) {
                _.each(this.settings.buttons, _.bind(function(button) {
                    var handler = this.dialog.addButton;
                    var buttonHandler = this.onButtonClick;

                    if (button.type === 'link') {
                        handler = this.dialog.addLink;
                    }

                    if (button.callback) {
                        buttonHandler = function() {
                            button.callback.apply(this, arguments);
                            this.onButtonClick.apply(this, arguments);
                        };
                    }

                    var buttonParams = (button.params) ? [button.id, button.params] : [button.id];

                    handler.apply(this.dialog, [
                        button.label, _.bind(function() {
                            _.bind(buttonHandler, this).apply(this, buttonParams);
                        }, this), button.cssClass
                    ]);
                }, this));
            }

            // clear existing content
            this.$dialogContent.empty();

            // html provided as a string
            if (_.isString(this.settings.content)) {
                this.$dialogContent.append(this.settings.content);
            } else if (_.isObject(this.settings.content)) {
                // jquery selector provided
                this.$dialogContent.append(this.settings.content.removeClass('hidden'));
            } else if (this.settings.$triggerEl) {
                // load content using ajax request
                $.ajax({
                    url: this.settings.$triggerEl.attr('href'),
                    data: {
                        'bamboo.successReturnMode': 'json',
                        decorator: 'nothing'
                    },
                    cache: false
                }).done(_.bind(this.onContentLoaded, this));
            }
        },

        /**
         * Default callback when
         * content is loaded through ajax.
         */
        onContentLoaded: function(response) {
            this.$dialogContent.html(response);
        },

        /**
         * Default button callback
         * which process cancel button.
         */
        onButtonClick: function(id) {
            if (id === 'cancel') {
                this.dialog.remove();
            }
        },

        /**
         * Default Dialog keypress callback which
         * closes current dialog when user press escape.
         */
        onKeyPress: function(event) {
            if (event.which === 27) {
                this.dialog.remove();
            }
        }

    });

    return Dialog;

});

/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('Bamboo.Widget.Dialog', null, require('widget/dialog'));
}

/* module-key = 'bamboo.web.resources.common:widget-dialog', location = '/widget/dialog/dialog.soy' */
// This file was automatically generated from dialog.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.dialog == 'undefined') { bamboo.widget.dialog = {}; }


bamboo.widget.dialog.loading = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="icon icon-loading aui-dialog-content-loading"></span>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.dialog.content = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div>', opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:widget-dialog-error', location = '/widget/dialog-error/dialog-error.js' */
define('widget/dialog-error', [
    'jquery',
    'underscore',
    'widget/dialog',
    'exports'
], function(
    $,
    _,
    Dialog,
    exports
) {

    'use strict';

    /**
     * Dialog error view.
     */
    var DialogError = Dialog.extend({

        defaultSettings: {
            id: 'error-dialog',
            height: 220,
            width: 600,
            header: "An unexpected error has occurred",
            buttons: [
                {
                    id: 'reload',
                    label: "Reload page",
                    cssClass: 'aui-button aui-button-primary'
                },
                {
                    id: 'cancel',
                    label: "Cancel",
                    type: 'link'
                }
            ]
        },

        /**
         * Applies default dialog settings.
         */
        initialize: function(options) {
            var settings = options || {};

            if (!settings.content) {
                settings.content = "Please try reloading the page.";
            }

            Dialog.prototype.initialize.call(this,
                _.defaults(settings, this.defaultSettings)
            );
        },

        /**
         * Catch reload button clicked
         * and trigger current page reload.
         */
        onButtonClick: function(id) {
            Dialog.prototype.onButtonClick.apply(this, arguments);

            if (id === 'reload') {
                var panel = this.dialog.getPage(0).buttonpanel;

                panel.prepend(aui.icons.icon({
                    size: 'small',
                    icon: 'wait'
                }));

                panel.find(':button').attr('disabled', true);

                _.delay(function() {
                    window.location.reload();
                }, 500);
            }
        }

    });

    exports.Dialog = DialogError;
    exports.callback = function(content) {
        var currentDialog = AJS.popup.current;

        if (currentDialog) {
            currentDialog.hide();
            currentDialog.remove();
        }

        AJS.undim();

        return new DialogError({
            content: content
        });
    };

});

/* module-key = 'bamboo.web.resources.common:util-errors', location = '/util/errors/errors.soy' */
// This file was automatically generated from errors.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.util == 'undefined') { bamboo.util = {}; }
if (typeof bamboo.util.errors == 'undefined') { bamboo.util.errors = {}; }


bamboo.util.errors.message = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.content) {
    aui.message.warning({closeable: 'true', content: '<p>' + soy.$$escapeHtml(opt_data.content) + '</p>'}, output);
  }
  output.append('<p>', soy.$$escapeHtml("Please try reloading the page."), '</p>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:util-errors', location = '/util/errors/errors.js' */
define('util/errors', [
    'jquery',
    'widget/dialog-error'
], function(
    $,
    DialogError
) {

    'use strict';

    function userAborted(xhr) {
        return !xhr.getAllResponseHeaders();
    }

    var template = bamboo.util.errors;

    var handler = function(xhr) {
        if (!userAborted(xhr)) {
            var content = $.parseJSON(xhr.responseText || xhr.data);

            if (content) {
                if (content.message) {
                    content = content.message;
                } else if (content.errors) {
                    content = $.trim(content.errors.join(' '));
                }
            }

            DialogError.callback.call(
                null, template.message({
                    content: content || false
                })
            );
        }
    };

    return handler;

});

/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('Bamboo.Util.ErrorHandler', null, require('util/errors'));
}

/* module-key = 'bamboo.web.resources.common:util-ajax', location = '/util/ajax/ajax.js' */
define('util/ajax', [
    'jquery',
    'underscore',
    'backbone',
    'util/errors'
], function(
    $,
    _,
    Backbone,
    errors
) {

    'use strict';

    var defaultOptions = {
        contentType: 'application/json',
        dataType: 'json',
        async: true,
        cache: false
    };

    var ajax = function() {
        var params = arguments[0] || {};

        if (_.isString(params)) {
            params = {
                url: params
            };
        }

        if (!params.error) {
            params.error = errors;
        }

        return $.ajax(
            _.defaults(params, defaultOptions)
        );
    };

    return ajax;

});

/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('Bamboo.Util.Ajax', null, require('util/ajax'));
}

/* module-key = 'bamboo.web.resources.common:util-ajax-form', location = '/util/ajax-form/ajax-form.js' */
define('util/ajax-form', [
    'jquery',
    'underscore',
    'util/ajax',
    'util/errors'
], function(
    $,
    _,
    ajax,
    errors
) {

    'use strict';

    /**
     * Defaults for ajax settings.
     */
    var defaultOptions = {
        contentType: 'application/json',
        processData: false,
        dataType: 'json',
        type: 'POST',
        async: true
    };

    /**
     * Form fields which are ignored,
     * by default only CSRF tokens.
     */
    var defaultIgnoreFields = [
        'atl_token',
        'atl_token_source'
    ];

    /**
     * Wraps the passed in constructor so it
     * works with or without the new keyword.
     */
    function wrapperCtor(type) {
        var F = function() {};

        return function ctor() {
            var _this = this;

            if (!(this instanceof ctor)) {
                F.prototype = ctor.prototype;
                _this = new F();
            }

            type.apply(_this, arguments);
            return _this;
        };
    }

    /**
     * Injects AUI error messages
     * (form and field level).
     */
    function injectErrors($form, data) {
        var message = function(content) {
            return $('<div/>').addClass('error').text(content);
        };

        $form.find('.error').remove();

        // check for form errors
        if (data.errors.length) {
            $form.prepend(aui.message.error({
                content: data.errors.join('\n')
            }));
        }

        // append field errors
        _.each(_.keys(data.fieldErrors), function(name) {
            var element = $form.find(
                ':input[name="' + name + '"]'
            );

            if (element.length) {
                element.after(
                    message(data.fieldErrors[name].join('\n'))
                );
            }
        });
    }

    /**
     * Triggers success event
     * with returned JSON object.
    */
    function successHandler(data) {
        this.$el.trigger('success', data);
    }

    /**
     * Error default error handler, if there is
     * a user defined error listener then skip default behaviour.
     */
    function errorHandler(xhr) {
        var data = xhr.responseJSON;

        if (xhr.responseJSON === undefined) {
            data = $.parseJSON(xhr.responseText);
        }

        var wasHandled = this.$el.triggerHandler('error', [
            data, xhr.status
        ]);

        // error handling is not triggered if
        // handler is defined and returns true
        if (!wasHandled) {
            switch (xhr.status) {
                // form error
                case 400:
                    injectErrors(this.$el, data);
                    break;
                // unexpected error
                default:
                    errors.call(null, xhr);
            }
        }
    }

    /**
     * Main constructor, sets $el, defines defaults settings
     * and initialize request callbacks.
     */
    var AjaxForm = wrapperCtor(function(selector, options) {
        var $form = $(selector);

        if (!$form.is('form')) {
            $form = $form.find('form:first');
        }

        this.$el = $form;
        options = options || {};

        // try using form target
        if (options.url === undefined) {
            var target = $form.attr('target');

            if (target) {
                options.url = target;
            }
        }

        // try using form action
        if (options.type === undefined) {
            var action = $form.attr('action');

            if (action) {
                options.type = action;
            }
        }

        options = _.defaults(
            options, defaultOptions
        );

        // set ignore fields
        this.ignoreFields = _.unique(
            (options.ignoreFields || []).concat(defaultIgnoreFields)
        );

        // override serialize method
        if (options.serialize) {
            this.serialize = options.serialize;
        }

        this.settings = _.extend(options, {
            success: _.bind(successHandler, this),
            error: _.bind(errorHandler, this)
        });
    });

    /**
     * Creates request proxy, bind form submission and
     * also prevents duplicate form submission.
     */
    AjaxForm.prototype.bind = function(settings) {
        this.settings = _.extend(
            this.settings, settings || {}
        );

        // unbind any previous binds
        this.$el.unbind('submit')
            .find(':input').unbind('keydown');

        this.request = _.bind(function(payload) {
            return ajax(_.extend(
                { data: JSON.stringify(payload) },
                this.settings
            ));
        }, this);

        // bind enter key to submit the form
        this.$el.find(':input').keydown(_.bind(function(event) {
            if (event.keyCode === 13) {
                this.$el.trigger('submit');
            }
        }, this));

        // defines a default submit callback
        this.$el.on('submit', _.bind(function(event) {
            var buttons = this.$el.find(
                'button[type=submit], input[type=submit]'
            );

            event.preventDefault();
            buttons.attr('disabled', true);

            var checkboxAsBoolean = !!(
                this.settings && this.settings.checkboxAsBoolean
            );

            this.request(this.serialize(checkboxAsBoolean))
                .always(function() {
                    buttons.attr('disabled', false);
                });
        }, this));

        return this;
    };

    /**
     * Serializes a form into an
     * (more useful) object.
     */
    AjaxForm.prototype.serialize = function(checkboxAsBoolean) {
        var data = {};

        _.each(this.$el.serializeArray(), _.bind(function(item) {
            var name = item.name;
            var value = item.value;

            // check ignore list
            if (_.indexOf(this.ignoreFields, name) > -1) {
                return;
            }

            if (data[name] === undefined) {
                data[name] = value;
            } else if (_.isArray(data[name])) {
                data[name] = data[name].concat(value);
            } else {
                data[name] = [data[name], value];
            }
        }, this));

        // serialize checkbox as boolean and ignore their provided value
        if (checkboxAsBoolean) {
            _.each(this.$el.find('input[type=checkbox]'), function(item) {
                var element = $(item);

                data[element.attr('name')] = !!(
                    element.is(':checked')
                );
            });
        }

        return this.$el.triggerHandler('serialize', [this, data]) || data;
    };

    /**
     * Proxy to register form events.
     */
    AjaxForm.prototype.on = function(event, callback) {
        this.$el.on(event, callback);

        return this;
    };

    return AjaxForm;

});

/* module-key = 'bamboo.web.resources.common:util-preferences', location = '/util/preferences/preferences.js' */
define('util/preferences', [
    'jquery',
    'underscore'
], function(
    $,
    _
) {

    'use strict';

    var PreferencesManager = {

        fetchValues: function() {
            var path = [
                AJS.contextPath(),
                'rest/pref/latest/user/?expand=preferences.preference'
            ].join('/');

            this.data = {};

            $.getJSON(path, _.bind(function(results) {
                if (results && results.preferences && results.preferences.preference) {
                    _.each(results.preferences.preference, _.bind(function(item) {
                        this.data[item.key] = item.value;
                    }, this));
                }
            }, this));
        },

        setValue: function(key, value) {
            if (_.isUndefined(value)) {
                value = true;
            }

            this.data[key] = JSON.stringify(value);

            var item = {};
            item[key] = this.data[key];

            $.post(
                AJS.contextPath() + '/rest/pref/latest/user',
                item
            );
        },

        getValue: function(key) {
            var value = this.data[key];

            return (_.isUndefined(value)) ?
                null : JSON.parse(value);
        },

        getBoolean: function(key) {
            var value = this.getValue(key);

            return value === 'false' ? false : !!value;
        }

    };

    PreferencesManager.fetchValues();

    return PreferencesManager;
});

/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('Bamboo.PreferencesManager', null, require('util/preferences'));
}

/* module-key = 'bamboo.web.resources.common:util-options', location = '/util/options/options.js' */
define('util/options', [], function() {

    'use strict';

    /**
     * Global shared options should be put here,
     * for now it's a simple Object literal,
     * if required change Singleton/Mixin in the future.
     */
    return {
        animationSpeed: 200,
        spinner: {
            color: '#fff',
            radius: 30,
            corners: 1,
            length: 20,
            lines: 12,
            width: 10
        }
    };

});

/* module-key = 'bamboo.web.resources.common:util-router', location = '/util/router/router.js' */
define('util/router', [
    'underscore',
    'backbone'
], function(
    _,
    Backbone
) {

    'use strict';

    _.extend(Backbone.History.prototype, {

        routeStripper: /^[#\/]|\s+$/g,
        trailingSlash: /\/$/,

        getFragment: function(fragment, forcePushState) {
            if (!fragment) {
                if (this._hasPushState || !this._wantsHashChange || forcePushState) {
                    fragment = this.location.pathname;

                    var root = this.root.replace(this.trailingSlash, '');
                    var search = this.location.search;

                    if (!fragment.indexOf(root)) {
                        fragment = fragment.substr(root.length);
                    }

                    if (search && this._hasPushState) {
                        fragment += search;
                    }
                } else {
                    fragment = this.getHash();
                }
            }

            return fragment.replace(this.routeStripper, '');
        }
    });

    var Router = Backbone.Router.extend({

        navigate: function(route, options) {
            var routeOption = {
                trigger: true
            };

            _.extend(routeOption, options);
            delete routeOption.params;

            Backbone.Router.prototype.navigate(
                route, routeOption
            );
        }

    });

    return Router;

});

/* module-key = 'bamboo.web.resources.common:widget-dialog-form', location = '/widget/dialog-form/dialog-form.js' */
define('widget/dialog-form', [
    'jquery',
    'underscore',
    'widget/dialog',
    'util/ajax-form'
], function($, _, Dialog, AjaxForm) {

    'use strict';

    /**
     * Dialog form wrapper view.
     */
    var dialogForm = Dialog.extend({

        defaultSettings: {
            buttons: [{
                id: 'save',
                label: "Save",
                cssClass: 'aui-button aui-button-primary'
            }, {
                id: 'cancel',
                label: "Cancel",
                type: 'link'
            }]
        },

        formSettings: {
            checkboxAsBoolean: true
        },

        /**
         * Applies default dialog settings.
         */
        initialize: function(options) {
            options = options || {};

            if (options.form) {
                this.formSettings = _.defaults(
                    options.form, this.formSettings
                );
                delete options.form;
            }

            Dialog.prototype.initialize.call(this,
                _.defaults(options || {}, this.defaultSettings)
            );
        },

        /**
         * Override onCreateInstance, to execute
         * custom logic after dialog is created.
         */
        onCreateInstance: function() {
            Dialog.prototype.onCreateInstance.apply(this, arguments);

            this.form = new AjaxForm(this.dialog.getPage(0).body);

            // bind embedded form
            if (!this.formSettings.noBind) {
                this.form.bind(this.formSettings);
            }

            // events are bind at the end
            // (form.bind removes any previous defined)
            this.form
                .on('error', _.bind(this.onFormError, this))
                .on('submit', _.bind(this.onFormSubmit, this))
                .on('success', _.bind(this.onFormSuccess, this));
        },

        /**
         * Catch save button clicked
         * and trigger form submission.
         */
        onButtonClick: function(id) {
            Dialog.prototype.onButtonClick.apply(this, arguments);

            if (id === 'save') {
                this.form.$el.trigger('submit');
            }
        },

        /**
         * On success close current dialog.
         */
        onFormSuccess: function() {
            this.dialog.hide();
            this.dialog.remove();
        },

        /**
         * On submit show loading icon
         * and disable submit button.
         */
        onFormSubmit: function() {
            var panel = this.dialog.getPage(0).buttonpanel;

            panel.prepend(aui.icons.icon({
                size: 'small',
                icon: 'wait'
            }));

            panel.find(':button').attr('disabled', true);
        },

        /**
         * Removes loading icon
         * and enables submit button.
         */
        onFormError: function() {
            var panel = this.dialog.getPage(0).buttonpanel;

            panel.find('.aui-icon-wait').remove();
            panel.find(':button').removeAttr('disabled');
        }

    });

    return dialogForm;

});

/* module-key = 'bamboo.web.resources.common:widget-dialog-form', location = '/widget/dialog-form/dialog-form.soy' */
// This file was automatically generated from dialog-form.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.dialog == 'undefined') { bamboo.widget.dialog = {}; }
if (typeof bamboo.widget.dialog.form == 'undefined') { bamboo.widget.dialog.form = {}; }


bamboo.widget.dialog.form.content = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="aui-dialog-content">', opt_data.content, '</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:widget-dialog-form-deletion', location = '/widget/dialog-form-deletion/dialog-form-deletion.soy' */
// This file was automatically generated from dialog-form-deletion.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.dialog == 'undefined') { bamboo.widget.dialog = {}; }
if (typeof bamboo.widget.dialog.form == 'undefined') { bamboo.widget.dialog.form = {}; }
if (typeof bamboo.widget.dialog.form.deletion == 'undefined') { bamboo.widget.dialog.form.deletion = {}; }


bamboo.widget.dialog.form.deletion.loading = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<form><div class="aui-message aui-message-generic">', soy.$$escapeHtml("Checking artifact dependencies ..."), ' <span class="icon icon-loading aui-dialog-content-loading"></span></div></form>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.dialog.form.deletion.invalidToken = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.warning({content: '<p>' + soy.$$escapeHtml("Artifact dependencies have changed, please try again.") + '</p>'}, output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:widget-dialog-form-deletion', location = '/widget/dialog-form-deletion/dialog-form-deletion.js' */
define('widget/dialog-form-deletion', [
    'jquery',
    'underscore',
    'widget/dialog-form',
    'util/ajax'
], function(
    $,
    _,
    DialogForm,
    ajax
) {

    'use strict';

    var deleteDialog = DialogForm.extend({

        /**
         * API url root prefix.
         */
        urlRoot: AJS.contextPath() + '/rest/api/latest/',

        defaultSettings: {
            buttons: [{
                id: 'confirm',
                label: "Confirm",
                cssClass: 'aui-button aui-button-primary'
            }, {
                id: 'cancel',
                label: "Cancel",
                type: 'link'
            }]
        },

        /**
         * Initialize form & dialog settings
         * and fetches delete warnings.
         */
        initialize: function(options) {
            var settings = options || {};

            /**
             * Local template used only for DeleteFormDialog.
             */
            this.templateDelete = bamboo.widget.dialog.form.deletion;

            settings.content = this.templateDelete.loading();
            settings.height = 320;
            settings.form = {
                type: 'DELETE',
                noBind: true
            };

            this.url = this.urlRoot + settings.resourceUrl;
            this.formTemplateData = options.templateData || {};
            this.formTemplate = options.template;

            DialogForm.prototype.initialize.call(this, settings);

            this.dialogPage = this.dialog.getPage(0);
            this.fetchWarnings();
        },

        /**
         * Process confirm button, if we are in
         * "refetch" mode then just refetch delete warnings.
         */
        onButtonClick: function(id) {
            DialogForm.prototype.onButtonClick.apply(this, arguments);

            if (id === 'confirm') {
                if (this.refetchToken) {
                    this.form.$el.html(this.templateDelete.loading());
                    this.fetchWarnings();
                } else if (!!this.warningData.confirmationToken) {
                    this.form.bind(_.defaults({
                        url: this.url + '?confirmationToken=' + this.warningData.confirmationToken
                    }, this.formSettings));

                    this.form.$el.trigger('submit');
                }
            }
        },

        /**
         * Process warning response, renders output
         * and check if resource is running.
         */
        onWarningLoaded: function(data) {
            var submitButton = this.dialogPage.button[0];

            // undo button changes (retry > confirm)
            if (this.refetchToken) {
                submitButton.item.text(submitButton.originalText);
                submitButton.originalText = null;
                this.refetchToken = false;
            }

            submitButton.item.show().focus();
            this.warningData = data;

            this.form.$el.html(this.formTemplate({
                isRunning: this.warningData.running,
                jobs: this.getConsumerJobs(this.warningData.artifactSubscriptions),
                data: this.formTemplateData
            }));

            if (!this.warningData.running) {
                this.dialogPage.button[0].item.removeAttr('disabled');
            } else {
                // resource is running,
                // hide all buttons and add close button
                _.each(this.dialogPage.button, function(button) {
                    button.item.hide();
                });

                this.dialog.addButton("Close", function(dialog) {
                    dialog.remove();
                });
            }
        },

        /**
         * If response code is 409 (conflict - resource has changed)
         * then switch back to re-fetch mode.
         */
        onFormError: function(event, data, statusCode) {
            DialogForm.prototype.onFormError.apply(this, arguments);

            if (statusCode === 409) {
                var submitButton = this.dialogPage.button[0];

                submitButton.originalText = submitButton.item.text();
                submitButton.item.text("Try again");

                this.form.$el.html(this.templateDelete.invalidToken());
                this.refetchToken = true;
            }
        },

        /**
         * Utility functionto re-fetch delete warnings.
         */
        fetchWarnings: function() {
            this.dialogPage.button[0].item.hide();

            ajax(this.url + '/deletionWarnings?expand=stage,plan,project')
                .done(_.bind(this.onWarningLoaded, this));
        },

        /**
         * Tracks jobs IDs and only return unique consumer jobs.
         */
        getConsumerJobs: function(artifactSubscriptions) {
            var consumerJobs = [];
            var consumerJobsIds = [];

            _.each(artifactSubscriptions, function(artifact) {
                _.each(artifact.consumerJobs, function(job) {
                    if (_.indexOf(consumerJobsIds, job.id) === -1) {
                        consumerJobs.push(job);
                    }
                });
            });

            return consumerJobs;
        }

    });

    return deleteDialog;

});

/* module-key = 'bamboo.web.resources:autocomplete-controls', location = '/widget/autocomplete-controls/aui/progressive-data-set.js' */
AJS.ProgressiveDataSet = Backbone.Collection.extend({
    initialize: function(models, options) {
        options || (options = {});
        if (options.matcher) this.matcher = options.matcher;
        if (options.model) this.model = options.model; // Fixed in backbone 0.9.2
        this._idAttribute = (new this.model()).idAttribute;
        this._maxResults = options.maxResults || 5;
        this._queryData = options.queryData || {};
        this._queryParamKey = options.queryParamKey || "q";
        this._queryEndpoint = options.queryEndpoint || "";
        this._allowEmptyQuery = (typeof options.allowEmptyQuery != 'undefined' ? options.allowEmptyQuery : false);
        this._matchAnyOnEmptyQuery = (typeof options.matchAnyOnEmptyQuery != 'undefined' ? options.matchAnyOnEmptyQuery : true);
        this.value = null;
        this.queryCache = {};
        this.activeQueryCount = 0;
        _.bindAll(this, 'query', 'respond');
    },

    url: function() {
        return this._queryEndpoint;
    },

    query: function(query) {
        var remote, results;

        this.value = query;
        results = this.getFilteredResults(query);
        this.respond(query, results);

        if (!this._queryEndpoint ||
            (query && (this.hasQueryCache(query) || !this.shouldGetMoreResults(results))) ||
            (!query && !(this._allowEmptyQuery && this.shouldGetMoreResults(results)))
            ) {
            return;
        }

        remote = this.fetch(query);

        this.activeQueryCount++;
        this.trigger('activity', { activity: true });
        remote.always(_.bind(function() {
            this.activeQueryCount--;
            this.trigger('activity', { activity: !!this.activeQueryCount });
        }, this));

        remote.done(_.bind(function(resp, succ, xhr) {
            this.addQueryCache(query, resp, xhr);
        }, this));
        remote.done(_.bind(function() {
            query = this.value;
            results = this.getFilteredResults(query);
            this.respond(query, results);
        }, this));
    },

    getQueryData: function(query) {
        var params = _.isFunction(this._queryData) ? this._queryData(query) : this._queryData;
        var data = _.extend({}, params);
        data[this._queryParamKey] = query;
        return data;
    },

    fetch: function(query) {
        var data = this.getQueryData(query);
        // {add: true} for Backbone <= 0.9.2
        // {update: true, remove: false} for Backbone >= 0.9.9
        var params = { add : true, update : true, remove : false, data : data };
        var remote = Backbone.Collection.prototype.fetch.call(this, params);
        return remote;
    },

    respond: function(query, results) {
        this.trigger('respond', {
            query: query,
            results: results
        });
        return results;
    },

    matcher: function(item, query) { },

    getFilteredResults: function(query) {
        var results = [];
        if (!query && !this._matchAnyOnEmptyQuery) return results;
        results = this.filter(function(item) {
            return (true == this.matcher(item, query) || !query && this._matchAnyOnEmptyQuery);
        }, this);
        if (this._maxResults) {
            results = _.first(results, this._maxResults);
        }
        return results;
    },

    addQueryCache: function(query, response, xhr) {
        var cache = this.queryCache;
        var results = this.parse(response, xhr);
        cache[query] = _.pluck(results, this._idAttribute);
    },

    hasQueryCache: function(query) {
        return this.queryCache.hasOwnProperty(query);
    },

    findQueryCache: function(query) {
        return this.queryCache[query];
    },

    shouldGetMoreResults: function(results) {
        return results.length < this._maxResults;
    },

    setMaxResults: function(number) {
        this._maxResults = number;
        this.value && this.respond(this.value, this.getFilteredResults(this.value));
    }
});
/* module-key = 'bamboo.web.resources:autocomplete-controls', location = '/widget/autocomplete-controls/aui/query-input.js' */
AJS.QueryInput = Backbone.View.extend({
    initialize: function(options) {
        _.bindAll(this, 'changed', 'val');
        this._lastValue = this.val();
        this.$el.bind('keyup focus', this.changed);
    },
    val: function () {
        if (arguments.length) { this._lastValue = arguments[0]; } // difference to AUI
        return this.$el.val.apply(this.$el, arguments);
    },
    changed: function() {
        if (this._lastValue != this.val()) {
            this.trigger('change', this.val());
            this._lastValue = this.val();
        }
    }
});
/* module-key = 'bamboo.web.resources:autocomplete-controls', location = '/widget/autocomplete-controls/aui/query-result.js' */
AJS.ResultSet = Backbone.Model.extend({
    initialize: function(options) {
        this.set('active', null, {silent: true});
        this.collection = new Backbone.Collection();
        this.collection.bind('reset', this.setActive, this);
        this.source = options.source;
        this.source.bind('respond', this.process, this);
    },

    url: false,

    process: function(response) {
        this.set('query', response.query);
        this.collection.reset(response.results);
        this.set('length', response.results.length);
        this.trigger('update', this);
    },

    setActive: function() {
        var id = (arguments[0] instanceof Backbone.Collection) ? false : arguments[0];
        var model = (id) ? this.collection.get(id) : this.collection.first();
        this.set('active', model || null);
        return this.get('active');
    },

    next: function() {
        var current = this.collection.indexOf(this.get('active'));
        var i = (current + 1) % this.get('length');
        var next = this.collection.at(i);
        return this.setActive(next && next.id);
    },

    prev: function() {
        var current = this.collection.indexOf(this.get('active'));
        var i = ((current === 0) ? this.get('length') : current) - 1;
        var prev = this.collection.at(i);
        return this.setActive(prev && prev.id);
    },

    each: function() {
        return this.collection.each.apply(this.collection, arguments);
    }
});

AJS.ResultsList = Backbone.View.extend({
    events: {
        "click [data-id]": "setSelection"
    },

    initialize: function (options) {
        if (!this.model) {
            this.model = new AJS.ResultSet({ source: options.source });
        }
        if (!(this.model instanceof AJS.ResultSet)) {
            throw new Error('model must be set to a ResultSet');
        }
        this.model.bind('update', this.process, this);

        this.render = _.wrap(this.render, function(func) {
            this.trigger('rendering');
            func.apply(this, arguments);
            this.trigger('rendered');
        });
    },

    process: function() {
        if (!this._shouldShow(this.model.get('query'))) return;
        this.show();
    },

    render: function() {
        var ul, listItems = [];
        this.model.each(function(model) {
            var li = Backbone.$('<li/>').attr('data-id', model.id).html(this.renderItem(model));
            listItems.push(li);
        }, this);
        ul = Backbone.$('<ul/>').html(listItems);
        this.$el.html(ul);
        return this;
    },

    renderItem: function() {
        return;
    },

    setSelection: function(event) {
        var id = Backbone.$(event.target).closest('li[data-id]').data("id");
        var selected = this.model.setActive(id);
        this.trigger('selected', selected);
    },

    show: function() {
        this.lastQuery = this.model.get('query');
        this._hiddenQuery = null;
        this.render();
        this.$el.show();
        this.trigger('shown');
    },

    hide: function() {
        this.$el.hide();
        this._hiddenQuery = this.lastQuery;
        this.trigger('hidden');
    },

    size: function() {
        return this.model.get('length');
    },

    _shouldShow: function(query) {
        return query === '' || !(this._hiddenQuery && this._hiddenQuery === query);
    }

});
/* module-key = 'bamboo.web.resources:autocomplete', location = '/widget/autocomplete-controls/bamboo/single-select.js' */
define('widget/single-select', [
    'jquery',
    'underscore',
    'backbone'
], function(
    $,
    _,
    Backbone
) {

    'use strict';

    var SingleSelectResultView = AJS.ResultsList.extend({
        events: function() {
            // Required because Backbone doesn't easily support
            // adding event to the event object when extending a View, it just replaces them
            return _.extend({}, AJS.ResultsList.prototype.events, {
                'hover [data-id]': 'setActive',
                mouseenter: 'setContainerActive',
                mouseleave: 'setContainerInactive'
            });
        },
        process: function() {
            if (!this.size() && !this.model.get('query')) {
                this.hide();
            } else {
                this.show();
            }
        },
        render: function() {
            var $ul = jQuery('<ul/>');
            if (this.size()) {
                this.model.each(function(model) {
                    var $li = jQuery('<li/>', {
                        'data-id': model.id,
                        html: this.renderItem(model)
                    });
                    $li.attr('title', $li.text());
                    $ul.append($li);
                }, this);
            } else {
                jQuery('<li/>', {
                    'class': 'autocomplete-nomatch',
                    text: "No matches"
                }).appendTo($ul);
            }
            this.$el.html($ul);
            return this;
        },
        setActive: function(event) {
            var id = jQuery(event.target).closest('li[data-id]').data('id');
            this.model.setActive(id);
        },
        isContainerActive: function() {
            return !!this._containerActive;
        },
        setContainerActive: function() {
            this._containerActive = true;
        },
        setContainerInactive: function() {
            this._containerActive = false;
        }
    });

    var SingleSelectInputDropdown = Backbone.View.extend({
        initialize: function() {
            this.render();
        },
        _loadingClass: 'loading',
        tagName: 'span',
        className: 'icon bamboo-single-select-icon drop-menu',
        events: {
            mouseenter: 'setActive',
            mouseleave: 'setInactive'
        },
        render: function() {
            this.$el.html('<span>More</span>');
            return this;
        },
        isActive: function() {
            return !!this._active;
        },
        setActive: function() {
            this._active = true;
        },
        setInactive: function() {
            this._active = false;
        },
        setLoading: function(isLoading) {
            this.$el.toggleClass(this._loadingClass, isLoading);
        }
    });

    var SingleSelectField = Backbone.View.extend({
        initialize: function(options) {
            this.$original = options.$original;
            this.dropMenu = new SingleSelectInputDropdown();
            this.$placeholder = jQuery('<input type="text" autocomplete="off" class="bamboo-single-select-field text" />');
            this.render();
        },
        _hasIconClass: 'bamboo-single-select-has-entity-icon',
        render: function() {
            this.$el.removeClass('text'); // remove AUI field class names
            this.dropMenu.$el.appendTo(this.$el);
            this.$placeholder
                .attr('placeholder', this.$original.attr('placeholder') || '')
                .val(this.$original.attr('data-field-text') || this.$original.val())
                .prependTo(this.$el);
            this.setIcon(this.$original.attr('data-icon'));
            jQuery('label').filter('[for="' + this.$original.attr('id') + '"]').click(_.bind(function() {
                this.$placeholder.focus();
            }, this));

            return this;
        },
        addDropMenuEvents: function(events) {
            this.dropMenu.delegateEvents(_.extend(SingleSelectInputDropdown.prototype.events, events));
        },
        indicateActivity: function(ds) {
            this.dropMenu.setLoading(ds.activity);
        },
        setIcon: function(iconUrl) {
            this.$icon = this.$icon || jQuery('<div />', { 'class': 'bamboo-single-select-entity-icon' });
            if (iconUrl) {
                this.$icon.css('background-image', 'url(' + iconUrl + ')').appendTo(this.$el);
                this.$el.addClass(this._hasIconClass);
            } else {
                this.$icon.detach();
                this.$el.removeClass(this._hasIconClass);
            }
        }
    });

    var SingleSelect = Backbone.View.extend({
        initialize: function(options) {
            this._chosen = !!this.$el.data('chosen');
            this._activeClass = options.activeClass || 'active';
            this.datasource = new AJS.ProgressiveDataSet(options.bootstrap || [], {
                queryEndpoint: options.queryEndpoint,
                queryParamKey: options.queryParamKey,
                maxResults: options.maxResults,
                allowEmptyQuery: (typeof options.allowEmptyQuery != 'undefined' ? options.allowEmptyQuery : true),
                matchAnyOnEmptyQuery: options.matchAnyOnEmptyQuery,
                queryData: options.queryData
            });
            this.datasource.matcher = options.matcher;
            this.datasource.parse = options.parser;

            this.field = new SingleSelectField({
                className: 'bamboo-single-select ' + this.$el.attr('class'),
                $original: this.$el
            });

            this.queryInput = new AJS.QueryInput({ el: this.field.$placeholder });
            this.queryInput
                .on('change', this.datasource.query)
                .on('change', this.handleInputChange, this)
                .delegateEvents(_.extend(AJS.QueryInput.prototype.events || {}, {
                    keydown: _.bind(this.handleInputKeydown, this),
                    blur: _.bind(this.handleInputBlur, this),
                    focus: _.bind(this.handleInputFocus, this),
                    click: _.bind(this.requestMatches, this)
                }));

            var singleSelect = this;

            var ResultView = SingleSelectResultView.extend({
                renderItem: function(model) {
                    return options.resultItemTemplate(model.attributes);
                },
                process: function() {
                    if (!singleSelect.disableRendering)
                    {
                        SingleSelectResultView.prototype.process.call(this);
                    }
                    singleSelect.disableRendering = false;
                }
            });

            this.field.addDropMenuEvents({
                click: _.bind(function() {
                    this.queryInput.$el.focus();
                    if (this.queryResult.$el.is(':visible')) {
                        this.queryResult.hide();
                    } else {
                        this.requestMatches();
                    }
                }, this)
            });

            this.datasource.on('activity', this.field.indicateActivity, this.field);

            this.queryResult = new ResultView({ source: this.datasource });
            this.queryResult
                .on('selected', this.setValue, this)
                .on('rendered', this.highlightActive, this)
                .on('shown', this.indicateActive, this)
                .on('hidden', this.indicateInactive, this)
                .model.on('change:active', this.highlightActive, this);

            this.render();
        },
        render: function() {
            this.field.$el.insertBefore(this.$el.hide());
            this.queryResult.hide();
            this.queryResult.$el.addClass('autocomplete').appendTo(document.body);

            return this;
        },
        highlightActive: function() {
            var active = this.queryResult.model.get('active');
            var id = active && active.id;
            this.queryResult.$('li[data-id]').filter(function(i, li) {
                var $li = jQuery(li);
                var method = (id == $li.attr('data-id')) ? 'addClass' : 'removeClass';
                $li[method]('active');
            });
        },
        reset: function() {
            this.datasource.reset();
            this.setValue(null);
            this.trigger('reset');
        },
        setValue: function(model) {
            this.$el.val(model ? model.id : '');
            this.queryInput.val(model ? this.getDisplayValue(model) : '');
            this.field.setIcon(model ? this.getIconValue(model) : null);
            this.queryResult.hide();
            if (model) {
                this.queryInput.$el.focus();
                this._chosen = true;
                this.trigger('selected', model);
            } else {
                this._chosen = false;
            }
            // QueryResult and dropmenu being active prevents blurring the field,
            // so ensure we set them inactive if an option is chosen to allow taking focus from field
            this.queryResult.setContainerInactive();
            this.field.dropMenu.setInactive();
        },
        getDisplayValue: function(model) {
            return model.id;
        },
        getIconValue: function() {
            return null;
        },
        indicateActive: function() {
            this.queryInput.$el.addClass(this._activeClass);
        },
        indicateInactive: function() {
            this.queryInput.$el.removeClass(this._activeClass);
        },
        requestMatchesQuietly: function(callback) {
            this.requestMatches();

            this.datasource.once('sync',
                    _.bind(function()
                    {
                        callback();
                        this.disableRendering = true;
                    }, this));
        },
        requestMatches: function() {
            this.datasource.query(this._chosen ? '' : this.queryInput.val());
        },
        handleInputKeydown: function(e) {
            var active;
            if (this.queryResult.$el.is(':visible')) {
                switch (e.which) {
                    case jQuery.ui.keyCode.UP:
                        e.preventDefault();
                        this.queryResult.model.prev();
                        break;
                    case jQuery.ui.keyCode.DOWN:
                        e.preventDefault();
                        this.queryResult.model.next();
                        break;
                    case jQuery.ui.keyCode.ENTER:
                    case jQuery.ui.keyCode.TAB:
                        e.preventDefault();
                        active = this.queryResult.model.get('active');
                        if (active) {
                            this.queryResult.trigger('selected', active);
                        }
                        break;
                    case jQuery.ui.keyCode.ESCAPE:
                        e.stopPropagation();
                        this.queryResult.hide();
                        break;
                }
            } else if (e.which == jQuery.ui.keyCode.DOWN) {
                this.requestMatches();
            }
        },
        handleInputBlur: function() {
            if (this.field.dropMenu.isActive() || this.queryResult.isContainerActive()) {
                this.queryInput.$el.focus();
            } else {
                if (this.queryResult.$el.is(':visible')) {
                    this.queryResult.hide();
                }
            }
        },
        handleInputFocus: function() {
            var $input = this.queryInput.$el;
            var inputOffset = $input.offset();
            var inputWidth = $input.outerWidth();
            var inputHeight = $input.outerHeight();
            this.queryResult.$el.css({
                width: inputWidth,
                top: inputOffset.top + inputHeight,
                left: inputOffset.left
            });
            // setTimeout will fire after user has clicked in field to give it focus,
            // ensures text is always selected on focus
            setTimeout(function() {
                $input.select();
            });
        },
        handleInputChange: function() {
            this.$el.val(this.queryInput.val());
            this.field.setIcon(null);
            this._chosen = false;
        }
    });

    return SingleSelect;

});

/**
 * Export functionality onto Bamboo prototype.
 * To be removed in 6.0
 * @deprecated
 */
if (AJS.namespace) {
    AJS.namespace('BAMBOO.SingleSelect', null, require('widget/single-select'));
}
/* module-key = 'bamboo.web.resources:autocomplete', location = '/widget/autocomplete-controls/bamboo/selected-set.js' */
define('widget/selected-list', [
    'jquery',
    'underscore',
    'backbone'
], function(
    $,
    _,
    Backbone
) {

    'use strict';

    var SelectedSet = Backbone.Model.extend({
        initialize: function(options) {
            this.collection = options.bootstrap instanceof Backbone.Collection
                ? options.bootstrap
                : new Backbone.Collection(options.bootstrap || []);
        },
        each: function() {
            return this.collection.each.apply(this.collection, arguments);
        },
        add: function(model) {
            this.collection.add(model);
        },
        remove: function(id) {
            this.collection.remove(this.collection.get(id));
        }
    });
    var SelectedList = Backbone.View.extend({
        events: {
            'click [data-id] .remove': 'removeItem'
        },
        initialize: function(options) {
            this.model = new SelectedSet({ bootstrap: options.bootstrap || [] });
            this.options = options;
            if (this.model.collection.length) {
                this.render();
            }
        },
        render: function() {
            var listItems = [];
            this.model.each(function(model) {
                var li = Backbone.$('<li/>').attr('data-id', model.id).html(this.renderItem(model));
                listItems.push(li);
            }, this);
            this.$el.toggleClass('empty', (this.model.collection.length === 0)).html(listItems);
            return this;
        },
        renderItem: function(model) {
            return this.options.itemTemplate(model.attributes);
        },
        fadeout: function() {
            jQuery('.multi-select-added').animate({
                 'background-color': 'transparent'
            }, 1500);
        },
        addItem: function(model) {
            this.model.add(model);
            this.render(model);
            this.fadeout();
        },
        removeItem: function(event) {
            var $item = jQuery(event.target).closest('[data-id]');
            this.model.remove($item.data('id'));
            $item.fadeOut(400, _.bind(function() {
                this.render();
            }, this));
        }

    });

    return SelectedList;
});

/* module-key = 'bamboo.web.resources:autocomplete', location = '/widget/autocomplete-controls/bamboo/user-autocomplete.js' */
define('widget/user-single-select', [
    'jquery',
    'underscore',
    'backbone',
    'widget/single-select'
], function(
    $,
    _,
    Backbone,
    SingleSelect
) {

    'use strict';

    var UserSingleSelect = Backbone.View.extend({
        initialize: function(options) {
            options || (options = {});
            var SingleSelectWrapper = SingleSelect.extend({
                getDisplayValue: this.getFilterValue,
                getIconValue: this.getIconValue
            });
            this.singleSelect = new SingleSelectWrapper({
                el: this.$el,
                bootstrap: options.bootstrap || [],
                maxResults: options.maxResults || 5,
                matcher: _.bind(this.matcher, this),
                parser: this.parser,
                resultItemTemplate: bamboo.widget.autocomplete.userItemResult,
                queryEndpoint: AJS.contextPath() + '/rest/api/latest/search/users?includeAvatars=true',
                queryParamKey: 'searchTerm',
                allowEmptyQuery: false
            });
            this.singleSelect.on('selected', this.handleSelection, this);
        },
        lCasePrefixMatch: function(str, prefix) {
            return (str.toLowerCase().indexOf(prefix.toLowerCase()) === 0);
        },
        matcher: function(user, query) {
            var matches = false;
            matches = matches || this.lCasePrefixMatch(user.get('username'), query);
            if (user.has('fullName')) {
                matches = matches || this.lCasePrefixMatch(user.get('fullName'), query);
            }
            if (user.has('displayableEmail')) {
                matches = matches || this.lCasePrefixMatch(user.get('displayableEmail'), query);
            }
            return matches;
        },
        parser: function(response) {
            return _.map(response.searchResults, function(result) {
                return result.searchEntity;
            });
        },
        handleSelection: function(user) {
            this.trigger('selected', user);
        },
        getFilterValue: function(user) {
            return user.get('fullName');
        },
        getIconValue: function(user) {
            return user.get('avatarUrl');
        }
    });

    return UserSingleSelect;
});

/* module-key = 'bamboo.web.resources:autocomplete', location = '/widget/autocomplete-controls/bamboo/plan-single-select.js' */
define('widget/plan-single-select', [
    'jquery',
    'underscore',
    'brace',
    'backbone',
    'widget/single-select',
    'util/events'
], function(
    $,
    _,
    Brace,
    Backbone,
    SingleSelect,
    events
) {

    'use strict';

    var PlanSingleSelect = Brace.View.extend({
        mixins: [events.EventBusMixin],
        initialize: function(options) {
            options || (options = {});

            var PlanSingleSelect = SingleSelect.extend({
                getDisplayValue: this.getFilterValue
            });

            this.singleSelect = new PlanSingleSelect({
                el: this.$el,
                bootstrap: options.bootstrap || [],
                maxResults: options.maxResults || 10,
                matcher: _.bind(this.matcher, this),
                parser: this.parser,
                resultItemTemplate: bamboo.widget.autocomplete.planItemResult,
                queryEndpoint: AJS.contextPath() + '/rest/api/latest/search/plans',
                queryParamKey: 'searchTerm'
            });

            if (this.singleSelect.queryInput.val()) {
                this.singleSelect.requestMatchesQuietly(_.bind(function() {
                    if (this.singleSelect.datasource.length) {
                        this.singleSelect.setValue(this.singleSelect.datasource.models[0]);
                    }
                }, this));
            }

            this.onEvent('branch:empty', this.onHideBranchOptions);
            this.singleSelect.on('selected', this.onHandleSelection, this);
            this.singleSelect.queryInput.on('change', this.onHandleSelection, this);
        },
        containsMatch: function(str, find) {
            return (str.toLowerCase().indexOf(find.toLowerCase()) > -1);
        },
        matcher: function(plan, query) {
            return this.containsMatch(this.getFilterValue(plan), query);
        },
        parser: function(response) {
            return _.map(response.searchResults, function(result) {
                return result.searchEntity;
            });
        },
        getFilterValue: function(model) {
            // > character is not escaped for a reason
            return model.get('projectName') + ' › ' + model.get('planName');
        },
        onHandleSelection: function(model) {
            this.triggerEvent('plan:selected', model);

            if (model instanceof Backbone.Model) {
                this.$el.parents('.field-group').next().show();
            }
        },
        onHideBranchOptions: function() {
            this.$el.parents('.field-group').next().hide();
        }
    });

    return PlanSingleSelect;
});

/* module-key = 'bamboo.web.resources:autocomplete', location = '/widget/autocomplete-controls/bamboo/branch-autocomplete.js' */
define('widget/branch-single-select', [
    'jquery',
    'underscore',
    'backbone',
    'brace',
    'widget/single-select',
    'util/events'
], function(
    $,
    _,
    Backbone,
    Brace,
    SingleSelect,
    events
) {

    'use strict';

    var BranchSingleSelect = Brace.View.extend({
        mixins: [events.EventBusMixin],
        initialize: function(options) {
            options || (options = {});

            var ExtendedSingleSelect = SingleSelect.extend({
                getDisplayValue: this.getFilterValue
            });

            this.singleSelect = new ExtendedSingleSelect({
                el: this.$el,
                bootstrap: options.bootstrap || [],
                maxResults: options.maxResults || 10,
                matcher: _.bind(this.matcher, this),
                parser: this.parser,
                resultItemTemplate: bamboo.widget.autocomplete.branchItemResult,
                queryEndpoint: AJS.contextPath() + '/rest/api/latest/search/branches',
                queryParamKey: 'searchTerm',
                queryData: _.bind(this.generateAdditionalQueryData, this)
            });

            this.singleSelect.on('selected', this.handleSelection, this);
            this.singleSelect.queryInput.on('change', this.handleSelection, this);

            if (options.masterPlanKey) {
                this.masterPlanKey = options.masterPlanKey;
            }
            else if (options.masterPlanField) {
                this.masterPlanKey = options.masterPlanField.val();
            }
            else if (options.masterPlanPicker) {
                this.onEvent('plan:selected', this.onMasterPlanChange);
                this.masterPlanKey = options.masterPlanPicker.val();
            }

            if (!this.masterPlanKey) {
                this.singleSelect.$el.parent().hide();
            }
        },
        containsMatch: function(str, find) {
            return (str.toLowerCase().indexOf(find.toLowerCase()) > -1);
        },
        matcher: function(plan, query) {
            return this.containsMatch(this.getFilterValue(plan), query);
        },
        parser: function(response) {
            return _.map(response.searchResults, function(result) {
                return result.searchEntity;
            });
        },
        handleSelection: function(model) {
            this.trigger('selected', model);
        },
        getFilterValue: function(model) {
            return model.get('branchName');
        },
        generateAdditionalQueryData: function() {
            return { masterPlanKey: this.masterPlanKey, includeMasterBranch: this.options.includeMasterBranch };
        },
        // using global event-bus event handling (first argument is an instance)
        onMasterPlanChange: function(instance, masterModel) {
            this.singleSelect.reset();

            if (!(masterModel instanceof Backbone.Model)) {
                this.singleSelect.$el.parent().hide();
            }
            else {
                this.singleSelect.$el.parent().filter(':hidden').show();
                this.masterPlanKey = masterModel.get('key');

                var branchPickerContainer = this.options.branchPickerContainer;

                if (branchPickerContainer) {
                    this.singleSelect.requestMatchesQuietly(_.bind(function() {
                        var numberOfBranches = this.singleSelect.datasource.length;
                        if (this.options.includeMasterBranch) numberOfBranches--;
                        if (numberOfBranches) {
                            branchPickerContainer.show();

                            // select master branch
                            if (this.options.includeMasterBranch) {
                                this.singleSelect.setValue(this.singleSelect.datasource.models[0]);
                            }
                        } else {
                            branchPickerContainer.hide();
                        }
                    }, this));
                }
            }
        }
    });

    return BranchSingleSelect;
});

/* module-key = 'bamboo.web.resources:autocomplete', location = '/widget/autocomplete-controls/bamboo/project-autocomplete.js' */
define('widget/project-single-select', [
    'jquery',
    'underscore',
    'backbone',
    'widget/single-select'
], function(
    $,
    _,
    Backbone,
    SingleSelect
) {

    'use strict';

    var ProjectSingleSelect = Backbone.View.extend({
        initialize: function(options) {
            options || (options = {});
            this.singleSelect = new SingleSelect({
                el: this.$el,
                bootstrap: options.bootstrap || [],
                maxResults: options.maxResults || 5,
                matcher: _.bind(this.matcher, this),
                parser: this.parser,
                resultItemTemplate: bamboo.widget.autocomplete.projectItemResult,
                queryEndpoint: AJS.contextPath() + '/rest/api/latest/search/projects',
                queryParamKey: 'searchTerm'
            });
            this.singleSelect.on('selected', this.handleSelection, this);
        },
        containsMatch: function(str, find) {
            return (str.toLowerCase().indexOf(find.toLowerCase()) > -1);
        },
        matcher: function(plan, query) {
            var matches = false;
            matches = matches || this.containsMatch(plan.get('projectName'), query);
            return matches;
        },
        parser: function(response) {
            return _.map(response.searchResults, function(result) {
                return result.searchEntity;
            });
        },
        handleSelection: function(model) {
            this.trigger('selected', model);
        }
    });

    return ProjectSingleSelect;
});

/* module-key = 'bamboo.web.resources:autocomplete', location = '/widget/autocomplete-controls/bamboo/autocomplete.soy' */
// This file was automatically generated from autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.autocomplete == 'undefined') { bamboo.widget.autocomplete = {}; }


bamboo.widget.autocomplete.userItemResult = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span>', (opt_data.avatarUrl) ? '<img src="' + soy.$$escapeHtml(opt_data.avatarUrl) + '" alt="" class="avatar" />' : '', (opt_data.fullName) ? soy.$$escapeHtml(opt_data.fullName) + ((opt_data.displayableEmail) ? ' - ' + soy.$$escapeHtml(opt_data.displayableEmail) : '') + ' (' + soy.$$escapeHtml(opt_data.username) + ')' : (opt_data.displayableEmail) ? soy.$$escapeHtml(opt_data.displayableEmail) + ' (' + soy.$$escapeHtml(opt_data.username) + ')' : soy.$$escapeHtml(opt_data.username), '</span>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.planItemResult = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span>', soy.$$escapeHtml(opt_data.projectName), (opt_data.planName) ? ' &rsaquo; ' + soy.$$escapeHtml(opt_data.planName) : '', '</span>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.branchItemResult = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span>', soy.$$escapeHtml(opt_data.branchName), '</span>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.projectItemResult = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span>', soy.$$escapeHtml(opt_data.projectName), '</span>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.variableItemResult = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span>', soy.$$escapeHtml(opt_data.key), '</span>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:widget-quicksearch', location = '/widget/quicksearch/quicksearch-view-results.js' */
define('widget/quicksearch-view-results', [
    'jquery',
    'underscore',
    'widget/quicksearch-collection-results',
    'widget/quicksearch-view-results-item'
], function(
    $,
    _,
    QuickSearchResultsCollection,
    QuickSearchResultsItemView
) {

    'use strict';

    var QuickSearchResultsView = Backbone.View.extend({

        initialize: function() {
            this.template = bamboo.widget.quicksearch;

            this.initialElements();
            this.registerEvents();
        },

        initialElements: function() {
            this.$noMatches = $(this.template.nomatches());
            this.$items = this.$el;
        },

        registerEvents: function() {
            this.listenTo(this.collection, 'add', this.onChange);
            this.listenTo(this, 'select', this.onSelect);
            this.listenTo(this, 'move', this.onMove);
            this.listenTo(this, 'hide', this.onHide);
        },

        /**
         * We want to search for active row
         * and execute link (a href).
         */
        onSelect: function() {
            var $active = this.$items.find('li.active');

            if ($active.length) {
                this.$el.addClass('hidden');
                window.location.href = $active.find('a').attr('href');
            }
        },

        /**
         * Generates items output, also handles different types and
         * updates container in one go (single DOM operation).
         */
        onChange: function(model) {
            var results = model.get('searchResults');
            var container = document.createDocumentFragment();

            this.$items.find('li').remove();
            this.$el.toggleClass('hidden', false);

            var lastType = null;

            _.each(results, _.bind(function(item) {
                if (lastType !== item.type) {
                    item.newType = (lastType !== null);
                    lastType = item.type;
                }

                var view = new QuickSearchResultsItemView(item);
                container.appendChild(view.render().get(0));
            }, this));

            $(container.childNodes[0]).addClass('active');

            if (!results.length) {
                container.appendChild(this.$noMatches.get(0));
            }

            this.$items.append(container);
        },

        /**
         * Based on passed direction (up or down)
         * removes & adds active css class.
         */
        onMove: function(down) {
            var noResults = this.$items.find('li.no-results').length;
            var $element;

            if (!noResults) {
                if (down) {
                    $element = this.$items.find('li.active')
                        .removeClass('active').next();

                    if (!$element.length) {
                        $element = this.$items.find('li:first');
                    }
                } else {
                    $element = this.$items.find('li.active')
                        .removeClass('active').prev();

                    if (!$element.length) {
                        $element = this.$items.find('li:last');
                    }
                }

                if ($element && $element.length) {
                    $element.addClass('active');
                }
            }
        },

        /**
         * Hides results panel (current view)
         * and removes active element.
         */
        onHide: function() {
            this.$el.addClass('hidden');
            this.$items.find('li.active').removeClass('active');
        }

    });

    return QuickSearchResultsView;

    // }(_, AJS, Backbone));
});

/* module-key = 'bamboo.web.resources.common:widget-quicksearch', location = '/widget/quicksearch/quicksearch-view-results-item.js' */
define('widget/quicksearch-view-results-item', [
    'backbone'
], function(
    Backbone
) {

    'use strict';

    var QuickSearchResultsItemView = Backbone.View.extend({

        initialize: function(options) {
            this.options = options;
            this.template = bamboo.widget.quicksearch;
        },

        render: function() {
            var params = {
                content: this.template[this.options.type.toLowerCase()]({
                    id: this.options.id,
                    entity: this.options.entity
                })
            };

            if (this.options.newType) {
                params.cssClass = 'new-type';
            }

            this.setElement(this.template.row(params));

            return this.$el;
        }

    });

    return QuickSearchResultsItemView;
});

/* module-key = 'bamboo.web.resources.common:widget-quicksearch', location = '/widget/quicksearch/quicksearch.soy' */
// This file was automatically generated from quicksearch.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.quicksearch == 'undefined') { bamboo.widget.quicksearch = {}; }


bamboo.widget.quicksearch.row = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li ', (opt_data.cssClass) ? 'class="' + soy.$$escapeHtml(opt_data.cssClass) + '"' : '', '>', opt_data.content, '</li>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.quicksearch.nomatches = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  bamboo.widget.quicksearch.row({content: soy.$$escapeHtml("No matches found"), cssClass: 'no-results'}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.widget.quicksearch.chain = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', soy.$$escapeHtml(""), '/browse/', soy.$$escapeHtml(opt_data.entity.key), '" tabindex="-1" class="entity chain">');
  widget.icons.fontIcon({type: 'build'}, output);
  output.append('<span class="title"><span class="single plan-name">', soy.$$escapeHtml(opt_data.entity.planName), '</span></span><span class="subtitle project-name">', soy.$$escapeHtml(opt_data.entity.projectName), '</span></a>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.quicksearch.branch = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', soy.$$escapeHtml(""), '/browse/', soy.$$escapeHtml(opt_data.entity.key), '" tabindex="-1" class="entity branch">');
  widget.icons.fontIcon({type: 'devtools-branch'}, output);
  output.append('<span class="title"><span class="plan-name">', soy.$$escapeHtml(opt_data.entity.planName), '</span><span class="branch"><span class="divider"></span>', soy.$$escapeHtml(opt_data.entity.branchName), '</span></span><span class="subtitle project-name">', soy.$$escapeHtml(opt_data.entity.projectName), '</span></a>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.quicksearch.deploymentproject = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', soy.$$escapeHtml(""), '/deploy/viewDeploymentProjectEnvironments.action?id=', soy.$$escapeHtml(opt_data.id), '" tabindex="-1" class="entity deployment-project">');
  widget.icons.icon({type: 'deploy'}, output);
  output.append('<span class="title"><span class="single deployment-project-name">', soy.$$escapeHtml(opt_data.entity.projectName), '</span></span></a>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:widget-quicksearch', location = '/widget/quicksearch/quicksearch-view-input.js' */
define('widget/quicksearch-view-input', [
    'jquery',
    'underscore',
    'backbone'
], function(
    $,
    _,
    Backbone
) {

    'use strict';

    var QuickSearchInputView = Backbone.View.extend({

        /**
         * Mapping for different
         * key presses to custom events.
         */
        keys: {
            13: function() { return ['select']; },      // enter
            27: function() { return ['hide', true]; },  // escape
            38: function() { return ['move', false]; }, // arrow-up
            40: function() { return ['move', true]; }   // arrow-down
        },

        /**
         * 'blur' is used to deactivate quicksearch control,
         * 'keypup' is throttled to 250ms which fetches new results
         *  and 'keydown' checks mapping definition.
         */
        initialize: function() {
            this.$el.on('keydown', _.bind(this.onKeyPress, this));

            this.$el.on('keyup', _.debounce(
                _.bind(this.onKeyUp, this), 250
            ));

            // clicking anywhere outside parent element
            // (#quicksearch) will trigger hide event
            var container = this.$el.parent();

            $(document.body).on('click', _.bind(function(event) {
                if (!$(event.target).closest(container).length) {
                    this.trigger.call(this, 'hide');
                }
            }, this));
        },

        /**
         * If mapping is found we stop event propagation
         * and execute custom handler.
         */
        onKeyPress: function(event) {
            var mapping = this.keys[event.keyCode];

            if (mapping) {
                this.trigger.apply(this, mapping());

                event.stopPropagation();
                event.preventDefault();
            }
        },

        /**
         * If input is currently empty (text was removed),
         * we hide results panel.
         */
        onKeyUp: function(event) {
            var mapping = this.keys[event.keyCode];

            if (!mapping) {
                var term = $.trim(this.$el.val());

                (term.length) ? this.trigger('change', term) :
                    this.trigger('hide');
            }
        }

    });

    return QuickSearchInputView;
});

/* module-key = 'bamboo.web.resources.common:widget-quicksearch', location = '/widget/quicksearch/quicksearch.js' */
define('widget/quicksearch', [
    'jquery',
    'underscore',
    'backbone',
    'widget/quicksearch-collection-results',
    'widget/quicksearch-view-input',
    'widget/quicksearch-view-results'
], function(
    $,
    _,
    Backbone,
    QuickSearchResultsCollection,
    QuickSearchInputView,
    QuickSearchResultsView
) {

    'use strict';

    var QuickSearch = Backbone.View.extend({

        initialize: function() {
            this.collection = new QuickSearchResultsCollection();

            this.includeView();
            this.registerEvents();
        },

        /**
         * Initialize needed subviews and
         * binds '/' shortcut to focus input field.
         */
        includeView: function() {
            this.input = new QuickSearchInputView({
                el: this.$el.find('.term')
            });

            this.results = new QuickSearchResultsView({
                el: this.$el.find('.results'),
                collection: this.collection
            });

            AJS.whenIType('/').execute(_.bind(this.onHide, this));
        },

        registerEvents: function() {
            this.listenTo(this.input, 'select', this.onSelect);
            this.listenTo(this.input, 'change', this.onChange);
            this.listenTo(this.input, 'move', this.onMove);
            this.listenTo(this.input, 'hide', this.onHide);
        },

        onSelect: function() {
            this.results.trigger('select');
        },

        /**
         * We always check if there is any
         * previous request in progress and abort it.
         */
        onChange: function(term) {
            if (this.requestInProgress) {
                if (this.requestInProgress.readyState > 0 && this.requestInProgress.readyState < 4) {
                    this.requestInProgress.abort();
                }
            }

            this.requestInProgress = this.collection.fetch({
                data: $.param({ searchTerm: term })
            });
        },

        onMove: function(direction) {
            this.results.trigger('move', direction);
            this.results.$el.focus();
        },

        onHide: function(focus) {
            this.results.trigger('hide');

            if (focus) {
                this.input.$el.focus();
            }
        }

    });

    return QuickSearch;
});

/* module-key = 'bamboo.web.resources.common:widget-quicksearch', location = '/widget/quicksearch/quicksearch-collection-results.js' */
define('widget/quicksearch-collection-results', [
    'backbone'
], function(
    Backbone
) {

    'use strict';

    var QuickSearchResultsCollection = Backbone.Collection.extend({

        url: AJS.contextPath() + '/rest/api/latest/quicksearch'

    });

    return QuickSearchResultsCollection;
});

/* module-key = 'bamboo.web.resources.common:feature-build-autocomplete', location = '/feature/build-autocomplete/build-autocomplete.soy' */
// This file was automatically generated from build-autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.build == 'undefined') { bamboo.feature.build = {}; }
if (typeof bamboo.feature.build.autocomplete == 'undefined') { bamboo.feature.build.autocomplete = {}; }


bamboo.feature.build.autocomplete.result = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(' ');
  widget.buildresult.resultStatus(opt_data, output);
  output.append(' <span class="info">', soy.$$escapeHtml(opt_data.resultSummary.buildRelativeTime), '</span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.build.autocomplete.selection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  widget.buildresult.resultStatus(opt_data, output);
  output.append(' ', soy.$$escapeHtml(opt_data.resultSummary.buildRelativeTime));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:feature-build-autocomplete', location = '/feature/build-autocomplete/build-autocomplete.js' */
define('feature/build-autocomplete', [
    'jquery',
    'underscore',
    'widget/autocomplete-ajax',
    'util/events',
    'util/ajax'
], function(
    $,
    _,
    AutocompleteAjax,
    events,
    ajax
) {

    'use strict';

    var BuildAutocomplete = AutocompleteAjax.extend({

        mixins: [events.EventBusMixin],

        initialize: function(options) {
            options = $.extend({
                // disable/hide search input
                minimumResultsForSearch: -1
            }, options || {});

            this.params = options.params || {};

            if (options.params) {
                delete options.params;
            }

            var dataCallback = _.bind(function(term, page) {
                return $.extend({
                    searchTerm: term,
                    'start-index': Math.max(
                        (page - 1) * this.params['max-results'], 0
                    )
                }, this.params);
            }, this);

            var settings = {
                minimumInputLength: 0,
                ajax: {
                    url: AJS.contextPath() + '/rest/api/latest/deploy/preview/possibleResults',
                    dataType: 'json',
                    data: dataCallback,
                    results: _.bind(function(data, page) {
                        return this.processData({
                            results: data,
                            more: data ? data.length >= this.params['max-results'] : false
                        });
                    }, this)
                },
                id: function(object) {
                    return object.planResultKey.key;
                }
            };

            AutocompleteAjax.prototype.initialize.apply(
                this, [$.extend(settings, options || {})]
            );
        },

        onRegisterEvents: function() {
            this.proxyEvents(
                'build', ['change'], this.$el
            );

            var events = ['branch:change'];

            if (!this.$el.val()) {
                events.push('branch:change:initial');
            }

            this.onEvent(events, this.onMasterChange);
            this.onEvent('build:hide', this.onHide);
            this.onEvent('build:show', this.onShow);
        },

        onInitSelection: function(element, callback) {
            $(document).ready(_.bind(function() {
                var key = $(element).val();

                if (_.isString(key) && key.length) {
                    this.$el.auiSelect2('data', this.settings.initialValue);
                    this.processData({ results: [this.settings.initialValue] });

                    this.params.planKey = this.settings.initialValue
                        .planResultKey.entityKey.key;

                    this.triggerEvent('build:change:initial');
                    callback(this.settings.initialValue);
                }
            }, this));
        },

        onLoadAndProcess: function(element, callback) {
            var settings = _.defaults({
                data: this.settings.ajax.data('', 1)
            }, this.settings.ajax);

            ajax(settings)
                .done(_.bind(function(data) {
                    if (_.isEmpty(data)) {
                        this.$el.val(null);
                        this.$el.auiSelect2('data', null);
                        this.params.planKey = null;
                    } else {
                        var selected = data[0];

                        this.$el.val(this.settings.id(selected));
                        this.$el.auiSelect2('data', selected);

                        this.processData({
                            results: data,
                            more: data ? data.length >= this.params['max-results'] : false
                        });

                        this.params.planKey = selected
                            .planResultKey.entityKey.key;

                        if (callback) {
                            callback(selected);
                        }
                    }

                    this.triggerEvent('build:change');
                    this.triggerEvent('deploy:release:warning');
                }, this));
        },

        onFormatResult: function(item) {
            if (!_.isEmpty(item)) {
                return bamboo.feature.build.autocomplete.result({
                    resultSummary: item
                });
            }
        },

        onFormatSelection: function(item) {
            if (!_.isEmpty(item)) {
                return bamboo.feature.build.autocomplete.selection({
                    resultSummary: item
                });
            }
        },

        onMasterChange: function(instance) {
            if (
                !this.settings.masterPickerId ||
                instance.$el.attr('id') !== this.settings.masterPickerId
            ) {
                return;
            }

            this.clearValue();
            var value = instance.getSelectedData();

            if (value) {
                this.params.planKey = value.searchEntity.key;
                this.onLoadAndProcess();
                this.enable();
            } else {
                this.disable();
            }
        },

        onHide: function(instance, container) {
            if (!container || container.find(this.$el).length) {
                this.$el.parents('.field-group:first').hide();
            }
        },

        onShow: function(instance, container) {
            if (!container || container.find(this.$el).length) {
                this.$el.parents('.field-group:first').show();
            }
        }

    });

    return BuildAutocomplete;
});

/* module-key = 'bamboo.web.resources.common:feature-branch-label', location = '/feature/branch-label/branch-label.js' */
define('feature/branch-label', [
    'jquery',
    'backbone',
    'brace',
    'util/events'
], function(
    $,
    Backbone,
    Brace,
    events
) {

    'use strict';

    var BranchLabel = Brace.View.extend({

        mixins: [events.EventBusMixin],

        initialize: function() {
            this.onEvent('plan:selected', this.onPlanChange);
        },

        onPlanChange: function(instance, model) {
            if (model instanceof Backbone.Model) {
                this.$el.html(bamboo.widget.deployment.version.branch({
                    planBranchName: model.get('branchName'),
                    label: "Currently"
                }));
            }
        }

    });

    return BranchLabel;

});

/* module-key = 'bamboo.web.resources.common:feature-branch-autocomplete', location = '/feature/branch-autocomplete/branch-autocomplete.js' */
define('feature/branch-autocomplete', [
    'jquery',
    'underscore',
    'backbone',
    'widget/autocomplete-ajax',
    'util/ajax',
    'util/events'
], function(
    $,
    _,
    Backbone,
    AutocompleteAjax,
    ajax,
    events
) {

    'use strict';

    var BranchAutocomplete = AutocompleteAjax.extend({

        mixins: [events.EventBusMixin],

        initialize: function(options) {
            options = $.extend({
                placeholder: "Search for a branch ..."
            }, options || {});

            this.params = $.extend({
                includeMasterBranch: false
            }, options.params || {});

            if (options.params) {
                delete options.params;
            }

            var dataCallback = _.bind(function(term, page) {
                return $.extend({
                    searchTerm: term,
                    'start-index': Math.max(
                        (page - 1) * this.params['max-results'], 0
                    )
                }, this.params);
            }, this);

            var settings = {
                minimumInputLength: 0,
                ajax: {
                    url: AJS.contextPath() + '/rest/api/latest/search/branches',
                    dataType: 'json',
                    data: dataCallback,
                    results: _.bind(function(data, page) {
                        return this.processData({
                            results: data.searchResults,
                            more: data.size ? data.size > (page * this.params['max-results']) : false
                        });
                    }, this)
                }
            };

            AutocompleteAjax.prototype.initialize.apply(
                this, [$.extend(settings, options || {})]
            );
        },

        onRegisterEvents: function() {
            this.onEvent('plan:selected', this.onMasterChange);
            this.proxyEvents('branch', ['change'], this.$el);
        },

        onInitSelection: function(element, callback) {
            $(document).ready(_.bind(function() {
                var key = $(element).val();

                if (_.isString(key) && key.length) {
                    ajax({
                        url: this.settings.ajax.url,
                        dataType: this.settings.ajax.dataType,
                        data: {
                            includeMasterBranch: true,
                            masterPlanKey: key,
                            'start-index': 0,
                            'max-results': 1
                        }
                    })
                    .done(_.bind(function(data) {
                        var selected = data.searchResults[0];

                        this.$el.auiSelect2('data', selected);
                        this.processData({ results: data.searchResults });

                        this.triggerEvent('branch:change:initial');
                        callback(selected);
                    }, this));
                }
            }, this));
        },

        onFormatResult: function(item) {
            if (!_.isEmpty(item)) {
                return bamboo.feature.branch.autocomplete.result({
                    label: item.searchEntity.branchName
                });
            }
        },

        onFormatSelection: function(item) {
            if (!_.isEmpty(item)) {
                return bamboo.feature.branch.autocomplete.result({
                    label: item.searchEntity.branchName
                });
            }
        },

        onMasterChange: function(instance, model) {
            if (
                this.settings.masterPickerId &&
                instance.$el.attr('id') !== this.settings.masterPickerId
            ) {
                return;
            }

            this.clearValue();

            if (!(model instanceof Backbone.Model)) {
                this.triggerEvent('branch:empty');
            } else {
                var value = $.trim(model.get('key'));

                if (value.length) {
                    this.params.masterPlanKey = value;
                }
            }
        }

    });

    return BranchAutocomplete;
});

/* module-key = 'bamboo.web.resources.common:feature-branch-autocomplete', location = '/feature/branch-autocomplete/branch-autocomplete.soy' */
// This file was automatically generated from branch-autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.branch == 'undefined') { bamboo.feature.branch = {}; }
if (typeof bamboo.feature.branch.autocomplete == 'undefined') { bamboo.feature.branch.autocomplete = {}; }


bamboo.feature.branch.autocomplete.result = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="aui-icon aui-icon-small aui-iconfont-devtools-branch"></span>  ', soy.$$escapeHtml(opt_data.label));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:feature-deployment-tasksdialog', location = '/feature/deployment-tasksdialog/deployment-tasksdialog.js' */
define('feature/deployment-tasksdialog', [
    'jquery',
    'widget/dialog'
], function(
    $,
    Dialog
) {

    'use strict';

    var TasksDialog = Dialog.extend({
        initialize: function(options) {
            var buttonArray = [];
            if (options.editTasksRedirect) {
                buttonArray.push({
                    id: 'editTasks',
                    label: "Edit tasks",
                    type: 'button'
                });
            }
            buttonArray.push({
                id: 'cancel',
                label: "Close",
                type: 'button'
            });
            var settings = $.extend({
                buttons: buttonArray,
                header: "Deployment tasks to run",
                $triggerEl: $('#view-tasks'),
                width: 500,
                height: 300
            }, options || {});

            this.constructor.__super__.initialize.apply(this, [settings]);
        },

        onButtonClick: function(id) {
            if (id === 'editTasks') {
                window.location = this.settings.editTasksRedirect;
            } else if (id === 'cancel') {
                this.dialog.remove();
            }
        }
    });

    return TasksDialog;

});

/* module-key = 'bamboo.web.resources.common:feature-job-autocomplete', location = '/feature/job-autocomplete/job-autocomplete.soy' */
// This file was automatically generated from job-autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.job == 'undefined') { bamboo.feature.job = {}; }
if (typeof bamboo.feature.job.autocomplete == 'undefined') { bamboo.feature.job.autocomplete = {}; }


bamboo.feature.job.autocomplete.result = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.item.searchEntity.groupName) ? soy.$$escapeHtml(opt_data.item.searchEntity.groupName) : soy.$$escapeHtml(opt_data.item.searchEntity.jobName));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:feature-job-autocomplete', location = '/feature/job-autocomplete/job-autocomplete.js' */
define('feature/job-autocomplete', [
    'jquery',
    'underscore',
    'widget/autocomplete-ajax',
    'util/events'
], function(
    $,
    _,
    AutocompleteAjax,
    events
) {

    'use strict';

    var JobAutocomplete = AutocompleteAjax.extend({

        template: bamboo.feature.job.autocomplete,

        mixins: [
            events.EventBusMixin
        ],

        initialize: function(options) {
            options = options || {};

            this.params = options.params || {};
            this.lastGroup = null;

            if (options.params) {
                delete options.params;
            }

            var dataCallback = _.bind(function(term, page) {
                return _.extend({
                    searchTerm: term,
                    'start-index': Math.max(
                        (page - 1) * this.params['max-results'], 0
                    )
                }, this.params);
            }, this);

            var settings = {
                minimumInputLength: 0,
                ajax: {
                    url: _.bind(this.onAjaxUrl, this),
                    results: _.bind(this.onAjaxResults, this),
                    data: dataCallback,
                    dataType: 'json'
                }
            };

            AutocompleteAjax.prototype.initialize.apply(
                this, [$.extend(settings, options || {})]
            );
        },

        /**
         * Only return a URL if plan is provided.
         */
        onAjaxUrl: function() {
            if (this.query && this.query.plan) {
                return AJS.contextPath() + '/rest/api/latest/search/jobs/' + this.query.plan;
            }

            this.disable().clearValue();
        },

        /**
         * Unset lastGroup if we're on first page,
         * then process groups.
         */
        onAjaxResults: function(data, page) {
            var results = [];

            if (page === 1) {
                this.lastGroup = null;
            }

            _.each(data.searchResults, _.bind(function(item) {
                if (this.lastGroup !== item.searchEntity.stageName) {
                    this.lastGroup = item.searchEntity.stageName;

                    var group = {
                        isGroup: true,
                        searchEntity: {
                            groupName: this.lastGroup
                        }
                    };

                    results.push(group);
                }

                results.push(item);
            }, this));

            return this.processData({
                results: results,
                more: data.size ? data.size > (page * this.params['max-results']) : false
            });
        },

        onFormatResult: function(item) {
            if (!_.isEmpty(item)) {
                return this.template.result({ item: item });
            }
        },

        onFormatSelection: function(item) {
            if (!_.isEmpty(item)) {
                return this.template.result({ item: item });
            }
        }

    });

    return JobAutocomplete;
});

/* module-key = 'bamboo.web.resources.common:feature-plan-autocomplete', location = '/feature/plan-autocomplete/plan-autocomplete.soy' */
// This file was automatically generated from plan-autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.plan == 'undefined') { bamboo.feature.plan = {}; }
if (typeof bamboo.feature.plan.autocomplete == 'undefined') { bamboo.feature.plan.autocomplete = {}; }


bamboo.feature.plan.autocomplete.result = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.item.searchEntity.groupName) ? soy.$$escapeHtml(opt_data.item.searchEntity.groupName) : soy.$$escapeHtml(opt_data.item.searchEntity.planName));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:feature-plan-autocomplete', location = '/feature/plan-autocomplete/plan-autocomplete.js' */
define('feature/plan-autocomplete', [
    'jquery',
    'underscore',
    'widget/autocomplete-ajax',
    'util/events'
], function(
    $,
    _,
    AutocompleteAjax,
    events
) {

    'use strict';

    var PlanAutocomplete = AutocompleteAjax.extend({

        template: bamboo.feature.plan.autocomplete,

        mixins: [
            events.EventBusMixin
        ],

        initialize: function(options) {
            options = options || {};

            this.params = options.params || {};
            this.lastGroup = null;

            if (options.params) {
                delete options.params;
            }

            var dataCallback = _.bind(function(term, page) {
                return _.extend({
                    searchTerm: term,
                    'start-index': Math.max(
                        (page - 1) * this.params['max-results'], 0
                    )
                }, this.params);
            }, this);

            var settings = {
                minimumInputLength: 0,
                ajax: {
                    url: AJS.contextPath() + '/rest/api/latest/search/plans',
                    results: _.bind(this.onAjaxResults, this),
                    data: dataCallback,
                    dataType: 'json'
                }
            };

            AutocompleteAjax.prototype.initialize.apply(
                this, [$.extend(settings, options || {})]
            );
        },

        /**
         * Unset lastGroup if we're on first page,
         * then process groups.
         */
        onAjaxResults: function(data, page) {
            var results = [];

            if (page === 1) {
                this.lastGroup = null;
            }

            _.each(data.searchResults, _.bind(function(item) {
                if (this.lastGroup !== item.searchEntity.projectName) {
                    this.lastGroup = item.searchEntity.projectName;

                    var group = {
                        isGroup: true,
                        searchEntity: {
                            groupName: this.lastGroup
                        }
                    };

                    results.push(group);
                }

                results.push(item);
            }, this));

            return this.processData({
                results: results,
                more: data.size ? data.size > (page * this.params['max-results']) : false
            });
        },

        onFormatResult: function(item) {
            if (!_.isEmpty(item)) {
                return this.template.result({ item: item });
            }
        },

        onFormatSelection: function(item) {
            if (!_.isEmpty(item)) {
                return this.template.result({ item: item });
            }
        }

    });

    return PlanAutocomplete;
});

/* module-key = 'bamboo.web.resources.common:feature-dialog-storage-soft-limit-warning', location = '/feature/dialog-storage-soft-limit-warning/dialog-storage-soft-limit-warning.soy' */
// This file was automatically generated from dialog-storage-soft-limit-warning.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.dialog == 'undefined') { bamboo.feature.dialog = {}; }
if (typeof bamboo.feature.dialog.storage == 'undefined') { bamboo.feature.dialog.storage = {}; }
if (typeof bamboo.feature.dialog.storage.soft == 'undefined') { bamboo.feature.dialog.storage.soft = {}; }
if (typeof bamboo.feature.dialog.storage.soft.limit == 'undefined') { bamboo.feature.dialog.storage.soft.limit = {}; }
if (typeof bamboo.feature.dialog.storage.soft.limit.warning == 'undefined') { bamboo.feature.dialog.storage.soft.limit.warning = {}; }


bamboo.feature.dialog.storage.soft.limit.warning.content = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var storagePolicyUrl__soy3 = "https://confluence.atlassian.com/display/Cloud/Atlassian+Cloud+Storage+Policy";
  aui.message.warning({content: soy.$$escapeHtml("Careful, you\x27re about to run out of storage.")}, output);
  output.append('<p>', soy.$$escapeHtml("Need more than the storage provided on your Atlassian Cloud account? You can use your AWS account for storing artifacts on your own Amazon S3 instance."), '</p><p>', AJS.format("Read more about the \x3ca href\x3d\x22{0}\x22\x3eAtlassian Cloud storage policy\x3c/a\x3e.",storagePolicyUrl__soy3), '</p>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:feature-dialog-storage-soft-limit-warning', location = '/feature/dialog-storage-soft-limit-warning/dialog-storage-soft-limit-warning.js' */
define('feature/dialog-storage-soft-limit-warning', [
    'jquery',
    'underscore',
    'widget/dialog'
], function(
    $,
    _,
    Dialog
) {
    'use strict';

    var DEFAULT_INTERVAL = 1;

    /**
     * A warning dialog to be displayed when the disk space taken by artifacts exceeded the allowed soft limit.
     * The dialog will only be displayed once per specified time interval for the user.
     *
     * Configuration options:
     * - username (required) - name of the currently logged in user
     * - interval            - interval in days that has to pass between displaying the warning again to the same user;
     *                         default interval is 1 day
     */
    var DialogStorageSoftLimitWarning = Dialog.extend({

        defaultSettings: {
            height: 300,
            width: 600,
            header: "Storage almost full",
            buttons: [
                {
                    id: 'configure',
                    label: "Configure artifact storage",
                    cssClass: 'aui-button aui-button-primary'
                }, {
                    id: 'cancel',
                    label: "Remind me later",
                    type: 'link'
                }
            ]
        },

        initialize: function(options) {
            var settings = options || {};

            this.interval = settings.interval || DEFAULT_INTERVAL;
            this.currentTimestamp = new Date().getTime();
            this.cookieName = 'storage.soft.limit.warning.' + settings.username;

            var intervalMillis = +(this.interval * 24 * 60 * 60 * 1000);
            var lastWarningTimestamp = AJS.Cookie.read(this.cookieName);

            this.isTimeToDisplay =
                (!lastWarningTimestamp || (lastWarningTimestamp < this.currentTimestamp - intervalMillis));

            this.defaultSettings.content = bamboo.feature.dialog.storage.soft.limit.warning.content();
            Dialog.prototype.initialize.call(this,
                _.defaults(settings, this.defaultSettings)
            );
        },

        createInstance: function() {
            if (this.isTimeToDisplay) {
                AJS.Cookie.save(this.cookieName, this.currentTimestamp, this.interval);
                Dialog.prototype.createInstance.call(this);
            }
        },

        onButtonClick: function(id) {
            Dialog.prototype.onButtonClick.apply(this, arguments);

            if (id === 'configure') {
                var panel = this.dialog.getPage(0).buttonpanel;

                panel.prepend(aui.icons.icon({
                    size: 'small',
                    icon: 'wait'
                }));

                panel.find(':button').attr('disabled', true);

                _.delay(_.bind(function() {
                    window.location.href = AJS.contextPath() + '/admin/configureArtifactStorage.action';
                }, this), 500);
            }
        }
    });

    return DialogStorageSoftLimitWarning;

});

/* module-key = 'bamboo.web.resources.common:feature-dialog-storage-hard-limit-warning', location = '/feature/dialog-storage-hard-limit-warning/dialog-storage-hard-limit-warning.soy' */
// This file was automatically generated from dialog-storage-hard-limit-warning.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.dialog == 'undefined') { bamboo.feature.dialog = {}; }
if (typeof bamboo.feature.dialog.storage == 'undefined') { bamboo.feature.dialog.storage = {}; }
if (typeof bamboo.feature.dialog.storage.hard == 'undefined') { bamboo.feature.dialog.storage.hard = {}; }
if (typeof bamboo.feature.dialog.storage.hard.limit == 'undefined') { bamboo.feature.dialog.storage.hard.limit = {}; }
if (typeof bamboo.feature.dialog.storage.hard.limit.warning == 'undefined') { bamboo.feature.dialog.storage.hard.limit.warning = {}; }


bamboo.feature.dialog.storage.hard.limit.warning.content = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var storagePolicyUrl__soy3 = "https://confluence.atlassian.com/display/Cloud/Atlassian+Cloud+Storage+Policy";
  aui.message.warning({content: soy.$$escapeHtml("You\x27ve exceeded the Atlassian Cloud storage limit. Unfortunately your builds have been disabled until you configure S3 storage for artifacts.")}, output);
  output.append('<p>', soy.$$escapeHtml("You can configure Bamboo\x27s artifact storage to use your own Amazon S3 account for increased storage capacity. Doing so will immediately re-enable builds."), '</p><p>', AJS.format("Read more about the \x3ca href\x3d\x22{0}\x22\x3eAtlassian Cloud storage policy\x3c/a\x3e.",storagePolicyUrl__soy3), '</p>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources.common:feature-dialog-storage-hard-limit-warning', location = '/feature/dialog-storage-hard-limit-warning/dialog-storage-hard-limit-warning.js' */
define('feature/dialog-storage-hard-limit-warning', [
    'jquery',
    'underscore',
    'widget/dialog'
], function(
    $,
    _,
    Dialog
) {
    'use strict';

    var COOKIE_NAME = 'storage.hard.limit.warning.displayed';

    /**
     * A warning dialog to be displayed when the disk space taken by artifacts exceeded the allowed hard limit.
     * The dialog will be displayed once per user login.
     *
     * Configuration options:
     * - userLoggedIn (required) - true, if a user is currently logged in
     */
    var DialogStorageHardLimitWarning = Dialog.extend({

        defaultSettings: {
            height: 320,
            width: 600,
            header: "Storage full and builds disabled",
            buttons: [
                {
                    id: 'configure',
                    label: "Configure artifact storage",
                    cssClass: 'aui-button aui-button-primary'
                }, {
                    id: 'cancel',
                    label: "Remind me later",
                    type: 'link'
                }
            ]
        },

        initialize: function(options) {
            var settings = options || {};

            var warningDisplayed = AJS.Cookie.read(COOKIE_NAME);
            var shouldClearCookie = !settings.userLoggedIn && warningDisplayed;
            this.shouldDisplay = settings.userLoggedIn && !warningDisplayed;

            if (this.shouldDisplay) {
                AJS.Cookie.save(COOKIE_NAME, true);
            } else if (shouldClearCookie) {
                AJS.Cookie.erase(COOKIE_NAME);
            }

            this.defaultSettings.content = bamboo.feature.dialog.storage.hard.limit.warning.content();
            Dialog.prototype.initialize.call(this,
                _.defaults(settings, this.defaultSettings)
            );
        },

        createInstance: function() {
            if (this.shouldDisplay) {
                Dialog.prototype.createInstance.call(this);
            }
        },

        onButtonClick: function(id) {
            Dialog.prototype.onButtonClick.apply(this, arguments);

            if (id === 'configure') {
                var panel = this.dialog.getPage(0).buttonpanel;

                panel.prepend(aui.icons.icon({
                    size: 'small',
                    icon: 'wait'
                }));

                panel.find(':button').attr('disabled', true);

                _.delay(_.bind(function() {
                    window.location.href = AJS.contextPath() + '/admin/configureArtifactStorage.action';
                }, this), 500);
            }
        }
    });

    return DialogStorageHardLimitWarning;

});

/* module-key = 'com.atlassian.bamboo.plugins.bamboo-artifact-downloader-plugin:artifactdownloaderjs', location = 'js/artifact.js' */
(function(b,a){a.ArtifactDownloaderConfiguration=(function(){var f={planSelector:null,planKey:null,addArtifactSelector:null,removeArtifactSelector:null,artifactListSelector:null,templates:{artifactListItem:null},i18n:{allArtifacts:null,individualArtifacts:null}},m,i,g=function(){var o=+i.data("nextTransferId")+1;i.data("nextTransferId",o);b(AJS.template.load(m.templates.artifactListItem).fill({index:o}).toString()).appendTo(i).find(m.selectedArtifactSelector).end().slideDown();l(o).done(function(){a.DynamicFieldParameters.syncFieldShowHide(i)});if(o===0){var n=b('[data-artifact-id="0"]',i);b(m.removeArtifactSelector,n).remove()}},e=function(n,o){var p=o.get("key");if(m.planKey===p){return}m.planKey=p;c();g();if(m.planKey!==""){b(m.addArtifactSelector).show()}},l=function(o){var p;b(m.artifactListSelector).find("li").each(function(){var q=b(this).attr("data-artifact-id");if(+q===o){p=b(this);return false}});p.find("input").val("");var n=p.find("select");n.find("optgroup").remove();return h().then(function(q){d(n,q)})},h=function(){var n=b.Deferred();j().then(function(p){var s=p.artifacts.size;var o=p.artifacts["max-result"];if(s>o){var q=[];for(var r=1;r<Math.ceil(s/o);r++){q.push(j(r*o,o))}b.when.apply(b,q).done(function(){var t=p.artifacts.artifact;(q.length===1?[arguments]:_.toArray(arguments)).forEach(function(u){t=t.concat(u[0].artifacts.artifact)});n.resolve(t)})}else{n.resolve(p.artifacts.artifact)}}).fail(function(p,q,o){console.log("couldn't retrieve artifacts: '"+q)});return n},j=function(o,n){return b.ajax({url:AJS.contextPath()+"/rest/api/latest/plan/"+m.planKey+"/artifact",dataType:"json",data:_.extend({"start-index":o||0},n?{"max-results":n}:{})})},d=function(n,q){var p=b("<optgroup/>").attr("label",m.i18n.individualArtifacts);for(var r=0,t=q.length;r<t;r++){var o=q[r];var s=b("<option/>").attr("value",o.id).text(o.name);p.append(s)}n.append(p)},k=function(n){n.preventDefault();b(this).closest("li").slideUp(function(){b(this).remove()})},c=function(){b(m.artifactListSelector).find("li").remove()};return{init:function(n){m=b.extend(true,f,n);b(function(){m.planKey=b(m.planSelector).val();i=b(m.artifactListSelector).on("click",m.removeArtifactSelector,k);require("util/events").EventBus.on("plan:selected",e);b(m.addArtifactSelector).click(g);if(m.planKey===""){b(m.addArtifactSelector).hide()}})}}}())}(jQuery,window.BAMBOO=(window.BAMBOO||{})));
/* module-key = 'com.atlassian.support.stp:stp-license-status-resources', location = 'js/stp-licenseStatus.js' */
(function(b){var a={destroyBanner:function(){AJS.$("#stp-licenseStatus-banner").slideUp(function(){AJS.$("#stp-licenseStatus-banner").remove()})},remindMeNever:function(c){c.preventDefault();AJS.$.ajax({type:"POST",async:true,url:AJS.contextPath()+"/rest/stp/1.0/license/remindMeNever"});a.destroyBanner()},remindMeLater:function(){AJS.$.ajax({type:"POST",async:true,url:AJS.contextPath()+"/rest/stp/1.0/license/remindMeLater"});a.destroyBanner()},recordOutboundLink:function(c,d){var e=e||[];e.push(["_setAccount",c],["_setCampSourceKey","STP"],["_setCampMediumKey","renewals_reminder"],["_setCampNameKey",d],["_trackEvent","renewal"])},createBanner:function(){AJS.$.ajax({type:"GET",dataType:"json",async:true,url:AJS.contextPath()+"/rest/stp/1.0/license/status",statusCode:{200:function(f){var c="\n<div id='stp-licenseStatus-banner' class='aui-message warning'>\n";var e=f.daysToExpiry;var d="http://www.atlassian.com/company/contact?utm_source=STP&utm_medium=renewals_reminder&utm_campaign=";var g="http://www.my.atlassian.com?utm_source=STP&utm_medium=renewals_reminder&utm_campaign=";if(e<=30&&e>14){licenseLink=d+"renewals_30_reminder";c+=AJS.format("Your {0} license maintenance expires in {1} days. {2}Contact Atlassian{3}, {4}remind me later{5} or {6}never remind me again{7}.",f.productName,30,"<a id='stp-licenseStatus-contactAtlassian' target='_blank' href=\""+licenseLink+'">',"</a>","<a id='stp-licenseStatus-remindMeLater' href='#'>","</a>","<a id='stp-licenseStatus-remindMeNever' href='#'>","</a>");c+="<span class ='aui-icon icon-warning'></span>"}else{if(e<=14&&e>7){licenseLink=d+"renewals_14_reminder";c+=AJS.format("You will lose access to Support and Updates for {0} in {1} days. {2}Contact Atlassian{3}, {4}remind me later{5} or {6}never remind me again{7}.",f.productName,14,"<a id='stp-licenseStatus-contactAtlassian' target='_blank' href=\""+licenseLink+'">',"</a>","<a id='stp-licenseStatus-remindMeLater' href='#'>","</a>","<a id='stp-licenseStatus-remindMeNever' href='#'>","</a>");c+="<span class ='aui-icon icon-warning'></span>"}else{if(e<=7){licenseLink=g+"renewals_7_reminder";c+=AJS.format("Your {0} Support and Updates access expires in {1} days. You can renew via {2}my.atlassian.com{3}. {4}Remind me later{5} or {6}never remind me again{7}.",f.productName,7,"<a id='stp-licenseStatus-renewNow' target='_blank' href=\""+licenseLink+'">',"</a>","<a id='stp-licenseStatus-remindMeLater' href='#'>","</a>","<a id='stp-licenseStatus-remindMeNever' href='#'>","</a>");c+="<span class ='aui-icon icon-warning'></span>"}}}c+="\n</div>";b(c).prependTo(document.body);AJS.$("#stp-licenseStatus-remindMeNever").click(a.remindMeNever);AJS.$("#stp-licenseStatus-remindMeLater").click(function(h){h.preventDefault();a.remindMeLater()});AJS.$("#stp-licenseStatus-contactAtlassian").click(function(h){a.remindMeLater()});AJS.$("#stp-licenseStatus-renewNow").click(function(h){a.remindMeLater()})}}})}};AJS.$(document).ready(function(){b("#stp-licenseStatus-banner").length||a.createBanner()})})(AJS.$);
/* module-key = 'com.atlassian.bamboo.brokenbuildtracker:trackingjs', location = 'js/tracking.js' */
BAMBOO.BrokenBuildTracking=(function(c){var b={},a,d={containerSelector:null,buildKey:null,buildNumber:null,refreshUrl:null},e={add:function(){c(a.containerSelector).addClass("loading")},remove:function(){c(a.containerSelector).removeClass("loading")}};b.init=function(f){a=c.extend(true,d,f);c(document).delegate(".take-responsibility, .remove-responsibility","click",function(g){g.preventDefault();e.add();c.post(this.href,{"bamboo.successReturnMode":"json"}).always(b.refresh)})};b.refresh=function(){e.add();c.get(a.refreshUrl,{buildKey:a.buildKey,buildNumber:a.buildNumber}).done(function(f){var g=c(f).filter(a.containerSelector);c(a.containerSelector).replaceWith(g)}).always(e.remove)};return b})(AJS.$);
/* module-key = 'bamboo.deployments:linked-deployment-shortcut', location = '/feature/plan/linked-deployment/linked-deployment-shortcut.soy' */
// This file was automatically generated from linked-deployment-shortcut.soy.
// Please don't edit this file by hand.

if (typeof feature == 'undefined') { var feature = {}; }
if (typeof feature.plan == 'undefined') { feature.plan = {}; }
if (typeof feature.plan.linkedDeployment == 'undefined') { feature.plan.linkedDeployment = {}; }


feature.plan.linkedDeployment.linkedDeploymentHeaderDropdown = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.hasLinkedDeployments) {
    var param5 = new soy.StringBuilder();
    aui.buttons.button({text: '', tagName: 'a', iconType: 'aui', iconClass: 'aui-icon-small icon-deploy', extraAttributes: {'title': "Related deployment projects", 'data-plan-key': opt_data.immutablePlan.planKey.key}, extraClasses: 'linked-deployments-menu'}, param5);
    aui.buttons.buttons({content: param5.toString()}, output);
    feature.plan.linkedDeployment.linkedDeploymentDialogTriggerHandler(null, output);
  }
  return opt_sb ? '' : output.toString();
};


feature.plan.linkedDeployment.linkedDeploymentDialogTriggerHandler = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<script type="text/javascript">require([\'jquery\', \'feature/linked-deployment-shortcut\'], function($, linkedDeploymentShortcut){$(function () {linkedDeploymentShortcut.init({triggerSelector: ".linked-deployments-menu", relatedProjectsUrl: "', soy.$$escapeHtml("" + '/rest/api/latest/deploy/project/forPlan?planKey='), '", dialogContentTemplate: feature.plan.linkedDeployment.linkedDeploymentDialogContent});});});<\/script>');
  return opt_sb ? '' : output.toString();
};


feature.plan.linkedDeployment.linkedDeploymentDashboardDropdown = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.hasLinkedDeployments) {
    output.append('<a class="linked-deployments-menu" title="', soy.$$escapeHtml("Related deployment projects"), '" data-plan-key=', soy.$$escapeHtml(opt_data.immutablePlan.planKey.key), ' href="', soy.$$escapeHtml(""), '/browse/', soy.$$escapeHtml(opt_data.immutablePlan.planKey.key), '/deployments">');
    widget.icons.icon({type: 'deploy'}, output);
    output.append('</a>');
  }
  return opt_sb ? '' : output.toString();
};


feature.plan.linkedDeployment.linkedDeploymentDialogContent = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="linked-deployments-content"><h3>', soy.$$escapeHtml("Related deployment projects"), '</h3>');
  if (opt_data.linkedDeploymentProjects && opt_data.linkedDeploymentProjects.length > 0) {
    output.append(soy.$$escapeHtml("This build plan supplies artifacts for the following deployment projects:"), '<ul>');
    var deploymentProjectList42 = opt_data.linkedDeploymentProjects;
    var deploymentProjectListLen42 = deploymentProjectList42.length;
    for (var deploymentProjectIndex42 = 0; deploymentProjectIndex42 < deploymentProjectListLen42; deploymentProjectIndex42++) {
      var deploymentProjectData42 = deploymentProjectList42[deploymentProjectIndex42];
      output.append('<li><a href="', soy.$$escapeHtml(""), '/deploy/viewDeploymentProjectEnvironments.action?id=', soy.$$escapeHtml(deploymentProjectData42.id), '">', soy.$$escapeHtml(deploymentProjectData42.name), '</a></li>');
    }
    output.append('</ul>');
  } else {
    output.append('<p>', soy.$$escapeHtml("There are no deployment projects linked to this build plan"), '</p>');
  }
  output.append('</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.deployments:linked-deployment-shortcut', location = '/feature/plan/linked-deployment/linked-deployment-shortcut.js' */
define('feature/linked-deployment-shortcut', [
    'jquery',
    'underscore',
    'widget/generate-error-messages',
    'util/ajax'
], function(
    $,
    _,
    generateErrorMessages,
    ajax
) {

    'use strict';

    var linkedDeploymentShortcut = (function() {
        var defaults = {
            triggerSelector: null,
            relatedProjectsUrl: null,
            dialogContentTemplate: null
        },
        options;

        return {
            init: function(options) {
                $.extend(true, defaults, options);

                var configuration = {
                    width: 250,
                    offsetX: -10,
                    arrowOffsetX: 0
                };

                AJS.InlineDialog($(options.triggerSelector), 'deployment-shortcut-dialog',
                    function($container, trigger, showPopup) {
                        var planKey = $(trigger).data('planKey');
                        $container.html(widget.icons.icon({type: 'loading'}));

                        ajax({
                            url: options.relatedProjectsUrl + planKey,
                            data: { decorator: 'nothing', confirm: true },
                            dataType: 'json',
                            contentType: 'application/json',
                            cache: false
                        }).success(function(data) {
                            var content = options.dialogContentTemplate({ linkedDeploymentProjects: data});
                            $container.empty().append(content);
                        }).error(function(jqXHR, textStatus, errorThrown) {
                            var $message = generateErrorMessages(jqXHR, textStatus, errorThrown);
                            if (!$message) {
                                $message = $('<p/>').append("Unable to retrieve related deployments from Bamboo");
                            }
                            $container.empty().append($message);
                        });

                        showPopup();
                        return false;
                    },
                    configuration
                );
            }
        };
    }());

    return linkedDeploymentShortcut;
});

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/layout/base/base.soy' */
// This file was automatically generated from base.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.layout == 'undefined') { bamboo.layout = {}; }


bamboo.layout.base = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<section id="content" role="main">');
  if (opt_data.headerImageContent && opt_data.headerImageContent != '' || opt_data.headerMainContent && opt_data.headerMainContent != '' || opt_data.headerActionsContent && opt_data.headerActionsContent != '' || opt_data.headerActionsButtons && opt_data.headerActionsButtons != '') {
    var param6 = new soy.StringBuilder();
    if (opt_data.headerImageContent && opt_data.headerImageContent != '') {
      aui.page.pageHeaderImage({content: opt_data.headerImageContent}, param6);
    }
    if (opt_data.headerMainContent && opt_data.headerMainContent != '') {
      aui.page.pageHeaderMain({content: opt_data.headerMainContent}, param6);
    }
    if (opt_data.headerActionsContent && opt_data.headerActionsContent != '' || opt_data.headerActionsButtons && opt_data.headerActionsButtons != '') {
      var param17 = new soy.StringBuilder((opt_data.headerActionsContent && opt_data.headerActionsContent != '') ? opt_data.headerActionsContent : '');
      if (opt_data.headerActionsButtons && opt_data.headerActionsButtons != '') {
        aui.buttons.buttons({extraClasses: 'aui-dropdown2-trigger-group', content: opt_data.headerActionsButtons}, param17);
      }
      aui.page.pageHeaderActions({content: param17.toString()}, param6);
    }
    aui.page.pageHeader({content: param6.toString()}, output);
  }
  output.append((opt_data.headerExtraContent && opt_data.headerExtraContent != '') ? '<div class="bamboo-page-header-extra">' + opt_data.headerExtraContent + '</div>' : '');
  if (opt_data.navItems && opt_data.navItems.length) {
    bamboo.widget.nav.horizontal({items: opt_data.navItems}, output);
  }
  var param40 = new soy.StringBuilder();
  if (opt_data.pageNavContent && opt_data.pageNavContent != '') {
    aui.page.pagePanelNav({extraClasses: opt_data.pageNavClass, content: opt_data.pageNavContent}, param40);
  }
  if (opt_data.pageItemContent && opt_data.pageItemContent != '') {
    aui.page.pagePanelItem({extraClasses: opt_data.pageItemClass, content: opt_data.pageItemContent}, param40);
  }
  aui.page.pagePanelContent({content: opt_data.content, extraClasses: opt_data.contentClass}, param40);
  if (opt_data.pageSidebarContent && opt_data.pageSidebarContent != '' || opt_data.pageHelpPanels && opt_data.pageHelpPanels.length) {
    var param56 = new soy.StringBuilder((opt_data.pageSidebarContent && opt_data.pageSidebarContent != '') ? opt_data.pageSidebarContent : '');
    if (opt_data.pageHelpPanels && opt_data.pageHelpPanels.length) {
      var pageHelpPanelList63 = opt_data.pageHelpPanels;
      var pageHelpPanelListLen63 = pageHelpPanelList63.length;
      for (var pageHelpPanelIndex63 = 0; pageHelpPanelIndex63 < pageHelpPanelListLen63; pageHelpPanelIndex63++) {
        var pageHelpPanelData63 = pageHelpPanelList63[pageHelpPanelIndex63];
        bamboo.widget.help.panel(pageHelpPanelData63, param56);
      }
    }
    aui.page.pagePanelSidebar({content: param56.toString()}, param40);
  }
  aui.page.pagePanel({extraClasses: opt_data.pagePanelClass, content: param40.toString()}, output);
  output.append((opt_data.pageFooterContent && opt_data.pageFooterContent != '') ? '<footer class="bamboo-page-footer">' + opt_data.pageFooterContent + '</footer>' : '', '</section>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/layout/focused/focused.soy' */
// This file was automatically generated from focused.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.layout == 'undefined') { bamboo.layout = {}; }


bamboo.layout.focused = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param3 = new soy.StringBuilder();
  if (opt_data.progressTrackerSteps && opt_data.progressTrackerSteps.length) {
    aui.progressTracker.progressTracker({isInverted: true, steps: opt_data.progressTrackerSteps}, param3);
  }
  bamboo.layout.base(soy.$$augmentData(opt_data, {headerActionsContent: param3.toString()}), output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/layout/dashboard/dashboard.soy' */
// This file was automatically generated from dashboard.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.layout == 'undefined') { bamboo.layout = {}; }


bamboo.layout.dashboard = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  bamboo.layout.base(soy.$$augmentData(opt_data, {headerMainContent: '<h1 id="dashboard-instance-name">' + AJS.format("{0} \x26ndash; Build Dashboard",opt_data.instanceName) + '</h1>'}), output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/layout/plan/plan.soy' */
// This file was automatically generated from plan.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.layout == 'undefined') { bamboo.layout = {}; }


bamboo.layout.plan = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param3 = new soy.StringBuilder();
  if (opt_data.planStatusHistory) {
    bamboo.widget.planStatusHistory.container(opt_data.planStatusHistory, param3);
  }
  param3.append((opt_data.headerActionsContent) ? opt_data.headerActionsContent : '');
  bamboo.layout.base(soy.$$augmentData(opt_data, {headerActionsContent: param3.toString()}), output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/layout/project/project.soy' */
// This file was automatically generated from project.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.layout == 'undefined') { bamboo.layout = {}; }


bamboo.layout.projectActions = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param3 = new soy.StringBuilder();
  aui.buttons.button({text: ' ' + "Project wallboard", tagName: 'a', iconClass: 'icon icon-wallboard', iconType: 'custom', extraAttributes: {'href': "" + '/telemetry.action?filter=project&projectKey=' + opt_data.projectKey}}, param3);
  aui.buttons.buttons({content: param3.toString()}, output);
  var param11 = new soy.StringBuilder();
  aui.buttons.button({text: ' ', tagName: 'a', iconClass: 'aui-icon-small aui-iconfont-more', iconType: 'aui', dropdown2Target: 'buildConfigurationActions'}, param11);
  aui.buttons.buttons({content: param11.toString()}, output);
  var dropdownApplinks__soy19 = {'label': "Application links", 'href': '/plugins/servlet/applinks/listEntityLinks/com.atlassian.applinks.api.application.bamboo.BambooProjectEntityType/' + opt_data.projectKey, 'type': 'configure'};
  var param22 = new soy.StringBuilder();
  var param23 = new soy.StringBuilder();
  if (opt_data.hasEditPermission) {
    bamboo.layout.projectActionsLinks({items: [dropdownApplinks__soy19, {'label': "Edit project name", 'href': '/project/admin/config/editProjectName.action?projectKey=' + opt_data.projectKey, 'class': 'edit-project-name', 'type': 'edit'}]}, param23);
  } else {
    bamboo.layout.projectActionsLinks({items: [dropdownApplinks__soy19]}, param23);
  }
  aui.dropdown2.section({content: param23.toString()}, param22);
  aui.dropdown2.contents({id: 'buildConfigurationActions', extraClasses: 'aui-style-default', content: param22.toString()}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.layout.projectActionsLinks = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul>');
  var itemList35 = opt_data.items;
  var itemListLen35 = itemList35.length;
  for (var itemIndex35 = 0; itemIndex35 < itemListLen35; itemIndex35++) {
    var itemData35 = itemList35[itemIndex35];
    output.append('<li><a class="ui-icon-container ', (itemData35['class']) ? soy.$$escapeHtml(itemData35['class']) : '', '" href="', soy.$$escapeHtml("" + itemData35.href), '">');
    widget.icons.fontIcon({type: itemData35.type}, output);
    output.append(' ', soy.$$escapeHtml(itemData35.label), '</a></li>');
  }
  output.append('</ul>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/page/admin/overview.soy' */
// This file was automatically generated from overview.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.page == 'undefined') { bamboo.page = {}; }
if (typeof bamboo.page.admin == 'undefined') { bamboo.page.admin = {}; }
if (typeof bamboo.page.admin.overview == 'undefined') { bamboo.page.admin.overview = {}; }


bamboo.page.admin.overview.overview = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var viewServerCapabilities__soy3 = "" + '/admin/agent/configureSharedLocalCapabilities.action';
  var param4 = new soy.StringBuilder();
  bamboo.page.admin.overview.welcomeItem({content: AJS.format("\x3ca href\x3d\x22{0}\x22\x3eChange information\x3c/a\x3e you supplied when Bamboo was installed.","" + '/admin/configure!default.action')}, param4);
  if (opt_data.hasGlobalAdminPermission) {
    if (! opt_data.hasBuilders && ! opt_data.hasJdks) {
      bamboo.page.admin.overview.welcomeItem({content: AJS.format("Bamboo has failed to detect any \x3ca href\x3d\x22{0}\x22\x3eexecutables or JDK\x27s\x3c/a\x3e available on your Bamboo server.  You will need to manually \x3ca href\x3d\x22{0}\x22\x3econfigure\x3c/a\x3e at least one executable (such as Ant, Maven, Maven 2 or scripts) before you can run any plans.",viewServerCapabilities__soy3)}, param4);
    } else if (! opt_data.hasBuilders) {
      bamboo.page.admin.overview.welcomeItem({content: AJS.format("Bamboo has detected a \x3ca href\x3d\x22{0}\x22\x3eJDK\x3c/a\x3e on your Bamboo server, but has failed to detect any \x3ca href\x3d\x22{0}\x22\x3eexecutables\x3c/a\x3e.  You need to manually \x3ca href\x3d\x22{0}\x22\x3econfigure\x3c/a\x3e at least one executable (such as Ant, Maven, Maven 2 or scripts) before you can run any plans.",viewServerCapabilities__soy3)}, param4);
    } else if (! opt_data.hasJdks) {
      bamboo.page.admin.overview.welcomeItem({content: AJS.format("Bamboo has detected \x3ca href\x3d\x22{0}\x22\x3e{1}\x3c/a\x3e on your server, but has failed to detect a \x3ca href\x3d\x22{0}\x22\x3eJDK\x3c/a\x3e.  You may need to manually \x3ca href\x3d\x22{0}\x22\x3econfigure\x3c/a\x3e these before you can run any plans.",viewServerCapabilities__soy3,opt_data.buildersSize ? opt_data.buildersSize : 0)}, param4);
    } else {
      bamboo.page.admin.overview.welcomeItem({content: AJS.format("Bamboo has detected a \x3ca href\x3d\x22{0}\x22\x3eJDK\x3c/a\x3e and  \x3ca href\x3d\x22{0}\x22\x3e{1}\x3c/a\x3e on your server.  You may wish to \x3ca href\x3d\x22{0}\x22\x3eedit\x3c/a\x3e these or configure others.",viewServerCapabilities__soy3,opt_data.buildersSize ? opt_data.buildersSize : 0)}, param4);
    }
    if (! opt_data.isOnDemandInstance) {
      bamboo.page.admin.overview.welcomeItem({content: AJS.format("Let Bamboo know about your \x3ca href\x3d\x22{0}\x22\x3eemail server\x3c/a\x3e and \x3ca href\x3d\x22{1}\x22\x3einstant messaging server\x3c/a\x3e for build notifications.","" + '/admin/viewMailServer.action',"" + '/admin/instantmessagingserver/viewInstantMessagingServer.action')}, param4);
    }
  }
  if (! opt_data.isOnDemandInstance) {
    if (! opt_data.isAllowedRemoteAgents) {
      bamboo.page.admin.overview.welcomeItem({content: AJS.format("Configure your \x3ca href\x3d\x22{0}\x22\x3elocal agents\x3c/a\x3e and their capabilities.","" + '/admin/agent/configureAgents!default.action')}, param4);
    } else {
      bamboo.page.admin.overview.welcomeItem({content: AJS.format("Configure your \x3ca href\x3d\x22{0}\x22\x3eagents and their capabilities\x3c/a\x3e or set up \x3ca href\x3d\x22{1}\x22\x3eElastic Bamboo\x3c/a\x3e to get your builds running in the Amazon Elastic Compute Cloud (EC2).","" + '/admin/agent/configureAgents!default.action',"" + '/admin/elastic/viewElasticConfig.action')}, param4);
    }
  } else {
    bamboo.page.admin.overview.welcomeItem({content: AJS.format("Set up \x3ca href\x3d\x22{0}\x22\x3eElastic Bamboo\x3c/a\x3e to get your builds running in the Amazon Elastic Compute Cloud (EC2).","" + '/admin/elastic/viewElasticConfig.action')}, param4);
  }
  if (! opt_data.isOnDemandInstance) {
    bamboo.page.admin.overview.welcomeItem({content: AJS.format("Add more \x3ca href\x3d\x22{0}\x22\x3eusers\x3c/a\x3e, \x3ca href\x3d\x22{1}\x22\x3egroups\x3c/a\x3e and \x3ca href\x3d\x22{2}\x22\x3emanage permissions\x3c/a\x3e.","" + '/admin/user/viewUsers.action',"" + '/admin/group/viewGroups.action',"" + '/admin/viewGlobalPermissions.action')}, param4);
  }
  bamboo.page.admin.overview.welcomeItem({content: AJS.format("\x3ca href\x3d\x22{0}\x22\x3eSet build expiry\x3c/a\x3e, \x3ca href\x3d\x22{1}\x22\x3edelete plans\x3c/a\x3e or \x3ca href\x3d\x22{2}\x22\x3eedit plan permissions\x3c/a\x3e.","" + '/admin/buildExpiry!read.action',"" + '/admin/deleteBuilds.action',"" + '/admin/chooseBuildsToBulkEditPermissions.action')}, param4);
  bamboo.page.admin.overview.welcomeItems({content: param4.toString()}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.page.admin.overview.welcomeItems = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.content != '') ? '<ul>' + opt_data.content + '</ul>' : '');
  return opt_sb ? '' : output.toString();
};


bamboo.page.admin.overview.welcomeItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li>', opt_data.content, '</li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/feature/jira-issue-list/jira-issue-list.soy' */
// This file was automatically generated from jira-issue-list.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.jiraIssueList == 'undefined') { bamboo.feature.jiraIssueList = {}; }


bamboo.feature.jiraIssueList.jiraIssueList = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<table class="aui jira-issues', (opt_data.loading) ? ' loading' : '', '"><thead><tr><th colspan="2" class="issue">Issue</th><th class="description">Description</th>', (! opt_data.hideStatus) ? '<th class="status">Status</th>' : '', '</tr></thead>', (opt_data.issuesCount > opt_data.maxIssues) ? '<tfoot><tr><td colspan="' + soy.$$escapeHtml(opt_data.hideStatus ? 3 : 4) + '"><a href="' + soy.$$escapeHtml(opt_data.jiraTabUrl) + '">' + soy.$$escapeHtml(opt_data.issuesCount - opt_data.maxIssues + ' more issue' + (opt_data.issuesCount - opt_data.maxIssues > 1 ? 's' : '')) + '&hellip;</a></td></tr></tfoot>' : '', '<tbody>');
  var issueList22 = opt_data.issues;
  var issueListLen22 = issueList22.length;
  for (var issueIndex22 = 0; issueIndex22 < issueListLen22; issueIndex22++) {
    var issueData22 = issueList22[issueIndex22];
    if (issueData22.url && issueData22.url.href && issueData22.key && issueData22.summary) {
      bamboo.feature.jiraIssueList.jiraIssueListItem({key: issueData22.key, url: issueData22.url, summary: issueData22.summary, issueType: issueData22.issueType ? issueData22.issueType : opt_data.defaultIssueType, iconUrl: issueData22.iconUrl ? issueData22.iconUrl : opt_data.defaultIssueIconUrl, status: issueData22.status, statusClass: issueData22.statusClass, statusIconUrl: issueData22.statusIconUrl, hideStatus: opt_data.hideStatus}, output);
    } else {
      bamboo.feature.jiraIssueList.jiraIssueListItemNoConnection({key: issueData22.issueKey ? issueData22.issueKey : issueData22.key, hideStatus: opt_data.hideStatus}, output);
    }
  }
  output.append('</tbody></table>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.jiraIssueListItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<tr data-issue-key="', opt_data.key, '"><td class="type"><a href="', soy.$$escapeHtml(opt_data.url.href), '" title="', soy.$$escapeHtml("View this issue"), '"><img src="', soy.$$escapeHtml(opt_data.iconUrl), '" alt="', soy.$$escapeHtml(opt_data.issueType), '" /></a></td><td class="key"><a href="', soy.$$escapeHtml(opt_data.url.href), '">', opt_data.key, '</a></td><td class="description">', soy.$$escapeHtml(opt_data.summary), '</td>', (! opt_data.hideStatus) ? '<td class="status">' + ((opt_data.showStatusIcon) ? '<img src="' + soy.$$escapeHtml(opt_data.statusIconUrl) + '" alt="" />' : '') + '<span class="status-lozenge lozenge-subtle' + ((opt_data.statusClass) ? ' status-' + opt_data.statusClass : '') + '" title="' + soy.$$escapeHtml(opt_data.status) + '">' + soy.$$escapeHtml(opt_data.status) + '</span></td>' : '', '</tr>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.jiraIssueListItemNoConnection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<tr><td class="type">');
  widget.icons.icon({type: 'jiraissue-unknown', text: 'Unknown Issue Type', showTitle: true}, output);
  output.append('</td><td class="key">', soy.$$escapeHtml(opt_data.key), '</td><td', (! opt_data.hideStatus) ? ' colspan="2"' : '', ' class="details-error"><span>', soy.$$escapeHtml("Could not obtain issue details from JIRA"), '</span></td></tr>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.singleIssue = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="jira-issue"', (opt_data.key) ? ' data-key="' + opt_data.key + '"' : '', '><a href="', (opt_data.url.href) ? soy.$$escapeHtml(opt_data.url.href) : soy.$$escapeHtml(opt_data.url), '" title="', soy.$$escapeHtml("View this issue"), ' (', soy.$$escapeHtml(opt_data.issueType), ')" style="background-image: url(', soy.$$escapeHtml(opt_data.iconUrl), ');">', soy.$$escapeHtml(opt_data.key), '</a><span class="description">', soy.$$escapeHtml(opt_data.summary), '</span><span class="status-lozenge">', soy.$$escapeHtml(opt_data.status), '</span></span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.singleIssueLoading = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="single-issue-loading"><a', (opt_data.keyLink) ? ' href="' + soy.$$escapeHtml(opt_data.keyLink) + '"' : '', '>', opt_data.key, '</a></span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.singleIssueOAuth = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param137 = new soy.StringBuilder();
  bamboo.feature.jiraIssueList.linkedIssueOAuth({authenticationRedirectUrl: opt_data.authenticationRedirectUrl, authenticationInstanceName: opt_data.authenticationInstanceName, reason: 'to see issue details'}, param137);
  bamboo.feature.jiraIssueList.singleIssueRetrievalError({key: opt_data.key, keyLink: opt_data.keyLink, errorDetails: param137.toString()}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.singleIssueRetrievalError = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="single-issue-retrieval-error"', (opt_data.key) ? ' data-key="' + opt_data.key + '"' : '', '>', (opt_data.key) ? '<a' + ((opt_data.keyLink) ? ' href="' + soy.$$escapeHtml(opt_data.keyLink) + '"' : '') + '>' + opt_data.key + '</a>' : '', '<span class="error-message', (! opt_data.errorDetails) ? ' unspecified' : '', '">', (opt_data.errorDetails) ? opt_data.errorDetails : soy.$$escapeHtml("Could not obtain issue details from JIRA"), '</span></span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.linkedIssueOAuth = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a class="oauth-init" href="', soy.$$escapeHtml(opt_data.authenticationRedirectUrl), '">Authenticate</a> ', (opt_data.authenticationInstanceName) ? ' with ' + soy.$$escapeHtml(opt_data.authenticationInstanceName) : '', ' ', soy.$$escapeHtml(opt_data.reason));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/feature/comments/comments.soy' */
// This file was automatically generated from comments.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.comments == 'undefined') { bamboo.feature.comments = {}; }


bamboo.feature.comments.commentList = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.comments.length > 0) {
    output.append((opt_data.showTopLevelHeading) ? '<h2>' + soy.$$escapeHtml("Comments") + '</h2>' : '', '<ol>');
    var commentList11 = opt_data.comments;
    var commentListLen11 = commentList11.length;
    for (var commentIndex11 = 0; commentIndex11 < commentListLen11; commentIndex11++) {
      var commentData11 = commentList11[commentIndex11];
      bamboo.feature.comments.commentListItem({id: commentData11.id, comment: commentData11.comment, lastModificationDate: commentData11.lastModificationDate, prettyLastModificationDate: commentData11.prettyLastModificationDate, avatar: commentData11.avatar, user: commentData11.user, userDisplayName: commentData11.userDisplayName, showOperations: opt_data.showOperations, headingLevel: opt_data.headingLevel ? opt_data.headingLevel : 'h3', result: commentData11.result}, output);
    }
    output.append('</ol>');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.comments.commentListItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li><img src="', soy.$$escapeHtml(opt_data.avatar ? opt_data.avatar : "" + '/images/icons/useravatar.png'), '" class="avatar"><', soy.$$escapeHtml(opt_data.headingLevel ? opt_data.headingLevel : 'h3'), '>', (opt_data.user) ? '<a href="' + soy.$$escapeHtml("" + '/browse/user/' + opt_data.user.name) + '">' + soy.$$escapeHtml(opt_data.userDisplayName) + '</a>' : soy.$$escapeHtml("Anonymous user"), '</', soy.$$escapeHtml(opt_data.headingLevel ? opt_data.headingLevel : 'h3'), '><p>', opt_data.comment, '</p>', (opt_data.showOperations) ? '<div class="ops">' + ((opt_data.result) ? '<a class="delete mutative" href="' + soy.$$escapeHtml("" + '/build/ajax/deleteComment.action?commentId=' + opt_data.id + '&buildKey=' + opt_data.result.buildKey + '&buildNumber=' + opt_data.result.buildNumber) + '" title="' + soy.$$escapeHtml("Permanently delete this comment?") + '">' + soy.$$escapeHtml("Delete") + '</a>' : '<a class="delete mutative" href="' + soy.$$escapeHtml("" + '/deploy/deleteComment.action?commentId=' + opt_data.id) + '" title="' + soy.$$escapeHtml("Permanently delete this comment?") + '">' + soy.$$escapeHtml("Delete") + '</a>') + '</div>' : '', '<time datetime="', soy.$$escapeHtml(opt_data.lastModificationDate), '" title="', soy.$$escapeHtml(opt_data.lastModificationDate), '">', soy.$$escapeHtml(AJS.format("about {0} ago",opt_data.prettyLastModificationDate)), '</time></li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/feature/variables/variables.soy' */
// This file was automatically generated from variables.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.variables == 'undefined') { bamboo.feature.variables = {}; }


bamboo.feature.variables.variablesTable = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param18 = new soy.StringBuilder();
  if (! opt_data.hideAddHeader) {
    param18.append('<tr class="add-variable"><td>');
    bamboo.feature.variables.selectOrInput({id: 'variableKey', options: opt_data.availableVariables}, param18);
    param18.append('</td><td>');
    bamboo.feature.variables.selectOrInput({id: 'variableValue', value: opt_data.firstAvailableVariable}, param18);
    param18.append('</td><td class="operations">');
    aui.form.submit({text: "Add", id: ''}, param18);
    param18.append('</td></tr>');
  }
  if (opt_data.variables) {
    var variableList36 = opt_data.variables;
    var variableListLen36 = variableList36.length;
    for (var variableIndex36 = 0; variableIndex36 < variableListLen36; variableIndex36++) {
      var variableData36 = variableList36[variableIndex36];
      bamboo.feature.variables.variablesTableRow(soy.$$augmentData(variableData36, {inlineEdit: opt_data.inlineEdit, availableVariables: opt_data.availableVariables, deleteVariableUrl: opt_data.deleteVariableUrl}), param18);
    }
  }
  aui.table({extraClasses: 'variables-list', columnsContent: '<colgroup><col width="30%" /><col width="*" /><col width="60" /></colgroup>', theadContent: '<tr><th>' + soy.$$escapeHtml("Variable name") + '</th><th>' + soy.$$escapeHtml("Value") + '</th><th class="operations"><span class="assistive">' + soy.$$escapeHtml("Operations") + '</span></th></tr>', tfootContent: (opt_data.showOverrideFooter) ? '<tr><td colspan="3"><a class="aui-button aui-button-link aui-style variables-override">Override a variable</a></td></tr>' : '', content: param18.toString()}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.variablesTableRow = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<tr data-variable-id="', soy.$$escapeHtml(opt_data.id), '"><td>');
  if (opt_data.inlineEdit) {
    bamboo.feature.variables.inPlaceEditField({id: 'key_' + opt_data.id, value: opt_data.key, options: opt_data.availableVariables}, output);
  } else {
    bamboo.feature.variables.selectOrInput({id: 'key_' + opt_data.id, value: opt_data.key, options: opt_data.availableVariables}, output);
  }
  output.append('</td><td>');
  if (opt_data.inlineEdit) {
    bamboo.feature.variables.inPlaceEditField({id: 'value_' + opt_data.id, value: opt_data.value}, output);
  } else {
    bamboo.feature.variables.selectOrInput({id: 'value_' + opt_data.id, value: opt_data.key}, output);
  }
  output.append('</td><td class="operations"><a id="deleteVariable_', soy.$$escapeHtml(opt_data.id), '" class="delete-variable"', (opt_data.deleteVariableUrl) ? ' href="' + soy.$$escapeHtml(opt_data.deleteVariableUrl) + '"' : '', ' title="', soy.$$escapeHtml("Delete"), '" tabindex="-1">');
  aui.icons.icon({icon: 'remove', useIconFont: true, accessibilityText: "Delete", extraAttributes: {'title': "Delete"}}, output);
  output.append('</a></td></tr>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.inPlaceEditField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="inline-edit-view"', (! opt_data.readonly) ? ' tabindex="0"' : '', ' id="key_', soy.$$escapeHtml(opt_data.id), '">', soy.$$escapeHtml(opt_data.value), '</span>');
  if (opt_data.readonly) {
    aui.form.input({type: 'hidden', name: opt_data.id, value: opt_data.value}, output);
  } else {
    bamboo.feature.variables.selectOrInput(soy.$$augmentData(opt_data, {extraClasses: 'inline-edit-field'}), output);
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.selectOrInput = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.options) {
    bamboo.feature.variables.select({name: opt_data.id, options: opt_data.options, extraClasses: opt_data.extraClasses}, output);
  } else {
    aui.form.input({type: 'text', name: opt_data.id, value: opt_data.value, extraClasses: opt_data.extraClasses, extraAttributes: {'autocomplete': 'off'}}, output);
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.passwordConfirmaton = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.warning({titleContent: "variables.password.dialog.title", content: '<p>' + soy.$$escapeHtml("variables.password.dialog.description") + '</p>'}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.deleteConfirmaton = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.warning({titleContent: "Warning", content: '<p>' + soy.$$escapeHtml("You are about to delete the selected variable. Are you sure you want to continue?") + '</p>'}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.select = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<select', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' name="', (opt_data.name) ? soy.$$escapeHtml(opt_data.name) : soy.$$escapeHtml(opt_data.id), '" class="', soy.$$escapeHtml(opt_data.isMultiple ? 'multi-select' : 'select'));
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.size) ? ' size="' + soy.$$escapeHtml(opt_data.size) + '"' : '', (opt_data.isDisabled) ? ' disabled' : '', (opt_data.isMultiple) ? ' multiple' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>');
  var optionList162 = opt_data.options;
  var optionListLen162 = optionList162.length;
  for (var optionIndex162 = 0; optionIndex162 < optionListLen162; optionIndex162++) {
    var optionData162 = optionList162[optionIndex162];
    bamboo.feature.variables.optionOrOptgroup(optionData162, output);
  }
  output.append('</select>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.optionOrOptgroup = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.options) {
    output.append('<optgroup label="', soy.$$escapeHtml(opt_data.text), '"');
    aui.renderExtraAttributes(opt_data, output);
    output.append('>');
    var optionList174 = opt_data.options;
    var optionListLen174 = optionList174.length;
    for (var optionIndex174 = 0; optionIndex174 < optionListLen174; optionIndex174++) {
      var optionData174 = optionList174[optionIndex174];
      bamboo.feature.variables.optionOrOptgroup(optionData174, output);
    }
    output.append('</optgroup>');
  } else {
    output.append('<option value="', soy.$$escapeHtml(opt_data.value), '"');
    aui.renderExtraAttributes(opt_data, output);
    output.append((opt_data.selected) ? ' selected' : '', '>', soy.$$escapeHtml(opt_data.text), '</option>');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.overrideText = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.variable) ? '<div class="variable-override-text">' + ((opt_data.variable.variableType == 'PLAN') ? soy.$$escapeHtml("Overrides plan value:") + ' ' + soy.$$escapeHtml(opt_data.variable.value) : soy.$$escapeHtml("Overrides global value:") + ' ' + soy.$$escapeHtml(opt_data.variable.value)) + '</div>' : '');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/feature/dashboard/welcome-mat/welcome-mat.soy' */
// This file was automatically generated from welcome-mat.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.dashboard == 'undefined') { bamboo.feature.dashboard = {}; }
if (typeof bamboo.feature.dashboard.welcomeMat == 'undefined') { bamboo.feature.dashboard.welcomeMat = {}; }


bamboo.feature.dashboard.welcomeMat.welcomeMat = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param10 = new soy.StringBuilder();
  if (opt_data.hasUser) {
    if (opt_data.isEc2ConfigurationWarningRequired && (opt_data.hasAdminPermission || opt_data.hasGlobalCreatePermission)) {
      if (opt_data.hasAdminPermission) {
        aui.message.info({titleContent: "Amazon Elastic Cloud (EC2) configuration required", content: '<p>' + AJS.format("Bamboo Cloud uses the \x3ca href\x3d\x22{0}\x22\x3eAmazon Elastic Compute Cloud (EC2)\x3c/a\x3e to run builds, which you must configure before creating any plans.",'http://confluence.atlassian.com/display/BAMBOO/About+Elastic+Bamboo') + '</p>'}, param10);
      } else if (opt_data.hasGlobalCreatePermission) {
        aui.message.info({titleContent: "Amazon Elastic Cloud (EC2) configuration required", content: '<p>' + AJS.format("Bamboo Cloud uses the \x3ca href\x3d\x22{0}\x22\x3eAmazon Elastic Cloud (EC2)\x3c/a\x3e to run builds, which must be configured before creating any plans. Please \x3ca href\x3d\x22{1}\x22\x3econtact an administrator\x3c/a\x3e to have them set up Elastic Bamboo.",'http://confluence.atlassian.com/display/BAMBOO/About+Elastic+Bamboo',"" + '/viewAdministrators.action') + '</p>'}, param10);
      }
    } else if (! (opt_data.hasAdminPermission && opt_data.hasGlobalCreatePermission)) {
      aui.message.info({titleContent: "Not authorised to configure plans", content: '<p>' + AJS.format("There are currently no builds configured in Bamboo. You do not have the correct privileges to set up a build. Please \x3ca href\x3d\x22{0}\x22\x3econtact an administrator\x3c/a\x3e for further assistance.","" + '/viewAdministrators.action') + '</p>'}, param10);
    }
  }
  bamboo.feature.dashboard.welcomeMat.welcomeMessage({showCreate: opt_data.hasGlobalCreatePermission || opt_data.hasAdminPermission, showImport: opt_data.hasAdminPermission, showLogin: ! opt_data.hasUser, showSignup: ! opt_data.hasUser, showSetupEC2: opt_data.hasAdminPermission && opt_data.isEc2ConfigurationWarningRequired, showContactAdmin: opt_data.hasUser && ! opt_data.hasAdminPermission && (! opt_data.hasGlobalCreatePermission || opt_data.isEc2ConfigurationWarningRequired), showOnDemandContent: opt_data.isOnDemandInstance, content: param10.toString()}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.dashboard.welcomeMat.welcomeMessage = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="welcome-message build"><div class="welcome-content"><h2 class="welcome-title">', soy.$$escapeHtml("Let\x27s get building!"), '</h2><div class="welcome-blurb"><p>', (opt_data.showOnDemandContent) ? soy.$$escapeHtml("It\x27s time to create your first build plan.") : soy.$$escapeHtml("Now that the installation and the setup of Bamboo is complete, it\x27s time to create your first build plan."), '</p><p>', soy.$$escapeHtml("Build plans hold all the instructions to build, test and assemble your software. Whenever you make a change to your code, Bamboo triggers your build plan and notifies you of the result."), '</p>', (opt_data.content && opt_data.content != '') ? opt_data.content : '', '</div>');
  if (opt_data.showSetupEC2 || opt_data.showContactAdmin || opt_data.showCreate || opt_data.showImport || opt_data.showLogin || opt_data.showSignup) {
    var param61 = new soy.StringBuilder();
    var param63 = new soy.StringBuilder();
    if (opt_data.showSetupEC2) {
      aui.buttons.button({text: "Configure Elastic Bamboo", type: 'primary', tagName: 'a', extraClasses: 'aui-style', extraAttributes: {'href': "" + '/admin/elastic/viewElasticConfig.action'}}, param63);
    } else if (opt_data.showContactAdmin) {
      aui.buttons.button({text: "Contact administrator", type: 'primary', tagName: 'a', extraClasses: 'aui-style', extraAttributes: {'href': "" + '/viewAdministrators.action'}}, param63);
    }
    if (opt_data.showCreate || opt_data.showImport) {
      if (opt_data.showCreate) {
        aui.buttons.button({text: "Create your first build plan", type: opt_data.showSetupEC2 || opt_data.showContactAdmin ? '' : 'primary', tagName: 'a', id: 'create-a-plan', isDisabled: opt_data.showSetupEC2 || opt_data.showContactAdmin, extraClasses: 'aui-style', extraAttributes: opt_data.showSetupEC2 || opt_data.showContactAdmin ? [] : {'href': "" + '/build/admin/create/newPlan.action'}}, param63);
      }
    } else if (opt_data.showLogin || opt_data.showSignup) {
      if (opt_data.showLogin) {
        aui.buttons.button({text: "Log in", type: 'primary', tagName: 'a', extraClasses: 'aui-style', extraAttributes: {'href': "" + '/userlogin!default.action'}}, param63);
      }
      if (opt_data.showSignup) {
        aui.buttons.button({text: "Sign up", tagName: 'a', extraClasses: 'aui-style', extraAttributes: {'href': "" + '/signupUser!default.action'}}, param63);
      }
    }
    aui.toolbar2.item({item: 'primary', content: param63.toString()}, param61);
    aui.toolbar2.toolbar2({extraClasses: 'welcome-actions', content: param61.toString()}, output);
  }
  output.append('</div></div>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.dashboard.welcomeMat.welcomeMessageDeploy = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="welcome-message deployment"><div class="welcome-content"><h2 class="welcome-title">', soy.$$escapeHtml("Ready, steady, deploy!"), ' </h2><div class="welcome-blurb">', "\x3cp\x3eWith Bamboo deployments you can track your code from a JIRA issue, through testing in a build, all the way to deployment. Deployments allow you to: \x3cul\x3e\x3cli\x3eSnapshot your artifacts from any successful build into a release\x3c/li\x3e \x3cli\x3eDeploy, rollback and promote releases to environments\x3c/li\x3e \x3cli\x3eTrack what, when and who deployed releases to your environments\x3c/li\x3e \x3c/ul\x3e\x3c/p\x3e");
  if (opt_data.hasBuilds) {
    output.append('<p>', soy.$$escapeHtml("To get started, create a deployment project and link it to your build plan now!"));
    if (opt_data.hasGlobalCreatePermission) {
      output.append('<p>');
      aui.buttons.button({text: "Create my first deployment project", type: 'primary', tagName: 'a', extraAttributes: {'href': "" + '/deploy/config/newDeploymentProjectDetails.action'}}, output);
      output.append('</p>');
    }
    output.append('</p>');
  } else {
    output.append('<p>', AJS.format("Before you can get started with deployments you need to \x3ca href\x3d\x22{0}\x22\x3ecreate a build plan\x3c/a\x3e that has some artifacts.","" + '/build/admin/create/newPlan.action'), '</p>');
  }
  output.append('</div></div></div><div class="infographic"><h2>', soy.$$escapeHtml("How do deployments work?"), '</h2><img src="', soy.$$escapeHtml(""), '/images/infographic/bamboo-deploy.png" /><div class="artifactText"><h3>', soy.$$escapeHtml("Artifacts"), '</h3>', soy.$$escapeHtml("Create deployable artifacts with build plans, just like always. Any artifacts you wish to deploy with Bamboo need to be \x22shared\x22."), '</div><div class="versionText"><h3>', soy.$$escapeHtml("Release"), '</h3>', soy.$$escapeHtml("Any artifacts that have been tested to your satisfaction using a plan can be used to create a release. Bamboo preserves metadata related to your release, such as the JIRA issues and commits included. This allows for tracking changes across environments, easy traceability when troubleshooting, and creating powerful reports."), '</div><div class="environmentText"><h3>', soy.$$escapeHtml("Environments"), '</h3>', soy.$$escapeHtml("Define environments in Bamboo to reflect the development, testing and production environments in your IT infrastructure. At any point in time, you\xe2\x80\x99ll be able to see which version of a release is running in each environment, when and who deployed it and what release it replaced."), '</div></div>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.dashboard.welcomeMat.importOptionsItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li><a', (opt_data.href) ? ' href="' + soy.$$escapeHtml(opt_data.href) + '"' : '', '>', soy.$$escapeHtml(opt_data.text), '</a></li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/feature/agent-assignment/configure-agent-assignments.soy' */
// This file was automatically generated from configure-agent-assignments.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.agent == 'undefined') { bamboo.feature.agent = {}; }
if (typeof bamboo.feature.agent.assignment == 'undefined') { bamboo.feature.agent.assignment = {}; }


bamboo.feature.agent.assignment.agentItemResult = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span>', soy.$$escapeHtml(opt_data.name), ' <span class="autocomplete-metadata">');
  bamboo.feature.agent.assignment.typeText(opt_data, output);
  output.append('</span></span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.agent.assignment.agentItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<td>', soy.$$escapeHtml(opt_data.name), '</td><td>');
  bamboo.feature.agent.assignment.typeText(opt_data, output);
  output.append((opt_data.type == 'IMAGE') ? '<input type="hidden" name="images" value="' + soy.$$escapeHtml(opt_data.id) + '"/>' : '<input type="hidden" name="agents" value="' + soy.$$escapeHtml(opt_data.id) + '"/>', '</td><td class="actions">');
  if (! opt_data.capabilitiesMatch) {
    output.append('<span id="failed-capability-match-', soy.$$escapeHtml(opt_data.id), '" class="aui-lozenge aui-lozenge-subtle aui-lozenge-error">', soy.$$escapeHtml("Not capable"), '</span> ');
    bamboo.widget.tooltip.tooltip({trigger: '#failed-capability-match-' + opt_data.id, url: opt_data.capabilitiesTooltipUrl + '&' + ((opt_data.type == 'IMAGE') ? 'imageConfigurationId' : 'agentId') + soy.$$escapeHtml('=' + opt_data.id), showDelay: 300}, output);
  }
  output.append('<a class="remove"><span class="assistive">', soy.$$escapeHtml("Remove this agent from assigned agents"), '</span></a></td>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.agent.assignment.typeText = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.type == 'IMAGE') ? soy.$$escapeHtml("Elastic Image") : (opt_data.agentType == 'LOCAL') ? soy.$$escapeHtml("Local Agent") : (opt_data.agentType == 'REMOTE') ? soy.$$escapeHtml("Remote Agent") : (opt_data.agentType == 'ELASTIC') ? soy.$$escapeHtml("Elastic Agent") : '');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.agent.assignment.agentList = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.agentAssignmentExecutors && opt_data.agentAssignmentExecutors.length > 0) {
    var param66 = new soy.StringBuilder();
    var agentAssignmentExecutorList67 = opt_data.agentAssignmentExecutors;
    var agentAssignmentExecutorListLen67 = agentAssignmentExecutorList67.length;
    for (var agentAssignmentExecutorIndex67 = 0; agentAssignmentExecutorIndex67 < agentAssignmentExecutorListLen67; agentAssignmentExecutorIndex67++) {
      var agentAssignmentExecutorData67 = agentAssignmentExecutorList67[agentAssignmentExecutorIndex67];
      param66.append('<tr data-id="', soy.$$escapeHtml(agentAssignmentExecutorData67.id), '" ', (opt_data.addedAssignment && opt_data.addedAssignment.id == agentAssignmentExecutorData67.id) ? 'class="multi-select-added"' : '', '>');
      bamboo.feature.agent.assignment.agentItem(soy.$$augmentData(agentAssignmentExecutorData67, {capabilitiesTooltipUrl: opt_data.capabilitiesTooltipUrl}), param66);
      param66.append('</tr>');
    }
    aui.table({theadContent: '<tr><th>' + soy.$$escapeHtml("Name") + '</th><th>' + soy.$$escapeHtml("Type") + '</th><th></th></tr>', content: param66.toString()}, output);
  }
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/feature/agent-assignment/configure-environment-assignments.soy' */
// This file was automatically generated from configure-environment-assignments.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.agent == 'undefined') { bamboo.feature.agent = {}; }
if (typeof bamboo.feature.agent.assignment == 'undefined') { bamboo.feature.agent.assignment = {}; }


bamboo.feature.agent.assignment.entityItemResult = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="metadata">');
  var nameList4 = opt_data.item.nameElements;
  var nameListLen4 = nameList4.length;
  for (var nameIndex4 = 0; nameIndex4 < nameListLen4; nameIndex4++) {
    var nameData4 = nameList4[nameIndex4];
    output.append('<span class="name columns', soy.$$escapeHtml(opt_data.item.nameElements.length), ' ', (! (nameIndex4 == 0)) ? 'divider' : '', '">', soy.$$escapeHtml(nameData4), '</span>');
  }
  output.append('</div>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.agent.assignment.entityItemLabel = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="metadata">');
  var nameList18 = opt_data.item.nameElements;
  var nameListLen18 = nameList18.length;
  for (var nameIndex18 = 0; nameIndex18 < nameListLen18; nameIndex18++) {
    var nameData18 = nameList18[nameIndex18];
    output.append('<span class="name columns', soy.$$escapeHtml(opt_data.item.nameElements.length), ' ', (! (nameIndex18 == 0)) ? 'divider' : '', '">', soy.$$escapeHtml(nameData18), '</span>');
  }
  output.append('</div>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.agent.assignment.assignmentTypeItemResult = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span>', soy.$$escapeHtml(opt_data.label), '</span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.agent.assignment.entitiesList = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.entities && opt_data.entities.length > 0) {
    var entityList37 = opt_data.entities;
    var entityListLen37 = entityList37.length;
    for (var entityIndex37 = 0; entityIndex37 < entityListLen37; entityIndex37++) {
      var entityData37 = entityList37[entityIndex37];
      output.append('<tr data-id="', soy.$$escapeHtml(entityData37.executableId), '" data-executableid="', soy.$$escapeHtml(entityData37.executableId), '" data-executabletype="', soy.$$escapeHtml(entityData37.executableType), '" data-executortype="', soy.$$escapeHtml(opt_data.executableType), '" data-executorid="', soy.$$escapeHtml(opt_data.agentId), '"  ', (opt_data.addedEntity && opt_data.addedEntity.executableId == entityData37.executableId) ? 'class="multi-select-added"' : '', '>');
      bamboo.feature.agent.assignment.entityItem({nameElements: entityData37.nameElements, executableType: entityData37.executableType, executableId: entityData37.executableId, executableTypeLabel: entityData37.executableTypeLabel, capabilitiesMatch: entityData37.capabilitiesMatch, capabilitiesTooltipUrl: opt_data.capabilitiesTooltipUrl}, output);
      output.append('</tr>');
    }
  } else {
    output.append('<tr id="no-item-row"><td colspan="3"><div id="no-item-selected"><h2>', (opt_data.executableType == 'IMAGE') ? soy.$$escapeHtml("This image is not dedicated.") : soy.$$escapeHtml("This agent is not dedicated."), '</h2><p>', soy.$$escapeHtml("It is available for any build or deployment."), '</p></div></td></tr>');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.agent.assignment.entityItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<td>', soy.$$escapeHtml(opt_data.executableTypeLabel), '</td><td>');
  var nameList76 = opt_data.nameElements;
  var nameListLen76 = nameList76.length;
  for (var nameIndex76 = 0; nameIndex76 < nameListLen76; nameIndex76++) {
    var nameData76 = nameList76[nameIndex76];
    output.append(soy.$$escapeHtml(nameData76), (! (nameIndex76 == nameListLen76 - 1)) ? ' &rsaquo; ' : '');
  }
  output.append('</td><td class="agent-assignment-operations">');
  if (! opt_data.capabilitiesMatch) {
    output.append('<span id="failed-capability-match-', soy.$$escapeHtml(opt_data.executableId), '" class="aui-lozenge aui-lozenge-subtle aui-lozenge-error">', soy.$$escapeHtml("Not capable"), '</span> ');
    if (opt_data.executableType == 'JOB') {
      bamboo.widget.tooltip.tooltip({trigger: '#failed-capability-match-' + opt_data.executableId, url: opt_data.capabilitiesTooltipUrl + '&jobId=' + opt_data.executableId, showDelay: 300}, output);
    } else {
      bamboo.widget.tooltip.tooltip({trigger: '#failed-capability-match-' + opt_data.executableId, url: opt_data.capabilitiesTooltipUrl + '&environmentId=' + opt_data.executableId, showDelay: 300}, output);
    }
  }
  output.append('<a class=\'remove\' href="#">');
  aui.icons.icon({icon: 'remove', useIconFont: true, accessibilityText: "Delete", extraAttributes: {'title': "Delete"}}, output);
  output.append('</a></td>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/icons.soy' */
// This file was automatically generated from icons.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.icons == 'undefined') { widget.icons = {}; }


widget.icons.icon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="icon icon-', soy.$$escapeHtml(opt_data.type), '"', (opt_data.text && opt_data.showTitle) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '"' : '', '>', (opt_data.text) ? '<span>' + soy.$$escapeHtml(opt_data.text) + '</span>' : '', '</span>');
  return opt_sb ? '' : output.toString();
};


widget.icons.fontIcon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="aui-icon aui-icon-small aui-iconfont-', soy.$$escapeHtml(opt_data.type), '"', (opt_data.text && opt_data.showTitle) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '"' : '', '>', (opt_data.text) ? '<span>' + soy.$$escapeHtml(opt_data.text) + '</span>' : '', '</span>');
  return opt_sb ? '' : output.toString();
};


widget.icons.auiFontLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a ', (opt_data.text) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '" ' : '', 'href="', soy.$$escapeHtml("" + opt_data.relativeUrl), '"><span class="aui-icon aui-icon-small aui-iconfont-', soy.$$escapeHtml(opt_data.iconType), '">', (opt_data.text) ? soy.$$escapeHtml(opt_data.text) : '', '</span></a>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/lozenges.soy' */
// This file was automatically generated from lozenges.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.lozenges == 'undefined') { widget.lozenges = {}; }


widget.lozenges.lozenge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="lozenge lozenge-', soy.$$escapeHtml(opt_data.colour ? opt_data.colour : 'default'), soy.$$escapeHtml(opt_data.subtle ? ' lozenge-subtle' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.showTitle) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', soy.$$escapeHtml(opt_data.text), '</span>');
  return opt_sb ? '' : output.toString();
};


widget.lozenges.auilozenge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="aui-lozenge aui-lozenge-', soy.$$escapeHtml(opt_data.colour ? opt_data.colour : 'default'), soy.$$escapeHtml(opt_data.subtle ? ' aui-lozenge-subtle' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.showTitle) ? ' title="' + soy.$$escapeHtml(opt_data.text) + '"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', soy.$$escapeHtml(opt_data.text), '</span>');
  return opt_sb ? '' : output.toString();
};


widget.lozenges.branch = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="', (opt_data.cssClass) ? soy.$$escapeHtml(opt_data.cssClass) : 'lozenge-newline', '">', (opt_data.label) ? '<span class="inline-label">' + soy.$$escapeHtml(opt_data.label) + '</span> ' : '', '<span class="lozenge branch-lozenge monospace" title="', soy.$$escapeHtml(opt_data.planBranchName), '"><span class="branch">');
  aui.icons.icon({icon: 'devtools-branch-small', useIconFont: true}, output);
  output.append('<span class="name">', soy.$$escapeHtml(opt_data.planBranchName), '</span></span></span></span>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/status/status.soy' */
// This file was automatically generated from status.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.status == 'undefined') { widget.status = {}; }


widget.status.deploymentResultStatusLozenge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var colour__soy3 = new soy.StringBuilder();
  if (opt_data.lifeCycleState == 'FINISHED') {
    switch (opt_data.deploymentState) {
      case 'UNKNOWN':
        colour__soy3.append('current');
        break;
      case 'SUCCESS':
        colour__soy3.append('success');
        break;
      case 'FAILED':
        colour__soy3.append('error');
        break;
    }
  } else {
    switch (opt_data.lifeCycleState) {
      case 'PENDING':
        colour__soy3.append('complete');
        break;
      case 'QUEUED':
        colour__soy3.append('complete');
        break;
      case 'IN_PROGRESS':
        colour__soy3.append('complete');
        break;
      case 'NOT_BUILT':
        colour__soy3.append('current');
        break;
    }
  }
  colour__soy3 = colour__soy3.toString();
  var text__soy23 = new soy.StringBuilder();
  if (opt_data.lifeCycleState == 'FINISHED') {
    switch (opt_data.deploymentState) {
      case 'UNKNOWN':
        text__soy23.append('Unknown');
        break;
      case 'SUCCESS':
        text__soy23.append('Success');
        break;
      case 'FAILED':
        text__soy23.append('Failed');
        break;
    }
  } else {
    switch (opt_data.lifeCycleState) {
      case 'PENDING':
        text__soy23.append('Queued');
        break;
      case 'QUEUED':
        text__soy23.append('Queued');
        break;
      case 'IN_PROGRESS':
        text__soy23.append('In Progress');
        break;
      case 'NOT_BUILT':
        text__soy23.append('Not Built');
        break;
    }
  }
  text__soy23 = text__soy23.toString();
  widget.lozenges.auilozenge({colour: colour__soy3, text: text__soy23, subtle: opt_data.subtle}, output);
  return opt_sb ? '' : output.toString();
};


widget.status.buildResultStatusIcon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var class__soy48 = new soy.StringBuilder();
  widget.status.buildResultStatusClass(opt_data, class__soy48);
  class__soy48 = class__soy48.toString();
  widget.icons.icon({type: class__soy48}, output);
  return opt_sb ? '' : output.toString();
};


widget.status.buildResultStatusClass = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.resultSummary.continuable && opt_data.resultSummary.successful) ? 'SuccessfulPartial' : (opt_data.resultSummary.notRunYet) ? 'NotRunYet' : (opt_data.resultSummary.finished) ? soy.$$escapeHtml(opt_data.resultSummary.buildState) : soy.$$escapeHtml(opt_data.resultSummary.lifeCycleState));
  return opt_sb ? '' : output.toString();
};


widget.status.statusRibbon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="status-ribbon');
  aui.renderExtraClasses(opt_data, output);
  output.append('" data-statuses="', soy.$$escapeHtml(opt_data.statuses.length), '"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><div class="status-ribbon-inner">');
  var statusList77 = opt_data.statuses;
  var statusListLen77 = statusList77.length;
  for (var statusIndex77 = 0; statusIndex77 < statusListLen77; statusIndex77++) {
    var statusData77 = statusList77[statusIndex77];
    widget.status.statusRibbonItem(statusData77, output);
  }
  output.append('</div>', (opt_data.progressbarContent) ? '<div class="status-ribbon-progress-bar">' + opt_data.progressbarContent + '</div>' : '', '</div>');
  return opt_sb ? '' : output.toString();
};


widget.status.statusRibbonItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="status-ribbon-status ', soy.$$escapeHtml(opt_data.state));
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><', soy.$$escapeHtml(opt_data.headingTagName ? opt_data.headingTagName : 'h2'), ' class="status-ribbon-status-heading">');
  widget.icons.icon({type: opt_data.state + ' icon-reversed'}, output);
  output.append(' ', opt_data.content, '</', soy.$$escapeHtml(opt_data.headingTagName ? opt_data.headingTagName : 'h2'), '></div>');
  return opt_sb ? '' : output.toString();
};


widget.status.deploymentVersionStatus = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.deploymentVersionState && opt_data.deploymentVersionState != 'UNKNOWN') {
    widget.lozenges.auilozenge({colour: (opt_data.deploymentVersionState == 'BROKEN' || opt_data.deploymentVersionState == 'INCOMPLETE') ? 'error' : 'success', text: opt_data.deploymentVersionState, subtle: opt_data.subtle, extraClasses: 'version-lozenge'}, output);
  }
  return opt_sb ? '' : output.toString();
};


widget.status.deploymentVersionStatusInfo = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.deploymentVersionState == 'APPROVED' || opt_data.deploymentVersionState == 'BROKEN') {
    output.append('<div class="detailed-version-info-container reviewed-user-avatar">');
    aui.avatar.avatar({size: 'small', avatarImageUrl: opt_data.avatar ? opt_data.avatar : "" + '/images/icons/useravatar.png', accessibilityText: opt_data.userName ? opt_data.userName : "Anonymous user", title: opt_data.displayName ? opt_data.displayName : "Anonymous user", badgeContent: (opt_data.deploymentVersionState == 'BROKEN') ? '<span class="badge reviewed broken"></span>' : (opt_data.deploymentVersionState == 'APPROVED') ? '<span class="badge reviewed approved"></span>' : ''}, output);
    output.append('<script>AJS.$(".aui-avatar-inner > img").tooltip({gravity: \'n\'});<\/script></div>');
  }
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/agent.soy' */
// This file was automatically generated from agent.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.agent == 'undefined') { widget.agent = {}; }


widget.agent.renderAgentNameLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.type == 'ELASTIC') {
    if (true) {
      output.append('<a href="', soy.$$escapeHtml("" + '/admin/elastic/manageElasticInstances.action'), '">');
      widget.icons.icon({type: 'elastic', text: '(elastic)', showTitle: true}, output);
      output.append('</a>');
    } else {
      widget.icons.icon({type: 'elastic', text: '(elastic)', showTitle: true}, output);
    }
  }
  output.append((opt_data.showAdminLink) ? '<a href="' + soy.$$escapeHtml("" + '/admin/agent/viewAgent.action?agentId=' + opt_data.id) + '">' + soy.$$escapeHtml(opt_data.name) + '</a>' : '<a href="' + soy.$$escapeHtml("" + '/agent/viewAgent.action?agentId=' + opt_data.id) + '">' + soy.$$escapeHtml(opt_data.name) + '</a>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/plan.soy' */
// This file was automatically generated from plan.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.plan == 'undefined') { widget.plan = {}; }


widget.plan.renderPlanNameLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', (opt_data.url) ? soy.$$escapeHtml(opt_data.url) : soy.$$escapeHtml("" + '/browse/' + opt_data.plan.key), '" ', (opt_data.plan.description) ? 'title="' + soy.$$escapeHtml(opt_data.plan.description) + '"' : '', '>', soy.$$escapeHtml(opt_data.plan.project.name), ' &rsaquo; ');
  if (opt_data.plan.master) {
    output.append(soy.$$escapeHtml(opt_data.plan.master.buildName), ' &rsaquo; ');
    aui.icons.icon({icon: 'devtools-branch-small', useIconFont: true}, output);
    output.append(' ');
  }
  output.append(soy.$$escapeHtml(opt_data.plan.buildName), '</a>');
  return opt_sb ? '' : output.toString();
};


widget.plan.renderPlanNameLinkWithoutBranch = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', (opt_data.url) ? soy.$$escapeHtml(opt_data.url) : soy.$$escapeHtml("" + '/browse/' + opt_data.plan.key), '" ', (opt_data.plan.description) ? 'title="' + soy.$$escapeHtml(opt_data.plan.description) + '"' : '', '>', soy.$$escapeHtml(opt_data.plan.project.name), ' &rsaquo; ', (opt_data.plan.master) ? soy.$$escapeHtml(opt_data.plan.master.buildName) : soy.$$escapeHtml(opt_data.plan.buildName), '</a>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/buildresult.soy' */
// This file was automatically generated from buildresult.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.buildresult == 'undefined') { widget.buildresult = {}; }


widget.buildresult.resultStatusAndLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  widget.status.buildResultStatusIcon(opt_data, output);
  var resultClass__soy5 = new soy.StringBuilder();
  widget.status.buildResultStatusClass(opt_data, resultClass__soy5);
  resultClass__soy5 = resultClass__soy5.toString();
  output.append(' <a href="', soy.$$escapeHtml("" + '/browse/' + opt_data.resultSummary.planResultKey.key), '" class="', soy.$$escapeHtml(resultClass__soy5), '">', soy.$$escapeHtml('#' + opt_data.resultSummary.planResultKey.resultNumber), '</a>');
  return opt_sb ? '' : output.toString();
};


widget.buildresult.resultStatus = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  widget.status.buildResultStatusIcon(opt_data, output);
  var resultClass__soy18 = new soy.StringBuilder();
  widget.status.buildResultStatusClass(opt_data, resultClass__soy18);
  resultClass__soy18 = resultClass__soy18.toString();
  output.append(' <span class="', soy.$$escapeHtml(resultClass__soy18), '">', soy.$$escapeHtml('#' + opt_data.resultSummary.planResultKey.resultNumber), '</span>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/autocomplete-controls/bamboo/plandependencies/plan-dependency.soy' */
// This file was automatically generated from plan-dependency.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.autocomplete == 'undefined') { bamboo.widget.autocomplete = {}; }
if (typeof bamboo.widget.autocomplete.planDependency == 'undefined') { bamboo.widget.autocomplete.planDependency = {}; }


bamboo.widget.autocomplete.planDependency.list = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul class="', soy.$$escapeHtml(opt_data.plans.length == 0 ? 'empty' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('">');
  var planList7 = opt_data.plans;
  var planListLen7 = planList7.length;
  for (var planIndex7 = 0; planIndex7 < planListLen7; planIndex7++) {
    var planData7 = planList7[planIndex7];
    output.append('<li data-id="', soy.$$escapeHtml(planData7.id), '">');
    bamboo.widget.autocomplete.planDependency.item(soy.$$augmentData(planData7, {isReadOnly: opt_data.isReadOnly}), output);
    output.append('</li>');
  }
  output.append('</ul>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.planDependency.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', soy.$$escapeHtml("" + '/chain/admin/config/editChainDependencies.action?buildKey=' + opt_data.id), '">', soy.$$escapeHtml(opt_data.projectName), (opt_data.planName) ? ' &rsaquo; ' + soy.$$escapeHtml(opt_data.planName) : '', '</a>');
  if (! (opt_data.isEditable == false)) {
    output.append((! opt_data.isReadOnly) ? '<a class="remove"></a><input type="hidden" name="childPlanKeys" value="' + soy.$$escapeHtml(opt_data.id) + '" />' : '');
  } else {
    widget.lozenges.lozenge({text: "Generated", subtle: true, extraClasses: 'dependencies-generated'}, output);
  }
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/autocomplete-controls/bamboo/projectfilter/project-filter.soy' */
// This file was automatically generated from project-filter.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.autocomplete == 'undefined') { bamboo.widget.autocomplete = {}; }
if (typeof bamboo.widget.autocomplete.projectFilter == 'undefined') { bamboo.widget.autocomplete.projectFilter = {}; }


bamboo.widget.autocomplete.projectFilter.list = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul class="', soy.$$escapeHtml(opt_data.projects.length == 0 ? 'empty' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('">');
  var projectList7 = opt_data.projects;
  var projectListLen7 = projectList7.length;
  for (var projectIndex7 = 0; projectIndex7 < projectListLen7; projectIndex7++) {
    var projectData7 = projectList7[projectIndex7];
    output.append('<li data-id="', soy.$$escapeHtml(projectData7.id), '">');
    bamboo.widget.autocomplete.projectFilter.item(projectData7, output);
    output.append('</li>');
  }
  output.append('</ul>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.projectFilter.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a href="', soy.$$escapeHtml("" + '/browse/' + opt_data.id), '">', soy.$$escapeHtml(opt_data.projectName), '</a><a class="remove"></a><input type="hidden" name="selectedProjectKeys" value="', soy.$$escapeHtml(opt_data.id), '" />');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/autocomplete-controls/bamboo/variables/variable-multiselect.soy' */
// This file was automatically generated from variable-multiselect.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.autocomplete == 'undefined') { bamboo.widget.autocomplete = {}; }
if (typeof bamboo.widget.autocomplete.variableSelect == 'undefined') { bamboo.widget.autocomplete.variableSelect = {}; }


bamboo.widget.autocomplete.variableSelect.list = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul class="', soy.$$escapeHtml(opt_data.variablesToAutoIncrement.length == 0 ? 'empty' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('">');
  var variableList7 = opt_data.variablesToAutoIncrement;
  var variableListLen7 = variableList7.length;
  for (var variableIndex7 = 0; variableIndex7 < variableListLen7; variableIndex7++) {
    var variableData7 = variableList7[variableIndex7];
    output.append('<li data-id="', soy.$$escapeHtml(variableData7.key), '">');
    bamboo.widget.autocomplete.variableSelect.item(variableData7, output);
    output.append('</li>');
  }
  output.append('</ul>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.variableSelect.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(soy.$$escapeHtml(opt_data.key), '<a class="remove"></a><input type="hidden" name="variablesToAutoIncrement" value="', soy.$$escapeHtml(opt_data.key), '" />');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/plan-status-history/plan-status-history.soy' */
// This file was automatically generated from plan-status-history.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.planStatusHistory == 'undefined') { bamboo.widget.planStatusHistory = {}; }


bamboo.widget.planStatusHistory.container = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div id="', soy.$$escapeHtml(opt_data.id), '">');
  bamboo.widget.planStatusHistory.navigator(opt_data, output);
  output.append('</div><script type="text/javascript">require([\'jquery\', \'widget/plan-status-history\'], function($, PlanStatusHistory){return new PlanStatusHistory({el: $(\'#', soy.$$escapeHtml(opt_data.id), '\'), planKey: \'', soy.$$escapeHtml(opt_data.planKey), '\', buildNumber: ', soy.$$escapeHtml(opt_data.currentBuildNumber ? opt_data.currentBuildNumber : 'null'), ', bootstrap: ', opt_data.bootstrap, ', returnUrl: \'', opt_data.returnUrl, '\', keyToNavigate: \'', soy.$$escapeHtml(opt_data.keyToNavigate), '\', firstBuildNumber: ', soy.$$escapeHtml(opt_data.firstBuildNumber ? opt_data.firstBuildNumber : 'null'), ', lastBuildNumber: ', soy.$$escapeHtml(opt_data.lastBuildNumber ? opt_data.lastBuildNumber : 'null'), '});});<\/script>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.planStatusHistory.navigator = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.builds.length > 0) {
    output.append((opt_data.currentBuildNumber && opt_data.currentBuildNumber > opt_data.firstBuildNumber) ? '<a class="previous" href="' + soy.$$escapeHtml("" + '/build/result/viewPreviousBuildResults.action?buildKey=' + opt_data.keyToNavigate + '&buildNumber=' + opt_data.currentBuildNumber + '&returnUrl=' + opt_data.returnUrl) + '" title="' + soy.$$escapeHtml("Previous build result") + '" accesskey="' + soy.$$escapeHtml("P") + '"><span>' + soy.$$escapeHtml("Previous") + '</span></a>' : '<span class="previous"><span></span></span>', '<ol>');
    var buildList43 = opt_data.builds;
    var buildListLen43 = buildList43.length;
    for (var buildIndex43 = 0; buildIndex43 < buildListLen43; buildIndex43++) {
      var buildData43 = buildList43[buildIndex43];
      bamboo.widget.planStatusHistory.item(soy.$$augmentData(buildData43, {href: "" + (opt_data.currentBuildNumber ? '/build/result/gotoBuildResult.action?buildKey=' + opt_data.keyToNavigate + '&buildNumber=' + buildData43.buildNumber + '&returnUrl=' + opt_data.returnUrl : '/browse/' + buildData43.planKey + '-' + buildData43.buildNumber), isCurrent: opt_data.currentBuildNumber && opt_data.currentBuildNumber == buildData43.buildNumber, isSequenceBreak: ! (buildIndex43 == 0) && opt_data.builds[buildIndex43 - 1].buildNumber + 1 != buildData43.buildNumber && opt_data.builds[buildIndex43 - 1].active != buildData43.active}), output);
    }
    output.append('</ol>', (opt_data.currentBuildNumber && opt_data.currentBuildNumber < opt_data.lastBuildNumber) ? '<a class="next" href="' + soy.$$escapeHtml("" + '/build/result/viewNextBuildResults.action?buildKey=' + opt_data.keyToNavigate + '&buildNumber=' + opt_data.currentBuildNumber + '&returnUrl=' + opt_data.returnUrl) + '" title="' + soy.$$escapeHtml("Next build result") + '" accesskey="' + soy.$$escapeHtml("N") + '"><span>' + soy.$$escapeHtml("Next") + '</span></a>' : '<span class="next"><span></span></span>');
  } else {
    output.append('<p>', soy.$$escapeHtml("Status history data not available"), '</p>');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.widget.planStatusHistory.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li class="', soy.$$escapeHtml(opt_data.buildStatus), (opt_data.isCurrent) ? ' current' : '', (opt_data.isSequenceBreak) ? ' sequence-break' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('" data-build-number="', soy.$$escapeHtml(opt_data.buildNumber), '" data-trigger="', soy.$$escapeHtml(opt_data.trigger), '" data-failed-test-case-count="', soy.$$escapeHtml(opt_data.failedTestCaseCount), '" data-rebuild="', soy.$$escapeHtml(opt_data.rebuild), '" data-once-off="', soy.$$escapeHtml(opt_data.onceOff), '" data-custom-build="', soy.$$escapeHtml(opt_data.customBuild), '" ><a href="', soy.$$escapeHtml(opt_data.href), '">');
  widget.icons.icon({type: opt_data.buildStatus, text: '#' + opt_data.buildNumber + ' (' + opt_data.buildStatusDescription + ')', showTitle: true}, output);
  output.append('</a></li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/nav/nav.soy' */
// This file was automatically generated from nav.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.nav == 'undefined') { bamboo.widget.nav = {}; }


bamboo.widget.nav.horizontal = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<nav class="aui-navgroup aui-navgroup-horizontal"><div class="aui-navgroup-inner"><div class="aui-navgroup-primary"><ul class="aui-nav">');
  var itemList4 = opt_data.items;
  var itemListLen4 = itemList4.length;
  for (var itemIndex4 = 0; itemIndex4 < itemListLen4; itemIndex4++) {
    var itemData4 = itemList4[itemIndex4];
    bamboo.widget.nav.navItem(itemData4, output);
  }
  output.append('</ul></div></div></nav>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.nav.navItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '');
  if (opt_data.isSelected) {
    output.append(' class="aui-nav-selected');
    aui.renderExtraClasses(opt_data, output);
    output.append('"');
  } else {
    aui.renderExtraClasses(soy.$$augmentData(opt_data, {isFullAttr: true}), output);
  }
  aui.renderExtraAttributes(opt_data, output);
  output.append('><a', (opt_data.href) ? ' href="' + soy.$$escapeHtml(opt_data.href) + '"' : '', (opt_data.linkId) ? ' id="' + soy.$$escapeHtml(opt_data.linkId) + '"' : '', '>', opt_data.content);
  if (opt_data.badge && opt_data.badge.text) {
    output.append(' ');
    aui.badges.badge(opt_data.badge, output);
  }
  output.append('</a></li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/nav/tabs.soy' */
// This file was automatically generated from tabs.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.nav == 'undefined') { bamboo.widget.nav = {}; }


bamboo.widget.nav.tabs = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<nav class="aui-tabs horizontal-tabs "><ul class="tabs-menu">');
  var itemList4 = opt_data.items;
  var itemListLen4 = itemList4.length;
  for (var itemIndex4 = 0; itemIndex4 < itemListLen4; itemIndex4++) {
    var itemData4 = itemList4[itemIndex4];
    bamboo.widget.nav.tab(itemData4, output);
  }
  output.append('</ul></nav>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.nav.tab = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li ', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="menu-item');
  if (opt_data.isSelected) {
    output.append(' active-tab');
    aui.renderExtraClasses(opt_data, output);
    output.append('"');
  } else {
    output.append(' ');
    aui.renderExtraClasses(soy.$$augmentData(opt_data, {isFullAttr: true}), output);
    output.append('"');
  }
  aui.renderExtraAttributes(opt_data, output);
  output.append('><a', (opt_data.href) ? ' href="' + soy.$$escapeHtml(opt_data.href) + '"' : '', (opt_data.linkId) ? ' id="' + soy.$$escapeHtml(opt_data.linkId) + '"' : '', '>', opt_data.content, '</a></li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/nav/bread-crumb.soy' */
// This file was automatically generated from bread-crumb.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.nav == 'undefined') { bamboo.widget.nav = {}; }
if (typeof bamboo.widget.nav.breadcrumb == 'undefined') { bamboo.widget.nav.breadcrumb = {}; }


bamboo.widget.nav.breadcrumb.crumbContainer = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ol ', (opt_data.id) ? 'id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-nav aui-nav-breadcrumbs">');
  if (opt_data.parentCrumbs && opt_data.parentCrumbs.length > 0) {
    var crumbList12 = opt_data.parentCrumbs;
    var crumbListLen12 = crumbList12.length;
    for (var crumbIndex12 = 0; crumbIndex12 < crumbListLen12; crumbIndex12++) {
      var crumbData12 = crumbList12[crumbIndex12];
      bamboo.widget.nav.breadcrumb.showParentCrumb(crumbData12, output);
    }
  }
  if (opt_data.currentCrumb) {
    bamboo.widget.nav.breadcrumb.showCurrentCrumb(opt_data.currentCrumb, output);
  }
  output.append('</ol>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.nav.breadcrumb.showParentCrumb = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li');
  aui.renderExtraClasses(soy.$$augmentData(opt_data, {isFullAttr: true}), output);
  output.append('><a href="', soy.$$escapeHtml(opt_data.link), '"', (opt_data.id) ? ' id="breadcrumb:' + soy.$$escapeHtml(opt_data.id) + '"' : '', '>', soy.$$escapeHtml(opt_data.text), '</a></li>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.nav.breadcrumb.showCurrentCrumb = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li class="aui-nav-selected');
  aui.renderExtraClasses(opt_data, output);
  output.append('">', soy.$$escapeHtml(opt_data.text), '</li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/help/help.soy' */
// This file was automatically generated from help.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.help == 'undefined') { bamboo.widget.help = {}; }


bamboo.widget.help.panel = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<', soy.$$escapeHtml(opt_data.link ? 'a' : 'div'), ' class="help-panel', (opt_data.type) ? ' help-panel-' + soy.$$escapeHtml(opt_data.type) : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.link) ? ' href="' + soy.$$escapeHtml(opt_data.link) + '"' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><strong class="help-panel-title">', soy.$$escapeHtml(opt_data.title), '</strong><div class="help-panel-content">', opt_data.content, '</div></', soy.$$escapeHtml(opt_data.link ? 'a' : 'div'), '>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/time/time.soy' */
// This file was automatically generated from time.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.time == 'undefined') { bamboo.widget.time = {}; }


bamboo.widget.time.timestamp = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  bamboo.widget.time.time(soy.$$augmentData(opt_data, {content: opt_data.format ? BAMBOO.Time.format(opt_data.datetime, opt_data.format) : BAMBOO.Time.format(opt_data.datetime, 'short')}), output);
  return opt_sb ? '' : output.toString();
};


bamboo.widget.time.relative = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  bamboo.widget.time.time(soy.$$augmentData(opt_data, {content: opt_data.format ? BAMBOO.Time.format(opt_data.datetime, opt_data.format + 'Age') : BAMBOO.Time.format(opt_data.datetime, 'shortAge')}), output);
  return opt_sb ? '' : output.toString();
};


bamboo.widget.time.time = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<time datetime="', soy.$$escapeHtml(BAMBOO.Time.format(opt_data.datetime, 'timestamp')), '" title="', soy.$$escapeHtml(BAMBOO.Time.format(opt_data.datetime, 'full')), '"');
  aui.renderExtraClasses(soy.$$augmentData(opt_data, {isFullAttr: true}), output);
  aui.renderExtraAttributes(opt_data, output);
  output.append('>', opt_data.content, '</time>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:server-soy-templates', location = '/widget/tooltip/tooltip.soy' */
// This file was automatically generated from tooltip.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.tooltip == 'undefined') { bamboo.widget.tooltip = {}; }


bamboo.widget.tooltip.tooltip = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<script type="text/javascript">require([\'widget/tooltip\'], function(Tooltip){return new Tooltip(\'', soy.$$escapeHtml(opt_data.trigger), '\', {', (opt_data.url) ? 'url: \'' + soy.$$escapeJsString(opt_data.url) + '\'' : 'content: \'' + soy.$$escapeJsString(opt_data.content) + '\'', (opt_data.addMarker) ? ',addMarker: ' + soy.$$escapeHtml(opt_data.addMarker) : '', (opt_data.showDelay) ? ',showDelay: ' + soy.$$escapeHtml(opt_data.showDelay) : '', (opt_data.width) ? ',width: ' + soy.$$escapeHtml(opt_data.width) : '', '});});<\/script>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.deployments:deployments-main', location = '/layout/deployment/deployment.soy' */
// This file was automatically generated from deployment.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.layout == 'undefined') { bamboo.layout = {}; }


bamboo.layout.deployment = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param3 = new soy.StringBuilder();
  if (opt_data.parentCrumbs) {
    bamboo.widget.nav.breadcrumb.crumbContainer(opt_data, param3);
  }
  param3.append((opt_data.headerText) ? '<h1>' + soy.$$escapeHtml(opt_data.headerText) + '</h1>' : (opt_data.headerContent) ? opt_data.headerContent : '');
  bamboo.layout.base(soy.$$augmentData(opt_data, {headerMainContent: param3.toString(), headerExtraContent: ((opt_data.deploymentProject && opt_data.deploymentProject.description) ? '<div class="deployment-project-description">' + soy.$$escapeHtml(opt_data.deploymentProject.description) + '</div>' : '') + ((opt_data.headerExtraContent) ? opt_data.headerExtraContent : '')}), output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.deployments:deployments-main', location = '/layout/deployment/deployment.js' */
/* Don't put anything in here unless you have permission from JASON.
 Please use specific js files for each individual page and/or feature */

(function (BAMBOO)
{
    BAMBOO.DEPLOYMENT = {};

}(window.BAMBOO = (window.BAMBOO || {})));

AJS.$(function(){
    AJS.$("span.branch-lozenge, span.icon-deploy-success, span.icon-deploy-fail").tooltip({gravity: 'n'});
});
/* module-key = 'bamboo.deployments:deployments-main', location = '/widget/aui-override.soy' */
// This file was automatically generated from aui-override.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.override == 'undefined') { widget.override = {}; }
if (typeof widget.override.aui == 'undefined') { widget.override.aui = {}; }


widget.override.aui.badgeButton = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.href) {
    output.append('<a href="', soy.$$escapeHtml(opt_data.href), '"');
    widget.override.aui.badgeButtonAttributes(opt_data, output);
    output.append('>');
    widget.override.aui.badgeButtonIcon(opt_data, output);
    output.append(soy.$$escapeHtml(opt_data.text), '</a>');
  } else if (opt_data.tagName == 'input') {
    output.append('<input type="', soy.$$escapeHtml(opt_data.inputType ? opt_data.inputType : 'button'), '" ');
    widget.override.aui.badgeButtonAttributes(opt_data, output);
    output.append(' value="', soy.$$escapeHtml(opt_data.text), '" />');
  } else {
    output.append('<', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'button'));
    widget.override.aui.badgeButtonAttributes(opt_data, output);
    output.append('>');
    widget.override.aui.badgeButtonIcon(opt_data, output);
    output.append(soy.$$escapeHtml(opt_data.text), ' <span class="aui-badge">', soy.$$escapeHtml(opt_data.badgeText), '</span></', soy.$$escapeHtml(opt_data.tagName ? opt_data.tagName : 'button'), '>');
  }
  return opt_sb ? '' : output.toString();
};


widget.override.aui.badgeButtonAttributes = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="aui-button', (opt_data.dropdown2Target) ? ' aui-dropdown2-trigger' : '');
  switch (opt_data.type) {
    case 'primary':
      output.append(' aui-button-primary');
      break;
    case 'link':
      output.append(' aui-button-link');
      break;
    case 'subtle':
      output.append(' aui-button-subtle');
      break;
  }
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append((opt_data.isPressed) ? ' aria-pressed="' + soy.$$escapeHtml(opt_data.isPressed) + '"' : '', (opt_data.isDisabled) ? ' aria-disabled="' + soy.$$escapeHtml(opt_data.isDisabled) + '"' + ((opt_data.isDisabled == true) ? (opt_data.tagName == 'button' || opt_data.tagName == 'input') ? ' disabled="disabled" ' : '' : '') : '', (opt_data.dropdown2Target) ? ' aria-owns="' + soy.$$escapeHtml(opt_data.dropdown2Target) + '" aria-haspopup="true"' : '', (opt_data.tagName == 'a') ? ' tabindex="0"' : '');
  return opt_sb ? '' : output.toString();
};


widget.override.aui.badgeButtonIcon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.iconType) ? '<span class="' + ((opt_data.iconType == 'aui') ? 'aui-icon' : '') + ((opt_data.iconClass) ? ' ' + soy.$$escapeHtml(opt_data.iconClass) : '') + '">' + ((opt_data.iconText) ? soy.$$escapeHtml(opt_data.iconText) : '') + '</span>' : '');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.deployments:deployments-main', location = '/widget/deployment/version.soy' */
// This file was automatically generated from version.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.deployment == 'undefined') { bamboo.widget.deployment = {}; }
if (typeof bamboo.widget.deployment.version == 'undefined') { bamboo.widget.deployment.version = {}; }


bamboo.widget.deployment.version.versionInfo = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.version) {
    if (opt_data.showVersionStatus && opt_data.version.versionStatus) {
      output.append('<div class="release-info">');
      bamboo.widget.deployment.version.name(opt_data.version, output);
      output.append('</div>');
    } else {
      bamboo.widget.deployment.version.name(opt_data.version, output);
    }
    if (opt_data.showBranch) {
      output.append(' ');
      bamboo.widget.deployment.version.branch(opt_data.version, output);
    }
    if (opt_data.showVersionStatus && opt_data.version.versionStatus) {
      output.append(' ');
      widget.status.deploymentVersionStatusInfo({avatar: opt_data.version.versionStatus.gravatarUrl, userName: opt_data.version.versionStatus.userName, displayName: opt_data.version.versionStatus.displayName, deploymentVersionState: opt_data.version.versionStatus.versionState}, output);
    }
  }
  return opt_sb ? '' : output.toString();
};


bamboo.widget.deployment.version.name = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a class="release-name" href="', soy.$$escapeHtml(""), '/deploy/viewDeploymentVersion.action?versionId=', soy.$$escapeHtml(opt_data.id), '">', soy.$$escapeHtml(opt_data.name), '</a>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.deployment.version.branch = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="lozenge-newline">', (opt_data.label) ? '<span class="inline-label">' + soy.$$escapeHtml(opt_data.label) + '</span> ' : '', '<span class="lozenge branch-lozenge monospace" title="', soy.$$escapeHtml(opt_data.planBranchName), '"><span class="branch">');
  aui.icons.icon({icon: 'devtools-branch-small', useIconFont: true}, output);
  output.append('<span class="name">', soy.$$escapeHtml(opt_data.planBranchName), '</span></span></span></span>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.deployments:result-features', location = '/feature/deployment/result/deployment-result-details.soy' */
// This file was automatically generated from deployment-result-details.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.deployment == 'undefined') { bamboo.feature.deployment = {}; }
if (typeof bamboo.feature.deployment.result == 'undefined') { bamboo.feature.deployment.result = {}; }


bamboo.feature.deployment.result.finishedTimeOrDuration = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var resultUrl__soy3 = new soy.StringBuilder(soy.$$escapeHtml("" + '/deploy/viewDeploymentResult.action?deploymentResultId=' + opt_data.id));
  resultUrl__soy3 = resultUrl__soy3.toString();
  if (opt_data.finishedDate) {
    bamboo.widget.time.timestamp({datetime: opt_data.finishedDate, format: 'full'}, output);
  } else if (opt_data.lifeCycleState == 'PENDING' && opt_data.startedDate) {
    output.append((opt_data.hideLink) ? AJS.format("Waiting for {0}",BAMBOO.Time.elapsedTime(opt_data.startedDate)) : AJS.format("\x3ca href\x3d\x22{0}\x22\x3eWaiting for\x3c/a\x3e {1}",resultUrl__soy3,BAMBOO.Time.elapsedTime(opt_data.startedDate)));
  } else if (opt_data.lifeCycleState == 'QUEUED' && opt_data.queuedDate) {
    output.append((opt_data.hideLink) ? AJS.format("Waiting for {0}",BAMBOO.Time.elapsedTime(opt_data.queuedDate)) : AJS.format("\x3ca href\x3d\x22{0}\x22\x3eWaiting for\x3c/a\x3e {1}",resultUrl__soy3,BAMBOO.Time.elapsedTime(opt_data.queuedDate)));
  } else if (opt_data.lifeCycleState == 'IN_PROGRESS' && opt_data.executedDate) {
    output.append((opt_data.hideLink) ? AJS.format("Deploying for {0}",BAMBOO.Time.elapsedTime(opt_data.executedDate)) : AJS.format("\x3ca href\x3d\x22{0}\x22\x3eDeploying for\x3c/a\x3e {1}",resultUrl__soy3,BAMBOO.Time.elapsedTime(opt_data.executedDate)));
  } else {
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.deployment.result.environmentState = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.deploymentResult.lifeCycleState == 'PENDING' || opt_data.deploymentResult.lifeCycleState == 'QUEUED') {
    widget.icons.icon({type: 'pending'}, output);
  } else if (opt_data.deploymentResult.lifeCycleState == 'IN_PROGRESS') {
    widget.icons.icon({type: 'building'}, output);
  } else if (opt_data.deploymentResult.lifeCycleState == 'FINISHED') {
    if (opt_data.deploymentResult.deploymentState == 'FAILED') {
      widget.icons.icon({type: 'deploy-fail', text: (opt_data.isLatestResult) ? soy.$$escapeHtml("The last deployment on this environment failed. This environment is currently broken.") : soy.$$escapeHtml("Deploying the release on this environment failed."), showTitle: 'true'}, output);
    } else if (opt_data.deploymentResult.deploymentState == 'SUCCESS') {
      widget.icons.icon({type: 'deploy-success', text: (opt_data.isLatestResult) ? soy.$$escapeHtml("The last deployment on this environment was successful.") : soy.$$escapeHtml("Deploying the release on this environment was successful."), showTitle: 'true'}, output);
    } else {
      widget.icons.icon({type: 'deploy-unknown'}, output);
    }
  } else {
    widget.icons.icon({type: 'deploy-unknown'}, output);
  }
  bamboo.feature.deployment.result.detailsLink(opt_data, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.deployment.result.detailsLink = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.showDetailsLinkAlways || opt_data.deploymentResult.lifeCycleState == 'PENDING' || opt_data.deploymentResult.lifeCycleState == 'QUEUED' || opt_data.deploymentResult.lifeCycleState == 'IN_PROGRESS' || opt_data.deploymentResult.lifeCycleState == 'FINISHED' && opt_data.deploymentResult.deploymentState == 'FAILED') ? '<a class="result-details-link" href="' + soy.$$escapeHtml("" + '/deploy/viewDeploymentResult.action?deploymentResultId=' + opt_data.deploymentResult.id) + '" data-version-id="' + soy.$$escapeHtml(opt_data.deploymentResult.id) + '" data-version-name="' + soy.$$escapeHtml(opt_data.deploymentResult.deploymentVersionName) + '" >' + soy.$$escapeHtml("Logs") + '</a>' : '');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.deployment.result.nowAt = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var versionLink__soy85 = new soy.StringBuilder();
  bamboo.feature.deployment.result.version(soy.$$augmentData(opt_data.deploymentResult, {hideLozenge: true}), versionLink__soy85);
  versionLink__soy85 = versionLink__soy85.toString();
  var timestamp__soy88 = new soy.StringBuilder((opt_data.deploymentResult.finishedDate) ? 'Deployed ' : '');
  bamboo.feature.deployment.result.finishedTimeOrDuration(opt_data.deploymentResult, timestamp__soy88);
  timestamp__soy88 = timestamp__soy88.toString();
  output.append('<span id="', soy.$$escapeHtml('nowAtResult_' + opt_data.deploymentResult.id), '" class="environment-now-at">', AJS.format("now at {0}",versionLink__soy85), '</span>');
  bamboo.widget.tooltip.tooltip({trigger: '#nowAtResult_' + opt_data.deploymentResult.id, content: timestamp__soy88, showDelay: 200}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.deployment.result.version = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.deploymentVersion) {
    bamboo.widget.deployment.version.versionInfo({version: opt_data.deploymentVersion, showBranch: opt_data.showBranch, showVersionStatus: ! opt_data.hideLozenge}, output);
  } else {
    output.append('<span title="', soy.$$escapeHtml(AJS.format("Release {0} has been deleted",opt_data.deploymentVersionName)), '">', soy.$$escapeHtml(opt_data.deploymentVersionName), '</span>');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.deployment.result.versionStatusLozenge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.environmentStatus.deploymentResult) {
    if (opt_data.environmentStatus.latestResult) {
      widget.lozenges.auilozenge({colour: 'default', text: "REPLACED"}, output);
    } else {
      widget.status.deploymentResultStatusLozenge({lifeCycleState: opt_data.environmentStatus.deploymentResult.lifeCycleState, deploymentState: opt_data.environmentStatus.deploymentResult.deploymentState}, output);
    }
  } else {
    if (opt_data.environmentStatus.latestResult && opt_data.environmentStatus.latestResult.deploymentVersion && opt_data.environmentStatus.latestResult.deploymentVersion.creationDate - opt_data.deploymentVersion.creationDate > 0) {
      widget.lozenges.auilozenge({colour: 'default', text: "SKIPPED"}, output);
    } else {
      output.append((opt_data.neverDeployedText) ? soy.$$escapeHtml(opt_data.neverDeployedText) : soy.$$escapeHtml("Never deployed"));
    }
  }
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.deployments:related-deployments', location = '/feature/deployment/build/related-deployment-list.soy' */
// This file was automatically generated from related-deployment-list.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.deployment == 'undefined') { bamboo.feature.deployment = {}; }
if (typeof bamboo.feature.deployment.build == 'undefined') { bamboo.feature.deployment.build = {}; }


bamboo.feature.deployment.build.relatedDeployments = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div id="', soy.$$escapeHtml(opt_data.id), '" class="dashboard-project">');
  if (opt_data.projectsWithEnvironmentStatuses && opt_data.projectsWithEnvironmentStatuses.length > 0) {
    var projectWithEnvironmentStatusesList8 = opt_data.projectsWithEnvironmentStatuses;
    var projectWithEnvironmentStatusesListLen8 = projectWithEnvironmentStatusesList8.length;
    for (var projectWithEnvironmentStatusesIndex8 = 0; projectWithEnvironmentStatusesIndex8 < projectWithEnvironmentStatusesListLen8; projectWithEnvironmentStatusesIndex8++) {
      var projectWithEnvironmentStatusesData8 = projectWithEnvironmentStatusesList8[projectWithEnvironmentStatusesIndex8];
      output.append('<table class="aui"><colgroup><col width="18%"/><col width="20%"/><col width="15%"/><col width="10%"/><col width="15%"/><col width="8%"/><col width="15%"/><col width="70px"/></colgroup><thead><tr><th>', soy.$$escapeHtml("Deployment project"), '</th><th>', soy.$$escapeHtml("Environment"), '</th><th>', soy.$$escapeHtml("Release"), '</th><th>', soy.$$escapeHtml("Release branch"), '</th><th>', soy.$$escapeHtml("Build result used"), '</th><th>', soy.$$escapeHtml("Result"), '</th><th>', soy.$$escapeHtml("Completed"), '</th><th>', soy.$$escapeHtml("Actions"), '</th></tr></thead><tbody>');
      if (projectWithEnvironmentStatusesData8.environmentStatuses && projectWithEnvironmentStatusesData8.environmentStatuses.length > 0) {
        var environmentStatusList28 = projectWithEnvironmentStatusesData8.environmentStatuses;
        var environmentStatusListLen28 = environmentStatusList28.length;
        for (var environmentStatusIndex28 = 0; environmentStatusIndex28 < environmentStatusListLen28; environmentStatusIndex28++) {
          var environmentStatusData28 = environmentStatusList28[environmentStatusIndex28];
          output.append('<tr class="', (environmentStatusIndex28 == 0) ? 'first' : '', ' ', (environmentStatusIndex28 == environmentStatusListLen28 - 1) ? 'last' : '', ' ', (environmentStatusData28.deploymentResult && environmentStatusData28.deploymentResult.lifeCycleState == 'FINISHED' && environmentStatusData28.deploymentResult.deploymentState == 'FAILED') ? 'error' : '', '"><td class="deployment">', (environmentStatusIndex28 == 0) ? '<a class="deployment-project-name" href="' + soy.$$escapeHtml("" + '/deploy/viewDeploymentProjectEnvironments.action?id=' + projectWithEnvironmentStatusesData8.deploymentProject.id) + '"' + ((projectWithEnvironmentStatusesData8.deploymentProject.description) ? 'title="' + soy.$$escapeHtml(projectWithEnvironmentStatusesData8.deploymentProject.description) + '"' : '') + '>' + soy.$$escapeHtml(projectWithEnvironmentStatusesData8.deploymentProject.name) + '</a>' : '', '</td>');
          bamboo.feature.deployment.build.environment(soy.$$augmentData(environmentStatusData28, {currentUrl: opt_data.currentUrl, relatedVersions: opt_data.relatedVersions}), output);
          output.append('</tr>');
        }
      } else {
        output.append('<tr class="first"><td class="deployment"><a class="deployment-project-name" href="', soy.$$escapeHtml("" + '/deploy/viewDeploymentProjectEnvironments.action?id=' + projectWithEnvironmentStatusesData8.deploymentProject.id), '">', soy.$$escapeHtml(projectWithEnvironmentStatusesData8.deploymentProject.name), '</a></td><td colspan="7" class="empty-text">', soy.$$escapeHtml("No environments found."), (projectWithEnvironmentStatusesData8.deploymentProject.operations.canEdit) ? ' ' + AJS.format("\x3ca href\x3d\x22{0}\x22\x3eCreate a new environment\x3c/a\x3e to start tracking your deployments.","" + '/deploy/config/createEnvironment.action?deploymentProjectId=' + projectWithEnvironmentStatusesData8.deploymentProject.id + '&returnUrl=' + opt_data.currentUrl) : '', '</td></tr>');
      }
      output.append('</tbody></table>');
    }
  } else {
    output.append('<p>', "\x3cp\x3eWith Bamboo deployments you can track your code from a JIRA issue, through testing in a build, all the way to deployment. Deployments allow you to: \x3cul\x3e\x3cli\x3eSnapshot your artifacts from any successful build into a release\x3c/li\x3e \x3cli\x3eDeploy, rollback and promote releases to environments\x3c/li\x3e \x3cli\x3eTrack what, when and who deployed releases to your environments\x3c/li\x3e \x3c/ul\x3e\x3c/p\x3e", '</p>');
  }
  output.append('</div>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.deployment.build.relatedBuilds = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.relatedPlanResults.length) {
    widget.buildresult.resultStatusAndLink({resultSummary: opt_data.relatedPlanResults[0]}, output);
    output.append((opt_data.relatedPlanResults.length > 1) ? ' ' + soy.$$escapeHtml(AJS.format("and {0} {0}",opt_data.relatedPlanResults.length - 1)) : '');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.deployment.build.environment = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<td><a href="', soy.$$escapeHtml("" + '/deploy/viewEnvironment.action?id=' + opt_data.environment.id), '">', soy.$$escapeHtml(opt_data.environment.name), '</a></td>');
  if (opt_data.deploymentResult) {
    output.append('<td>');
    bamboo.feature.deployment.result.version({deploymentVersion: opt_data.deploymentResult.deploymentVersion, deploymentVersionName: opt_data.deploymentResult.deploymentVersionName, subtle: true}, output);
    output.append('</td><td>');
    if (opt_data.deploymentResult.deploymentVersion) {
      widget.lozenges.branch(opt_data.deploymentResult.deploymentVersion, output);
    }
    output.append('</td><td>');
    var relatedVersionList109 = opt_data.relatedVersions;
    var relatedVersionListLen109 = relatedVersionList109.length;
    for (var relatedVersionIndex109 = 0; relatedVersionIndex109 < relatedVersionListLen109; relatedVersionIndex109++) {
      var relatedVersionData109 = relatedVersionList109[relatedVersionIndex109];
      if (relatedVersionData109.deploymentVersion.id == opt_data.deploymentResult.deploymentVersion.id) {
        bamboo.feature.deployment.build.relatedBuilds(relatedVersionData109, output);
      }
    }
    output.append('</td><td>');
    bamboo.feature.deployment.result.environmentState({deploymentResult: opt_data.deploymentResult, showDetailsLinkAlways: true, isLatestResult: true}, output);
    output.append('</td><td>');
    bamboo.feature.deployment.result.finishedTimeOrDuration(soy.$$augmentData(opt_data.deploymentResult, {hideLink: true}), output);
    output.append('</td>');
  } else {
    output.append('<td colspan="3">&nbsp;</td><td colspan="2" class="empty-text">', soy.$$escapeHtml("Never deployed"), '</td>');
  }
  output.append('<td>');
  if (opt_data.environment.operations.allowedToExecute) {
    if (opt_data.environment.operations.canExecute) {
      output.append('<a href="', soy.$$escapeHtml("" + '/deploy/selectVersionForExecute.action?environmentId=' + opt_data.environment.id + '&returnUrl=' + opt_data.currentUrl), '" title="', soy.$$escapeHtml("Deploy"), '">');
      widget.icons.icon({type: 'deploy', text: "Deploy"}, output);
      output.append('</a>');
    } else {
      widget.icons.icon({type: 'deploy-disabled', text: opt_data.environment.operations.cantExecuteReason, showTitle: true}, output);
    }
    output.append(' ');
  }
  if (opt_data.environment.operations.canEdit) {
    widget.icons.auiFontLink({iconType: 'edit', relativeUrl: '/deploy/config/configureDeploymentProject.action?id=' + opt_data.environment.deploymentProjectId + '&environmentId=' + opt_data.environment.id + '&returnUrl=' + opt_data.currentUrl, text: "Edit environment"}, output);
  }
  output.append('</td>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.deployment.build.relatedVersions = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.buildState == 'SUCCESS') {
    output.append('<div class="related-versions"><h2>', soy.$$escapeHtml("Included in deployment project"), '</h2>');
    var returnUrl__soy160 = '/browse/' + opt_data.planResultKey.key;
    var deploymentProjectWithEnvironmentStatusesList161 = opt_data.relatedDeployments;
    var deploymentProjectWithEnvironmentStatusesListLen161 = deploymentProjectWithEnvironmentStatusesList161.length;
    for (var deploymentProjectWithEnvironmentStatusesIndex161 = 0; deploymentProjectWithEnvironmentStatusesIndex161 < deploymentProjectWithEnvironmentStatusesListLen161; deploymentProjectWithEnvironmentStatusesIndex161++) {
      var deploymentProjectWithEnvironmentStatusesData161 = deploymentProjectWithEnvironmentStatusesList161[deploymentProjectWithEnvironmentStatusesIndex161];
      output.append('<div class="related-version">');
      var deploymentProject__soy163 = deploymentProjectWithEnvironmentStatusesData161.deploymentProject;
      var relatedVersion__soy164 = deploymentProjectWithEnvironmentStatusesData161.relatedVersion;
      var futureVersion__soy165 = deploymentProjectWithEnvironmentStatusesData161.futureVersion;
      var futureVersionResult__soy166 = deploymentProjectWithEnvironmentStatusesData161.futureVersionResult;
      output.append('<span class="project-name"><a href="', soy.$$escapeHtml("" + '/deploy/viewDeploymentProjectEnvironments.action?id=' + deploymentProject__soy163.id), '">', soy.$$escapeHtml(deploymentProject__soy163.name), '</a>', (relatedVersion__soy164) ? ' &rsaquo; ' + soy.$$escapeHtml("Release:") + ' <a href="' + soy.$$escapeHtml("" + '/deploy/viewDeploymentVersion.action?versionId=' + relatedVersion__soy164.id) + '">' + soy.$$escapeHtml(relatedVersion__soy164.name) + '</a>' : '', '</span>');
      if (relatedVersion__soy164) {
        if (deploymentProjectWithEnvironmentStatusesData161.environmentStatuses && deploymentProjectWithEnvironmentStatusesData161.environmentStatuses.length > 0) {
          output.append('<table class="aui"><thead><tr><th>', soy.$$escapeHtml("Environment"), '</th><th>', soy.$$escapeHtml("Status"), '</th><th></th><th>', soy.$$escapeHtml("Actions"), '</th></tr></thead><tbody>');
          var environmentStatusList193 = deploymentProjectWithEnvironmentStatusesData161.environmentStatuses;
          var environmentStatusListLen193 = environmentStatusList193.length;
          for (var environmentStatusIndex193 = 0; environmentStatusIndex193 < environmentStatusListLen193; environmentStatusIndex193++) {
            var environmentStatusData193 = environmentStatusList193[environmentStatusIndex193];
            var environment__soy194 = environmentStatusData193.environment;
            var deploymentResult__soy195 = environmentStatusData193.deploymentResult;
            output.append('<tr><td><a href="', soy.$$escapeHtml("" + '/deploy/viewEnvironment.action?id=' + environment__soy194.id), '">', soy.$$escapeHtml(environment__soy194.name), '</a></td><td>');
            bamboo.feature.deployment.result.versionStatusLozenge({environmentStatus: environmentStatusData193, deploymentVersion: relatedVersion__soy164, neverDeployedText: "not deployed yet"}, output);
            if (environmentStatusData193.deploymentResult && ! environmentStatusData193.latestResult) {
              bamboo.feature.deployment.result.detailsLink({deploymentResult: environmentStatusData193.deploymentResult}, output);
            }
            output.append('</td><td>');
            if (environmentStatusData193.latestResult) {
              bamboo.feature.deployment.result.nowAt({deploymentResult: environmentStatusData193.latestResult}, output);
            }
            output.append('</td><td class="operations">');
            if (environmentStatusData193.environment.operations.allowedToExecute && environmentStatusData193.environment.operations.canExecute) {
              if (! environmentStatusData193.deploymentResult && ! environmentStatusData193.latestResult || environmentStatusData193.deploymentResult && ! environmentStatusData193.latestResult && environmentStatusData193.deploymentResult.deploymentState == 'FAILED' || environmentStatusData193.latestResult && ! environmentStatusData193.latestResult.deploymentVersion || environmentStatusData193.latestResult && environmentStatusData193.latestResult.deploymentVersion.creationDate - relatedVersion__soy164.creationDate < 0) {
                output.append('<a href="', soy.$$escapeHtml("" + '/deploy/selectVersionForExecute.action?environmentId=' + environment__soy194.id), (environmentStatusData193.deploymentResult.deploymentState == 'FAILED') ? '&amp;existingVersionOption=ROLLBACK&amp;rollback=true' : soy.$$escapeHtml('&versionId=' + relatedVersion__soy164.id), soy.$$escapeHtml('&returnUrl=' + returnUrl__soy160), '">');
                widget.icons.icon({type: 'deploy', text: "deploy now"}, output);
                output.append('</a>');
              }
            }
            output.append('</td></tr>');
          }
          output.append('</tbody></table>');
        } else {
          output.append('<p>', soy.$$escapeHtml("No environments found."), '</p>');
        }
      } else if (futureVersion__soy165) {
        output.append('<p>', soy.$$escapeHtml("No release with the artifacts of this build exists."), '<br/>', soy.$$escapeHtml("The next release containing these commits is release"), ' <a href="', soy.$$escapeHtml("" + '/deploy/viewDeploymentVersion.action?versionId=' + futureVersion__soy165.id), '">', soy.$$escapeHtml(futureVersion__soy165.name), '</a>');
        if (futureVersionResult__soy166) {
          output.append(' ', soy.$$escapeHtml("created from build"), ' ');
          widget.buildresult.resultStatusAndLink({resultSummary: futureVersionResult__soy166}, output);
        }
      } else {
        output.append('<p>', soy.$$escapeHtml("No release with the artifacts of this build exists yet."), '</p>');
        if (deploymentProject__soy163.operations.allowedToCreateVersion) {
          aui.buttons.button({tagName: 'a', text: "Create release", id: 'create-new-version-' + deploymentProject__soy163.id, extraAttributes: {'href': "" + '/deploy/createDeploymentVersion.action?deploymentProjectId=' + deploymentProject__soy163.id + '&planKey=' + opt_data.planResultKey.planKey + '&buildNumber=' + opt_data.planResultKey.buildNumber + '&returnUrl=' + returnUrl__soy160, 'title': "Create a new release version"}, extraClasses: 'brs-create-version-button'}, output);
        }
      }
      output.append('</div>');
    }
    output.append('</div>');
  }
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.deployments:related-plan', location = '/feature/deployment/build/related-plan.soy' */
// This file was automatically generated from related-plan.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.deployment == 'undefined') { bamboo.feature.deployment = {}; }
if (typeof bamboo.feature.deployment.build == 'undefined') { bamboo.feature.deployment.build = {}; }


bamboo.feature.deployment.build.showRelatedPlanDetails = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<dl class="details-list"><dt>', soy.$$escapeHtml("Source build plan"), '</dt><dd>');
  if (opt_data.relatedPlan) {
    widget.plan.renderPlanNameLink({plan: opt_data.relatedPlan}, output);
  } else {
    output.append(soy.$$escapeHtml("No plan is linked to this project, it has probably been deleted. Please update the project configuration before deploying a release."));
  }
  output.append('</dd>');
  if (opt_data.relatedPlan) {
    output.append('<dt class="artifacts">', soy.$$escapeHtml("Available artifacts"), '</dt><dd class="artifacts">');
    if (opt_data.deploymentProjectItems && opt_data.deploymentProjectItems.length) {
      var itemList20 = opt_data.deploymentProjectItems;
      var itemListLen20 = itemList20.length;
      for (var itemIndex20 = 0; itemIndex20 < itemListLen20; itemIndex20++) {
        var itemData20 = itemList20[itemIndex20];
        output.append(soy.$$escapeHtml(itemData20.name), (! (itemIndex20 == itemListLen20 - 1) && opt_data.deploymentProjectItems.length > 1) ? ', ' : '');
      }
    } else {
      var emptyText__soy27 = new soy.StringBuilder(AJS.format("No \x3cstrong\x3eshared\x3c/strong\x3e artifacts found for related plan. Please \x3ca href\x3d\x22{0}\x22\x3econfigure the build plan\x3c/a\x3e to publish shared artifacts.","" + '/browse/' + opt_data.relatedPlan.planKey + '/config'));
      emptyText__soy27 = emptyText__soy27.toString();
      aui.message.warning({content: emptyText__soy27}, output);
    }
    output.append('</dd>');
  }
  output.append('</dl>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:widget-autocomplete-static', location = '/widget/autocomplete/autocomplete-static.js' */
define('widget/autocomplete-static', [
    'jquery',
    'underscore',
    'widget/autocomplete'
], function(
    $,
    _,
    Autocomplete
) {

    'use strict';

    var AutocompleteStatic = Autocomplete.extend({

        initialize: function(options) {
            var settings = $.extend({
                data: [],
                query: function(query) {
                    var pageSize = options.pageSize || 10;
                    var results = _.filter(this.data, function(e) {
                        return (query.text === '' ||
                            e.text.toUpperCase().indexOf(
                                query.term.toUpperCase()
                            ) >= 0
                        );
                    });

                    query.callback({
                        results: results.slice(Math.max(query.page - 1, 0) * pageSize, query.page * pageSize),
                        more: results.length >= query.page * pageSize
                    });

                    results = null;
                    pageSize = null;
                }
            }, options || {});

            if (_.isFunction(this.onFormatSelection)) {
                settings.formatSelection = _.bind(this.onFormatSelection, this);
            }

            if (_.isFunction(this.onFormatResult)) {
                settings.formatResult = _.bind(this.onFormatResult, this);
            }

            Autocomplete.prototype.initialize.apply(
                this, [settings]
            );
        }

    });

    return AutocompleteStatic;
});

/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/server-autocomplete.soy' */
// This file was automatically generated from server-autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.plugins == 'undefined') { bamboo.plugins = {}; }
if (typeof bamboo.plugins.stash == 'undefined') { bamboo.plugins.stash = {}; }
if (typeof bamboo.plugins.stash.server == 'undefined') { bamboo.plugins.stash.server = {}; }
if (typeof bamboo.plugins.stash.server.autocomplete == 'undefined') { bamboo.plugins.stash.server.autocomplete = {}; }


bamboo.plugins.stash.server.autocomplete.row = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(soy.$$escapeHtml(opt_data.item.name));
  return opt_sb ? '' : output.toString();
};


bamboo.plugins.stash.server.autocomplete.serverEmpty = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div id="stash-server-empty">');
  aui.message.info({titleContent: "Stash application link required", content: ((opt_data.appLinkRemoved) ? '<p>' + ((opt_data.hasGlobalAdminPermission) ? soy.$$escapeHtml("Your application link to this Stash server has been removed. You will need to link it again to be able to use the available repositories and branches.") : soy.$$escapeHtml("Your application link to this Stash server has been removed. Please contact your Bamboo administrator to link it again to use the available repositories and branches.")) + '</p>' : '<p>' + ((opt_data.hasGlobalAdminPermission) ? soy.$$escapeHtml("On first use, Bamboo needs to establish an application link to Stash. It will then be able to display all available repositories and branches. This has to be done only once per Stash server.") : soy.$$escapeHtml("On first use, Bamboo needs to establish an application link to Stash. It will then be able to display all available repositories and branches. Please contact your Bamboo administrator to establish a link to Stash.")) + '</p>') + ((opt_data.hasGlobalAdminPermission) ? '<button class="aui-button" type="button" id="start-create-applink" onclick="window.open(\'' + soy.$$escapeHtml("") + '/plugins/servlet/applinks/listApplicationLinks\')" >' + soy.$$escapeHtml("Link Bamboo to Stash") + '</button>' : '')}, output);
  output.append('</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/branch-autocomplete.soy' */
// This file was automatically generated from branch-autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.plugins == 'undefined') { bamboo.plugins = {}; }
if (typeof bamboo.plugins.stash == 'undefined') { bamboo.plugins.stash = {}; }
if (typeof bamboo.plugins.stash.branch == 'undefined') { bamboo.plugins.stash.branch = {}; }
if (typeof bamboo.plugins.stash.branch.autocomplete == 'undefined') { bamboo.plugins.stash.branch.autocomplete = {}; }


bamboo.plugins.stash.branch.autocomplete.row = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.icons.icon({icon: 'devtools-branch', useIconFont: true}, output);
  output.append(' ', soy.$$escapeHtml(opt_data.item.displayId));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/repository-autocomplete.soy' */
// This file was automatically generated from repository-autocomplete.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.plugins == 'undefined') { bamboo.plugins = {}; }
if (typeof bamboo.plugins.stash == 'undefined') { bamboo.plugins.stash = {}; }
if (typeof bamboo.plugins.stash.repository == 'undefined') { bamboo.plugins.stash.repository = {}; }
if (typeof bamboo.plugins.stash.repository.autocomplete == 'undefined') { bamboo.plugins.stash.repository.autocomplete = {}; }


bamboo.plugins.stash.repository.autocomplete.row = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(soy.$$escapeHtml(opt_data.item.project.name), ' / ', soy.$$escapeHtml(opt_data.item.name));
  return opt_sb ? '' : output.toString();
};


bamboo.plugins.stash.repository.autocomplete.oauthError = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.info({titleContent: soy.$$escapeHtml(AJS.format("{0} - approval required",opt_data.instanceName)), content: '<p><p>' + soy.$$escapeHtml("Bamboo requires your approval before it can display repositories and branches, and automatically set up authentication.") + '</p><br/><a class="oauth-approve" href="' + soy.$$escapeHtml(opt_data.redirectUrl) + '" target="_blank">' + soy.$$escapeHtml("Login \x26 approve") + '</a></p>'}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.plugins.stash.repository.autocomplete.unauthorizedError = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param20 = new soy.StringBuilder('<p>');
  switch (opt_data.requestStatus) {
    case 401:
      param20.append(soy.$$escapeHtml("You don\x27t have permission to see this repository. Bamboo can still access this repository at build time, but simply can\x27t show you any details. Bamboo will continue to work without problems."));
      break;
    case 404:
      param20.append(soy.$$escapeHtml("Your repository was renamed or deleted. This will make it impossible for Bamboo to work with this repository. Please adjust your configuration as soon as possible."));
      break;
  }
  param20.append('</p>');
  aui.message.error({titleContent: "Repository could not be found", content: param20.toString()}, output);
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/repository-form.js' */
define("plugin-stash/repository-form",["jquery","underscore","brace","util/events","util/elements"],function(f,a,c,b,e){var d=c.View.extend({mixins:[b.EventBusMixin,e],elements:{serverKey:'input[name="repository.stash.server"]',projectKey:'input[name="repository.stash.projectKey"]',repositoryUrl:'input[name="repository.stash.repositoryUrl"]',repositorySlug:'input[name="repository.stash.repositorySlug"]'},initialize:function(g){this.params=g.params||{};if(g.elements){this.elements=g.elements}this.$repositoryDisplayName=f("#repository-display-name");this.$repositoryAccessPoint=f("#repository-access-option");this.onEvent("unbind",this.onUnbind);this.onEvent("repository:selector:change",a.bind(function(h,j,i){this.updateWebRepository(i);if(i===this.params.namespace&&j==="NEW"){this.triggerEvent("stash:server:init")}},this));this.onEvent("stash:repository:update",this.onRepositoryUpdate);this.onEvent("stash:repository:init",a.bind(function(h,i){this.onRepositoryUpdate(h,i,true)},this));this.onEvent("stash:server:update",this.onServerUpdate);this.onEvent("stash:server:error:empty",this.onServerEmpty);this.onEvent("stash:server:error:permissions",this.onServerPermissions);this.onEvent("stash:errors:show",this.onShowFieldErrors);this.onEvent("stash:errors:clear",this.onClearFieldErrors);this.triggerEvent("stash:form:config",this.getConfig())},onUnbind:function(){this.undelegateEvents();this.clearElementsCache();this.$el.removeData().unbind();this.offEventNamespace("repository");this.offEventNamespace("stash")},onServerUpdate:function(g,h){if(h&&h.id&&h.id!==this.getElement("serverKey").val()){this.getElement("serverKey").val(h.id);this.getElement("projectKey").val("");this.getElement("repositoryUrl").val("");this.getElement("repositorySlug").val("")}this.triggerEvent("stash:form:config",this.getConfig());this.triggerEvent("stash:server:change",h)},onRepositoryUpdate:function(g,h,i){if(h&&h.id){this.getElement("projectKey").val(h.id?h.project.key:"");this.getElement("repositoryUrl").val(h.id?h.sshCloneUrl:"");this.getElement("repositorySlug").val(h.id?h.slug:"")}this.triggerEvent("stash:form:config",this.getConfig());this.triggerEvent("stash:repository:change",h,!!i)},onServerEmpty:function(g,h){if(a.isUndefined(h)){h=true}this.toggleContainer(this.$repositoryDisplayName,!h)},onServerPermissions:function(g,h){if(a.isUndefined(h)){h=true}this.toggleContainer(this.$repositoryAccessPoint,!h)},onClearFieldErrors:function(){this.$el.find(".error").remove()},onShowFieldErrors:function(g,h,i){if(a.isString(h)){h=this.getElement(h)}h.parent().find(".error").remove();BAMBOO.addFieldErrors(h.closest("form"),h.attr("name"),i,true)},updateWebRepository:function(g){var h=this.$el.parents("form:first");if(h.length){var i=h.find('input[name="repositoryType"]');if(i.length&&g!==this.params.namespace){i.val("")}else{if(+h.find('input[name="repositoryId"]').val()===0||i.val()!==g){h.find("#selectedWebRepositoryViewer").val(this.params.viewer).change()}}}},getConfig:function(){return{serverKey:this.getElement("serverKey").val(),projectKey:this.getElement("projectKey").val(),repositorySlug:this.getElement("repositorySlug").val(),repositoryUrl:this.getElement("repositoryUrl").val()}}});return d});
/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/branch-autocomplete.js' */
define("plugin-stash/branch-autocomplete",["jquery","underscore","widget/autocomplete-ajax","util/events","util/elements"],function(f,b,a,d,e){var c=a.extend({mixins:[d.EventBusMixin,e],initialize:function(g){this.params=f.extend({url:AJS.contextPath()+"/rest/stash/latest/projects/repositories/branches",urlSingle:AJS.contextPath()+"/rest/stash/latest/projects/repositories/branch",urlDefault:AJS.contextPath()+"/rest/stash/latest/projects/repositories/branches/default"},g.params||{});this.query=f.extend({limit:10},g.query||{});var i=b.bind(function(k,m,j){var l=f.extend({start:Math.max((m-1),0),query:k},this.query);if(!j&&(m-1)>0&&this.data.nextPage){l.start=this.data.nextPage}return l},this);var h={minimumInputLength:0,ajax:{url:this.params.url,dataType:"json",data:i,params:{error:f.noop},results:b.bind(function(k,j){return this.processData({results:k.values,nextPage:k.nextPageStart||0,more:!k.lastPage})},this)},id:function(j){return j.displayId}};this.onEvent("unbind",this.onUnbind);this.onEvent("stash:repository:change",this.onRepositoryChange);this.onEvent("stash:server:error:empty",this.onServerEmpty);this.onEvent("stash:server:change",this.onServerChange);this.onEvent("stash:form:config",this.onFormConfig);this.$fieldGroup=this.$el.parents(".field-group:first");a.prototype.initialize.apply(this,[f.extend(h,this.params)]);this.disable()},onUnbind:function(){this.undelegateEvents();this.$el.removeData().unbind();this.offEventNamespace("stash");f(window).off("applinks.auth.completion")},onFormConfig:function(g,h){this.config=h},onServerEmpty:function(g,h){if(b.isUndefined(h)){h=true}else{if(h){this.clearValue().$el.val("")}}this.toggleContainer(this.$fieldGroup,!h)},onServerChange:function(g,h){if(h.id){this.query.serverKey=h.id}this.clearQueryCache().clearValue().disable().toggleContainer(this.$fieldGroup.parent(),false)},onRepositoryChange:function(g,h,k){this.$fieldGroup.show();this.$fieldGroup.find(".field-value").show();this.$fieldGroup.find(".aui-message").remove();this.clearQueryCache().disable();if(h&&h.id){this.query.projectKey=h.project.key;this.query.repositorySlug=h.slug}this.query=b.omit(b.defaults(this.query,this.config),"branch");if(k!==true){this.$el.val("")}if(this.query.projectKey&&this.query.repositorySlug&&this.query.serverKey){var i=this.$el.val();var j=b.bind(function(l){this.triggerEvent("stash:branch:change",l);this.$el.auiSelect2("data",l);this.removeLoadingIcon().enable()},this);this.toggleContainer(this.$fieldGroup.parent(),true).promise().done(b.bind(function(){this.addLoadingIcon()},this));if(!i.length){this.getRemoteData(this.params.urlDefault,{dataType:this.settings.ajax.dataType,data:this.settings.ajax.data("",1,false)}).done(j)}else{this.config.branch=i;this.getRemoteData(this.params.urlSingle,{dataType:this.settings.ajax.dataType,data:this.config}).done(j)}}},onRegisterEvents:function(){this.$el.on("change",b.bind(function(g){console.log("asaasasas");if(g.val.length>0){this.triggerEvent("stash:errors:clear");this.triggerEvent("stash:branch:change",g.added)}},this))},onFormatResult:function(g){if(!b.isEmpty(g)){return bamboo.plugins.stash.branch.autocomplete.row({item:g})}},onFormatSelection:function(g){if(!b.isEmpty(g)){return bamboo.plugins.stash.branch.autocomplete.row({item:g})}},onRemoteError:function(h){console.log("On remote error");var i=[];this.$fieldGroup.show();this.$el.auiSelect2("close");this.removeLoadingIcon().clearValue().enable().$el.val("");if(h.responseText){var g=JSON.parse(h.responseText);if(g.authenticationInstanceName){this.$fieldGroup.find(".field-value").hide();this.$fieldGroup.append(bamboo.plugins.stash.repository.autocomplete.oauthError({instanceName:g.authenticationInstanceName,redirectUrl:g.authenticationRedirectUrl}));f(window).on("applinks.auth.completion",b.bind(function(j,l,k){if(k){f(window).off("applinks.auth.completion");this.triggerEvent("stash:repository:change")}},this));return}if(g.errors){i=g.errors}}if(!i.length){i.push("Failed to load data from Stash.")}this.triggerEvent("stash:errors:show",this.$el,i)},getRemoteData:function(g,h){this.$el.removeClass("ajax-completed");return f.ajax(g,b.defaults({type:"GET",dataType:"json"},h)).fail(b.bind(this.onRemoteError,this)).complete(b.bind(function(){this.$el.data("ajax-completed",(new Date()).getTime())},this))}});return c});
/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/repository-view.soy' */
// This file was automatically generated from repository-view.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.plugins == 'undefined') { bamboo.plugins = {}; }
if (typeof bamboo.plugins.stash == 'undefined') { bamboo.plugins.stash = {}; }
if (typeof bamboo.plugins.stash.repository == 'undefined') { bamboo.plugins.stash.repository = {}; }
if (typeof bamboo.plugins.stash.repository.view == 'undefined') { bamboo.plugins.stash.repository.view = {}; }


bamboo.plugins.stash.repository.view.error = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div class="error control-form-error">', soy.$$escapeHtml(opt_data.message), '</div>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/server-autocomplete.js' */
define("plugin-stash/server-autocomplete",["jquery","underscore","widget/autocomplete-static","util/events"],function(e,c,b,d){var a=b.extend({mixins:[d.EventBusMixin],initialize:function(f){this.params=e.extend({serverPollingTimeout:3000,minimumResultsForSearch:-1,url:AJS.contextPath()+"/rest/stash/latest/servers/"},f.params||{});this.onEvent("unbind",this.onUnbind);this.onEvent("stash:server:init",this.onServerInit);this.onEvent("stash:server:loaded",this.onServerLoaded);this.$fieldGroup=this.$el.parents(".field-group:first");this.serverPolling=null;b.prototype.initialize.apply(this,[this.params]);this.initConfig()},onUnbind:function(){this.undelegateEvents();this.$el.removeData().unbind();this.offEventNamespace("stash");if(this.serverPolling){this.serverPolling=null}},onServerInit:function(){this.initConfig({placeholder:this.settings.loadingPlaceholder}).clearValue().disable();this.getRemoteData(this.params.url).done(c.bind(function(f){this.triggerEvent("stash:server:loaded",(f&&f.servers)?f.servers:[])},this))},onServerLoaded:function(f,h){if(h&&h.length){if(this.serverPolling){this.serverPolling=null;this.triggerEvent("stash:server:error:empty",false);this.$fieldGroup.find(".field-value").show();this.$fieldGroup.find("#stash-server-empty").remove()}this.initConfig({data:h,placeholder:this.settings.placeholder});var g=this.$el.data("initial");var i=null;if(g&&g.length){i=c.find(h,function(j){return j.id===g})}if(!i&&g){if(!this.$fieldGroup.find("#stash-server-empty").length){this.triggerEvent("stash:server:error:empty",true);this.$fieldGroup.append(bamboo.plugins.stash.server.autocomplete.serverEmpty({hasGlobalAdminPermission:this.params.hasGlobalAdminPermission,appLinkRemoved:true}))}}else{if(!i&&h.length===1){i=h[h.length-1]}if(i){this.triggerEvent("stash:server:error:empty",false);this.triggerEvent("stash:server:update",i)}this.$el.removeData("initial").auiSelect2("data",i)}this.enable()}else{if(this.$fieldGroup.is(":visible")){if(!this.$fieldGroup.find("#stash-server-empty").length){this.$fieldGroup.find(".field-value").hide();this.$fieldGroup.append(bamboo.plugins.stash.server.autocomplete.serverEmpty({hasGlobalAdminPermission:this.params.hasGlobalAdminPermission,appLinkRemoved:!!this.$el.data("initial")})).append(this.$fieldGroup.find(".error.control-form-error"))}this.serverPolling=true;this.triggerEvent("stash:server:error:empty");this.triggerEvent("stash:server:error:permissions");setTimeout(c.bind(function(){this.triggerEvent("stash:server:init")},this),this.params.serverPollingTimeout)}}},onInitSelection:function(f,g){f.data("initial",f.val())},onRegisterEvents:function(){this.$el.on("change",c.bind(function(f){if(f.val.length>0){this.$fieldGroup.find(".field-value").show();this.$fieldGroup.find("#stash-server-empty").remove();this.triggerEvent("stash:server:update",f.added);this.triggerEvent("stash:server:error:empty",false);this.triggerEvent("stash:errors:clear")}},this))},onFormatResult:function(f){if(!c.isEmpty(f)){return bamboo.plugins.stash.server.autocomplete.row({item:f})}},onFormatSelection:function(f){if(!c.isEmpty(f)){return bamboo.plugins.stash.server.autocomplete.row({item:f})}},onRemoteError:function(g){var h=[];this.$el.auiSelect2("close");this.clearValue().$el.val("");if(g.responseText){var f=JSON.parse(g.responseText);if(f.errors){h=f.errors}}if(!h.length){h.push("Failed to load data from Stash.")}this.triggerEvent("stash:errors:show",this.$el,h)},getRemoteData:function(f){this.$el.removeClass("ajax-completed");return e.ajax({url:f,type:"GET",dataType:"json"}).fail(c.bind(this.onRemoteError,this)).complete(c.bind(function(){this.$el.data("ajax-completed",(new Date()).getTime())},this))}});return a});
/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/repository-autocomplete.js' */
define("plugin-stash/repository-autocomplete",["jquery","underscore","widget/autocomplete-ajax","util/events","util/elements"],function(f,c,b,d,e){var a=b.extend({mixins:[d.EventBusMixin,e],initialize:function(g){this.params=f.extend({url:AJS.contextPath()+"/rest/stash/latest/projects/repositories",urlSingle:AJS.contextPath()+"/rest/stash/latest/projects/repository"},g.params||{});this.query=f.extend({limit:10},g.query||{});var i=c.bind(function(k,m,j){var l=f.extend({start:Math.max((m-1),0),query:k},this.query);if(!j&&(m-1)>0&&this.data.nextPage){l.start=this.data.nextPage}return l},this);var h={minimumInputLength:0,ajax:{url:this.params.url,dataType:"json",data:i,params:{error:f.noop},results:c.bind(function(k,j){return this.processData({results:k.values,nextPage:k.nextPageStart||0,more:!k.lastPage})},this)}};this.onEvent("unbind",this.onUnbind);this.onEvent("stash:server:error:empty",this.onServerEmpty);this.onEvent("stash:server:change",this.onServerChange);this.onEvent("stash:form:config",this.onFormConfig);this.$fieldGroup=this.$el.parents(".field-group:first");b.prototype.initialize.apply(this,[f.extend(h,this.params)]);this.disable()},onUnbind:function(){this.undelegateEvents();this.$el.removeData().unbind();this.offEventNamespace("stash");f(window).off("applinks.auth.completion")},onFormConfig:function(g,h){this.config=h},onServerEmpty:function(g,h){if(c.isUndefined(h)){h=true}else{if(h){this.clearValue();this.$el.val("")}}this.toggleContainer(this.$fieldGroup,!h)},onServerChange:function(g,h){this.$fieldGroup.show();this.$fieldGroup.find(".field-value").show();this.$fieldGroup.find(".aui-message").remove();this.clearQueryCache().disable();if(h.id){this.query.serverKey=h.id;this.triggerEvent("stash:server:error:permissions",false);this.toggleContainer(this.$fieldGroup.parent(),true).promise().done(c.bind(function(){this.addLoadingIcon()},this));if(this.$el.val().length){this.getRemoteData(this.params.urlSingle,{dataType:this.settings.ajax.dataType,data:this.config}).done(c.bind(function(i){this.triggerEvent("stash:repository:init",i);this.$el.auiSelect2("data",i);this.removeLoadingIcon().enable()},this))}else{this.config.serverKey=h.id;this.getRemoteData(this.params.url,{dataType:this.settings.ajax.dataType,data:this.config}).done(c.bind(function(i){if(i.values&&i.values.length){this.addQueryCache(this.settings.ajax.data("",1,true),{results:i.values||[],nextPage:i.nextPageStart||0,more:!i.lastPage});this.removeLoadingIcon().enable()}else{this.removeLoadingIcon().triggerEvent("stash:errors:show",this.$el,["Selected server has no repositories."])}},this))}}else{this.clearValue()}},onRegisterEvents:function(){this.$el.on("change",c.bind(function(g){if(g.val.length>0){this.triggerEvent("stash:errors:clear");this.triggerEvent("stash:repository:update",g.added)}},this))},onFormatResult:function(g){if(!c.isEmpty(g)){return bamboo.plugins.stash.repository.autocomplete.row({item:g})}},onFormatSelection:function(g){if(!c.isEmpty(g)){return bamboo.plugins.stash.repository.autocomplete.row({item:g})}},onRemoteError:function(h){var i=[];this.$fieldGroup.show();this.$el.auiSelect2("close");this.removeLoadingIcon().clearValue().enable().$el.val("");if(h.responseText){var g=JSON.parse(h.responseText);if(g.serverErrorMessage){this.$fieldGroup.hide();this.triggerEvent("stash:errors:show","serverKey",[g.serverErrorMessage]);return}if(g.authenticationInstanceName){this.triggerEvent("stash:server:error:permissions");this.$fieldGroup.find(".field-value").hide();this.$fieldGroup.append(bamboo.plugins.stash.repository.autocomplete.oauthError({instanceName:g.authenticationInstanceName,redirectUrl:g.authenticationRedirectUrl})).append(this.$fieldGroup.find(".error.control-form-error"));f(window).on("applinks.auth.completion",c.bind(function(j,l,k){if(k){f(window).off("applinks.auth.completion");this.triggerEvent("stash:server:change",{id:this.config.serverKey})}},this));return}if(g.remoteRequestStatus&&c.contains([401,404],g.remoteRequestStatus)){this.$fieldGroup.parent().append(bamboo.plugins.stash.repository.autocomplete.unauthorizedError({requestStatus:g.remoteRequestStatus}));return}if(g.errors){i=g.errors}}if(!i.length){i.push("Failed to load data from Stash.")}this.triggerEvent("stash:errors:show",this.$el,i)},getRemoteData:function(g,h){this.$el.removeClass("ajax-completed");return f.ajax(g,c.defaults({type:"GET",dataType:"json"},h)).fail(c.bind(this.onRemoteError,this)).complete(c.bind(function(){this.$el.data("ajax-completed",(new Date()).getTime());this.$el.addClass("ajax-completed")},this))}});return a});
/* module-key = 'com.atlassian.bamboo.plugins.stash.atlassian-bamboo-plugin-stash:stash', location = '/javascript/repository-view.js' */
define("plugin-stash/repository-view",["jquery","underscore","brace","util/events","util/elements","util/ajax"],function(g,b,d,c,f,e){var a=d.View.extend({mixins:[c.EventBusMixin,f],elements:{serverKey:'input[name="repository.stash.readonly.serverKey"]',projectKey:'input[name="repository.stash.readonly.projectKey"]',repositorySlug:'input[name="repository.stash.readonly.repositorySlug"]',repositoryUrl:'input[name="repository.stash.readonly.repositoryUrl"]'},initialize:function(h){this.params=g.extend({url:AJS.contextPath()+"/rest/stash/latest/projects/repository"},h.params||{});if(h.elements){this.elements=h.elements}this.$container=this.$el.parents(".repository:first");this.onEvent("unbind",this.onUnbind);this.onEvent("repository:selector:change",b.bind(function(i,k,j){if(j&&j.length&&k==="LINKED"){if(+j===this.$container.data("key")){this.$el.hide();this.$container.show();this.onReadonlyInit()}}},this))},onUnbind:function(){this.undelegateEvents();this.clearElementsCache();this.$el.removeData().unbind();this.offEvent("repository:selector:change")},onReadonlyInit:function(){this.clearElementsCache();this.$el.parent().find(".aui-message").remove();this.$container.find(".field-group:first").append(g(document.createElement("span")).addClass("aui-icon aui-icon-wait"));this.getRemoteData(this.params.url,{data:this.getConfig()}).done(b.bind(this.onRepositoryLoaded,this)).always(b.bind(function(){this.$container.find(".aui-icon.aui-icon-wait").fadeOut(function(){g(this).remove()})},this))},onRepositoryLoaded:function(h){this.$el.find(".stash-repository").text(bamboo.plugins.stash.repository.autocomplete.row({item:h}));this.$el.slideDown()},onRemoteError:function(j){if(j.responseText){var h=JSON.parse(j.responseText,{errors:["Failed to load data from Stash."]});if(h.authenticationInstanceName){this.$el.hide().parent().append(bamboo.plugins.stash.repository.autocomplete.oauthError({instanceName:h.authenticationInstanceName,redirectUrl:h.authenticationRedirectUrl}));g(window).on("applinks.auth.completion",b.bind(function(k,m,l){if(l){g(window).off("applinks.auth.completion");this.onReadonlyInit()}},this));return}if(h.remoteRequestStatus&&b.contains([401,404],h.remoteRequestStatus)){this.$el.hide().parent().append(bamboo.plugins.stash.repository.autocomplete.unauthorizedError({requestStatus:h.remoteRequestStatus}));return}if(h.errors){this.$container.find(".error").remove();this.$el.slideDown();var i=this.$container.find(".stash-repository").parent();b.each(h.errors,b.bind(function(k){i.append(bamboo.plugins.stash.repository.view.error({message:k}))},this))}}},getRemoteData:function(h,i){return e(h,b.defaults({type:"GET",dataType:"json"},i)).fail(b.bind(this.onRemoteError,this))},getConfig:function(){return{serverKey:this.getElement("serverKey").val(),projectKey:this.getElement("projectKey").val(),repositorySlug:this.getElement("repositorySlug").val(),repositoryUrl:this.getElement("repositoryUrl").val()}}});return a});
/* module-key = 'bamboo.web.resources:feature-expiry', location = '/feature/expiry/expiry.js' */
define('feature/expiry-checkbox-tree', [
    'jquery',
    'underscore',
    'brace'
], function(
    $,
    _,
    Brace
) {

    'use strict';

    var ExpiryCheckboxTree = Brace.View.extend({
        $block: null,
        $triggers: [],
        initialize: function(options) {
            this.params = options.params || {};

            if (this.params.blockSelector) {
                this.$block = $(this.params.blockSelector);
            }

            var $parent = $(this.params.parentSelector),
                    $children = $(this.params.childrenSelector);

            this.$triggers = $children.add($parent);

            if ($parent.is(':checked')) {
                checkboxTree.cascadeToChildren($parent, $children, checkboxTree.DISABLE_CHILDREN_ON_PARENT_CHECKED);
            }

            $parent.on('change', _.bind(function() {
                checkboxTree.cascadeToChildren($parent, $children, checkboxTree.DISABLE_CHILDREN_ON_PARENT_CHECKED);
                this.changeBlockVisibility();
            }, this));

            $children.on('change', _.bind(this.changeBlockVisibility, this));

            this.changeBlockVisibility();
        },

        changeBlockVisibility: function() {
            if (!this.$block) {
                return;
            }

            var isBlockVisible = this.$triggers.is(':checked');
            this.$block.toggle(isBlockVisible);
        }
    });

    return ExpiryCheckboxTree;
});

/* module-key = 'bamboo.web.resources:history-js', location = '/bower/history.js/jquery.history.js' */
/**
 * History.js jQuery Adapter
 * @author Benjamin Arthur Lupton <contact@balupton.com>
 * @copyright 2010-2011 Benjamin Arthur Lupton <contact@balupton.com>
 * @license New BSD License <http://creativecommons.org/licenses/BSD/>
 */

// Closure
(function(window,undefined){
	"use strict";

	// Localise Globals
	var
		History = window.History = window.History||{},
		jQuery = window.jQuery;

	// Check Existence
	if ( typeof History.Adapter !== 'undefined' ) {
		throw new Error('History.js Adapter has already been loaded...');
	}

	// Add the Adapter
	History.Adapter = {
		/**
		 * History.Adapter.bind(el,event,callback)
		 * @param {Element|string} el
		 * @param {string} event - custom and standard events
		 * @param {function} callback
		 * @return {void}
		 */
		bind: function(el,event,callback){
			jQuery(el).bind(event,callback);
		},

		/**
		 * History.Adapter.trigger(el,event)
		 * @param {Element|string} el
		 * @param {string} event - custom and standard events
		 * @param {Object=} extra - a object of extra event data (optional)
		 * @return {void}
		 */
		trigger: function(el,event,extra){
			jQuery(el).trigger(event,extra);
		},

		/**
		 * History.Adapter.extractEventData(key,event,extra)
		 * @param {string} key - key for the event data to extract
		 * @param {string} event - custom and standard events
		 * @param {Object=} extra - a object of extra event data (optional)
		 * @return {mixed}
		 */
		extractEventData: function(key,event,extra){
			// jQuery Native then jQuery Custom
			var result = (event && event.originalEvent && event.originalEvent[key]) || (extra && extra[key]) || undefined;

			// Return
			return result;
		},

		/**
		 * History.Adapter.onDomLoad(callback)
		 * @param {function} callback
		 * @return {void}
		 */
		onDomLoad: function(callback) {
			jQuery(callback);
		}
	};

	// Try and Initialise History
	if ( typeof History.init !== 'undefined' ) {
		History.init();
	}

})(window);

/**
 * History.js Core
 * @author Benjamin Arthur Lupton <contact@balupton.com>
 * @copyright 2010-2011 Benjamin Arthur Lupton <contact@balupton.com>
 * @license New BSD License <http://creativecommons.org/licenses/BSD/>
 */

(function(window,undefined){
	"use strict";

	// ========================================================================
	// Initialise

	// Localise Globals
	var
		console = window.console||undefined, // Prevent a JSLint complain
		document = window.document, // Make sure we are using the correct document
		navigator = window.navigator, // Make sure we are using the correct navigator
		sessionStorage = window.sessionStorage||false, // sessionStorage
		setTimeout = window.setTimeout,
		clearTimeout = window.clearTimeout,
		setInterval = window.setInterval,
		clearInterval = window.clearInterval,
		JSON = window.JSON,
		alert = window.alert,
		History = window.History = window.History||{}, // Public History Object
		history = window.history; // Old History Object

	try {
		sessionStorage.setItem('TEST', '1');
		sessionStorage.removeItem('TEST');
	} catch(e) {
		sessionStorage = false;
	}

	// MooTools Compatibility
	JSON.stringify = JSON.stringify||JSON.encode;
	JSON.parse = JSON.parse||JSON.decode;

	// Check Existence
	if ( typeof History.init !== 'undefined' ) {
		throw new Error('History.js Core has already been loaded...');
	}

	// Initialise History
	History.init = function(options){
		// Check Load Status of Adapter
		if ( typeof History.Adapter === 'undefined' ) {
			return false;
		}

		// Check Load Status of Core
		if ( typeof History.initCore !== 'undefined' ) {
			History.initCore();
		}

		// Check Load Status of HTML4 Support
		if ( typeof History.initHtml4 !== 'undefined' ) {
			History.initHtml4();
		}

		// Return true
		return true;
	};


	// ========================================================================
	// Initialise Core

	// Initialise Core
	History.initCore = function(options){
		// Initialise
		if ( typeof History.initCore.initialized !== 'undefined' ) {
			// Already Loaded
			return false;
		}
		else {
			History.initCore.initialized = true;
		}


		// ====================================================================
		// Options

		/**
		 * History.options
		 * Configurable options
		 */
		History.options = History.options||{};

		/**
		 * History.options.hashChangeInterval
		 * How long should the interval be before hashchange checks
		 */
		History.options.hashChangeInterval = History.options.hashChangeInterval || 100;

		/**
		 * History.options.safariPollInterval
		 * How long should the interval be before safari poll checks
		 */
		History.options.safariPollInterval = History.options.safariPollInterval || 500;

		/**
		 * History.options.doubleCheckInterval
		 * How long should the interval be before we perform a double check
		 */
		History.options.doubleCheckInterval = History.options.doubleCheckInterval || 500;

		/**
		 * History.options.disableSuid
		 * Force History not to append suid
		 */
		History.options.disableSuid = History.options.disableSuid || false;

		/**
		 * History.options.storeInterval
		 * How long should we wait between store calls
		 */
		History.options.storeInterval = History.options.storeInterval || 1000;

		/**
		 * History.options.busyDelay
		 * How long should we wait between busy events
		 */
		History.options.busyDelay = History.options.busyDelay || 250;

		/**
		 * History.options.debug
		 * If true will enable debug messages to be logged
		 */
		History.options.debug = History.options.debug || false;

		/**
		 * History.options.initialTitle
		 * What is the title of the initial state
		 */
		History.options.initialTitle = History.options.initialTitle || document.title;

		/**
		 * History.options.html4Mode
		 * If true, will force HTMl4 mode (hashtags)
		 */
		History.options.html4Mode = History.options.html4Mode || false;

		/**
		 * History.options.delayInit
		 * Want to override default options and call init manually.
		 */
		History.options.delayInit = History.options.delayInit || false;


		// ====================================================================
		// Interval record

		/**
		 * History.intervalList
		 * List of intervals set, to be cleared when document is unloaded.
		 */
		History.intervalList = [];

		/**
		 * History.clearAllIntervals
		 * Clears all setInterval instances.
		 */
		History.clearAllIntervals = function(){
			var i, il = History.intervalList;
			if (typeof il !== "undefined" && il !== null) {
				for (i = 0; i < il.length; i++) {
					clearInterval(il[i]);
				}
				History.intervalList = null;
			}
		};


		// ====================================================================
		// Debug

		/**
		 * History.debug(message,...)
		 * Logs the passed arguments if debug enabled
		 */
		History.debug = function(){
			if ( (History.options.debug||false) ) {
				History.log.apply(History,arguments);
			}
		};

		/**
		 * History.log(message,...)
		 * Logs the passed arguments
		 */
		History.log = function(){
			// Prepare
			var
				consoleExists = !(typeof console === 'undefined' || typeof console.log === 'undefined' || typeof console.log.apply === 'undefined'),
				textarea = document.getElementById('log'),
				message,
				i,n,
				args,arg
				;

			// Write to Console
			if ( consoleExists ) {
				args = Array.prototype.slice.call(arguments);
				message = args.shift();
				if ( typeof console.debug !== 'undefined' ) {
					console.debug.apply(console,[message,args]);
				}
				else {
					console.log.apply(console,[message,args]);
				}
			}
			else {
				message = ("\n"+arguments[0]+"\n");
			}

			// Write to log
			for ( i=1,n=arguments.length; i<n; ++i ) {
				arg = arguments[i];
				if ( typeof arg === 'object' && typeof JSON !== 'undefined' ) {
					try {
						arg = JSON.stringify(arg);
					}
					catch ( Exception ) {
						// Recursive Object
					}
				}
				message += "\n"+arg+"\n";
			}

			// Textarea
			if ( textarea ) {
				textarea.value += message+"\n-----\n";
				textarea.scrollTop = textarea.scrollHeight - textarea.clientHeight;
			}
			// No Textarea, No Console
			else if ( !consoleExists ) {
				alert(message);
			}

			// Return true
			return true;
		};


		// ====================================================================
		// Emulated Status

		/**
		 * History.getInternetExplorerMajorVersion()
		 * Get's the major version of Internet Explorer
		 * @return {integer}
		 * @license Public Domain
		 * @author Benjamin Arthur Lupton <contact@balupton.com>
		 * @author James Padolsey <https://gist.github.com/527683>
		 */
		History.getInternetExplorerMajorVersion = function(){
			var result = History.getInternetExplorerMajorVersion.cached =
					(typeof History.getInternetExplorerMajorVersion.cached !== 'undefined')
				?	History.getInternetExplorerMajorVersion.cached
				:	(function(){
						var v = 3,
								div = document.createElement('div'),
								all = div.getElementsByTagName('i');
						while ( (div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->') && all[0] ) {}
						return (v > 4) ? v : false;
					})()
				;
			return result;
		};

		/**
		 * History.isInternetExplorer()
		 * Are we using Internet Explorer?
		 * @return {boolean}
		 * @license Public Domain
		 * @author Benjamin Arthur Lupton <contact@balupton.com>
		 */
		History.isInternetExplorer = function(){
			var result =
				History.isInternetExplorer.cached =
				(typeof History.isInternetExplorer.cached !== 'undefined')
					?	History.isInternetExplorer.cached
					:	Boolean(History.getInternetExplorerMajorVersion())
				;
			return result;
		};

		/**
		 * History.emulated
		 * Which features require emulating?
		 */

		if (History.options.html4Mode) {
			History.emulated = {
				pushState : true,
				hashChange: true
			};
		}

		else {

			History.emulated = {
				pushState: !Boolean(
					window.history && window.history.pushState && window.history.replaceState
					&& !(
						(/ Mobile\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i).test(navigator.userAgent) /* disable for versions of iOS before version 4.3 (8F190) */
						|| (/AppleWebKit\/5([0-2]|3[0-2])/i).test(navigator.userAgent) /* disable for the mercury iOS browser, or at least older versions of the webkit engine */
					)
				),
				hashChange: Boolean(
					!(('onhashchange' in window) || ('onhashchange' in document))
					||
					(History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 8)
				)
			};
		}

		/**
		 * History.enabled
		 * Is History enabled?
		 */
		History.enabled = !History.emulated.pushState;

		/**
		 * History.bugs
		 * Which bugs are present
		 */
		History.bugs = {
			/**
			 * Safari 5 and Safari iOS 4 fail to return to the correct state once a hash is replaced by a `replaceState` call
			 * https://bugs.webkit.org/show_bug.cgi?id=56249
			 */
			setHash: Boolean(!History.emulated.pushState && navigator.vendor === 'Apple Computer, Inc.' && /AppleWebKit\/5([0-2]|3[0-3])/.test(navigator.userAgent)),

			/**
			 * Safari 5 and Safari iOS 4 sometimes fail to apply the state change under busy conditions
			 * https://bugs.webkit.org/show_bug.cgi?id=42940
			 */
			safariPoll: Boolean(!History.emulated.pushState && navigator.vendor === 'Apple Computer, Inc.' && /AppleWebKit\/5([0-2]|3[0-3])/.test(navigator.userAgent)),

			/**
			 * MSIE 6 and 7 sometimes do not apply a hash even it was told to (requiring a second call to the apply function)
			 */
			ieDoubleCheck: Boolean(History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 8),

			/**
			 * MSIE 6 requires the entire hash to be encoded for the hashes to trigger the onHashChange event
			 */
			hashEscape: Boolean(History.isInternetExplorer() && History.getInternetExplorerMajorVersion() < 7)
		};

		/**
		 * History.isEmptyObject(obj)
		 * Checks to see if the Object is Empty
		 * @param {Object} obj
		 * @return {boolean}
		 */
		History.isEmptyObject = function(obj) {
			for ( var name in obj ) {
				if ( obj.hasOwnProperty(name) ) {
					return false;
				}
			}
			return true;
		};

		/**
		 * History.cloneObject(obj)
		 * Clones a object and eliminate all references to the original contexts
		 * @param {Object} obj
		 * @return {Object}
		 */
		History.cloneObject = function(obj) {
			var hash,newObj;
			if ( obj ) {
				hash = JSON.stringify(obj);
				newObj = JSON.parse(hash);
			}
			else {
				newObj = {};
			}
			return newObj;
		};


		// ====================================================================
		// URL Helpers

		/**
		 * History.getRootUrl()
		 * Turns "http://mysite.com/dir/page.html?asd" into "http://mysite.com"
		 * @return {String} rootUrl
		 */
		History.getRootUrl = function(){
			// Create
			var rootUrl = document.location.protocol+'//'+(document.location.hostname||document.location.host);
			if ( document.location.port||false ) {
				rootUrl += ':'+document.location.port;
			}
			rootUrl += '/';

			// Return
			return rootUrl;
		};

		/**
		 * History.getBaseHref()
		 * Fetches the `href` attribute of the `<base href="...">` element if it exists
		 * @return {String} baseHref
		 */
		History.getBaseHref = function(){
			// Create
			var
				baseElements = document.getElementsByTagName('base'),
				baseElement = null,
				baseHref = '';

			// Test for Base Element
			if ( baseElements.length === 1 ) {
				// Prepare for Base Element
				baseElement = baseElements[0];
				baseHref = baseElement.href.replace(/[^\/]+$/,'');
			}

			// Adjust trailing slash
			baseHref = baseHref.replace(/\/+$/,'');
			if ( baseHref ) baseHref += '/';

			// Return
			return baseHref;
		};

		/**
		 * History.getBaseUrl()
		 * Fetches the baseHref or basePageUrl or rootUrl (whichever one exists first)
		 * @return {String} baseUrl
		 */
		History.getBaseUrl = function(){
			// Create
			var baseUrl = History.getBaseHref()||History.getBasePageUrl()||History.getRootUrl();

			// Return
			return baseUrl;
		};

		/**
		 * History.getPageUrl()
		 * Fetches the URL of the current page
		 * @return {String} pageUrl
		 */
		History.getPageUrl = function(){
			// Fetch
			var
				State = History.getState(false,false),
				stateUrl = (State||{}).url||History.getLocationHref(),
				pageUrl;

			// Create
			pageUrl = stateUrl.replace(/\/+$/,'').replace(/[^\/]+$/,function(part,index,string){
				return (/\./).test(part) ? part : part+'/';
			});

			// Return
			return pageUrl;
		};

		/**
		 * History.getBasePageUrl()
		 * Fetches the Url of the directory of the current page
		 * @return {String} basePageUrl
		 */
		History.getBasePageUrl = function(){
			// Create
			var basePageUrl = (History.getLocationHref()).replace(/[#\?].*/,'').replace(/[^\/]+$/,function(part,index,string){
				return (/[^\/]$/).test(part) ? '' : part;
			}).replace(/\/+$/,'')+'/';

			// Return
			return basePageUrl;
		};

		/**
		 * History.getFullUrl(url)
		 * Ensures that we have an absolute URL and not a relative URL
		 * @param {string} url
		 * @param {Boolean} allowBaseHref
		 * @return {string} fullUrl
		 */
		History.getFullUrl = function(url,allowBaseHref){
			// Prepare
			var fullUrl = url, firstChar = url.substring(0,1);
			allowBaseHref = (typeof allowBaseHref === 'undefined') ? true : allowBaseHref;

			// Check
			if ( /[a-z]+\:\/\//.test(url) ) {
				// Full URL
			}
			else if ( firstChar === '/' ) {
				// Root URL
				fullUrl = History.getRootUrl()+url.replace(/^\/+/,'');
			}
			else if ( firstChar === '#' ) {
				// Anchor URL
				fullUrl = History.getPageUrl().replace(/#.*/,'')+url;
			}
			else if ( firstChar === '?' ) {
				// Query URL
				fullUrl = History.getPageUrl().replace(/[\?#].*/,'')+url;
			}
			else {
				// Relative URL
				if ( allowBaseHref ) {
					fullUrl = History.getBaseUrl()+url.replace(/^(\.\/)+/,'');
				} else {
					fullUrl = History.getBasePageUrl()+url.replace(/^(\.\/)+/,'');
				}
				// We have an if condition above as we do not want hashes
				// which are relative to the baseHref in our URLs
				// as if the baseHref changes, then all our bookmarks
				// would now point to different locations
				// whereas the basePageUrl will always stay the same
			}

			// Return
			return fullUrl.replace(/\#$/,'');
		};

		/**
		 * History.getShortUrl(url)
		 * Ensures that we have a relative URL and not a absolute URL
		 * @param {string} url
		 * @return {string} url
		 */
		History.getShortUrl = function(url){
			// Prepare
			var shortUrl = url, baseUrl = History.getBaseUrl(), rootUrl = History.getRootUrl();

			// Trim baseUrl
			if ( History.emulated.pushState ) {
				// We are in a if statement as when pushState is not emulated
				// The actual url these short urls are relative to can change
				// So within the same session, we the url may end up somewhere different
				shortUrl = shortUrl.replace(baseUrl,'');
			}

			// Trim rootUrl
			shortUrl = shortUrl.replace(rootUrl,'/');

			// Ensure we can still detect it as a state
			if ( History.isTraditionalAnchor(shortUrl) ) {
				shortUrl = './'+shortUrl;
			}

			// Clean It
			shortUrl = shortUrl.replace(/^(\.\/)+/g,'./').replace(/\#$/,'');

			// Return
			return shortUrl;
		};

		/**
		 * History.getLocationHref(document)
		 * Returns a normalized version of document.location.href
		 * accounting for browser inconsistencies, etc.
		 *
		 * This URL will be URI-encoded and will include the hash
		 *
		 * @param {object} document
		 * @return {string} url
		 */
		History.getLocationHref = function(doc) {
			doc = doc || document;

			// most of the time, this will be true
			if (doc.URL === doc.location.href)
				return doc.location.href;

			// some versions of webkit URI-decode document.location.href
			// but they leave document.URL in an encoded state
			if (doc.location.href === decodeURIComponent(doc.URL))
				return doc.URL;

			// FF 3.6 only updates document.URL when a page is reloaded
			// document.location.href is updated correctly
			if (doc.location.hash && decodeURIComponent(doc.location.href.replace(/^[^#]+/, "")) === doc.location.hash)
				return doc.location.href;

			if (doc.URL.indexOf('#') == -1 && doc.location.href.indexOf('#') != -1)
				return doc.location.href;
			
			return doc.URL || doc.location.href;
		};


		// ====================================================================
		// State Storage

		/**
		 * History.store
		 * The store for all session specific data
		 */
		History.store = {};

		/**
		 * History.idToState
		 * 1-1: State ID to State Object
		 */
		History.idToState = History.idToState||{};

		/**
		 * History.stateToId
		 * 1-1: State String to State ID
		 */
		History.stateToId = History.stateToId||{};

		/**
		 * History.urlToId
		 * 1-1: State URL to State ID
		 */
		History.urlToId = History.urlToId||{};

		/**
		 * History.storedStates
		 * Store the states in an array
		 */
		History.storedStates = History.storedStates||[];

		/**
		 * History.savedStates
		 * Saved the states in an array
		 */
		History.savedStates = History.savedStates||[];

		/**
		 * History.noramlizeStore()
		 * Noramlize the store by adding necessary values
		 */
		History.normalizeStore = function(){
			History.store.idToState = History.store.idToState||{};
			History.store.urlToId = History.store.urlToId||{};
			History.store.stateToId = History.store.stateToId||{};
		};

		/**
		 * History.getState()
		 * Get an object containing the data, title and url of the current state
		 * @param {Boolean} friendly
		 * @param {Boolean} create
		 * @return {Object} State
		 */
		History.getState = function(friendly,create){
			// Prepare
			if ( typeof friendly === 'undefined' ) { friendly = true; }
			if ( typeof create === 'undefined' ) { create = true; }

			// Fetch
			var State = History.getLastSavedState();

			// Create
			if ( !State && create ) {
				State = History.createStateObject();
			}

			// Adjust
			if ( friendly ) {
				State = History.cloneObject(State);
				State.url = State.cleanUrl||State.url;
			}

			// Return
			return State;
		};

		/**
		 * History.getIdByState(State)
		 * Gets a ID for a State
		 * @param {State} newState
		 * @return {String} id
		 */
		History.getIdByState = function(newState){

			// Fetch ID
			var id = History.extractId(newState.url),
				str;

			if ( !id ) {
				// Find ID via State String
				str = History.getStateString(newState);
				if ( typeof History.stateToId[str] !== 'undefined' ) {
					id = History.stateToId[str];
				}
				else if ( typeof History.store.stateToId[str] !== 'undefined' ) {
					id = History.store.stateToId[str];
				}
				else {
					// Generate a new ID
					while ( true ) {
						id = (new Date()).getTime() + String(Math.random()).replace(/\D/g,'');
						if ( typeof History.idToState[id] === 'undefined' && typeof History.store.idToState[id] === 'undefined' ) {
							break;
						}
					}

					// Apply the new State to the ID
					History.stateToId[str] = id;
					History.idToState[id] = newState;
				}
			}

			// Return ID
			return id;
		};

		/**
		 * History.normalizeState(State)
		 * Expands a State Object
		 * @param {object} State
		 * @return {object}
		 */
		History.normalizeState = function(oldState){
			// Variables
			var newState, dataNotEmpty;

			// Prepare
			if ( !oldState || (typeof oldState !== 'object') ) {
				oldState = {};
			}

			// Check
			if ( typeof oldState.normalized !== 'undefined' ) {
				return oldState;
			}

			// Adjust
			if ( !oldState.data || (typeof oldState.data !== 'object') ) {
				oldState.data = {};
			}

			// ----------------------------------------------------------------

			// Create
			newState = {};
			newState.normalized = true;
			newState.title = oldState.title||'';
			newState.url = History.getFullUrl(oldState.url?oldState.url:(History.getLocationHref()));
			newState.hash = History.getShortUrl(newState.url);
			newState.data = History.cloneObject(oldState.data);

			// Fetch ID
			newState.id = History.getIdByState(newState);

			// ----------------------------------------------------------------

			// Clean the URL
			newState.cleanUrl = newState.url.replace(/\??\&_suid.*/,'');
			newState.url = newState.cleanUrl;

			// Check to see if we have more than just a url
			dataNotEmpty = !History.isEmptyObject(newState.data);

			// Apply
			if ( (newState.title || dataNotEmpty) && History.options.disableSuid !== true ) {
				// Add ID to Hash
				newState.hash = History.getShortUrl(newState.url).replace(/\??\&_suid.*/,'');
				if ( !/\?/.test(newState.hash) ) {
					newState.hash += '?';
				}
				newState.hash += '&_suid='+newState.id;
			}

			// Create the Hashed URL
			newState.hashedUrl = History.getFullUrl(newState.hash);

			// ----------------------------------------------------------------

			// Update the URL if we have a duplicate
			if ( (History.emulated.pushState || History.bugs.safariPoll) && History.hasUrlDuplicate(newState) ) {
				newState.url = newState.hashedUrl;
			}

			// ----------------------------------------------------------------

			// Return
			return newState;
		};

		/**
		 * History.createStateObject(data,title,url)
		 * Creates a object based on the data, title and url state params
		 * @param {object} data
		 * @param {string} title
		 * @param {string} url
		 * @return {object}
		 */
		History.createStateObject = function(data,title,url){
			// Hashify
			var State = {
				'data': data,
				'title': title,
				'url': url
			};

			// Expand the State
			State = History.normalizeState(State);

			// Return object
			return State;
		};

		/**
		 * History.getStateById(id)
		 * Get a state by it's UID
		 * @param {String} id
		 */
		History.getStateById = function(id){
			// Prepare
			id = String(id);

			// Retrieve
			var State = History.idToState[id] || History.store.idToState[id] || undefined;

			// Return State
			return State;
		};

		/**
		 * Get a State's String
		 * @param {State} passedState
		 */
		History.getStateString = function(passedState){
			// Prepare
			var State, cleanedState, str;

			// Fetch
			State = History.normalizeState(passedState);

			// Clean
			cleanedState = {
				data: State.data,
				title: passedState.title,
				url: passedState.url
			};

			// Fetch
			str = JSON.stringify(cleanedState);

			// Return
			return str;
		};

		/**
		 * Get a State's ID
		 * @param {State} passedState
		 * @return {String} id
		 */
		History.getStateId = function(passedState){
			// Prepare
			var State, id;

			// Fetch
			State = History.normalizeState(passedState);

			// Fetch
			id = State.id;

			// Return
			return id;
		};

		/**
		 * History.getHashByState(State)
		 * Creates a Hash for the State Object
		 * @param {State} passedState
		 * @return {String} hash
		 */
		History.getHashByState = function(passedState){
			// Prepare
			var State, hash;

			// Fetch
			State = History.normalizeState(passedState);

			// Hash
			hash = State.hash;

			// Return
			return hash;
		};

		/**
		 * History.extractId(url_or_hash)
		 * Get a State ID by it's URL or Hash
		 * @param {string} url_or_hash
		 * @return {string} id
		 */
		History.extractId = function ( url_or_hash ) {
			// Prepare
			var id,parts,url, tmp;

			// Extract
			
			// If the URL has a #, use the id from before the #
			if (url_or_hash.indexOf('#') != -1)
			{
				tmp = url_or_hash.split("#")[0];
			}
			else
			{
				tmp = url_or_hash;
			}
			
			parts = /(.*)\&_suid=([0-9]+)$/.exec(tmp);
			url = parts ? (parts[1]||url_or_hash) : url_or_hash;
			id = parts ? String(parts[2]||'') : '';

			// Return
			return id||false;
		};

		/**
		 * History.isTraditionalAnchor
		 * Checks to see if the url is a traditional anchor or not
		 * @param {String} url_or_hash
		 * @return {Boolean}
		 */
		History.isTraditionalAnchor = function(url_or_hash){
			// Check
			var isTraditional = !(/[\/\?\.]/.test(url_or_hash));

			// Return
			return isTraditional;
		};

		/**
		 * History.extractState
		 * Get a State by it's URL or Hash
		 * @param {String} url_or_hash
		 * @return {State|null}
		 */
		History.extractState = function(url_or_hash,create){
			// Prepare
			var State = null, id, url;
			create = create||false;

			// Fetch SUID
			id = History.extractId(url_or_hash);
			if ( id ) {
				State = History.getStateById(id);
			}

			// Fetch SUID returned no State
			if ( !State ) {
				// Fetch URL
				url = History.getFullUrl(url_or_hash);

				// Check URL
				id = History.getIdByUrl(url)||false;
				if ( id ) {
					State = History.getStateById(id);
				}

				// Create State
				if ( !State && create && !History.isTraditionalAnchor(url_or_hash) ) {
					State = History.createStateObject(null,null,url);
				}
			}

			// Return
			return State;
		};

		/**
		 * History.getIdByUrl()
		 * Get a State ID by a State URL
		 */
		History.getIdByUrl = function(url){
			// Fetch
			var id = History.urlToId[url] || History.store.urlToId[url] || undefined;

			// Return
			return id;
		};

		/**
		 * History.getLastSavedState()
		 * Get an object containing the data, title and url of the current state
		 * @return {Object} State
		 */
		History.getLastSavedState = function(){
			return History.savedStates[History.savedStates.length-1]||undefined;
		};

		/**
		 * History.getLastStoredState()
		 * Get an object containing the data, title and url of the current state
		 * @return {Object} State
		 */
		History.getLastStoredState = function(){
			return History.storedStates[History.storedStates.length-1]||undefined;
		};

		/**
		 * History.hasUrlDuplicate
		 * Checks if a Url will have a url conflict
		 * @param {Object} newState
		 * @return {Boolean} hasDuplicate
		 */
		History.hasUrlDuplicate = function(newState) {
			// Prepare
			var hasDuplicate = false,
				oldState;

			// Fetch
			oldState = History.extractState(newState.url);

			// Check
			hasDuplicate = oldState && oldState.id !== newState.id;

			// Return
			return hasDuplicate;
		};

		/**
		 * History.storeState
		 * Store a State
		 * @param {Object} newState
		 * @return {Object} newState
		 */
		History.storeState = function(newState){
			// Store the State
			History.urlToId[newState.url] = newState.id;

			// Push the State
			History.storedStates.push(History.cloneObject(newState));

			// Return newState
			return newState;
		};

		/**
		 * History.isLastSavedState(newState)
		 * Tests to see if the state is the last state
		 * @param {Object} newState
		 * @return {boolean} isLast
		 */
		History.isLastSavedState = function(newState){
			// Prepare
			var isLast = false,
				newId, oldState, oldId;

			// Check
			if ( History.savedStates.length ) {
				newId = newState.id;
				oldState = History.getLastSavedState();
				oldId = oldState.id;

				// Check
				isLast = (newId === oldId);
			}

			// Return
			return isLast;
		};

		/**
		 * History.saveState
		 * Push a State
		 * @param {Object} newState
		 * @return {boolean} changed
		 */
		History.saveState = function(newState){
			// Check Hash
			if ( History.isLastSavedState(newState) ) {
				return false;
			}

			// Push the State
			History.savedStates.push(History.cloneObject(newState));

			// Return true
			return true;
		};

		/**
		 * History.getStateByIndex()
		 * Gets a state by the index
		 * @param {integer} index
		 * @return {Object}
		 */
		History.getStateByIndex = function(index){
			// Prepare
			var State = null;

			// Handle
			if ( typeof index === 'undefined' ) {
				// Get the last inserted
				State = History.savedStates[History.savedStates.length-1];
			}
			else if ( index < 0 ) {
				// Get from the end
				State = History.savedStates[History.savedStates.length+index];
			}
			else {
				// Get from the beginning
				State = History.savedStates[index];
			}

			// Return State
			return State;
		};
		
		/**
		 * History.getCurrentIndex()
		 * Gets the current index
		 * @return (integer)
		*/
		History.getCurrentIndex = function(){
			// Prepare
			var index = null;
			
			// No states saved
			if(History.savedStates.length < 1) {
				index = 0;
			}
			else {
				index = History.savedStates.length-1;
			}
			return index;
		};

		// ====================================================================
		// Hash Helpers

		/**
		 * History.getHash()
		 * @param {Location=} location
		 * Gets the current document hash
		 * Note: unlike location.hash, this is guaranteed to return the escaped hash in all browsers
		 * @return {string}
		 */
		History.getHash = function(doc){
			var url = History.getLocationHref(doc),
				hash;
			hash = History.getHashByUrl(url);
			return hash;
		};

		/**
		 * History.unescapeHash()
		 * normalize and Unescape a Hash
		 * @param {String} hash
		 * @return {string}
		 */
		History.unescapeHash = function(hash){
			// Prepare
			var result = History.normalizeHash(hash);

			// Unescape hash
			result = decodeURIComponent(result);

			// Return result
			return result;
		};

		/**
		 * History.normalizeHash()
		 * normalize a hash across browsers
		 * @return {string}
		 */
		History.normalizeHash = function(hash){
			// Prepare
			var result = hash.replace(/[^#]*#/,'').replace(/#.*/, '');

			// Return result
			return result;
		};

		/**
		 * History.setHash(hash)
		 * Sets the document hash
		 * @param {string} hash
		 * @return {History}
		 */
		History.setHash = function(hash,queue){
			// Prepare
			var State, pageUrl;

			// Handle Queueing
			if ( queue !== false && History.busy() ) {
				// Wait + Push to Queue
				//History.debug('History.setHash: we must wait', arguments);
				History.pushQueue({
					scope: History,
					callback: History.setHash,
					args: arguments,
					queue: queue
				});
				return false;
			}

			// Log
			//History.debug('History.setHash: called',hash);

			// Make Busy + Continue
			History.busy(true);

			// Check if hash is a state
			State = History.extractState(hash,true);
			if ( State && !History.emulated.pushState ) {
				// Hash is a state so skip the setHash
				//History.debug('History.setHash: Hash is a state so skipping the hash set with a direct pushState call',arguments);

				// PushState
				History.pushState(State.data,State.title,State.url,false);
			}
			else if ( History.getHash() !== hash ) {
				// Hash is a proper hash, so apply it

				// Handle browser bugs
				if ( History.bugs.setHash ) {
					// Fix Safari Bug https://bugs.webkit.org/show_bug.cgi?id=56249

					// Fetch the base page
					pageUrl = History.getPageUrl();

					// Safari hash apply
					History.pushState(null,null,pageUrl+'#'+hash,false);
				}
				else {
					// Normal hash apply
					document.location.hash = hash;
				}
			}

			// Chain
			return History;
		};

		/**
		 * History.escape()
		 * normalize and Escape a Hash
		 * @return {string}
		 */
		History.escapeHash = function(hash){
			// Prepare
			var result = History.normalizeHash(hash);

			// Escape hash
			result = window.encodeURIComponent(result);

			// IE6 Escape Bug
			if ( !History.bugs.hashEscape ) {
				// Restore common parts
				result = result
					.replace(/\%21/g,'!')
					.replace(/\%26/g,'&')
					.replace(/\%3D/g,'=')
					.replace(/\%3F/g,'?');
			}

			// Return result
			return result;
		};

		/**
		 * History.getHashByUrl(url)
		 * Extracts the Hash from a URL
		 * @param {string} url
		 * @return {string} url
		 */
		History.getHashByUrl = function(url){
			// Extract the hash
			var hash = String(url)
				.replace(/([^#]*)#?([^#]*)#?(.*)/, '$2')
				;

			// Unescape hash
			hash = History.unescapeHash(hash);

			// Return hash
			return hash;
		};

		/**
		 * History.setTitle(title)
		 * Applies the title to the document
		 * @param {State} newState
		 * @return {Boolean}
		 */
		History.setTitle = function(newState){
			// Prepare
			var title = newState.title,
				firstState;

			// Initial
			if ( !title ) {
				firstState = History.getStateByIndex(0);
				if ( firstState && firstState.url === newState.url ) {
					title = firstState.title||History.options.initialTitle;
				}
			}

			// Apply
			try {
				document.getElementsByTagName('title')[0].innerHTML = title.replace('<','&lt;').replace('>','&gt;').replace(' & ',' &amp; ');
			}
			catch ( Exception ) { }
			document.title = title;

			// Chain
			return History;
		};


		// ====================================================================
		// Queueing

		/**
		 * History.queues
		 * The list of queues to use
		 * First In, First Out
		 */
		History.queues = [];

		/**
		 * History.busy(value)
		 * @param {boolean} value [optional]
		 * @return {boolean} busy
		 */
		History.busy = function(value){
			// Apply
			if ( typeof value !== 'undefined' ) {
				//History.debug('History.busy: changing ['+(History.busy.flag||false)+'] to ['+(value||false)+']', History.queues.length);
				History.busy.flag = value;
			}
			// Default
			else if ( typeof History.busy.flag === 'undefined' ) {
				History.busy.flag = false;
			}

			// Queue
			if ( !History.busy.flag ) {
				// Execute the next item in the queue
				clearTimeout(History.busy.timeout);
				var fireNext = function(){
					var i, queue, item;
					if ( History.busy.flag ) return;
					for ( i=History.queues.length-1; i >= 0; --i ) {
						queue = History.queues[i];
						if ( queue.length === 0 ) continue;
						item = queue.shift();
						History.fireQueueItem(item);
						History.busy.timeout = setTimeout(fireNext,History.options.busyDelay);
					}
				};
				History.busy.timeout = setTimeout(fireNext,History.options.busyDelay);
			}

			// Return
			return History.busy.flag;
		};

		/**
		 * History.busy.flag
		 */
		History.busy.flag = false;

		/**
		 * History.fireQueueItem(item)
		 * Fire a Queue Item
		 * @param {Object} item
		 * @return {Mixed} result
		 */
		History.fireQueueItem = function(item){
			return item.callback.apply(item.scope||History,item.args||[]);
		};

		/**
		 * History.pushQueue(callback,args)
		 * Add an item to the queue
		 * @param {Object} item [scope,callback,args,queue]
		 */
		History.pushQueue = function(item){
			// Prepare the queue
			History.queues[item.queue||0] = History.queues[item.queue||0]||[];

			// Add to the queue
			History.queues[item.queue||0].push(item);

			// Chain
			return History;
		};

		/**
		 * History.queue (item,queue), (func,queue), (func), (item)
		 * Either firs the item now if not busy, or adds it to the queue
		 */
		History.queue = function(item,queue){
			// Prepare
			if ( typeof item === 'function' ) {
				item = {
					callback: item
				};
			}
			if ( typeof queue !== 'undefined' ) {
				item.queue = queue;
			}

			// Handle
			if ( History.busy() ) {
				History.pushQueue(item);
			} else {
				History.fireQueueItem(item);
			}

			// Chain
			return History;
		};

		/**
		 * History.clearQueue()
		 * Clears the Queue
		 */
		History.clearQueue = function(){
			History.busy.flag = false;
			History.queues = [];
			return History;
		};


		// ====================================================================
		// IE Bug Fix

		/**
		 * History.stateChanged
		 * States whether or not the state has changed since the last double check was initialised
		 */
		History.stateChanged = false;

		/**
		 * History.doubleChecker
		 * Contains the timeout used for the double checks
		 */
		History.doubleChecker = false;

		/**
		 * History.doubleCheckComplete()
		 * Complete a double check
		 * @return {History}
		 */
		History.doubleCheckComplete = function(){
			// Update
			History.stateChanged = true;

			// Clear
			History.doubleCheckClear();

			// Chain
			return History;
		};

		/**
		 * History.doubleCheckClear()
		 * Clear a double check
		 * @return {History}
		 */
		History.doubleCheckClear = function(){
			// Clear
			if ( History.doubleChecker ) {
				clearTimeout(History.doubleChecker);
				History.doubleChecker = false;
			}

			// Chain
			return History;
		};

		/**
		 * History.doubleCheck()
		 * Create a double check
		 * @return {History}
		 */
		History.doubleCheck = function(tryAgain){
			// Reset
			History.stateChanged = false;
			History.doubleCheckClear();

			// Fix IE6,IE7 bug where calling history.back or history.forward does not actually change the hash (whereas doing it manually does)
			// Fix Safari 5 bug where sometimes the state does not change: https://bugs.webkit.org/show_bug.cgi?id=42940
			if ( History.bugs.ieDoubleCheck ) {
				// Apply Check
				History.doubleChecker = setTimeout(
					function(){
						History.doubleCheckClear();
						if ( !History.stateChanged ) {
							//History.debug('History.doubleCheck: State has not yet changed, trying again', arguments);
							// Re-Attempt
							tryAgain();
						}
						return true;
					},
					History.options.doubleCheckInterval
				);
			}

			// Chain
			return History;
		};


		// ====================================================================
		// Safari Bug Fix

		/**
		 * History.safariStatePoll()
		 * Poll the current state
		 * @return {History}
		 */
		History.safariStatePoll = function(){
			// Poll the URL

			// Get the Last State which has the new URL
			var
				urlState = History.extractState(History.getLocationHref()),
				newState;

			// Check for a difference
			if ( !History.isLastSavedState(urlState) ) {
				newState = urlState;
			}
			else {
				return;
			}

			// Check if we have a state with that url
			// If not create it
			if ( !newState ) {
				//History.debug('History.safariStatePoll: new');
				newState = History.createStateObject();
			}

			// Apply the New State
			//History.debug('History.safariStatePoll: trigger');
			History.Adapter.trigger(window,'popstate');

			// Chain
			return History;
		};


		// ====================================================================
		// State Aliases

		/**
		 * History.back(queue)
		 * Send the browser history back one item
		 * @param {Integer} queue [optional]
		 */
		History.back = function(queue){
			//History.debug('History.back: called', arguments);

			// Handle Queueing
			if ( queue !== false && History.busy() ) {
				// Wait + Push to Queue
				//History.debug('History.back: we must wait', arguments);
				History.pushQueue({
					scope: History,
					callback: History.back,
					args: arguments,
					queue: queue
				});
				return false;
			}

			// Make Busy + Continue
			History.busy(true);

			// Fix certain browser bugs that prevent the state from changing
			History.doubleCheck(function(){
				History.back(false);
			});

			// Go back
			history.go(-1);

			// End back closure
			return true;
		};

		/**
		 * History.forward(queue)
		 * Send the browser history forward one item
		 * @param {Integer} queue [optional]
		 */
		History.forward = function(queue){
			//History.debug('History.forward: called', arguments);

			// Handle Queueing
			if ( queue !== false && History.busy() ) {
				// Wait + Push to Queue
				//History.debug('History.forward: we must wait', arguments);
				History.pushQueue({
					scope: History,
					callback: History.forward,
					args: arguments,
					queue: queue
				});
				return false;
			}

			// Make Busy + Continue
			History.busy(true);

			// Fix certain browser bugs that prevent the state from changing
			History.doubleCheck(function(){
				History.forward(false);
			});

			// Go forward
			history.go(1);

			// End forward closure
			return true;
		};

		/**
		 * History.go(index,queue)
		 * Send the browser history back or forward index times
		 * @param {Integer} queue [optional]
		 */
		History.go = function(index,queue){
			//History.debug('History.go: called', arguments);

			// Prepare
			var i;

			// Handle
			if ( index > 0 ) {
				// Forward
				for ( i=1; i<=index; ++i ) {
					History.forward(queue);
				}
			}
			else if ( index < 0 ) {
				// Backward
				for ( i=-1; i>=index; --i ) {
					History.back(queue);
				}
			}
			else {
				throw new Error('History.go: History.go requires a positive or negative integer passed.');
			}

			// Chain
			return History;
		};


		// ====================================================================
		// HTML5 State Support

		// Non-Native pushState Implementation
		if ( History.emulated.pushState ) {
			/*
			 * Provide Skeleton for HTML4 Browsers
			 */

			// Prepare
			var emptyFunction = function(){};
			History.pushState = History.pushState||emptyFunction;
			History.replaceState = History.replaceState||emptyFunction;
		} // History.emulated.pushState

		// Native pushState Implementation
		else {
			/*
			 * Use native HTML5 History API Implementation
			 */

			/**
			 * History.onPopState(event,extra)
			 * Refresh the Current State
			 */
			History.onPopState = function(event,extra){
				// Prepare
				var stateId = false, newState = false, currentHash, currentState;

				// Reset the double check
				History.doubleCheckComplete();

				// Check for a Hash, and handle apporiatly
				currentHash = History.getHash();
				if ( currentHash ) {
					// Expand Hash
					currentState = History.extractState(currentHash||History.getLocationHref(),true);
					if ( currentState ) {
						// We were able to parse it, it must be a State!
						// Let's forward to replaceState
						//History.debug('History.onPopState: state anchor', currentHash, currentState);
						History.replaceState(currentState.data, currentState.title, currentState.url, false);
					}
					else {
						// Traditional Anchor
						//History.debug('History.onPopState: traditional anchor', currentHash);
						History.Adapter.trigger(window,'anchorchange');
						History.busy(false);
					}

					// We don't care for hashes
					History.expectedStateId = false;
					return false;
				}

				// Ensure
				stateId = History.Adapter.extractEventData('state',event,extra) || false;

				// Fetch State
				if ( stateId ) {
					// Vanilla: Back/forward button was used
					newState = History.getStateById(stateId);
				}
				else if ( History.expectedStateId ) {
					// Vanilla: A new state was pushed, and popstate was called manually
					newState = History.getStateById(History.expectedStateId);
				}
				else {
					// Initial State
					newState = History.extractState(History.getLocationHref());
				}

				// The State did not exist in our store
				if ( !newState ) {
					// Regenerate the State
					newState = History.createStateObject(null,null,History.getLocationHref());
				}

				// Clean
				History.expectedStateId = false;

				// Check if we are the same state
				if ( History.isLastSavedState(newState) ) {
					// There has been no change (just the page's hash has finally propagated)
					//History.debug('History.onPopState: no change', newState, History.savedStates);
					History.busy(false);
					return false;
				}

				// Store the State
				History.storeState(newState);
				History.saveState(newState);

				// Force update of the title
				History.setTitle(newState);

				// Fire Our Event
				History.Adapter.trigger(window,'statechange');
				History.busy(false);

				// Return true
				return true;
			};
			History.Adapter.bind(window,'popstate',History.onPopState);

			/**
			 * History.pushState(data,title,url)
			 * Add a new State to the history object, become it, and trigger onpopstate
			 * We have to trigger for HTML4 compatibility
			 * @param {object} data
			 * @param {string} title
			 * @param {string} url
			 * @return {true}
			 */
			History.pushState = function(data,title,url,queue){
				//History.debug('History.pushState: called', arguments);

				// Check the State
				if ( History.getHashByUrl(url) && History.emulated.pushState ) {
					throw new Error('History.js does not support states with fragement-identifiers (hashes/anchors).');
				}

				// Handle Queueing
				if ( queue !== false && History.busy() ) {
					// Wait + Push to Queue
					//History.debug('History.pushState: we must wait', arguments);
					History.pushQueue({
						scope: History,
						callback: History.pushState,
						args: arguments,
						queue: queue
					});
					return false;
				}

				// Make Busy + Continue
				History.busy(true);

				// Create the newState
				var newState = History.createStateObject(data,title,url);

				// Check it
				if ( History.isLastSavedState(newState) ) {
					// Won't be a change
					History.busy(false);
				}
				else {
					// Store the newState
					History.storeState(newState);
					History.expectedStateId = newState.id;

					// Push the newState
					history.pushState(newState.id,newState.title,newState.url);

					// Fire HTML5 Event
					History.Adapter.trigger(window,'popstate');
				}

				// End pushState closure
				return true;
			};

			/**
			 * History.replaceState(data,title,url)
			 * Replace the State and trigger onpopstate
			 * We have to trigger for HTML4 compatibility
			 * @param {object} data
			 * @param {string} title
			 * @param {string} url
			 * @return {true}
			 */
			History.replaceState = function(data,title,url,queue){
				//History.debug('History.replaceState: called', arguments);

				// Check the State
				if ( History.getHashByUrl(url) && History.emulated.pushState ) {
					throw new Error('History.js does not support states with fragement-identifiers (hashes/anchors).');
				}

				// Handle Queueing
				if ( queue !== false && History.busy() ) {
					// Wait + Push to Queue
					//History.debug('History.replaceState: we must wait', arguments);
					History.pushQueue({
						scope: History,
						callback: History.replaceState,
						args: arguments,
						queue: queue
					});
					return false;
				}

				// Make Busy + Continue
				History.busy(true);

				// Create the newState
				var newState = History.createStateObject(data,title,url);

				// Check it
				if ( History.isLastSavedState(newState) ) {
					// Won't be a change
					History.busy(false);
				}
				else {
					// Store the newState
					History.storeState(newState);
					History.expectedStateId = newState.id;

					// Push the newState
					history.replaceState(newState.id,newState.title,newState.url);

					// Fire HTML5 Event
					History.Adapter.trigger(window,'popstate');
				}

				// End replaceState closure
				return true;
			};

		} // !History.emulated.pushState


		// ====================================================================
		// Initialise

		/**
		 * Load the Store
		 */
		if ( sessionStorage ) {
			// Fetch
			try {
				History.store = JSON.parse(sessionStorage.getItem('History.store'))||{};
			}
			catch ( err ) {
				History.store = {};
			}

			// Normalize
			History.normalizeStore();
		}
		else {
			// Default Load
			History.store = {};
			History.normalizeStore();
		}

		/**
		 * Clear Intervals on exit to prevent memory leaks
		 */
		History.Adapter.bind(window,"unload",History.clearAllIntervals);

		/**
		 * Create the initial State
		 */
		History.saveState(History.storeState(History.extractState(History.getLocationHref(),true)));

		/**
		 * Bind for Saving Store
		 */
		if ( sessionStorage ) {
			// When the page is closed
			History.onUnload = function(){
				// Prepare
				var	currentStore, item, currentStoreString;

				// Fetch
				try {
					currentStore = JSON.parse(sessionStorage.getItem('History.store'))||{};
				}
				catch ( err ) {
					currentStore = {};
				}

				// Ensure
				currentStore.idToState = currentStore.idToState || {};
				currentStore.urlToId = currentStore.urlToId || {};
				currentStore.stateToId = currentStore.stateToId || {};

				// Sync
				for ( item in History.idToState ) {
					if ( !History.idToState.hasOwnProperty(item) ) {
						continue;
					}
					currentStore.idToState[item] = History.idToState[item];
				}
				for ( item in History.urlToId ) {
					if ( !History.urlToId.hasOwnProperty(item) ) {
						continue;
					}
					currentStore.urlToId[item] = History.urlToId[item];
				}
				for ( item in History.stateToId ) {
					if ( !History.stateToId.hasOwnProperty(item) ) {
						continue;
					}
					currentStore.stateToId[item] = History.stateToId[item];
				}

				// Update
				History.store = currentStore;
				History.normalizeStore();

				// In Safari, going into Private Browsing mode causes the
				// Session Storage object to still exist but if you try and use
				// or set any property/function of it it throws the exception
				// "QUOTA_EXCEEDED_ERR: DOM Exception 22: An attempt was made to
				// add something to storage that exceeded the quota." infinitely
				// every second.
				currentStoreString = JSON.stringify(currentStore);
				try {
					// Store
					sessionStorage.setItem('History.store', currentStoreString);
				}
				catch (e) {
					if (e.code === DOMException.QUOTA_EXCEEDED_ERR) {
						if (sessionStorage.length) {
							// Workaround for a bug seen on iPads. Sometimes the quota exceeded error comes up and simply
							// removing/resetting the storage can work.
							sessionStorage.removeItem('History.store');
							sessionStorage.setItem('History.store', currentStoreString);
						} else {
							// Otherwise, we're probably private browsing in Safari, so we'll ignore the exception.
						}
					} else {
						throw e;
					}
				}
			};

			// For Internet Explorer
			History.intervalList.push(setInterval(History.onUnload,History.options.storeInterval));

			// For Other Browsers
			History.Adapter.bind(window,'beforeunload',History.onUnload);
			History.Adapter.bind(window,'unload',History.onUnload);

			// Both are enabled for consistency
		}

		// Non-Native pushState Implementation
		if ( !History.emulated.pushState ) {
			// Be aware, the following is only for native pushState implementations
			// If you are wanting to include something for all browsers
			// Then include it above this if block

			/**
			 * Setup Safari Fix
			 */
			if ( History.bugs.safariPoll ) {
				History.intervalList.push(setInterval(History.safariStatePoll, History.options.safariPollInterval));
			}

			/**
			 * Ensure Cross Browser Compatibility
			 */
			if ( navigator.vendor === 'Apple Computer, Inc.' || (navigator.appCodeName||'') === 'Mozilla' ) {
				/**
				 * Fix Safari HashChange Issue
				 */

				// Setup Alias
				History.Adapter.bind(window,'hashchange',function(){
					History.Adapter.trigger(window,'popstate');
				});

				// Initialise Alias
				if ( History.getHash() ) {
					History.Adapter.onDomLoad(function(){
						History.Adapter.trigger(window,'hashchange');
					});
				}
			}

		} // !History.emulated.pushState


	}; // History.initCore

	// Try to Initialise History
	if (!History.options || !History.options.delayInit) {
		History.init();
	}

})(window);

/* module-key = 'bamboo.web.resources:history-xhr', location = '/scripts/history-xhr.js' */
(function (window, undefined) {
    var History = window.History,
        $ = window.jQuery,
        document = window.document;

    if (!History.enabled) {
        return false;
    }

    $(function () {
        var $tabsContainer = $('.aui-tabs.aui-tabs-disabled,.aui-navgroup-horizontal'),
            isHorizontalNav = $tabsContainer.hasClass('aui-navgroup-horizontal'),
            $content = (
                isHorizontalNav ?
                $tabsContainer.nextAll('.aui-page-panel:first').find('.aui-page-panel-content').filter(':first') :
                $tabsContainer.children('.tabs-pane').filter(':first')
            ),
            $links = (
                isHorizontalNav ?
                $tabsContainer.find('.aui-navgroup-primary:first .aui-nav') :
                $tabsContainer.children('.tabs-menu')
            ),
            activeClass = (isHorizontalNav ? 'aui-nav-selected' : 'active-tab'),
            $planNavigator = $('#plan-navigator'),
            $plan,
            $jobs,
            planKey,
            activeJobKey,
            request,
            contextPath = AJS.contextPath() || '',
            listenForPotentialTabLinksInContent = function () {
                var $tab = $(this);

                $content.delegate('a[href="' + $tab.attr('href') + '"]', 'click', function (e) {
                    // Continue as normal for cmd clicks etc
                    if (e.which == 2 || e.metaKey) { return true; }

                    e.preventDefault();
                    $tab.click();
                });
            };

        // If not a tabbed page don't do any history manipulation
        if (!$tabsContainer.length || $tabsContainer.hasClass('history-xhr-disabled')) {
            return false;
        }

        // Get active tab on page load and store that data against this history entry
        History.replaceState({
            tabId: BAMBOO.escapeIdToJQuerySelector($links.find('.' + activeClass).children('a').attr('id'))
        }, document.title, null);

        if ($planNavigator.length) {
            $plan = $planNavigator.find('> ol');
            planKey = $plan.data('planKey');
            $jobs = $planNavigator.find('> ol ul > li');
            activeJobKey = $jobs.filter('.active').data('jobKey');
        }

        $links.find('a').click(function (e) {
            var $this = $(this),
                url = $this.attr('href'),
                title = $this.attr('title') || null;

            // Continue as normal for cmd clicks etc
            if (e.which == 2 || e.metaKey) { return true; }

            History.pushState({ tabId: BAMBOO.escapeIdToJQuerySelector($this.attr('id')) }, title, url);
            e.preventDefault();
        }).each(listenForPotentialTabLinksInContent);

        $(window).bind('statechange', function () {
            var State = History.getState(),
                url = State.url,
                tabId = State.data.tabId,
                $tab = $('#' + tabId);

            if (request && request.readyState < 4) {
                request.abort();
            }

            $tabsContainer.addClass('loading');
            $tab.parent().addClass(activeClass).siblings().removeClass(activeClass);

            $(document).trigger('statechange.historyxhr', [ url ]);

            if ($planNavigator.length) {
                // Update urls in plan navigator
                if (activeJobKey) {
                    // Update job urls
                    $jobs.each(function () {
                        var $li = $(this),
                            $a = $li.children('a').last(),
                            jobKey = $li.data('jobKey');

                        $a.attr('href', (jobKey == activeJobKey ? url : url.replace(activeJobKey, jobKey)));
                    });
                } else {
                    // Update plan url
                    // $plan.children('a').attr('href', url);
                }
            }
            
            request = $.ajax({
                cache: false,
                url: url,
                beforeSend: function (jqXHR) {
                    jqXHR.setRequestHeader('X-History-XHR', true);
                },
                success: function (data, textStatus, jqXHR) {
                    var title, planURL, jobURL;

                    // If no data is returned, or an entire web page, go directly to that page for normal error handling
                    if (!$.trim(data) || /<html/i.test(data)) {
                        return window.location = url;
                    }

                    $content.html(data);

                    title = jqXHR.getResponseHeader('X-Page-Title') || $.trim($content.find('title,.document-title').remove().filter(':first').text());
                    if (title) {
                        document.title = title;
                        try {
                            document.getElementsByTagName('title')[0].innerHTML = document.title.replace('<','&lt;').replace('>','&gt;').replace(' & ',' &amp; ');
                        }
                        catch ( Exception ) { }
                    }

                    planURL = jqXHR.getResponseHeader('X-Plan-URL');
                    jobURL = jqXHR.getResponseHeader('X-Job-URL');
                    if ($planNavigator.length) {
                        if (activeJobKey && planURL) {
                            // Update plan url (url is returned with current job key, replace it with the plan key)
                            // $plan.children('a').attr('href', contextPath + planURL.replace(activeJobKey, planKey));
                        } else if (!activeJobKey && jobURL) {
                            // Update job urls (url is returned with plan key, replace it with the appropriate job key)
                            $jobs.each(function () {
                                var $li = $(this),
                                    $a = $li.children('a').last(),
                                    jobKey = $li.data('jobKey');

                                $a.attr('href', contextPath + jobURL.replace(planKey, jobKey));
                            });
                        }
                    }

                    $tabsContainer.removeClass('loading');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    if (textStatus != 'abort') {
                        return window.location = url;
                    }
                }
            });
        });
    });
})(window);
/* module-key = 'bamboo.web.resources:page-visibility', location = '/widget/page-visibility-manager.js' */
define('widget/page-visibility-manager', [
    'jquery',
    'underscore'
], function(
    $,
    _
) {

    'use strict';

    var pageVisibilityManager = (function() {
        var visibilityStatePropertyName, visibilityChangeEventName;
        var HIDDEN = 'hidden',
            VISIBLE = 'visible',
            atlvisibilitychange = 'atlvisibilitychange';

        function setVisibilityValue(value) {
            $(document).attr('atlHidden', value);
        }

        if (typeof document.hidden !== 'undefined') {
            visibilityChangeEventName = 'visibilitychange';
            visibilityStatePropertyName = 'visibilityState';
        } else if (typeof document.mozHidden !== 'undefined') {
            visibilityChangeEventName = 'mozvisibilitychange';
            visibilityStatePropertyName = 'mozVisibilityState';
        } else if (typeof document.msHidden !== 'undefined') {
            visibilityChangeEventName = 'msvisibilitychange';
            visibilityStatePropertyName = 'msVisibilityState';
        } else if (typeof document.webkitHidden !== 'undefined') {
            visibilityChangeEventName = 'webkitvisibilitychange';
            visibilityStatePropertyName = 'webkitVisibilityState';
        } else {
            visibilityChangeEventName = atlvisibilitychange;
            visibilityStatePropertyName = 'atlVisibilityState';
            if (document.createEvent) {
                var event = document.createEvent('Event');
                event.initEvent(visibilityChangeEventName, false, false);
                $(window).focus(function() {
                    setVisibilityValue(VISIBLE);
                    document.dispatchEvent(event);
                });

                $(window).blur(function() {
                    setVisibilityValue(HIDDEN);
                    document.dispatchEvent(event);
                });
            }
        }

        var syncAtlHiddenValue = function() {
            setVisibilityValue(document[visibilityStatePropertyName]);
        };
        if (visibilityChangeEventName != atlvisibilitychange) {
            syncAtlHiddenValue();
            $(document).on(visibilityChangeEventName, syncAtlHiddenValue);
        } else {
            if (document.hasFocus) {
                setVisibilityValue(document.hasFocus() ? VISIBLE : HIDDEN);
            } else {
                setVisibilityValue(VISIBLE);
            }
        }

        return {
            HIDDEN: HIDDEN,
            VISIBLE: VISIBLE,
            isPageVisible: function() {
                return $(document).attr('atlHidden') == VISIBLE;
            },
            addVisibilityChangeEventListener: function(handler) {
                $(document).on(visibilityChangeEventName, handler);
            }
        }
    }());

    return pageVisibilityManager;
});

/* module-key = 'bamboo.web.resources:plan-status-history', location = '/widget/plan-status-history/plan-status-history.soy' */
// This file was automatically generated from plan-status-history.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.planStatusHistory == 'undefined') { bamboo.widget.planStatusHistory = {}; }


bamboo.widget.planStatusHistory.container = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div id="', soy.$$escapeHtml(opt_data.id), '">');
  bamboo.widget.planStatusHistory.navigator(opt_data, output);
  output.append('</div><script type="text/javascript">require([\'jquery\', \'widget/plan-status-history\'], function($, PlanStatusHistory){return new PlanStatusHistory({el: $(\'#', soy.$$escapeHtml(opt_data.id), '\'), planKey: \'', soy.$$escapeHtml(opt_data.planKey), '\', buildNumber: ', soy.$$escapeHtml(opt_data.currentBuildNumber ? opt_data.currentBuildNumber : 'null'), ', bootstrap: ', opt_data.bootstrap, ', returnUrl: \'', opt_data.returnUrl, '\', keyToNavigate: \'', soy.$$escapeHtml(opt_data.keyToNavigate), '\', firstBuildNumber: ', soy.$$escapeHtml(opt_data.firstBuildNumber ? opt_data.firstBuildNumber : 'null'), ', lastBuildNumber: ', soy.$$escapeHtml(opt_data.lastBuildNumber ? opt_data.lastBuildNumber : 'null'), '});});<\/script>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.planStatusHistory.navigator = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.builds.length > 0) {
    output.append((opt_data.currentBuildNumber && opt_data.currentBuildNumber > opt_data.firstBuildNumber) ? '<a class="previous" href="' + soy.$$escapeHtml("" + '/build/result/viewPreviousBuildResults.action?buildKey=' + opt_data.keyToNavigate + '&buildNumber=' + opt_data.currentBuildNumber + '&returnUrl=' + opt_data.returnUrl) + '" title="' + soy.$$escapeHtml("Previous build result") + '" accesskey="' + soy.$$escapeHtml("P") + '"><span>' + soy.$$escapeHtml("Previous") + '</span></a>' : '<span class="previous"><span></span></span>', '<ol>');
    var buildList43 = opt_data.builds;
    var buildListLen43 = buildList43.length;
    for (var buildIndex43 = 0; buildIndex43 < buildListLen43; buildIndex43++) {
      var buildData43 = buildList43[buildIndex43];
      bamboo.widget.planStatusHistory.item(soy.$$augmentData(buildData43, {href: "" + (opt_data.currentBuildNumber ? '/build/result/gotoBuildResult.action?buildKey=' + opt_data.keyToNavigate + '&buildNumber=' + buildData43.buildNumber + '&returnUrl=' + opt_data.returnUrl : '/browse/' + buildData43.planKey + '-' + buildData43.buildNumber), isCurrent: opt_data.currentBuildNumber && opt_data.currentBuildNumber == buildData43.buildNumber, isSequenceBreak: ! (buildIndex43 == 0) && opt_data.builds[buildIndex43 - 1].buildNumber + 1 != buildData43.buildNumber && opt_data.builds[buildIndex43 - 1].active != buildData43.active}), output);
    }
    output.append('</ol>', (opt_data.currentBuildNumber && opt_data.currentBuildNumber < opt_data.lastBuildNumber) ? '<a class="next" href="' + soy.$$escapeHtml("" + '/build/result/viewNextBuildResults.action?buildKey=' + opt_data.keyToNavigate + '&buildNumber=' + opt_data.currentBuildNumber + '&returnUrl=' + opt_data.returnUrl) + '" title="' + soy.$$escapeHtml("Next build result") + '" accesskey="' + soy.$$escapeHtml("N") + '"><span>' + soy.$$escapeHtml("Next") + '</span></a>' : '<span class="next"><span></span></span>');
  } else {
    output.append('<p>', soy.$$escapeHtml("Status history data not available"), '</p>');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.widget.planStatusHistory.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li class="', soy.$$escapeHtml(opt_data.buildStatus), (opt_data.isCurrent) ? ' current' : '', (opt_data.isSequenceBreak) ? ' sequence-break' : '');
  aui.renderExtraClasses(opt_data, output);
  output.append('" data-build-number="', soy.$$escapeHtml(opt_data.buildNumber), '" data-trigger="', soy.$$escapeHtml(opt_data.trigger), '" data-failed-test-case-count="', soy.$$escapeHtml(opt_data.failedTestCaseCount), '" data-rebuild="', soy.$$escapeHtml(opt_data.rebuild), '" data-once-off="', soy.$$escapeHtml(opt_data.onceOff), '" data-custom-build="', soy.$$escapeHtml(opt_data.customBuild), '" ><a href="', soy.$$escapeHtml(opt_data.href), '">');
  widget.icons.icon({type: opt_data.buildStatus, text: '#' + opt_data.buildNumber + ' (' + opt_data.buildStatusDescription + ')', showTitle: true}, output);
  output.append('</a></li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:plan-status-history', location = '/widget/plan-status-history/plan-status-history.js' */
define('widget/plan-status-history', [
    'jquery',
    'underscore',
    'backbone',
    'widget/page-visibility-manager'
], function(
    $,
    _,
    Backbone,
    pageVisibilityManager
) {

    'use strict';

    var ResultSummary = Backbone.Model.extend({
        idAttribute: 'buildNumber'
    });

    var ResultSummaries = Backbone.Collection.extend({
        model: ResultSummary,
        initialize: function(models, options) {
            options || (options = {});
            this.planKey = options.planKey;
        },
        url: function() {
            return AJS.contextPath() + '/ajax/planStatusHistoryNeighbouringSummaries.action?planKey=' + this.planKey;
        },
        parse: function(response) {
            return response.navigableSummaries;
        },
        comparator: function(model) {
            return model.id;
        }
    });

    var PlanStatusHistory = Backbone.View.extend({
        id: 'plan-status-history',
        initialize: function(options) {
            _.extend(this, options || (options = {}));
            this.buildNumber = options.buildNumber;
            this.returnUrl = options.returnUrl || '';
            this.keyToNavigate = options.keyToNavigate;
            this._firstBuildNumber = options.firstBuildNumber;
            this._lastBuildNumber = options.lastBuildNumber;
            this._updateTimeoutSuccess = options.updateTimeoutSuccess || 15000;
            this._updateTimeoutFailure = options.updateTimeoutFailure || 20000;
            this.collection = new ResultSummaries(options.bootstrap || [], {
                planKey: options.planKey
            });
            $(document).on('statechange.historyxhr', _.bind(this.updateReturnUrls, this));
            this.scheduleNextUpdate();

            this._inlineDialog = AJS.InlineDialog(
                '#' + this.$el.attr('id') + ' li > *', 'plan-status-history-info',
                _.bind(this.showInlineDialog, this),
                {
                    onHover: true,
                    fadeTime: 50,
                    hideDelay: 50,
                    showDelay: 0,
                    useLiveEvents: true,
                    container: '#content'
                }
            );

            pageVisibilityManager.addVisibilityChangeEventListener(_.bind(this.onPageVisibilityChange, this));
        },
        render: function() {
            this.$el.html(bamboo.widget.planStatusHistory.navigator({
                builds: this.collection.toJSON(),
                currentBuildNumber: this.buildNumber,
                firstBuildNumber: this._firstBuildNumber,
                lastBuildNumber: this._lastBuildNumber,
                keyToNavigate: this.keyToNavigate,
                returnUrl: this.returnUrl
            }));
            return this;
        },
        update: function() {
            var data = {};
            if (this.buildNumber) {
                data.buildNumber = this.buildNumber;
            }
            return this.collection.fetch({
                cache: false,
                dataType: 'json',
                data: data
            })
                    .done(_.bind(this.updateBuildNumberDetails, this))
                    .done(_.bind(this.render, this))
                    .always(_.bind(this.recordLastUpdateTime, this))
                    .always(_.bind(this.scheduleNextUpdate, this));
        },
        updateBuildNumberDetails: function() {
            var lastBuildNumber = (this.collection.length ? this.collection.last().id : null);
            if (lastBuildNumber > this._lastBuildNumber) {
                this._lastBuildNumber = lastBuildNumber;
            }
        },
        recordLastUpdateTime: function() {
            this._lastUpdateTime = new Date();
        },
        cancelNextUpdate: function() {
            clearTimeout(this._timeout);
        },
        scheduleNextUpdate: function(jqXHR) {
            this.cancelNextUpdate();
            if (!pageVisibilityManager.isPageVisible()) {
                return;
            }
            var delayBeforeUpdate = ((typeof jqXHR === 'undefined' || jqXHR.status == 'OK')
                ? this._updateTimeoutSuccess
                : this._updateTimeoutFailure);
            if (this._lastUpdateTime) {
                delayBeforeUpdate -= (new Date().getTime() - this._lastUpdateTime.getTime());
                if (delayBeforeUpdate < 0) {
                    delayBeforeUpdate = 0;
                }
            }
            this._timeout = setTimeout(_.bind(this.update, this), delayBeforeUpdate);
        },
        updateReturnUrls: function(event, newReturnUrl) {
            this.returnUrl = encodeURIComponent(this.cleanReturnUrl(newReturnUrl));
            this.render();
        },
        cleanReturnUrl: function(url) {
            var a = document.createElement('a');
            a.href = url;
            return (AJS.contextPath().length ? a.pathname.replace(AJS.contextPath(), '') : a.pathname) + a.search;
        },
        onPageVisibilityChange: function() {
            if (pageVisibilityManager.isPageVisible()) {
                this.scheduleNextUpdate();
            } else {
                this.cancelNextUpdate();
            }
        },
        showInlineDialog: function(contents, trigger, doShowPopup) {
            var $li = $(trigger).parent(),
                $contents = $('<div/>'),
                buildNumber = $li.data('buildNumber');

            if (this._inlineDialog.data('buildNumber') != buildNumber) {
                $li.find('.icon').clone().appendTo($contents);
                $('<strong/>', { text: '#' + buildNumber }).appendTo($contents);
                if ($li.data('onceOff')) {
                    $(widget.lozenges.lozenge({
                        colour: 'complete',
                        text: "Custom revision"
                    })).appendTo($contents);
                }
                if ($li.data('rebuild')) {
                    $(widget.lozenges.lozenge({
                        colour: 'moved',
                        text: "Rebuild"
                    })).appendTo($contents);
                }
                if ($li.data('customBuild')) {
                    $(widget.lozenges.lozenge({
                        colour: 'current',
                        text: "Custom build"
                    })).appendTo($contents);
                }
                $('<p/>', { html: $li.data('trigger') }).appendTo($contents);
                if ($li.hasClass('Failed')) {
                    $('<p/>', { text: $li.data('failedTestCaseCount') + ' tests failed' }).appendTo($contents);
                }
                contents.html($contents.html());

                this._inlineDialog.refresh();
                this._inlineDialog.data('buildNumber', buildNumber);
            }

            doShowPopup();
        }
    });

    return PlanStatusHistory;
});

/* module-key = 'bamboo.web.resources:serverstate', location = '/scripts/serverstate.js' */
BAMBOO.ADMIN = (BAMBOO.ADMIN || {});
BAMBOO.ADMIN.SERVERSTATE = {};

BAMBOO.ADMIN.SERVER_STATUS_UPDATED_EVENT = "serverStatusChangedEvent";
BAMBOO.ADMIN.SERVER_STATUS_POLLING_EVENT = "serverStatusPollingEvent";
BAMBOO.ADMIN.SERVER_STATUS_ACTION_EVENT = "serverStatusActionEvent";

BAMBOO.ADMIN.STATUS_RUNNING = "RUNNING";
BAMBOO.ADMIN.STATUS_PAUSED = "PAUSED";
BAMBOO.ADMIN.STATUS_PAUSING = "PAUSING";
BAMBOO.ADMIN.STATUS_POLLING = "POLLING";
BAMBOO.ADMIN.STATUS_ERROR = "ERROR";
BAMBOO.ADMIN.STATUS_PREPARING_FOR_RESTART = "PREPARING_FOR_RESTART";
BAMBOO.ADMIN.STATUS_READY_FOR_RESTART = "READY_FOR_RESTART";

BAMBOO.ADMIN.ACTION_PAUSE = "ACTION_PAUSE";
BAMBOO.ADMIN.ACTION_RESUME = "ACTION_RESUME";

BAMBOO.ADMIN.SERVERSTATE.serverStateUpdater = (function ($) {
    var defaults = {
            statusUrl: AJS.contextPath() + "/rest/api/latest/server",
            pauseUrl: AJS.contextPath() + "/rest/api/latest/server/pause",
            resumeUrl: AJS.contextPath() + "/rest/api/latest/server/resume"
        },
        options,
        serverState,
        $statusElement,
        doPoll = true,
        doRequest = function (type, url) {
            statusPolling();
            $.ajax({
                type: type,
                url: url,
                cache: false,
                dataType: "json",
                success: function (json) {
                    if (json && json.state) {
                        updateStatus(json, null);
                    } else {
                        updateStatus({state: BAMBOO.ADMIN.STATUS_ERROR}, null);
                    }
                },
                error: function (request, textStatus, errorThrown) {
                    updateStatus({state: BAMBOO.ADMIN.STATUS_ERROR}, textStatus + ": " + errorThrown);
                }
            });
        },
        update = function () {
            doRequest("GET", options.statusUrl);
        },
        statusPolling = function () {
            $statusElement.attr("data-server-state", BAMBOO.ADMIN.STATUS_POLLING);
            $statusElement.trigger(BAMBOO.ADMIN.SERVER_STATUS_POLLING_EVENT);
        },
        updateStatus = function (newState, additionalInfo) {
            var oldState = serverState;
            serverState = newState;
            $statusElement.attr("data-server-state", newState.state);
            if (additionalInfo) {
                $statusElement.attr("data-additional-info", additionalInfo);
            } else {
                $statusElement.removeAttr("data-additional-info");
            }
            $statusElement.trigger(BAMBOO.ADMIN.SERVER_STATUS_UPDATED_EVENT, [oldState, serverState, additionalInfo]);
        },
        pollInterval = function () {
            if (serverState && (serverState.state == BAMBOO.ADMIN.STATUS_RUNNING || serverState.state == BAMBOO.ADMIN.STATUS_PAUSED || serverState.state == BAMBOO.ADMIN.STATUS_ERROR)) {
                return 30000;
            } else {
                return 5000;
            }
        },
        poll = function (interval) {
            setTimeout(function () {
                if (doPoll) {
                    update();
                    poll(pollInterval());
                }
            }, interval);
        };

    return {
        init: function (opts) {
            options = $.extend(true, defaults, opts);
            $(function ($){
                $statusElement = $("<input id='bamboo-server-status' type='hidden'>").appendTo("body");
                if (doPoll) {
                    update();
                    poll(pollInterval());
                }
            });
        },

        pause: function () {
            $statusElement.trigger(BAMBOO.ADMIN.SERVER_STATUS_ACTION_EVENT, BAMBOO.ADMIN.ACTION_PAUSE);
            doRequest("POST", options.pauseUrl);
            poll(1000);
        },

        resume: function () {
            $statusElement.trigger(BAMBOO.ADMIN.SERVER_STATUS_ACTION_EVENT, BAMBOO.ADMIN.ACTION_RESUME);
            doRequest("POST", options.resumeUrl);
        },

        onServerStatusPolling: function (callback) {
            $statusElement.bind(BAMBOO.ADMIN.SERVER_STATUS_POLLING_EVENT, callback);
        },

        onServerStatusUpdated: function (callback) {
            $statusElement.bind(BAMBOO.ADMIN.SERVER_STATUS_UPDATED_EVENT, callback);
        },

        onServerStatusAction: function (callback) {
            $statusElement.bind(BAMBOO.ADMIN.SERVER_STATUS_ACTION_EVENT, callback);
        },

        stopPolling: function () {
            doPoll = false;
        }
    }
})(AJS.$);

BAMBOO.ADMIN.SERVERSTATE.serverStateUpdater.init();

BAMBOO.ADMIN.SERVERSTATE.serverState = (function ($) {
    var defaults = {
            control: null,
            statusInfo: null,
            button: null,
            pausedMessage: "The server is \u003cstrong\u003epaused\u003c/strong\u003e. No builds will be run or queued.",
            pausedButtonLabel: "Resume server",
            pausingMessage: "The server is \u003cstrong\u003epausing\u003c/strong\u003e. No builds will be queued. All currently building plans will finish but requests for new builds is not allowed.",
            pausingButtonLabel: "Cancel pause",
            reindexInProgressMessage: "The server is being reindexed. Not all data might be available at the moment.",
            preparingForRestartMessage: "The server is \u003cstrong\u003epreparing for restart\u003c/strong\u003e. No builds will be queued.",
            readyForRestartMessage: "The server is \u003cstrong\u003eready for restart\u003c/strong\u003e. No builds will be queued.",
            serverRunningCallback: null,
            pollError: "Server could not be contacted and its state is unknown. Please reload the page",
            reloadPage: "Reload"
        },
        options,
        lifecycleState,
        $control,
        $button,
        $statusInfo,
        updateStatus = function (event, oldState, newState) {
            if (lifecycleState) {
                $control.removeClass("server-status-" + lifecycleState.toLowerCase());
            }
            lifecycleState = newState.state;
            $control.addClass("server-status-" + lifecycleState.toLowerCase());

            var oldLifecycleState = oldState ? oldState.state : undefined;

            if (lifecycleState == BAMBOO.ADMIN.STATUS_RUNNING) {
                if (oldLifecycleState != BAMBOO.ADMIN.STATUS_RUNNING && options.serverRunningCallback) {
                    options.serverRunningCallback();
                }
                if (newState.reindexInProgress) {
                    $statusInfo.html(options.reindexInProgressMessage);
                    $button.hide();
                    $control.show();
                } else {
                    $control.hide();
                }
                return;
            } else if (lifecycleState == BAMBOO.ADMIN.STATUS_ERROR) {
                if (oldLifecycleState == BAMBOO.ADMIN.STATUS_PAUSED || oldLifecycleState == BAMBOO.ADMIN.STATUS_PAUSING) {
                    if ($button && $button.length) {
                        $button.text(options.reloadPage).click(function () {
                            window.location.reload();
                        });
                    }
                    $statusInfo.html(options.pollError);
                    $control.show();
                } else if (oldLifecycleState != BAMBOO.ADMIN.STATUS_ERROR) {
                    $control.hide();
                }
                return;
            } else {
                $control.show();
            }

            if (lifecycleState == BAMBOO.ADMIN.STATUS_PAUSED || lifecycleState == BAMBOO.ADMIN.STATUS_PAUSING) {
                if ($button && $button.length) {
                    $button.show();
                }
            } else if (lifecycleState == BAMBOO.ADMIN.STATUS_PREPARING_FOR_RESTART || lifecycleState == BAMBOO.ADMIN.STATUS_READY_FOR_RESTART) {
                if ($button && $button.length) {
                    $button.hide();
                }
            }

            if (lifecycleState == BAMBOO.ADMIN.STATUS_PAUSING) {
                if ($button && $button.length) {
                    $button.text(options.pausingButtonLabel);
                }
                $statusInfo.html(options.pausingMessage);
            } else if (lifecycleState == BAMBOO.ADMIN.STATUS_PAUSED) {
                if ($button && $button.length) {
                    $button.text(options.pausedButtonLabel);
                }
                $statusInfo.html(options.pausedMessage);
            } else if (lifecycleState == BAMBOO.ADMIN.STATUS_PREPARING_FOR_RESTART) {
                $statusInfo.html(options.preparingForRestartMessage);
            } else if (lifecycleState == BAMBOO.ADMIN.STATUS_READY_FOR_RESTART) {
                $statusInfo.html(options.readyForRestartMessage);
            }
        };

    return {
        init: function (opts) {
            options = $.extend(true, defaults, opts);

            $(function () {
                $control = $(options.control);
                $statusInfo = $(options.statusInfo, $control);
                $button = $(options.button, $control);

                if ($button && $button.length) {
                    $button.click(BAMBOO.ADMIN.SERVERSTATE.serverStateUpdater.resume);
                }
                BAMBOO.ADMIN.SERVERSTATE.serverStateUpdater.onServerStatusUpdated(updateStatus);
            });
        }
    }
})(AJS.$);

/* module-key = 'bamboo.web.resources:jirajs', location = '/scripts/jira/inheritance.js' */

// Inspired by base2 and Prototype
(function(){

begetObject = function (obj)
{
    var f = function()
    {};
    f.prototype = obj;
    return new f();
};
    

  var initializing = false, fnTest = /xyz/.test(function(){xyz;}) ? /\b_super\b/ : /.*/;

  // The base Class implementation (does nothing)
  this.Class = function(){};

  // Create a new Class that inherits from this class
  Class.extend = function() {

      var prop;

      var _super = this.prototype;

    if (arguments.length > 1) {

        var interfaces = AJS.$.makeArray(arguments);

        prop = interfaces.pop();

        var completeInterface;

        AJS.$.each(interfaces, function (i, inter) {
            if (completeInterface) {
                completeInterface = completeInterface.extend(inter);
            } else {
                completeInterface = inter;
            }
        });

        return completeInterface.extend(this.prototype).extend(prop);

    } else {
        prop = arguments[0];
    }


    // Instantiate a base class (but only create the instance,
    // don't run the init constructor)
    initializing = true;
    var prototype = new this();
    initializing = false;

    // Copy the properties over onto the new prototype
    for (var name in prop) {
      // Check if we're overwriting an existing function

        if (prototype[name] = typeof prop[name] == "function" &&
        typeof _super[name] == "function" && fnTest.test(prop[name])) {
            prototype[name] = (function(name, fn){
              return function() {
                var tmp = this._super;

                // Add a new ._super() method that is the same method
                // but on the super-class
                this._super = _super[name];

                // The method only need to be bound temporarily, so we
                // remove it when we're done executing
                var ret = fn.apply(this, arguments);
                this._super = tmp;

                return ret;
              };
            })(name, prop[name]);
        } else if (typeof _super[name] === "object") {
            var newObj = begetObject(prop[name]);

            AJS.$.each(_super[name], function (name, obj) {
                if (!newObj[name]) {
                    newObj[name] = obj;
                } else if (typeof newObj[name] === "object") {
                    var newSubObj = begetObject(newObj[name]);
                    AJS.$.each(obj, function (subName, subObj) {
                        if (!newSubObj[subName]) {
                            newSubObj[subName] = subObj;
                        }
                    });
                    newObj[name] = newSubObj;
                }
            });

            prototype[name] = newObj;
        } else {
            prototype[name] = prop[name];
        }
    }

    // The dummy class constructor
    function Class() {
      // All construction is actually done in the init method
      if ( !initializing && this.init )
        this.init.apply(this, arguments);
    }

    // Populate our constructed prototype object
    Class.prototype = prototype;

    // Enforce the constructor to be what we expect
    Class.constructor = Class;

    // And make this class extendable
    Class.extend = arguments.callee;

    return Class;
  };
})();

var Interface = Class.extend({});
/* module-key = 'bamboo.web.resources:jirajs', location = '/scripts/jira/autocomplete.js' */
/**
 * Ajax autocomplete
 *
 * @module jira.widget.autocomplete
 * @author Scott Harwood
 * @requires jQuery > v1.2, jira.widget.fauxSelect
 * @since 4.0
 *
 */


AJS.namespace("jira.widget.autocomplete");

/**
 * Designed for prototypial inheritance !!Abstract only
 * @abstract autocomplete
 */
jira.widget.autocomplete = function() {

    var inFocus;

    /**
     * Calls a callback after specified delay
     * @method {private} delay
     * @param {Number} l - length of delay in <em>seconds</em>
     * @param {Function} callback - function to call after delay
     */
    var delay = function(callback,l) {
        if (delay.t) {
            clearTimeout(delay.t);
            delay.t = undefined;
        }
        delay.t = setTimeout(callback, l * 1000);
    };

    var INVALID_KEYS = {
          9: true,
         13: true,
         14: true,
         25: true,
         27: true,
         38: true,
         40: true,
        224: true
    };

    return {

        /**
        * Checks whether a saved version (cached) of the request exists, if not performs a request and saves response,
        * then dispatches saved response to <em>renderSuggestions</em> method.
        *
        * @method {public} dispatcher
        */
        dispatcher: function() {},


        /**
         * Gets cached response
         *
         * @method {public} getSavedResponse
         * @param {String} val
         * @returns {Object}
         */
        getSavedResponse: function() {},

        /**
         * Saves response
         *
         * @method {public} saveResponse
         * @param {String} val
         * @param {Object} response
         */
        saveResponse: function() {},

        /**
         * Called to render suggestions. Used to define interface only.
         * Rendering is difficult to make generic, best to leave this to extending prototypes.
         *
         * @method {public} renderSuggestions
         * @param {Object} res - results object
         */
        renderSuggestions: function() {},

        /**
         * Disables autocomplete. Useful for shared inputs.
         * i.e The selection of a radio button may disable the instance
         * @method {Public} disable
         */
        disable: function() {
            this.disabled = true;
        },

        /**
         * Enables autocomplete. Useful for shared inputs.
         * i.e The selection of a radio button may disable the instance
         * @method {Public} enable
         */
        enable: function() {
            this.disabled = false;
        },

        /**
         * Sets instance variables from options object
         * to do: make function create getters and setters
         * @method {public} set
         * @param {Object} options
         */
        set: function(options) {
            for (var name in options) {
                // safeguard to stop looping up the inheritance chain
                if (options.hasOwnProperty(name)) {
                    this[name] = options[name];
                }
            }
        },

        /**
         * Adds value to input field
         * @method {public} completeField
         * @param {String} value
         */
        completeField: function(value) {
            if (value) {
                this.field.val(value).focus();
            }
        },

        /**
         * Returns the text from the start of the field up to the end of
         * the position where suggestions are generated from.
         */
        textToSuggestionCursorPosition: function () {
            return this.field.val();
        },


        /**
         * Allows users to navigate/select suggestions using the keyboard
         * @method {public} addSuggestionControls
         */
         addSuggestionControls: function(suggestionNodes) {

            // reference to this for closures
            var that = this;

            /**
             * Make sure the index is within the threshold
             * Looks ugly! Has to be a better way.
             * @method {private} evaluateIndex
             * @param {Integer} idx
             * @param {Integer} max
             * @return {Integer} valid threshold
             */
            var evaluateIndex = function(idx, max) {
                var minBoundary = (that.autoSelectFirst === false) ? -1 : 0;
                if (that.allowArrowCarousel) {
                    if (idx > max) {
                        return minBoundary;
                    } else if (idx < minBoundary) {
                        return max;
                    } else {
                        return idx;
                    }
                }
                else {
                    if (idx > max) {
                        return max;
                    } else if (idx < minBoundary) {
                        that.responseContainer.scrollTop(0);
                        return minBoundary;
                    } else {
                        return idx;
                    }
                }
            };

            /**
             * Highlights focused node and removes highlight from previous.
             * Actual highlight styles to come from css, adding and removing classes here.
             * @method {private} setActive
             * @param {Integer} idx - Index of node to be highlighted
             */
            var setActive = function(idx) {

                    // if nothing is selected, select the first suggestion
                    if (that.selectedIndex !== undefined && that.selectedIndex > -1) {
                        that.suggestionNodes[that.selectedIndex][0].removeClass("active");
                    }
                    that.selectedIndex = evaluateIndex(idx, that.suggestionNodes.length-1);
                    if (that.selectedIndex > -1) {
                        that.suggestionNodes[that.selectedIndex][0].addClass("active");
                    }
            };

             /**
              * Checks to see if there is actually a suggestion in focus before attempting to use it
              * @method {private} evaluateIfActive
              * @returns {boolean}
              */
             var evaluateIfActive = function() {
                return that.suggestionNodes && that.suggestionNodes[that.selectedIndex] &&
                       that.suggestionNodes[that.selectedIndex][0].hasClass("active");
             };


            /**
             * When the responseContainer (dropdown) is visible listen for keyboard events
             * that represent focus or selection.
             * @method {private} keyPressHandler
             * @param {Object} e - event object
             */
            var keyPressHandler = function(e) {
                // only use keyboard events if dropdown is visible
                if (that.responseContainer.is(":visible")) {
                    // if enter key is pressed check that there is a node selected, then hide dropdown and complete field
                    if (e.keyCode === 13) {
                        if (evaluateIfActive() && !that.pendingRequest) {
                            that.completeField(that.suggestionNodes[that.selectedIndex][1]);
                        }
                        e.preventDefault();
                    }
                }
            };

            /**
            * sets focus on suggestion nodes using the "up" and "down" arrows
            * These events need to be fired on mouseup as modifier keys don't register on keypress
            * @method {private} keyUpHandler
            * @param {Object} e - event object
            */
            var keyboardNavigateHandler = function(e) {

                // only use keyboard events if dropdown is visible
                if (that.responseContainer.is(":visible")) {

                    // keep cursor inside input field
                    if (that.field[0] !== document.activeElement){
                        that.field.focus();
                    }
                    // move selection down when down arrow is pressed
                    if (e.keyCode === 40) {
                        setActive(that.selectedIndex + 1);
                        if (that.selectedIndex >= 0) {
                            // move selection up when up arrow is pressed
                            var containerHeight = that.responseContainer.height();
                            var bottom = that.suggestionNodes[that.selectedIndex][0].position().top + that.suggestionNodes[that.selectedIndex][0].outerHeight() ;

                            if (bottom - containerHeight > 0){
                                that.responseContainer.scrollTop(that.responseContainer.scrollTop() + bottom - containerHeight + 2);
                            }
                        } else {
                            that.responseContainer.scrollTop(0);
                        }
                        e.preventDefault();
                    } else if (e.keyCode === 38) {
                        setActive(that.selectedIndex-1);
                        if (that.selectedIndex >= 0) {
                            // if tab key is pressed check that there is a node selected, then hide dropdown and complete field
                            var top = that.suggestionNodes[that.selectedIndex][0].position().top;
                            if (top < 0){
                                that.responseContainer.scrollTop(that.responseContainer.scrollTop() + top - 2);
                            }
                        }
                        e.preventDefault();
                    } else if (e.keyCode === 9) {
                        if (evaluateIfActive()) {
                            that.completeField(that.suggestionNodes[that.selectedIndex][1]);
                            e.preventDefault();
                        } else {
                            that.dropdownController.hideDropdown();
                        }
                    }
                }
            };

            if (suggestionNodes.length) {

                this.selectedIndex = 0;
                this.suggestionNodes = suggestionNodes;

                for (var i=0; i < that.suggestionNodes.length; i++) {
                    var eventData = { instance: this, index: i };
                    this.suggestionNodes[i][0]
                        .bind("mouseover", eventData, activate)
                        .bind("mouseout", eventData, deactivate)
                        .bind("click", eventData, complete);
                }

                // make sure we don't bind more than once
                if (!this.keyboardHandlerBinded) {
                    jQuery(this.field).keypress(keyPressHandler);
                    if (jQuery.browser.mozilla) {
                        jQuery(this.field).keypress(keyboardNavigateHandler);
                    } else {
                        jQuery(this.field).keydown(keyboardNavigateHandler);
                    }
                    this.keyboardHandlerBinded = true;
                }

                // automatically select the first in the list
                if(that.autoSelectFirst === false) {
                    setActive(-1);
                } else {
                    setActive(0);
                }

                // sets the autocomplete singleton infocus var to this instance
                // is used to toggle event propagation. In short, the instance that it is set to will not hide the
                // dropdown each time you click the input field
                inFocus = this;
            }

            function activate(event) {
                if (that.dropdownController.displayed) {
                    setActive(event.data.index);
                }
            }
            function deactivate(event) {
                if (event.data.index === 0) {
                    that.selectedIndex = -1;
                }
                jQuery(this).removeClass("active");
            }
            function complete(event) {
                that.completeField(that.suggestionNodes[event.data.index][1]);
            }
        },


        /**
         * Uses jquery empty command, this is VERY important as it unassigns handlers
         * used for mouseover, click events which expose an opportunity for memory leaks
         * @method {public} clearResponseContainer
         */
        clearResponseContainer: function() {
            this.responseContainer.empty();
            this.suggestionNodes = undefined;
        },

        /**
         * function {Privileged} delay
         * @param response
         */
        delay: delay,

        /**
         * Builds HTML container for suggestions.
         * Positions container top position to be that of the field height
         * @method {public} buildResponseContainer
         */
        buildResponseContainer: function() {
            var inputParent = this.field.parent().addClass('atlassian-autocomplete');
            this.responseContainer = jQuery(document.createElement("div"));
            this.responseContainer
                .addClass("suggestions")
                .css({top: this.field.outerHeight() + "px"})
                .appendTo(inputParent);
        },

        /**
         * Validates the keypress by making sure the field value is beyond the set threshold and the key was either an
         * up or down arrow
         * @method {public} keyUpHandler
         * @param {Object} e - event object
         */
        keyUpHandler: (function () {
            var isIe8 = jQuery.browser.msie && jQuery.browser.version == 8;
            function callback() {
                if (!this.responseContainer) {
                    this.buildResponseContainer();
                }
                // send value to dispatcher to check if we have already got the response or if we need to go
                // back to the server
                this.dispatcher(this.field.val());
            }

            return function (e) {
                // only initialises once the field length is past set length
                if (this.field.val().length >= this.minQueryLength) {
                    // don't do anything if the key pressed is "enter" or "down" or "up" or "right" "left"
                    if (!(e.keyCode in INVALID_KEYS) || (this.responseContainer && !this.responseContainer.is(":visible") && (e.keyCode == 38 || e.keyCode == 40))) {
                        if (isIe8) {
                            // Performance workaround for IE8 (but not IE7): excessive DOM manipulation (JRADEV-3142)
                            delay(jQuery.proxy(callback, this), 0.200);
                        } else {
                            callback.call(this);
                        }
                    }
                }
                return e;
            };
        })(),

        /**
         * Adds in methods via AOP to handle multiple selections
         * @method {Public} addMultiSelectAdvice
         */
        addMultiSelectAdvice: function(delim) {

            // reference to this for closures
            var that = this;

            /**
             * Alerts user if value already exists
             * @method {private} alertUserValueAlreadyExists
             * @param {String} val - value that already exists, will be displayed in message to user.
             */
            var alertUserValueAlreadyExists = function(val) {

                // check if there is an existing alert before adding another
                if (!alertUserValueAlreadyExists.isAlerting) {

                    alertUserValueAlreadyExists.isAlerting = true;

                    // create alert node and append it to the input field's parent, fade it in then out with a short
                    // delay in between.
                    //TODO: JRA-1800 - Needs i18n!  
                    var userAlert = jQuery(document.createElement("div"))
                    .css({"float": "left", display: "none"})
                    .addClass("warningBox")
                    .html("Oops! You have already entered the value <em>" + val + "</em>" )
                    .appendTo(that.field.parent())
                    .show("fast", function(){
                        // display message for 4 seconds before fading out
                        that.delay(function(){
                            userAlert.hide("fast",function(){
                                // removes element from dom
                                userAlert.remove();
                                alertUserValueAlreadyExists.isAlerting = false;
                            });
                        }, 4);
                    });
                }
            };

          // rather than request the entire field return the last comma seperated value
            jQuery.aop.before({target: this, method: "dispatcher"}, function(innvocation){
                // matches everything after last comma
                var val = this.field.val();
                innvocation[0] = jQuery.trim(val.slice(val.lastIndexOf(delim) + 1));
                return innvocation;
            });

            // rather than replacing this field just append the new value
            jQuery.aop.before({target: this, method: "completeField"}, function(args){
                var valueToAdd = args[0],
                // create array of values
                untrimmedVals = this.field.val().split(delim);
                // trim the values in the array so we avoid extra spaces being appended to the usernames - see JRA-20657
                var trimmedVals = jQuery(untrimmedVals).map(function() {
                        return jQuery.trim(this);
                   }).get();
                // check if the value to append already exists. If it does then call alert to to tell user and sets
                // the last value to "". The value to add will either appear:
                // 1) at the start of the string
                // 2) after some whitespace; or
                // 3) directly after the delimiter
                // It is assumed that the value is delimited by the delimiter character surrounded by any number of spaces.
                if (!this.allowDuplicates && new RegExp("(?:^|[\\s" + delim + "])" + valueToAdd + "\\s*" + delim).test(this.field.val())) {
                    alertUserValueAlreadyExists(valueToAdd);
                    trimmedVals[trimmedVals.length-1] = "";
                } else {
                    // add the new value to the end of the array and then an empty value so we
                    // can get an extra delimiter at the end of the joined string
                    trimmedVals[trimmedVals.length-1] = valueToAdd;
                    trimmedVals[trimmedVals.length] = "";
                }

                // join the array of values with the delimiter plus an extra space to make the list of values readable
                args[0] = trimmedVals.join(delim.replace(/([^\s]$)/,"$1 "));

                return args;
            });
        },


        /**
         * Adds and manages state of dropdown control
         * @method {Public} addDropdownAdvice
         */
        addDropdownAdvice: function() {
            var that = this;

            // add dropdown functionality to response container
            jQuery.aop.after({target: this, method: "buildResponseContainer"}, function(args){
                this.dropdownController = jira.widget.dropdown.Autocomplete({target: this, method: "renderSuggestions"}, this.responseContainer);

                if (AJS.$.browser.msie) { // We need to remove this class for IE as it has position relative which causes content further down the dom to show through the suggestions
                    jQuery.aop.before({ target: this.dropdownController, method: "displayDropdown" }, function () {
                        that.field.parent().addClass("atlassian-autocomplete");
                    });

                    jQuery.aop.after({ target: this.dropdownController, method: "hideDropdown" }, function () {
                        that.field.parent().removeClass("atlassian-autocomplete");
                    });
                }

                return args;
            });

            // display dropdown afer suggestions are updated
            jQuery.aop.after({target: this, method: "renderSuggestions"}, function(args){
                if (args && args.length > 0) {
                    this.dropdownController.displayDropdown();
                } else {
                    this.dropdownController.hideDropdown();
                }
                return args;
            });

            // hide dropdown after suggestion value is applied to field
            jQuery.aop.after({target: this, method: "completeField"}, function(args){
                this.dropdownController.hideDropdown();
                return args;
            });

            jQuery.aop.after({target: this, method: "keyUpHandler"}, function(e) {
                // only initialises once the field length is past set length
                if ((!(this.field.val().length >= this.minQueryLength) || e.keyCode === 27)
                        && this.dropdownController && this.dropdownController.displayed) {
                    this.dropdownController.hideDropdown();
                    if (e.keyCode === 27) {
                        e.stopPropagation();
                    }
                }
                return e;
            });
        },

        /**
         * Initialises autocomplete by setting options, and assigning event handler to input field.
         * @method {public} init
         * @param {Object} options
         */
        init: function(options) {
            var that = this;
            this.set(options);
            this.field = this.field || jQuery("#" + this.fieldID);
             // turn off browser default autocomplete
            this.field.attr("autocomplete","off")
            .keyup(function(e){
                if (!that.disabled) {
                    that.keyUpHandler(e);
                }
            })
            .keydown(function (e) {
                var ESC_KEY = 27;
                // do not clear field in IE
                if (e.keyCode === ESC_KEY && that.responseContainer && that.responseContainer.is(":visible")) {
                    e.preventDefault();
                }
            })
            // this will stop the dropdown with the suggestions hiding whenever you click the field
            .click(function(e){
                if (inFocus === that) {
                    e.stopPropagation();
                }
            });

            this.addDropdownAdvice();

            if (options.delimChar) {
                this.addMultiSelectAdvice(options.delimChar);
            }
        }
    };

}();


/**
 * Designed for prototypial inheritance !!Abstract only
 * @abstract REST
 */
jira.widget.autocomplete.REST = function() {

    // prototypial inheritance (http://javascript.crockford.com/prototypal.html)
    var that = begetObject(jira.widget.autocomplete);

   /**
    * Checks whether a saved version (cached) of the request exists, if not performs a request and saves response,
    * then dispatches saved response to <em>renderSuggestions</em> method.
    * @method {public} dispatcher
    * @param {String} reqFieldVal
    */
    that.dispatcher = function(reqFieldVal) {

        // reference to "this" for use in closures
         var that = this;

         if (reqFieldVal.length < this.minQueryLength) {
             return;
         }

         if (!this.getSavedResponse(reqFieldVal)) {



            // Add a delay so that we don't go the server for every keypress,
            // some people type fast and may have already typed an entire word by the time the server comes
            // back with a response

            this.delay(function(){

                that.pendingRequest = true;

                var params = that.getAjaxParams();
                params.data.query = reqFieldVal;
                params.success = function(data){
                    // for use later so we don't have to go back to the server for the same query
                    that.saveResponse(reqFieldVal, data);
                    // creates html elements from JSON object
                    that.responseContainer.scrollTop(0);
                    that.renderSuggestions(data);
                };

                params.complete = function () {
                    that.pendingRequest = false;
                };

                AJS.$.ajax(params);

            }, that.queryDelay);

        } else {
            that.renderSuggestions(that.getSavedResponse(reqFieldVal));
            that.responseContainer.scrollTop(0);
        }
    };


    that.getAjaxParams = function(){};

    /**
     * Gets cached response from <em>requested</em> object
     * @method {public} getSavedResponse
     * @param {String} val
     * @returns {Object}
     */
    that.getSavedResponse = function(val) {
        if (!this.requested) {
            this.requested = {};
        }
        return this.requested[val];
    };

    /**
     * Saves response to <em>requested</em> object
     * @method {public} saveResponse
     * @param {String} val
     * @param {Object} response
     */
    that.saveResponse = function(val, response) {
        if (typeof val === "string" && typeof response === "object") {
            if (!this.requested) {
                this.requested = {};
            }
            this.requested[val] = response;
        }
    };

    return that;

}();

/**
 * User picker - converted from YUI based autocomplete. There is some code in here that probably isn't necessary,
 * if removed though selenium tests would need to be re-written.
 * @constructer Users
 * @param options
 * @returns {Object}
 */
jira.widget.autocomplete.Users = function(options) {

    // prototypial inheritance (http://javascript.crockford.com/prototypal.html)
    var that = begetObject(jira.widget.autocomplete.REST);

    that.getAjaxParams = function(){
        return {
            url: contextPath + "/rest/api/1.0/users/picker",
            data: {
                fieldName: options.fieldID
            },
            dataType: "json",
            type: "GET"
        };
    };

    /**
     * Create html elements from JSON object
     * @method renderSuggestions
     * @param {Object} response - JSON object
     * @returns {Array} Multidimensional array, one column being the html element and the other being its
     * corresponding complete value.
     */
    that.renderSuggestions = function(response) {


        var resultsContainer, suggestionNodes = [];

        // remove previous results
        this.clearResponseContainer();


        if (response && response.users && response.users.length > 0) {

            resultsContainer = jQuery("<ul/>").appendTo(this.responseContainer);

            jQuery(response.users).each(function() {

                // add html element and corresponding complete value  to sugestionNodes Array
                suggestionNodes.push([jQuery("<li/>")
                .html(this.html)
                .appendTo(resultsContainer), this.name]);

            });
        }

        if (response.footer) {
            this.responseContainer.append(jQuery("<div/>")
            .addClass("yui-ac-ft")
            .html(response.footer)
            .css("display","block"));
        }

        if (suggestionNodes.length > 0) {
            that.addSuggestionControls(suggestionNodes);
            AJS.$('.atlassian-autocomplete div.yad, .atlassian-autocomplete .labels li').textOverflow('&#x2026;',true);
        }

        return suggestionNodes;

    };

    // Use autocomplete only once the field has at least 2 characters
    options.minQueryLength = 2;

    // wait 1/4 of after someone starts typing before going to server
    options.queryDelay = 0.25;

    that.init(options);

    return that;

};

/**
 * @constructor Issues
 * @param options
 */
jira.widget.autocomplete.Issues = function(options) {

    // prototypial inheritance (http://javascript.crockford.com/prototypal.html)
    var that = begetObject(jira.widget.autocomplete.REST);


    that.getAjaxParams = function(){
        return {
            url: contextPath + "/rest/api/1.0/issues/picker",
            data: options.ajaxData,
            dataType: "json",
            type: "GET"
        };
    };

    /**
     * @method renderSuggestions
     * @param {Object} response
     */
    that.renderSuggestions = function(response) {

        var resultsContainer, suggestionNodes = [];

        // remove previous results
        this.clearResponseContainer();

        if (response && response.sections && response.sections.length > 0) {

            resultsContainer = AJS.$("<ul/>").appendTo(this.responseContainer);

            AJS.$(response.sections).each(function() {
                var section = this;
                var subSection = AJS.$("<div/>").attr("id", options.fieldID + "_s_" + section.id).addClass("yag").text(section.label);
                if (section.sub){
                    subSection.append(AJS.$("<span/>").addClass("yagt").text("(" + section.sub + ")"));
                }
                resultsContainer.append(AJS.$("<li/>").append(subSection).mouseover(function(){
                        AJS.$(this).addClass("active");
                    }).mouseout(function(){
                        AJS.$(this).removeClass("active");
                    })
                );

                if (section.msg){
                    // add message node
                    var msg = AJS.$("<div/>").attr("id", options.fieldID + "_i_" + section.id + "_n").addClass("yad").text(section.msg);
                    resultsContainer.append(AJS.$("<li/>").append(msg).mouseover(function(){
                            AJS.$(this).addClass("active");
                        }).mouseout(function(){
                            AJS.$(this).removeClass("active");
                        })
                    );
                }

                if (section.issues && section.issues.length > 0){
                    AJS.$(section.issues).each(function(){
                        // add issue
                        var imgUrl;
                        if (/^http/.test(this.img)){
                            imgUrl = this.img;
                        } else {
                            imgUrl =  contextPath + this.img;
                        }
                        var issueNode = AJS.$("<li/>").append(
                            AJS.$("<div/>").attr("id", options.fieldID + "_i_" + section.id + "_" + this.key).addClass("yad").append(
                                AJS.$("<table/>").addClass("yat").attr({
                                    cellpadding: "0",
                                    cellspacing: "0"
                                }).append(
                                    AJS.$("<tr/>").append(
                                        AJS.$("<td/>").append(
                                            AJS.$("<img/>").attr("src", imgUrl)
                                        )
                                    ).append(
                                         AJS.$("<td/>").append(
                                            AJS.$("<div/>").addClass("yak").html(this.keyHtml)
                                        )
                                    ).append(
                                         AJS.$("<td/>").css("width", "100%").html(this.summary)
                                    )
                                )
                            )
                        );

                        resultsContainer.append(issueNode);
                        suggestionNodes.push([issueNode, this.key]);
                    });                    
                }
            });

            that.addSuggestionControls(suggestionNodes);

            return suggestionNodes;

        }
    };
    options.minQueryLength = 1;
    options.queryDelay = 0.25;

    that.init(options);

    return that;

};

jira.widget.autocomplete.Users.init = function(parent){
    AJS.$("fieldset.user-picker-params", parent).each(function(){
        var params = AJS.parseOptionsFromFieldset(AJS.$(this)),
            field = (params.fieldId || params.fieldName),
            $container = AJS.$("#" + field + "_container");


        $container.find("a.popup-trigger").click(function(e){
            var url = contextPath,
                vWinUsers;

            e.preventDefault();

            if (!params.formName)
            {
                params.formName = $container.find("#" + field).parents("form").attr("name");
            }

            if (params.actionToOpen) {
                url = url + params.actionToOpen;
            } else {
                url = url + '/secure/popups/UserPickerBrowser.jspa';
            }
            url += '?formName=' + params.formName + '&';
            url += 'multiSelect=' + params.multiSelect + '&';
            url += 'element=' + field;

            vWinUsers = window.open(url, 'UserPicker', 'status=yes,resizable=yes,top=100,left=200,width=580,height=750,scrollbars=yes');
            vWinUsers.opener = self;
            vWinUsers.focus();
        });


        if (params.userPickerEnabled === true ){
            jira.widget.autocomplete.Users({
                field: parent ? parent.find("#" + field) : null,
                fieldID: field,
                delimChar: params.multiSelect === false ? undefined : ",",
                ajaxData: {
                    fieldName: params.fieldName
                }
            });
        }
    });
};
AJS.$(document).bind("dialogContentReady", function(e, dialog){
    jira.widget.autocomplete.Users.init(dialog.get$popupContent());
});

jira.widget.autocomplete.Issues.init = function(){

    AJS.namespace("jira.issuepicker");

    AJS.$("fieldset.issue-picker-params").each(function(){
        var params = AJS.parseOptionsFromFieldset(AJS.$(this)),
            $container = AJS.$("#" + params.fieldId + "-container").add("#" + params.fieldName + "_container");

        $container.find("a.popup-trigger").click(function(e){
            var url = contextPath + '/secure/popups/IssuePicker.jspa?';
            url += 'currentIssue=' + params.currentIssueKey + '&';
            url += 'singleSelectOnly=' + params.singleSelectOnly + '&';
            url += 'showSubTasks=' + params.showSubTasks + '&';
            url += 'showSubTasksParent=' + params.showSubTaskParent;
            if (params.currentProjectId && params.currentProjectId != "")
            {
                url += '&selectedProjectId=' + params.currentProjectId;
            }

            /**
             * Provide a callback to the window for execution when the user selects an issue. This implies that only one
             * popup can be displayed at a time.
             * 
             * @param keysMap the issue keys selected.
             */
            jira.issuepicker.callback = function(keysMap){
                var $formElement, keys = [];

                keysMap = JSON.parse(keysMap);

                if (params.fieldId && keys) {
                    $formElement = AJS.$("#" + params.fieldId);
                    if ($formElement){
                        AJS.$.each(keysMap, function () {
                            keys.push(this.value);
                        });
                        $formElement.val(keys.join(", "));
                    }
                }
            };

            var vWinUsers = window.open(url, 'IssueSelectorPopup', 'status=no,resizable=yes,top=100,left=200,width=620,height=500,scrollbars=yes,resizable');
            vWinUsers.opener = self;
            vWinUsers.focus();
            e.preventDefault();
        });

        if (!params.fieldId) {
            params.fieldId = params.fieldName;
        }
        
        if (params.issuePickerEnabled === true){
            jira.widget.autocomplete.Issues({
                fieldID: params.fieldId,
                delimChar: params.singleSelectOnly === true ? undefined : ",",
                ajaxData: params
            });
        }
    });
};
AJS.$(function(){
    jira.widget.autocomplete.Users.init();
    jira.widget.autocomplete.Issues.init();
});

AJS.$(function(){
    AJS.$("fieldset.user-searcher-params").each(function(){
        var params = AJS.parseOptionsFromFieldset(AJS.$(this)),
            $container = AJS.$("#" + params.fieldId + "_container");

        if (params.userPickerEnabled === true){
            var autocompleter = jira.widget.autocomplete.Users({
                fieldID: params.fieldId,
                delimChar: params.multiSelect === true ? "," : undefined,
                ajaxData: {
                    fieldName: params.fieldName
                }
            });
        }

        var setupFields = function(related){
            var field = AJS.$("#" + params.fieldId);
            var userImage = AJS.$("#" + params.fieldId + "Image");
            var groupImage = AJS.$("#" + params.fieldId + "GroupImage");
            var fieldDesc = AJS.$("#" + params.fieldId + "_desc");
            if (related === "select.list.none"){
                field.val("").attr("disabled", "true");
                userImage.hide();
                groupImage.hide();
                fieldDesc.hide();
            } else{
                field.removeAttr("disabled");
                if (related === "select.list.group"){
                    userImage.hide();
                    groupImage.show();
                    if (params.userPickerEnabled === true){
                        autocompleter.disable();
                        fieldDesc.hide();
                    }
                } else {
                    userImage.show();
                    groupImage.hide();
                    if (params.userPickerEnabled === true){
                        autocompleter.enable();
                        fieldDesc.show();
                    }
                }
            }
        };

        AJS.$("#" + params.userSelect).change(function(){
            var related = AJS.$(this).find("option:selected").attr("rel");
            setupFields(related);
        }).find("option:selected").each(function(){
            setupFields(AJS.$(this).attr("rel"));
        });

        $container.find("a.user-popup-trigger").click(function(e){
            var url = contextPath + '/secure/popups/UserPickerBrowser.jspa?';
            url += 'formName=' + params.formName + '&';
            url += 'multiSelect=' + params.multiSelect + '&';
            url += 'element=' + params.fieldId;

            var vWinUsers = window.open(url, 'UserPicker', 'status=yes,resizable=yes,top=100,left=200,width=580,height=750,scrollbars=yes');
            vWinUsers.opener = self;
            vWinUsers.focus();
            e.preventDefault();
        });

        $container.find("a.group-popup-trigger").click(function(e){
            var url = contextPath + '/secure/popups/GroupPickerBrowser.jspa?';
            url += 'formName=' + params.formName + '&';
            url += 'multiSelect=' + params.multiSelect + '&';
            url += 'element=' + params.fieldId;

            var vWinUsers = window.open(url, 'GroupPicker', 'status=yes,resizable=yes,top=100,left=200,width=580,height=750,scrollbars=yes');
            vWinUsers.opener = self;
            vWinUsers.focus();
            e.preventDefault();
        });
    });
});
/* module-key = 'bamboo.web.resources:jirajs', location = '/scripts/jira/dropdown.js' */
/**
 * Creates a dropdown list from a JSON obect
 * @module dropdown
 * @author Scott Harwood
 * @requires jQuery > v1.2
 */


AJS.namespace("jira.widget.dropdown");

/**
 * @abstract dropdown
 */
jira.widget.dropdown = function() {

    // private

    var instances = [];

    return {

        // public

        /**
         * Adds this instance to private var <em>instances</em>
         * This reference can be used to access all instances
         * @function {public} addInstance
         */
        addInstance: function() {
            instances.push(this);
        },


        /**
         * Calls the hideList method on all instances of <em>dropdown</em>
         * @function {public} hideInstances
         */
        hideInstances: function() {
            var that = this;
            jQuery(instances).each(function(){
                if (that !== this) {
                    this.hideDropdown();
                }
            });
        },

        
        getHash: function () {
            if (!this.hash) {
                this.hash = {
                    container: this.dropdown,
                    hide: this.hideDropdown,
                    show: this.displayDropdown
                };
            }
            return this.hash;
        },

        /**
         * Calls <em>hideInstances</em> method to hide all other dropdowns.
         * Adds <em>active</em> class to <em>dropdown</em> and styles to make it visible.
         * @function {public} displayDropdown
         */
        displayDropdown: function() {
            if (jira.widget.dropdown.current === this) {
                return;
            }

            this.hideInstances();
            jira.widget.dropdown.current = this;
            this.dropdown.css({display: "block"});

            this.displayed = true;

            var dd = this.dropdown;
            setTimeout(function() {
                // Scroll dropdown into view
                var win = jQuery(window);
                var minScrollTop = dd.offset().top + dd.attr("offsetHeight") - win.height() + 10;

                if (win.scrollTop() < minScrollTop) {
                    jQuery("html,body").animate({scrollTop: minScrollTop}, 300, "linear");
                }
            }, 100);
        },

        /**
         *
         * Removes <em>active</em> class from <em>dropdown</em> and styles to make it hidden.
         * @function {public} hideDropdown
         */
        hideDropdown: function() {
            if (this.displayed === false) {
                return;
            }

            jira.widget.dropdown.current = null;
            this.dropdown.css({display: "none"});

            this.displayed = false;
        },

        /**
         * Initialises instance by, applying primary handler, user options and a Internet Explorer hack.
         * function {public} init
         * @param {HTMLelement} trigger
         * @param {HTMLelement} dropdown
         */
        init: function(trigger, dropdown) {

            var that = this;

            this.addInstance(this);
            this.dropdown = jQuery(dropdown);

            this.dropdown.css({display: "none"});

            // hide dropdown on tab
            jQuery(document).keydown(function(e){
                if(e.keyCode === 9) {
                    that.hideDropdown();
                }
            });

            // this instance is triggered by a method call
            if (trigger.target) {
                jQuery.aop.before(trigger, function(){
                    if (!that.displayed) {
                        that.displayDropdown();
                    }
                });

            // this instance is triggered by a click event
            } else {
                that.dropdown.css("top",jQuery(trigger).outerHeight() + "px");
                trigger.click(function(e){
                    if (!that.displayed) {
                        that.displayDropdown();
                        e.stopPropagation();
                        // lets not follow the link (if it is a link)
                    } else {
                        that.hideDropdown();
                    }
                    e.preventDefault();
                });
            }

            // hide dropdown when click anywhere other than on this instance
            jQuery(document.body).click(function(){
                if (that.displayed) {
                    that.hideDropdown();
                }
            });
        }
    };

}();

/**
 * Standard dropdown constructor 
 * @constucter Standard
 * @param {HTMLelement} trigger
 * @param {HTMLelement} dropdown
 * @return {Object} - instance
 */
jira.widget.dropdown.Standard = function(trigger, dropdown) {

    var that = begetObject(jira.widget.dropdown);
    that.init(trigger, dropdown);

    return that;
};

/**
 * Standard dropdown constructor
 * @constucter Standard
 * @param {HTMLelement} trigger
 * @param {HTMLelement} dropdown
 * @return {Object} - instance
 */
jira.widget.dropdown.Autocomplete = function(trigger, dropdown) {

    var that = begetObject(jira.widget.dropdown);

    that.init = function(trigger, dropdown) {

        this.addInstance(this);
        this.dropdown = jQuery(dropdown).click(function(e){
            // lets not hide dropdown when we click on it
            e.stopPropagation();
        });
        this.dropdown.css({display: "none"});

        // this instance is triggered by a method call
        if (trigger.target) {
            jQuery.aop.before(trigger, function(){
                if (!that.displayed) {
                    that.displayDropdown();
                }
            });

        // this instance is triggered by a click event
        } else {
            trigger.click(function(e){
                if (!that.displayed) {
                    that.displayDropdown();
                    e.stopPropagation();
                }
            });
        }

        // hide dropdown when click anywhere other than on this instance
        jQuery(document.body).click(function(){
            if (that.displayed) {
                that.hideDropdown();
            }
        });
    };

    that.init(trigger, dropdown);

    return that;
};

/* module-key = 'bamboo.web.resources:bamboojirajs', location = '/scripts/autocomplete-bamboo.js' */
AJS.namespace("BAMBOO.widget.autocomplete");


BAMBOO.widget.autocomplete.Variables = function(options) {

    // prototypial inheritance (http://javascript.crockford.com/prototypal.html)
    var that = begetObject(jira.widget.autocomplete.REST);

    that.getAjaxParams = function(){
        return {
            url: 'rest/api/latest/plan/%PLAN%?expand=variableContext'.replace('%PLAN%', that.planKey),
            data: options.ajaxData,
            dataType: "json",
            type: "GET"
        };
    };

    that.dispatcher = function(val) {
        var that = this,
            selectionRange = that.field.selectionRange(),
            parseValue = val.substring(0, selectionRange.start),
            match = parseValue.match(that.variableRegEx);
    };

    var defaults = {
        minQueryLength: 1,
        variableRegEx: /\$\{([a-z0-9\.]*)$/i
    };

    options = AJS.$.extend(true, defaults, options);
    that.init(options);

    return that;
};

BAMBOO.widget.autocomplete.Variables.init = function(parent) {
    AJS.$(".field-group .autocomplete-variables", parent).each(function() {
        var $item = AJS.$(this);
        BAMBOO.widget.autocomplete.Variables({
            field: $item,
            planKey: BAMBOO.currentPlan.key
        });
    })
};


AJS.$(document).bind("dialogContentReady", function(e, dialog){
    BAMBOO.widget.autocomplete.Variables.init(dialog.get$popupContent());
});

AJS.$(function(){
    BAMBOO.widget.autocomplete.Variables.init();
});

/* module-key = 'bamboo.web.resources:xsrf', location = '/scripts/xsrf.js' */
AJS.$.ajaxPrefilter(
        function(options, originalOptions, jqXHR) {
            function isMutativeHttpMethod(method) {
                return !(/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
            }
            if (isMutativeHttpMethod(options.type)) {
                options.crossDomain = false;
                jqXHR.setRequestHeader("X-Atlassian-Token", "no-check");
            }
        });

BAMBOO.XsrfUtils = (function ($) {
    function getXsrfTokenFromCookie() {
        return $.cookie('atl.xsrf.token');
    }

    function addXsrfToken($form) {
        $form.append($("<input>", {type: "hidden", name: "atl_token", value: getXsrfTokenFromCookie()}));
    }

    function postOnLinkClick(event) {
        if (event.isDefaultPrevented()) {
            return;
        }

        var $form = $("<form/>", {method: "post", action: this.href});
        addXsrfToken($form);

        $("body").append($form);

        event.preventDefault();
        $form.submit();
    }

    function isOriginCurrentLocation(url) {
        function isUrlEqual(url1, url2) {
            return (url1 == url2 || url1.slice(0, url2.length + 1) == url2 + '/');
        }

        var
                protocol = document.location.protocol,
                hostPort = document.location.host,
                ssHostPort = '//' + hostPort,
                protocolSsHostPort = protocol + ssHostPort;

        if (!url) {
            return false;
        }

        return isUrlEqual(url, protocolSsHostPort) ||
                isUrlEqual(url, ssHostPort) ||
                !(/^(\/\/|http:|https:).*/.test(url)); //not starting with: // or http: or https:
    }

    function addXsrfTokenToFormIfSameOrigin($form) {
        if (isOriginCurrentLocation($form.attr('action'))) {
            addXsrfToken($form);
        }
    }

    function addXsrfTokenProperty(url, object) {
        if (isOriginCurrentLocation(url)) {
            object.atl_token = getXsrfTokenFromCookie();
        }
        return object;
    }

    function addXsrfTokenToForms() {
        function addXsrfTokenSource($form) {
            $form.append($("<input>", {type: "hidden", name: "atl_token_source", value: 'js'})); //this will cause a warning in DEV mode
        }

        $("form").each(function () {
            var
                    $form = $(this),
                    hasNoAtlToken = !$form.find("input[name='atl_token']").length;

            if (hasNoAtlToken) {
                addXsrfTokenToFormIfSameOrigin($form);
                addXsrfTokenSource($form);
            }
        });
    }

    function getAtlTokenQueryParam(url) {
        if (isOriginCurrentLocation(url)) {
            return "atl_token=" + getXsrfTokenFromCookie();
        }
    }

    function registerLinkClickHandler() {
        $(document).on('click', 'a.mutative:not(.requireConfirmation)', postOnLinkClick);
        $(document).on('clickMutativeLink', 'a', postOnLinkClick);
        $(document).on('click', 'a#log-out', postOnLinkClick);
    }

    return {
        registerLinkClickHandler: registerLinkClickHandler,
        addXsrfTokenProperty: addXsrfTokenProperty,
        addXsrfTokenToForm: addXsrfTokenToFormIfSameOrigin,
        addXsrfTokenToForms: addXsrfTokenToForms,
        getAtlTokenQueryParam: getAtlTokenQueryParam
    }
})(AJS.$);


AJS.$(function() {
    BAMBOO.XsrfUtils.addXsrfTokenToForms();
    BAMBOO.XsrfUtils.registerLinkClickHandler();
});
/* module-key = 'bamboo.web.resources:flot', location = '/bower/jquery-flot/jquery.flot.js' */
/*! Javascript plotting library for jQuery, v. 0.7.
 *
 * Released under the MIT license by IOLA, December 2007.
 *
 */

// first an inline dependency, jquery.colorhelpers.js, we inline it here
// for convenience

/* Plugin for jQuery for working with colors.
 * 
 * Version 1.1.
 * 
 * Inspiration from jQuery color animation plugin by John Resig.
 *
 * Released under the MIT license by Ole Laursen, October 2009.
 *
 * Examples:
 *
 *   $.color.parse("#fff").scale('rgb', 0.25).add('a', -0.5).toString()
 *   var c = $.color.extract($("#mydiv"), 'background-color');
 *   console.log(c.r, c.g, c.b, c.a);
 *   $.color.make(100, 50, 25, 0.4).toString() // returns "rgba(100,50,25,0.4)"
 *
 * Note that .scale() and .add() return the same modified object
 * instead of making a new one.
 *
 * V. 1.1: Fix error handling so e.g. parsing an empty string does
 * produce a color rather than just crashing.
 */ 
(function(B){B.color={};B.color.make=function(F,E,C,D){var G={};G.r=F||0;G.g=E||0;G.b=C||0;G.a=D!=null?D:1;G.add=function(J,I){for(var H=0;H<J.length;++H){G[J.charAt(H)]+=I}return G.normalize()};G.scale=function(J,I){for(var H=0;H<J.length;++H){G[J.charAt(H)]*=I}return G.normalize()};G.toString=function(){if(G.a>=1){return"rgb("+[G.r,G.g,G.b].join(",")+")"}else{return"rgba("+[G.r,G.g,G.b,G.a].join(",")+")"}};G.normalize=function(){function H(J,K,I){return K<J?J:(K>I?I:K)}G.r=H(0,parseInt(G.r),255);G.g=H(0,parseInt(G.g),255);G.b=H(0,parseInt(G.b),255);G.a=H(0,G.a,1);return G};G.clone=function(){return B.color.make(G.r,G.b,G.g,G.a)};return G.normalize()};B.color.extract=function(D,C){var E;do{E=D.css(C).toLowerCase();if(E!=""&&E!="transparent"){break}D=D.parent()}while(!B.nodeName(D.get(0),"body"));if(E=="rgba(0, 0, 0, 0)"){E="transparent"}return B.color.parse(E)};B.color.parse=function(F){var E,C=B.color.make;if(E=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(F)){return C(parseInt(E[1],10),parseInt(E[2],10),parseInt(E[3],10))}if(E=/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(F)){return C(parseInt(E[1],10),parseInt(E[2],10),parseInt(E[3],10),parseFloat(E[4]))}if(E=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(F)){return C(parseFloat(E[1])*2.55,parseFloat(E[2])*2.55,parseFloat(E[3])*2.55)}if(E=/rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(F)){return C(parseFloat(E[1])*2.55,parseFloat(E[2])*2.55,parseFloat(E[3])*2.55,parseFloat(E[4]))}if(E=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(F)){return C(parseInt(E[1],16),parseInt(E[2],16),parseInt(E[3],16))}if(E=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(F)){return C(parseInt(E[1]+E[1],16),parseInt(E[2]+E[2],16),parseInt(E[3]+E[3],16))}var D=B.trim(F).toLowerCase();if(D=="transparent"){return C(255,255,255,0)}else{E=A[D]||[0,0,0];return C(E[0],E[1],E[2])}};var A={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);

// the actual Flot code
(function($) {
    function Plot(placeholder, data_, options_, plugins) {
        // data is on the form:
        //   [ series1, series2 ... ]
        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]
        // or { data: [ [x1, y1], [x2, y2], ... ], label: "some label", ... }
        
        var series = [],
            options = {
                // the color theme used for graphs
                colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
                legend: {
                    show: true,
                    noColumns: 1, // number of colums in legend table
                    labelFormatter: null, // fn: string -> string
                    labelBoxBorderColor: "#ccc", // border color for the little label boxes
                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph
                    position: "ne", // position of default legend container within plot
                    margin: 5, // distance from grid edge to default legend container within plot
                    backgroundColor: null, // null means auto-detect
                    backgroundOpacity: 0.85 // set to 0 to avoid background
                },
                xaxis: {
                    show: null, // null = auto-detect, true = always, false = never
                    position: "bottom", // or "top"
                    mode: null, // null or "time"
                    color: null, // base color, labels, ticks
                    tickColor: null, // possibly different color of ticks, e.g. "rgba(0,0,0,0.15)"
                    transform: null, // null or f: number -> number to transform axis
                    inverseTransform: null, // if transform is set, this should be the inverse function
                    min: null, // min. value to show, null means set automatically
                    max: null, // max. value to show, null means set automatically
                    autoscaleMargin: null, // margin in % to add if auto-setting min/max
                    ticks: null, // either [1, 3] or [[1, "a"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks
                    tickFormatter: null, // fn: number -> string
                    labelWidth: null, // size of tick labels in pixels
                    labelHeight: null,
                    reserveSpace: null, // whether to reserve space even if axis isn't shown
                    tickLength: null, // size in pixels of ticks, or "full" for whole line
                    alignTicksWithAxis: null, // axis number or null for no sync
                    
                    // mode specific options
                    tickDecimals: null, // no. of decimals, null means auto
                    tickSize: null, // number or [number, "unit"]
                    minTickSize: null, // number or [number, "unit"]
                    monthNames: null, // list of names of months
                    timeformat: null, // format string to use
                    twelveHourClock: false // 12 or 24 time in time mode
                },
                yaxis: {
                    autoscaleMargin: 0.02,
                    position: "left" // or "right"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: false,
                        radius: 3,
                        lineWidth: 2, // in pixels
                        fill: true,
                        fillColor: "#ffffff",
                        symbol: "circle" // or callback
                    },
                    lines: {
                        // we don't put in show: false so we can see
                        // whether lines were actively disabled 
                        lineWidth: 2, // in pixels
                        fill: false,
                        fillColor: null,
                        steps: false
                    },
                    bars: {
                        show: false,
                        lineWidth: 2, // in pixels
                        barWidth: 1, // in units of the x axis
                        fill: true,
                        fillColor: null,
                        align: "left", // or "center" 
                        horizontal: false
                    },
                    shadowSize: 3
                },
                grid: {
                    show: true,
                    aboveData: false,
                    color: "#545454", // primary color used for outline and labels
                    backgroundColor: null, // null for transparent, else color
                    borderColor: null, // set if different from the grid color
                    tickColor: null, // color for the ticks, e.g. "rgba(0,0,0,0.15)"
                    labelMargin: 5, // in pixels
                    axisMargin: 8, // in pixels
                    borderWidth: 2, // in pixels
                    minBorderMargin: null, // in pixels, null means taken from points radius
                    markings: null, // array of ranges or fn: axes -> array of ranges
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    // interactive stuff
                    clickable: false,
                    hoverable: false,
                    autoHighlight: true, // highlight in case mouse is near
                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item
                },
                hooks: {}
            },
        canvas = null,      // the canvas for the plot itself
        overlay = null,     // canvas for interactive stuff on top of plot
        eventHolder = null, // jQuery object that events should be bound to
        ctx = null, octx = null,
        xaxes = [], yaxes = [],
        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},
        canvasWidth = 0, canvasHeight = 0,
        plotWidth = 0, plotHeight = 0,
        hooks = {
            processOptions: [],
            processRawData: [],
            processDatapoints: [],
            drawSeries: [],
            draw: [],
            bindEvents: [],
            drawOverlay: [],
            shutdown: []
        },
        plot = this;

        // public functions
        plot.setData = setData;
        plot.setupGrid = setupGrid;
        plot.draw = draw;
        plot.getPlaceholder = function() { return placeholder; };
        plot.getCanvas = function() { return canvas; };
        plot.getPlotOffset = function() { return plotOffset; };
        plot.width = function () { return plotWidth; };
        plot.height = function () { return plotHeight; };
        plot.offset = function () {
            var o = eventHolder.offset();
            o.left += plotOffset.left;
            o.top += plotOffset.top;
            return o;
        };
        plot.getData = function () { return series; };
        plot.getAxes = function () {
            var res = {}, i;
            $.each(xaxes.concat(yaxes), function (_, axis) {
                if (axis)
                    res[axis.direction + (axis.n != 1 ? axis.n : "") + "axis"] = axis;
            });
            return res;
        };
        plot.getXAxes = function () { return xaxes; };
        plot.getYAxes = function () { return yaxes; };
        plot.c2p = canvasToAxisCoords;
        plot.p2c = axisToCanvasCoords;
        plot.getOptions = function () { return options; };
        plot.highlight = highlight;
        plot.unhighlight = unhighlight;
        plot.triggerRedrawOverlay = triggerRedrawOverlay;
        plot.pointOffset = function(point) {
            return {
                left: parseInt(xaxes[axisNumber(point, "x") - 1].p2c(+point.x) + plotOffset.left),
                top: parseInt(yaxes[axisNumber(point, "y") - 1].p2c(+point.y) + plotOffset.top)
            };
        };
        plot.shutdown = shutdown;
        plot.resize = function () {
            getCanvasDimensions();
            resizeCanvas(canvas);
            resizeCanvas(overlay);
        };

        // public attributes
        plot.hooks = hooks;
        
        // initialize
        initPlugins(plot);
        parseOptions(options_);
        setupCanvases();
        setData(data_);
        setupGrid();
        draw();
        bindEvents();


        function executeHooks(hook, args) {
            args = [plot].concat(args);
            for (var i = 0; i < hook.length; ++i)
                hook[i].apply(this, args);
        }

        function initPlugins() {
            for (var i = 0; i < plugins.length; ++i) {
                var p = plugins[i];
                p.init(plot);
                if (p.options)
                    $.extend(true, options, p.options);
            }
        }
        
        function parseOptions(opts) {
            var i;
            
            $.extend(true, options, opts);
            
            if (options.xaxis.color == null)
                options.xaxis.color = options.grid.color;
            if (options.yaxis.color == null)
                options.yaxis.color = options.grid.color;
            
            if (options.xaxis.tickColor == null) // backwards-compatibility
                options.xaxis.tickColor = options.grid.tickColor;
            if (options.yaxis.tickColor == null) // backwards-compatibility
                options.yaxis.tickColor = options.grid.tickColor;

            if (options.grid.borderColor == null)
                options.grid.borderColor = options.grid.color;
            if (options.grid.tickColor == null)
                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();
            
            // fill in defaults in axes, copy at least always the
            // first as the rest of the code assumes it'll be there
            for (i = 0; i < Math.max(1, options.xaxes.length); ++i)
                options.xaxes[i] = $.extend(true, {}, options.xaxis, options.xaxes[i]);
            for (i = 0; i < Math.max(1, options.yaxes.length); ++i)
                options.yaxes[i] = $.extend(true, {}, options.yaxis, options.yaxes[i]);

            // backwards compatibility, to be removed in future
            if (options.xaxis.noTicks && options.xaxis.ticks == null)
                options.xaxis.ticks = options.xaxis.noTicks;
            if (options.yaxis.noTicks && options.yaxis.ticks == null)
                options.yaxis.ticks = options.yaxis.noTicks;
            if (options.x2axis) {
                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);
                options.xaxes[1].position = "top";
            }
            if (options.y2axis) {
                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);
                options.yaxes[1].position = "right";
            }
            if (options.grid.coloredAreas)
                options.grid.markings = options.grid.coloredAreas;
            if (options.grid.coloredAreasColor)
                options.grid.markingsColor = options.grid.coloredAreasColor;
            if (options.lines)
                $.extend(true, options.series.lines, options.lines);
            if (options.points)
                $.extend(true, options.series.points, options.points);
            if (options.bars)
                $.extend(true, options.series.bars, options.bars);
            if (options.shadowSize != null)
                options.series.shadowSize = options.shadowSize;

            // save options on axes for future reference
            for (i = 0; i < options.xaxes.length; ++i)
                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];
            for (i = 0; i < options.yaxes.length; ++i)
                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];

            // add hooks from options
            for (var n in hooks)
                if (options.hooks[n] && options.hooks[n].length)
                    hooks[n] = hooks[n].concat(options.hooks[n]);

            executeHooks(hooks.processOptions, [options]);
        }

        function setData(d) {
            series = parseData(d);
            fillInSeriesOptions();
            processData();
        }
        
        function parseData(d) {
            var res = [];
            for (var i = 0; i < d.length; ++i) {
                var s = $.extend(true, {}, options.series);

                if (d[i].data != null) {
                    s.data = d[i].data; // move the data instead of deep-copy
                    delete d[i].data;

                    $.extend(true, s, d[i]);

                    d[i].data = s.data;
                }
                else
                    s.data = d[i];
                res.push(s);
            }

            return res;
        }
        
        function axisNumber(obj, coord) {
            var a = obj[coord + "axis"];
            if (typeof a == "object") // if we got a real axis, extract number
                a = a.n;
            if (typeof a != "number")
                a = 1; // default to first axis
            return a;
        }

        function allAxes() {
            // return flat array without annoying null entries
            return $.grep(xaxes.concat(yaxes), function (a) { return a; });
        }
        
        function canvasToAxisCoords(pos) {
            // return an object with x/y corresponding to all used axes 
            var res = {}, i, axis;
            for (i = 0; i < xaxes.length; ++i) {
                axis = xaxes[i];
                if (axis && axis.used)
                    res["x" + axis.n] = axis.c2p(pos.left);
            }

            for (i = 0; i < yaxes.length; ++i) {
                axis = yaxes[i];
                if (axis && axis.used)
                    res["y" + axis.n] = axis.c2p(pos.top);
            }
            
            if (res.x1 !== undefined)
                res.x = res.x1;
            if (res.y1 !== undefined)
                res.y = res.y1;

            return res;
        }
        
        function axisToCanvasCoords(pos) {
            // get canvas coords from the first pair of x/y found in pos
            var res = {}, i, axis, key;

            for (i = 0; i < xaxes.length; ++i) {
                axis = xaxes[i];
                if (axis && axis.used) {
                    key = "x" + axis.n;
                    if (pos[key] == null && axis.n == 1)
                        key = "x";

                    if (pos[key] != null) {
                        res.left = axis.p2c(pos[key]);
                        break;
                    }
                }
            }
            
            for (i = 0; i < yaxes.length; ++i) {
                axis = yaxes[i];
                if (axis && axis.used) {
                    key = "y" + axis.n;
                    if (pos[key] == null && axis.n == 1)
                        key = "y";

                    if (pos[key] != null) {
                        res.top = axis.p2c(pos[key]);
                        break;
                    }
                }
            }
            
            return res;
        }
        
        function getOrCreateAxis(axes, number) {
            if (!axes[number - 1])
                axes[number - 1] = {
                    n: number, // save the number for future reference
                    direction: axes == xaxes ? "x" : "y",
                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)
                };
                
            return axes[number - 1];
        }

        function fillInSeriesOptions() {
            var i;
            
            // collect what we already got of colors
            var neededColors = series.length,
                usedColors = [],
                assignedColors = [];
            for (i = 0; i < series.length; ++i) {
                var sc = series[i].color;
                if (sc != null) {
                    --neededColors;
                    if (typeof sc == "number")
                        assignedColors.push(sc);
                    else
                        usedColors.push($.color.parse(series[i].color));
                }
            }
            
            // we might need to generate more colors if higher indices
            // are assigned
            for (i = 0; i < assignedColors.length; ++i) {
                neededColors = Math.max(neededColors, assignedColors[i] + 1);
            }

            // produce colors as needed
            var colors = [], variation = 0;
            i = 0;
            while (colors.length < neededColors) {
                var c;
                if (options.colors.length == i) // check degenerate case
                    c = $.color.make(100, 100, 100);
                else
                    c = $.color.parse(options.colors[i]);

                // vary color if needed
                var sign = variation % 2 == 1 ? -1 : 1;
                c.scale('rgb', 1 + sign * Math.ceil(variation / 2) * 0.2)

                // FIXME: if we're getting to close to something else,
                // we should probably skip this one
                colors.push(c);
                
                ++i;
                if (i >= options.colors.length) {
                    i = 0;
                    ++variation;
                }
            }

            // fill in the options
            var colori = 0, s;
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                
                // assign colors
                if (s.color == null) {
                    s.color = colors[colori].toString();
                    ++colori;
                }
                else if (typeof s.color == "number")
                    s.color = colors[s.color].toString();

                // turn on lines automatically in case nothing is set
                if (s.lines.show == null) {
                    var v, show = true;
                    for (v in s)
                        if (s[v] && s[v].show) {
                            show = false;
                            break;
                        }
                    if (show)
                        s.lines.show = true;
                }

                // setup axes
                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, "x"));
                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, "y"));
            }
        }
        
        function processData() {
            var topSentry = Number.POSITIVE_INFINITY,
                bottomSentry = Number.NEGATIVE_INFINITY,
                fakeInfinity = Number.MAX_VALUE,
                i, j, k, m, length,
                s, points, ps, x, y, axis, val, f, p;

            function updateAxis(axis, min, max) {
                if (min < axis.datamin && min != -fakeInfinity)
                    axis.datamin = min;
                if (max > axis.datamax && max != fakeInfinity)
                    axis.datamax = max;
            }

            $.each(allAxes(), function (_, axis) {
                // init axis
                axis.datamin = topSentry;
                axis.datamax = bottomSentry;
                axis.used = false;
            });
            
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                s.datapoints = { points: [] };
                
                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);
            }
            
            // first pass: clean and copy data
            for (i = 0; i < series.length; ++i) {
                s = series[i];

                var data = s.data, format = s.datapoints.format;

                if (!format) {
                    format = [];
                    // find out how to copy
                    format.push({ x: true, number: true, required: true });
                    format.push({ y: true, number: true, required: true });

                    if (s.bars.show || (s.lines.show && s.lines.fill)) {
                        format.push({ y: true, number: true, required: false, defaultValue: 0 });
                        if (s.bars.horizontal) {
                            delete format[format.length - 1].y;
                            format[format.length - 1].x = true;
                        }
                    }
                    
                    s.datapoints.format = format;
                }

                if (s.datapoints.pointsize != null)
                    continue; // already filled in

                s.datapoints.pointsize = format.length;
                
                ps = s.datapoints.pointsize;
                points = s.datapoints.points;

                insertSteps = s.lines.show && s.lines.steps;
                s.xaxis.used = s.yaxis.used = true;
                
                for (j = k = 0; j < data.length; ++j, k += ps) {
                    p = data[j];

                    var nullify = p == null;
                    if (!nullify) {
                        for (m = 0; m < ps; ++m) {
                            val = p[m];
                            f = format[m];

                            if (f) {
                                if (f.number && val != null) {
                                    val = +val; // convert to number
                                    if (isNaN(val))
                                        val = null;
                                    else if (val == Infinity)
                                        val = fakeInfinity;
                                    else if (val == -Infinity)
                                        val = -fakeInfinity;
                                }

                                if (val == null) {
                                    if (f.required)
                                        nullify = true;
                                    
                                    if (f.defaultValue != null)
                                        val = f.defaultValue;
                                }
                            }
                            
                            points[k + m] = val;
                        }
                    }
                    
                    if (nullify) {
                        for (m = 0; m < ps; ++m) {
                            val = points[k + m];
                            if (val != null) {
                                f = format[m];
                                // extract min/max info
                                if (f.x)
                                    updateAxis(s.xaxis, val, val);
                                if (f.y)
                                    updateAxis(s.yaxis, val, val);
                            }
                            points[k + m] = null;
                        }
                    }
                    else {
                        // a little bit of line specific stuff that
                        // perhaps shouldn't be here, but lacking
                        // better means...
                        if (insertSteps && k > 0
                            && points[k - ps] != null
                            && points[k - ps] != points[k]
                            && points[k - ps + 1] != points[k + 1]) {
                            // copy the point to make room for a middle point
                            for (m = 0; m < ps; ++m)
                                points[k + ps + m] = points[k + m];

                            // middle point has same y
                            points[k + 1] = points[k - ps + 1];

                            // we've added a point, better reflect that
                            k += ps;
                        }
                    }
                }
            }

            // give the hooks a chance to run
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                
                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);
            }

            // second pass: find datamax/datamin for auto-scaling
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                points = s.datapoints.points,
                ps = s.datapoints.pointsize;

                var xmin = topSentry, ymin = topSentry,
                    xmax = bottomSentry, ymax = bottomSentry;
                
                for (j = 0; j < points.length; j += ps) {
                    if (points[j] == null)
                        continue;

                    for (m = 0; m < ps; ++m) {
                        val = points[j + m];
                        f = format[m];
                        if (!f || val == fakeInfinity || val == -fakeInfinity)
                            continue;
                        
                        if (f.x) {
                            if (val < xmin)
                                xmin = val;
                            if (val > xmax)
                                xmax = val;
                        }
                        if (f.y) {
                            if (val < ymin)
                                ymin = val;
                            if (val > ymax)
                                ymax = val;
                        }
                    }
                }
                
                if (s.bars.show) {
                    // make sure we got room for the bar on the dancing floor
                    var delta = s.bars.align == "left" ? 0 : -s.bars.barWidth/2;
                    if (s.bars.horizontal) {
                        ymin += delta;
                        ymax += delta + s.bars.barWidth;
                    }
                    else {
                        xmin += delta;
                        xmax += delta + s.bars.barWidth;
                    }
                }
                
                updateAxis(s.xaxis, xmin, xmax);
                updateAxis(s.yaxis, ymin, ymax);
            }

            $.each(allAxes(), function (_, axis) {
                if (axis.datamin == topSentry)
                    axis.datamin = null;
                if (axis.datamax == bottomSentry)
                    axis.datamax = null;
            });
        }

        function makeCanvas(skipPositioning, cls) {
            var c = document.createElement('canvas');
            c.className = cls;
            c.width = canvasWidth;
            c.height = canvasHeight;
                    
            if (!skipPositioning)
                $(c).css({ position: 'absolute', left: 0, top: 0 });
                
            $(c).appendTo(placeholder);
                
            if (!c.getContext) // excanvas hack
                c = window.G_vmlCanvasManager.initElement(c);

            // used for resetting in case we get replotted
            c.getContext("2d").save();
            
            return c;
        }

        function getCanvasDimensions() {
            canvasWidth = placeholder.width();
            canvasHeight = placeholder.height();
            
            if (canvasWidth <= 0 || canvasHeight <= 0)
                throw "Invalid dimensions for plot, width = " + canvasWidth + ", height = " + canvasHeight;
        }

        function resizeCanvas(c) {
            // resizing should reset the state (excanvas seems to be
            // buggy though)
            if (c.width != canvasWidth)
                c.width = canvasWidth;

            if (c.height != canvasHeight)
                c.height = canvasHeight;

            // so try to get back to the initial state (even if it's
            // gone now, this should be safe according to the spec)
            var cctx = c.getContext("2d");
            cctx.restore();

            // and save again
            cctx.save();
        }
        
        function setupCanvases() {
            var reused,
                existingCanvas = placeholder.children("canvas.base"),
                existingOverlay = placeholder.children("canvas.overlay");

            if (existingCanvas.length == 0 || existingOverlay == 0) {
                // init everything
                
                placeholder.html(""); // make sure placeholder is clear
            
                placeholder.css({ padding: 0 }); // padding messes up the positioning
                
                if (placeholder.css("position") == 'static')
                    placeholder.css("position", "relative"); // for positioning labels and overlay

                getCanvasDimensions();
                
                canvas = makeCanvas(true, "base");
                overlay = makeCanvas(false, "overlay"); // overlay canvas for interactive features

                reused = false;
            }
            else {
                // reuse existing elements

                canvas = existingCanvas.get(0);
                overlay = existingOverlay.get(0);

                reused = true;
            }

            ctx = canvas.getContext("2d");
            octx = overlay.getContext("2d");

            // we include the canvas in the event holder too, because IE 7
            // sometimes has trouble with the stacking order
            eventHolder = $([overlay, canvas]);

            if (reused) {
                // run shutdown in the old plot object
                placeholder.data("plot").shutdown();

                // reset reused canvases
                plot.resize();
                
                // make sure overlay pixels are cleared (canvas is cleared when we redraw)
                octx.clearRect(0, 0, canvasWidth, canvasHeight);
                
                // then whack any remaining obvious garbage left
                eventHolder.unbind();
                placeholder.children().not([canvas, overlay]).remove();
            }

            // save in case we get replotted
            placeholder.data("plot", plot);
        }

        function bindEvents() {
            // bind events
            if (options.grid.hoverable) {
                eventHolder.mousemove(onMouseMove);
                eventHolder.mouseleave(onMouseLeave);
            }

            if (options.grid.clickable)
                eventHolder.click(onClick);

            executeHooks(hooks.bindEvents, [eventHolder]);
        }

        function shutdown() {
            if (redrawTimeout)
                clearTimeout(redrawTimeout);
            
            eventHolder.unbind("mousemove", onMouseMove);
            eventHolder.unbind("mouseleave", onMouseLeave);
            eventHolder.unbind("click", onClick);
            
            executeHooks(hooks.shutdown, [eventHolder]);
        }

        function setTransformationHelpers(axis) {
            // set helper functions on the axis, assumes plot area
            // has been computed already
            
            function identity(x) { return x; }
            
            var s, m, t = axis.options.transform || identity,
                it = axis.options.inverseTransform;
            
            // precompute how much the axis is scaling a point
            // in canvas space
            if (axis.direction == "x") {
                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));
                m = Math.min(t(axis.max), t(axis.min));
            }
            else {
                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));
                s = -s;
                m = Math.max(t(axis.max), t(axis.min));
            }

            // data point to canvas coordinate
            if (t == identity) // slight optimization
                axis.p2c = function (p) { return (p - m) * s; };
            else
                axis.p2c = function (p) { return (t(p) - m) * s; };
            // canvas coordinate to data point
            if (!it)
                axis.c2p = function (c) { return m + c / s; };
            else
                axis.c2p = function (c) { return it(m + c / s); };
        }

        function measureTickLabels(axis) {
            var opts = axis.options, i, ticks = axis.ticks || [], labels = [],
                l, w = opts.labelWidth, h = opts.labelHeight, dummyDiv;

            function makeDummyDiv(labels, width) {
                return $('<div style="position:absolute;top:-10000px;' + width + 'font-size:smaller">' +
                         '<div class="' + axis.direction + 'Axis ' + axis.direction + axis.n + 'Axis">'
                         + labels.join("") + '</div></div>')
                    .appendTo(placeholder);
            }
            
            if (axis.direction == "x") {
                // to avoid measuring the widths of the labels (it's slow), we
                // construct fixed-size boxes and put the labels inside
                // them, we don't need the exact figures and the
                // fixed-size box content is easy to center
                if (w == null)
                    w = Math.floor(canvasWidth / (ticks.length > 0 ? ticks.length : 1));

                // measure x label heights
                if (h == null) {
                    labels = [];
                    for (i = 0; i < ticks.length; ++i) {
                        l = ticks[i].label;
                        if (l)
                            labels.push('<div class="tickLabel" style="float:left;width:' + w + 'px">' + l + '</div>');
                    }

                    if (labels.length > 0) {
                        // stick them all in the same div and measure
                        // collective height
                        labels.push('<div style="clear:left"></div>');
                        dummyDiv = makeDummyDiv(labels, "width:10000px;");
                        h = dummyDiv.height();
                        dummyDiv.remove();
                    }
                }
            }
            else if (w == null || h == null) {
                // calculate y label dimensions
                for (i = 0; i < ticks.length; ++i) {
                    l = ticks[i].label;
                    if (l)
                        labels.push('<div class="tickLabel">' + l + '</div>');
                }
                
                if (labels.length > 0) {
                    dummyDiv = makeDummyDiv(labels, "");
                    if (w == null)
                        w = dummyDiv.children().width();
                    if (h == null)
                        h = dummyDiv.find("div.tickLabel").height();
                    dummyDiv.remove();
                }
            }

            if (w == null)
                w = 0;
            if (h == null)
                h = 0;

            axis.labelWidth = w;
            axis.labelHeight = h;
        }

        function allocateAxisBoxFirstPhase(axis) {
            // find the bounding box of the axis by looking at label
            // widths/heights and ticks, make room by diminishing the
            // plotOffset

            var lw = axis.labelWidth,
                lh = axis.labelHeight,
                pos = axis.options.position,
                tickLength = axis.options.tickLength,
                axismargin = options.grid.axisMargin,
                padding = options.grid.labelMargin,
                all = axis.direction == "x" ? xaxes : yaxes,
                index;

            // determine axis margin
            var samePosition = $.grep(all, function (a) {
                return a && a.options.position == pos && a.reserveSpace;
            });
            if ($.inArray(axis, samePosition) == samePosition.length - 1)
                axismargin = 0; // outermost

            // determine tick length - if we're innermost, we can use "full"
            if (tickLength == null)
                tickLength = "full";

            var sameDirection = $.grep(all, function (a) {
                return a && a.reserveSpace;
            });

            var innermost = $.inArray(axis, sameDirection) == 0;
            if (!innermost && tickLength == "full")
                tickLength = 5;
                
            if (!isNaN(+tickLength))
                padding += +tickLength;

            // compute box
            if (axis.direction == "x") {
                lh += padding;
                
                if (pos == "bottom") {
                    plotOffset.bottom += lh + axismargin;
                    axis.box = { top: canvasHeight - plotOffset.bottom, height: lh };
                }
                else {
                    axis.box = { top: plotOffset.top + axismargin, height: lh };
                    plotOffset.top += lh + axismargin;
                }
            }
            else {
                lw += padding;
                
                if (pos == "left") {
                    axis.box = { left: plotOffset.left + axismargin, width: lw };
                    plotOffset.left += lw + axismargin;
                }
                else {
                    plotOffset.right += lw + axismargin;
                    axis.box = { left: canvasWidth - plotOffset.right, width: lw };
                }
            }

             // save for future reference
            axis.position = pos;
            axis.tickLength = tickLength;
            axis.box.padding = padding;
            axis.innermost = innermost;
        }

        function allocateAxisBoxSecondPhase(axis) {
            // set remaining bounding box coordinates
            if (axis.direction == "x") {
                axis.box.left = plotOffset.left;
                axis.box.width = plotWidth;
            }
            else {
                axis.box.top = plotOffset.top;
                axis.box.height = plotHeight;
            }
        }
        
        function setupGrid() {
            var i, axes = allAxes();

            // first calculate the plot and axis box dimensions

            $.each(axes, function (_, axis) {
                axis.show = axis.options.show;
                if (axis.show == null)
                    axis.show = axis.used; // by default an axis is visible if it's got data
                
                axis.reserveSpace = axis.show || axis.options.reserveSpace;

                setRange(axis);
            });

            allocatedAxes = $.grep(axes, function (axis) { return axis.reserveSpace; });

            plotOffset.left = plotOffset.right = plotOffset.top = plotOffset.bottom = 0;
            if (options.grid.show) {
                $.each(allocatedAxes, function (_, axis) {
                    // make the ticks
                    setupTickGeneration(axis);
                    setTicks(axis);
                    snapRangeToTicks(axis, axis.ticks);

                    // find labelWidth/Height for axis
                    measureTickLabels(axis);
                });

                // with all dimensions in house, we can compute the
                // axis boxes, start from the outside (reverse order)
                for (i = allocatedAxes.length - 1; i >= 0; --i)
                    allocateAxisBoxFirstPhase(allocatedAxes[i]);

                // make sure we've got enough space for things that
                // might stick out
                var minMargin = options.grid.minBorderMargin;
                if (minMargin == null) {
                    minMargin = 0;
                    for (i = 0; i < series.length; ++i)
                        minMargin = Math.max(minMargin, series[i].points.radius + series[i].points.lineWidth/2);
                }
                    
                for (var a in plotOffset) {
                    plotOffset[a] += options.grid.borderWidth;
                    plotOffset[a] = Math.max(minMargin, plotOffset[a]);
                }
            }
            
            plotWidth = canvasWidth - plotOffset.left - plotOffset.right;
            plotHeight = canvasHeight - plotOffset.bottom - plotOffset.top;

            // now we got the proper plotWidth/Height, we can compute the scaling
            $.each(axes, function (_, axis) {
                setTransformationHelpers(axis);
            });

            if (options.grid.show) {
                $.each(allocatedAxes, function (_, axis) {
                    allocateAxisBoxSecondPhase(axis);
                });

                insertAxisLabels();
            }
            
            insertLegend();
        }
        
        function setRange(axis) {
            var opts = axis.options,
                min = +(opts.min != null ? opts.min : axis.datamin),
                max = +(opts.max != null ? opts.max : axis.datamax),
                delta = max - min;

            if (delta == 0.0) {
                // degenerate case
                var widen = max == 0 ? 1 : 0.01;

                if (opts.min == null)
                    min -= widen;
                // always widen max if we couldn't widen min to ensure we
                // don't fall into min == max which doesn't work
                if (opts.max == null || opts.min != null)
                    max += widen;
            }
            else {
                // consider autoscaling
                var margin = opts.autoscaleMargin;
                if (margin != null) {
                    if (opts.min == null) {
                        min -= delta * margin;
                        // make sure we don't go below zero if all values
                        // are positive
                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)
                            min = 0;
                    }
                    if (opts.max == null) {
                        max += delta * margin;
                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)
                            max = 0;
                    }
                }
            }
            axis.min = min;
            axis.max = max;
        }

        function setupTickGeneration(axis) {
            var opts = axis.options;
                
            // estimate number of ticks
            var noTicks;
            if (typeof opts.ticks == "number" && opts.ticks > 0)
                noTicks = opts.ticks;
            else
                // heuristic based on the model a*sqrt(x) fitted to
                // some data points that seemed reasonable
                noTicks = 0.3 * Math.sqrt(axis.direction == "x" ? canvasWidth : canvasHeight);

            var delta = (axis.max - axis.min) / noTicks,
                size, generator, unit, formatter, i, magn, norm;

            if (opts.mode == "time") {
                // pretty handling of time
                
                // map of app. size of time units in milliseconds
                var timeUnitSize = {
                    "second": 1000,
                    "minute": 60 * 1000,
                    "hour": 60 * 60 * 1000,
                    "day": 24 * 60 * 60 * 1000,
                    "month": 30 * 24 * 60 * 60 * 1000,
                    "year": 365.2425 * 24 * 60 * 60 * 1000
                };


                // the allowed tick sizes, after 1 year we use
                // an integer algorithm
                var spec = [
                    [1, "second"], [2, "second"], [5, "second"], [10, "second"],
                    [30, "second"], 
                    [1, "minute"], [2, "minute"], [5, "minute"], [10, "minute"],
                    [30, "minute"], 
                    [1, "hour"], [2, "hour"], [4, "hour"],
                    [8, "hour"], [12, "hour"],
                    [1, "day"], [2, "day"], [3, "day"],
                    [0.25, "month"], [0.5, "month"], [1, "month"],
                    [2, "month"], [3, "month"], [6, "month"],
                    [1, "year"]
                ];

                var minSize = 0;
                if (opts.minTickSize != null) {
                    if (typeof opts.tickSize == "number")
                        minSize = opts.tickSize;
                    else
                        minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];
                }

                for (var i = 0; i < spec.length - 1; ++i)
                    if (delta < (spec[i][0] * timeUnitSize[spec[i][1]]
                                 + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2
                       && spec[i][0] * timeUnitSize[spec[i][1]] >= minSize)
                        break;
                size = spec[i][0];
                unit = spec[i][1];
                
                // special-case the possibility of several years
                if (unit == "year") {
                    magn = Math.pow(10, Math.floor(Math.log(delta / timeUnitSize.year) / Math.LN10));
                    norm = (delta / timeUnitSize.year) / magn;
                    if (norm < 1.5)
                        size = 1;
                    else if (norm < 3)
                        size = 2;
                    else if (norm < 7.5)
                        size = 5;
                    else
                        size = 10;

                    size *= magn;
                }

                axis.tickSize = opts.tickSize || [size, unit];
                
                generator = function(axis) {
                    var ticks = [],
                        tickSize = axis.tickSize[0], unit = axis.tickSize[1],
                        d = new Date(axis.min);
                    
                    var step = tickSize * timeUnitSize[unit];

                    if (unit == "second")
                        d.setUTCSeconds(floorInBase(d.getUTCSeconds(), tickSize));
                    if (unit == "minute")
                        d.setUTCMinutes(floorInBase(d.getUTCMinutes(), tickSize));
                    if (unit == "hour")
                        d.setUTCHours(floorInBase(d.getUTCHours(), tickSize));
                    if (unit == "month")
                        d.setUTCMonth(floorInBase(d.getUTCMonth(), tickSize));
                    if (unit == "year")
                        d.setUTCFullYear(floorInBase(d.getUTCFullYear(), tickSize));
                    
                    // reset smaller components
                    d.setUTCMilliseconds(0);
                    if (step >= timeUnitSize.minute)
                        d.setUTCSeconds(0);
                    if (step >= timeUnitSize.hour)
                        d.setUTCMinutes(0);
                    if (step >= timeUnitSize.day)
                        d.setUTCHours(0);
                    if (step >= timeUnitSize.day * 4)
                        d.setUTCDate(1);
                    if (step >= timeUnitSize.year)
                        d.setUTCMonth(0);


                    var carry = 0, v = Number.NaN, prev;
                    do {
                        prev = v;
                        v = d.getTime();
                        ticks.push(v);
                        if (unit == "month") {
                            if (tickSize < 1) {
                                // a bit complicated - we'll divide the month
                                // up but we need to take care of fractions
                                // so we don't end up in the middle of a day
                                d.setUTCDate(1);
                                var start = d.getTime();
                                d.setUTCMonth(d.getUTCMonth() + 1);
                                var end = d.getTime();
                                d.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);
                                carry = d.getUTCHours();
                                d.setUTCHours(0);
                            }
                            else
                                d.setUTCMonth(d.getUTCMonth() + tickSize);
                        }
                        else if (unit == "year") {
                            d.setUTCFullYear(d.getUTCFullYear() + tickSize);
                        }
                        else
                            d.setTime(v + step);
                    } while (v < axis.max && v != prev);

                    return ticks;
                };

                formatter = function (v, axis) {
                    var d = new Date(v);

                    // first check global format
                    if (opts.timeformat != null)
                        return $.plot.formatDate(d, opts.timeformat, opts.monthNames);
                    
                    var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];
                    var span = axis.max - axis.min;
                    var suffix = (opts.twelveHourClock) ? " %p" : "";
                    
                    if (t < timeUnitSize.minute)
                        fmt = "%h:%M:%S" + suffix;
                    else if (t < timeUnitSize.day) {
                        if (span < 2 * timeUnitSize.day)
                            fmt = "%h:%M" + suffix;
                        else
                            fmt = "%b %d %h:%M" + suffix;
                    }
                    else if (t < timeUnitSize.month)
                        fmt = "%b %d";
                    else if (t < timeUnitSize.year) {
                        if (span < timeUnitSize.year)
                            fmt = "%b";
                        else
                            fmt = "%b %y";
                    }
                    else
                        fmt = "%y";
                    
                    return $.plot.formatDate(d, fmt, opts.monthNames);
                };
            }
            else {
                // pretty rounding of base-10 numbers
                var maxDec = opts.tickDecimals;
                var dec = -Math.floor(Math.log(delta) / Math.LN10);
                if (maxDec != null && dec > maxDec)
                    dec = maxDec;

                magn = Math.pow(10, -dec);
                norm = delta / magn; // norm is between 1.0 and 10.0
                
                if (norm < 1.5)
                    size = 1;
                else if (norm < 3) {
                    size = 2;
                    // special case for 2.5, requires an extra decimal
                    if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {
                        size = 2.5;
                        ++dec;
                    }
                }
                else if (norm < 7.5)
                    size = 5;
                else
                    size = 10;

                size *= magn;
                
                if (opts.minTickSize != null && size < opts.minTickSize)
                    size = opts.minTickSize;

                axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);
                axis.tickSize = opts.tickSize || size;

                generator = function (axis) {
                    var ticks = [];

                    // spew out all possible ticks
                    var start = floorInBase(axis.min, axis.tickSize),
                        i = 0, v = Number.NaN, prev;
                    do {
                        prev = v;
                        v = start + i * axis.tickSize;
                        ticks.push(v);
                        ++i;
                    } while (v < axis.max && v != prev);
                    return ticks;
                };

                formatter = function (v, axis) {
                    return v.toFixed(axis.tickDecimals);
                };
            }

            if (opts.alignTicksWithAxis != null) {
                var otherAxis = (axis.direction == "x" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];
                if (otherAxis && otherAxis.used && otherAxis != axis) {
                    // consider snapping min/max to outermost nice ticks
                    var niceTicks = generator(axis);
                    if (niceTicks.length > 0) {
                        if (opts.min == null)
                            axis.min = Math.min(axis.min, niceTicks[0]);
                        if (opts.max == null && niceTicks.length > 1)
                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);
                    }
                    
                    generator = function (axis) {
                        // copy ticks, scaled to this axis
                        var ticks = [], v, i;
                        for (i = 0; i < otherAxis.ticks.length; ++i) {
                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);
                            v = axis.min + v * (axis.max - axis.min);
                            ticks.push(v);
                        }
                        return ticks;
                    };
                    
                    // we might need an extra decimal since forced
                    // ticks don't necessarily fit naturally
                    if (axis.mode != "time" && opts.tickDecimals == null) {
                        var extraDec = Math.max(0, -Math.floor(Math.log(delta) / Math.LN10) + 1),
                            ts = generator(axis);

                        // only proceed if the tick interval rounded
                        // with an extra decimal doesn't give us a
                        // zero at end
                        if (!(ts.length > 1 && /\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))
                            axis.tickDecimals = extraDec;
                    }
                }
            }

            axis.tickGenerator = generator;
            if ($.isFunction(opts.tickFormatter))
                axis.tickFormatter = function (v, axis) { return "" + opts.tickFormatter(v, axis); };
            else
                axis.tickFormatter = formatter;
        }
        
        function setTicks(axis) {
            var oticks = axis.options.ticks, ticks = [];
            if (oticks == null || (typeof oticks == "number" && oticks > 0))
                ticks = axis.tickGenerator(axis);
            else if (oticks) {
                if ($.isFunction(oticks))
                    // generate the ticks
                    ticks = oticks({ min: axis.min, max: axis.max });
                else
                    ticks = oticks;
            }

            // clean up/labelify the supplied ticks, copy them over
            var i, v;
            axis.ticks = [];
            for (i = 0; i < ticks.length; ++i) {
                var label = null;
                var t = ticks[i];
                if (typeof t == "object") {
                    v = +t[0];
                    if (t.length > 1)
                        label = t[1];
                }
                else
                    v = +t;
                if (label == null)
                    label = axis.tickFormatter(v, axis);
                if (!isNaN(v))
                    axis.ticks.push({ v: v, label: label });
            }
        }

        function snapRangeToTicks(axis, ticks) {
            if (axis.options.autoscaleMargin && ticks.length > 0) {
                // snap to ticks
                if (axis.options.min == null)
                    axis.min = Math.min(axis.min, ticks[0].v);
                if (axis.options.max == null && ticks.length > 1)
                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);
            }
        }
      
        function draw() {
            ctx.clearRect(0, 0, canvasWidth, canvasHeight);

            var grid = options.grid;

            // draw background, if any
            if (grid.show && grid.backgroundColor)
                drawBackground();
            
            if (grid.show && !grid.aboveData)
                drawGrid();

            for (var i = 0; i < series.length; ++i) {
                executeHooks(hooks.drawSeries, [ctx, series[i]]);
                drawSeries(series[i]);
            }

            executeHooks(hooks.draw, [ctx]);
            
            if (grid.show && grid.aboveData)
                drawGrid();
        }

        function extractRange(ranges, coord) {
            var axis, from, to, key, axes = allAxes();

            for (i = 0; i < axes.length; ++i) {
                axis = axes[i];
                if (axis.direction == coord) {
                    key = coord + axis.n + "axis";
                    if (!ranges[key] && axis.n == 1)
                        key = coord + "axis"; // support x1axis as xaxis
                    if (ranges[key]) {
                        from = ranges[key].from;
                        to = ranges[key].to;
                        break;
                    }
                }
            }

            // backwards-compat stuff - to be removed in future
            if (!ranges[key]) {
                axis = coord == "x" ? xaxes[0] : yaxes[0];
                from = ranges[coord + "1"];
                to = ranges[coord + "2"];
            }

            // auto-reverse as an added bonus
            if (from != null && to != null && from > to) {
                var tmp = from;
                from = to;
                to = tmp;
            }
            
            return { from: from, to: to, axis: axis };
        }
        
        function drawBackground() {
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, "rgba(255, 255, 255, 0)");
            ctx.fillRect(0, 0, plotWidth, plotHeight);
            ctx.restore();
        }

        function drawGrid() {
            var i;
            
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            // draw markings
            var markings = options.grid.markings;
            if (markings) {
                if ($.isFunction(markings)) {
                    var axes = plot.getAxes();
                    // xmin etc. is backwards compatibility, to be
                    // removed in the future
                    axes.xmin = axes.xaxis.min;
                    axes.xmax = axes.xaxis.max;
                    axes.ymin = axes.yaxis.min;
                    axes.ymax = axes.yaxis.max;
                    
                    markings = markings(axes);
                }

                for (i = 0; i < markings.length; ++i) {
                    var m = markings[i],
                        xrange = extractRange(m, "x"),
                        yrange = extractRange(m, "y");

                    // fill in missing
                    if (xrange.from == null)
                        xrange.from = xrange.axis.min;
                    if (xrange.to == null)
                        xrange.to = xrange.axis.max;
                    if (yrange.from == null)
                        yrange.from = yrange.axis.min;
                    if (yrange.to == null)
                        yrange.to = yrange.axis.max;

                    // clip
                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||
                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)
                        continue;

                    xrange.from = Math.max(xrange.from, xrange.axis.min);
                    xrange.to = Math.min(xrange.to, xrange.axis.max);
                    yrange.from = Math.max(yrange.from, yrange.axis.min);
                    yrange.to = Math.min(yrange.to, yrange.axis.max);

                    if (xrange.from == xrange.to && yrange.from == yrange.to)
                        continue;

                    // then draw
                    xrange.from = xrange.axis.p2c(xrange.from);
                    xrange.to = xrange.axis.p2c(xrange.to);
                    yrange.from = yrange.axis.p2c(yrange.from);
                    yrange.to = yrange.axis.p2c(yrange.to);
                    
                    if (xrange.from == xrange.to || yrange.from == yrange.to) {
                        // draw line
                        ctx.beginPath();
                        ctx.strokeStyle = m.color || options.grid.markingsColor;
                        ctx.lineWidth = m.lineWidth || options.grid.markingsLineWidth;
                        ctx.moveTo(xrange.from, yrange.from);
                        ctx.lineTo(xrange.to, yrange.to);
                        ctx.stroke();
                    }
                    else {
                        // fill area
                        ctx.fillStyle = m.color || options.grid.markingsColor;
                        ctx.fillRect(xrange.from, yrange.to,
                                     xrange.to - xrange.from,
                                     yrange.from - yrange.to);
                    }
                }
            }
            
            // draw the ticks
            var axes = allAxes(), bw = options.grid.borderWidth;

            for (var j = 0; j < axes.length; ++j) {
                var axis = axes[j], box = axis.box,
                    t = axis.tickLength, x, y, xoff, yoff;
                if (!axis.show || axis.ticks.length == 0)
                    continue
                
                ctx.strokeStyle = axis.options.tickColor || $.color.parse(axis.options.color).scale('a', 0.22).toString();
                ctx.lineWidth = 1;

                // find the edges
                if (axis.direction == "x") {
                    x = 0;
                    if (t == "full")
                        y = (axis.position == "top" ? 0 : plotHeight);
                    else
                        y = box.top - plotOffset.top + (axis.position == "top" ? box.height : 0);
                }
                else {
                    y = 0;
                    if (t == "full")
                        x = (axis.position == "left" ? 0 : plotWidth);
                    else
                        x = box.left - plotOffset.left + (axis.position == "left" ? box.width : 0);
                }
                
                // draw tick bar
                if (!axis.innermost) {
                    ctx.beginPath();
                    xoff = yoff = 0;
                    if (axis.direction == "x")
                        xoff = plotWidth;
                    else
                        yoff = plotHeight;
                    
                    if (ctx.lineWidth == 1) {
                        x = Math.floor(x) + 0.5;
                        y = Math.floor(y) + 0.5;
                    }

                    ctx.moveTo(x, y);
                    ctx.lineTo(x + xoff, y + yoff);
                    ctx.stroke();
                }

                // draw ticks
                ctx.beginPath();
                for (i = 0; i < axis.ticks.length; ++i) {
                    var v = axis.ticks[i].v;
                    
                    xoff = yoff = 0;

                    if (v < axis.min || v > axis.max
                        // skip those lying on the axes if we got a border
                        || (t == "full" && bw > 0
                            && (v == axis.min || v == axis.max)))
                        continue;

                    if (axis.direction == "x") {
                        x = axis.p2c(v);
                        yoff = t == "full" ? -plotHeight : t;
                        
                        if (axis.position == "top")
                            yoff = -yoff;
                    }
                    else {
                        y = axis.p2c(v);
                        xoff = t == "full" ? -plotWidth : t;
                        
                        if (axis.position == "left")
                            xoff = -xoff;
                    }

                    if (ctx.lineWidth == 1) {
                        if (axis.direction == "x")
                            x = Math.floor(x) + 0.5;
                        else
                            y = Math.floor(y) + 0.5;
                    }

                    ctx.moveTo(x, y);
                    ctx.lineTo(x + xoff, y + yoff);
                }
                
                ctx.stroke();
            }
            
            
            // draw border
            if (bw) {
                ctx.lineWidth = bw;
                ctx.strokeStyle = options.grid.borderColor;
                ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);
            }

            ctx.restore();
        }

        function insertAxisLabels() {
            placeholder.find(".tickLabels").remove();
            
            var html = ['<div class="tickLabels" style="font-size:smaller">'];

            var axes = allAxes();
            for (var j = 0; j < axes.length; ++j) {
                var axis = axes[j], box = axis.box;
                if (!axis.show)
                    continue;
                //debug: html.push('<div style="position:absolute;opacity:0.10;background-color:red;left:' + box.left + 'px;top:' + box.top + 'px;width:' + box.width +  'px;height:' + box.height + 'px"></div>')
                html.push('<div class="' + axis.direction + 'Axis ' + axis.direction + axis.n + 'Axis" style="color:' + axis.options.color + '">');
                for (var i = 0; i < axis.ticks.length; ++i) {
                    var tick = axis.ticks[i];
                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)
                        continue;

                    var pos = {}, align;
                    
                    if (axis.direction == "x") {
                        align = "center";
                        pos.left = Math.round(plotOffset.left + axis.p2c(tick.v) - axis.labelWidth/2);
                        if (axis.position == "bottom")
                            pos.top = box.top + box.padding;
                        else
                            pos.bottom = canvasHeight - (box.top + box.height - box.padding);
                    }
                    else {
                        pos.top = Math.round(plotOffset.top + axis.p2c(tick.v) - axis.labelHeight/2);
                        if (axis.position == "left") {
                            pos.right = canvasWidth - (box.left + box.width - box.padding)
                            align = "right";
                        }
                        else {
                            pos.left = box.left + box.padding;
                            align = "left";
                        }
                    }

                    pos.width = axis.labelWidth;

                    var style = ["position:absolute", "text-align:" + align ];
                    for (var a in pos)
                        style.push(a + ":" + pos[a] + "px")
                    
                    html.push('<div class="tickLabel" style="' + style.join(';') + '">' + tick.label + '</div>');
                }
                html.push('</div>');
            }

            html.push('</div>');

            placeholder.append(html.join(""));
        }

        function drawSeries(series) {
            if (series.lines.show)
                drawSeriesLines(series);
            if (series.bars.show)
                drawSeriesBars(series);
            if (series.points.show)
                drawSeriesPoints(series);
        }
        
        function drawSeriesLines(series) {
            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {
                var points = datapoints.points,
                    ps = datapoints.pointsize,
                    prevx = null, prevy = null;
                
                ctx.beginPath();
                for (var i = ps; i < points.length; i += ps) {
                    var x1 = points[i - ps], y1 = points[i - ps + 1],
                        x2 = points[i], y2 = points[i + 1];
                    
                    if (x1 == null || x2 == null)
                        continue;

                    // clip with ymin
                    if (y1 <= y2 && y1 < axisy.min) {
                        if (y2 < axisy.min)
                            continue;   // line segment is outside
                        // compute new intersection point
                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.min;
                    }
                    else if (y2 <= y1 && y2 < axisy.min) {
                        if (y1 < axisy.min)
                            continue;
                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.min;
                    }

                    // clip with ymax
                    if (y1 >= y2 && y1 > axisy.max) {
                        if (y2 > axisy.max)
                            continue;
                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.max;
                    }
                    else if (y2 >= y1 && y2 > axisy.max) {
                        if (y1 > axisy.max)
                            continue;
                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.max;
                    }

                    // clip with xmin
                    if (x1 <= x2 && x1 < axisx.min) {
                        if (x2 < axisx.min)
                            continue;
                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.min;
                    }
                    else if (x2 <= x1 && x2 < axisx.min) {
                        if (x1 < axisx.min)
                            continue;
                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.min;
                    }

                    // clip with xmax
                    if (x1 >= x2 && x1 > axisx.max) {
                        if (x2 > axisx.max)
                            continue;
                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.max;
                    }
                    else if (x2 >= x1 && x2 > axisx.max) {
                        if (x1 > axisx.max)
                            continue;
                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.max;
                    }

                    if (x1 != prevx || y1 != prevy)
                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);
                    
                    prevx = x2;
                    prevy = y2;
                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);
                }
                ctx.stroke();
            }

            function plotLineArea(datapoints, axisx, axisy) {
                var points = datapoints.points,
                    ps = datapoints.pointsize,
                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),
                    i = 0, top, areaOpen = false,
                    ypos = 1, segmentStart = 0, segmentEnd = 0;

                // we process each segment in two turns, first forward
                // direction to sketch out top, then once we hit the
                // end we go backwards to sketch the bottom
                while (true) {
                    if (ps > 0 && i > points.length + ps)
                        break;

                    i += ps; // ps is negative if going backwards

                    var x1 = points[i - ps],
                        y1 = points[i - ps + ypos],
                        x2 = points[i], y2 = points[i + ypos];

                    if (areaOpen) {
                        if (ps > 0 && x1 != null && x2 == null) {
                            // at turning point
                            segmentEnd = i;
                            ps = -ps;
                            ypos = 2;
                            continue;
                        }

                        if (ps < 0 && i == segmentStart + ps) {
                            // done with the reverse sweep
                            ctx.fill();
                            areaOpen = false;
                            ps = -ps;
                            ypos = 1;
                            i = segmentStart = segmentEnd + ps;
                            continue;
                        }
                    }

                    if (x1 == null || x2 == null)
                        continue;

                    // clip x values
                    
                    // clip with xmin
                    if (x1 <= x2 && x1 < axisx.min) {
                        if (x2 < axisx.min)
                            continue;
                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.min;
                    }
                    else if (x2 <= x1 && x2 < axisx.min) {
                        if (x1 < axisx.min)
                            continue;
                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.min;
                    }

                    // clip with xmax
                    if (x1 >= x2 && x1 > axisx.max) {
                        if (x2 > axisx.max)
                            continue;
                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.max;
                    }
                    else if (x2 >= x1 && x2 > axisx.max) {
                        if (x1 > axisx.max)
                            continue;
                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.max;
                    }

                    if (!areaOpen) {
                        // open area
                        ctx.beginPath();
                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));
                        areaOpen = true;
                    }
                    
                    // now first check the case where both is outside
                    if (y1 >= axisy.max && y2 >= axisy.max) {
                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));
                        continue;
                    }
                    else if (y1 <= axisy.min && y2 <= axisy.min) {
                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));
                        continue;
                    }
                    
                    // else it's a bit more complicated, there might
                    // be a flat maxed out rectangle first, then a
                    // triangular cutout or reverse; to find these
                    // keep track of the current x values
                    var x1old = x1, x2old = x2;

                    // clip the y values, without shortcutting, we
                    // go through all cases in turn
                    
                    // clip with ymin
                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {
                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.min;
                    }
                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {
                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.min;
                    }

                    // clip with ymax
                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {
                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.max;
                    }
                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {
                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.max;
                    }

                    // if the x value was changed we got a rectangle
                    // to fill
                    if (x1 != x1old) {
                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));
                        // it goes to (x1, y1), but we fill that below
                    }
                    
                    // fill triangular section, this sometimes result
                    // in redundant points if (x1, y1) hasn't changed
                    // from previous line to, but we just ignore that
                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));
                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));

                    // fill the other rectangle if it's there
                    if (x2 != x2old) {
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));
                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));
                    }
                }
            }

            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);
            ctx.lineJoin = "round";

            var lw = series.lines.lineWidth,
                sw = series.shadowSize;
            // FIXME: consider another form of shadow when filling is turned on
            if (lw > 0 && sw > 0) {
                // draw shadow as a thick and thin line with transparency
                ctx.lineWidth = sw;
                ctx.strokeStyle = "rgba(0,0,0,0.1)";
                // position shadow at angle from the mid of line
                var angle = Math.PI/18;
                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);
                ctx.lineWidth = sw/2;
                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);
            }

            ctx.lineWidth = lw;
            ctx.strokeStyle = series.color;
            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);
            if (fillStyle) {
                ctx.fillStyle = fillStyle;
                plotLineArea(series.datapoints, series.xaxis, series.yaxis);
            }

            if (lw > 0)
                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);
            ctx.restore();
        }

        function drawSeriesPoints(series) {
            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {
                var points = datapoints.points, ps = datapoints.pointsize;

                for (var i = 0; i < points.length; i += ps) {
                    var x = points[i], y = points[i + 1];
                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)
                        continue;
                    
                    ctx.beginPath();
                    x = axisx.p2c(x);
                    y = axisy.p2c(y) + offset;
                    if (symbol == "circle")
                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);
                    else
                        symbol(ctx, x, y, radius, shadow);
                    ctx.closePath();
                    
                    if (fillStyle) {
                        ctx.fillStyle = fillStyle;
                        ctx.fill();
                    }
                    ctx.stroke();
                }
            }
            
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            var lw = series.points.lineWidth,
                sw = series.shadowSize,
                radius = series.points.radius,
                symbol = series.points.symbol;
            if (lw > 0 && sw > 0) {
                // draw shadow in two steps
                var w = sw / 2;
                ctx.lineWidth = w;
                ctx.strokeStyle = "rgba(0,0,0,0.1)";
                plotPoints(series.datapoints, radius, null, w + w/2, true,
                           series.xaxis, series.yaxis, symbol);

                ctx.strokeStyle = "rgba(0,0,0,0.2)";
                plotPoints(series.datapoints, radius, null, w/2, true,
                           series.xaxis, series.yaxis, symbol);
            }

            ctx.lineWidth = lw;
            ctx.strokeStyle = series.color;
            plotPoints(series.datapoints, radius,
                       getFillStyle(series.points, series.color), 0, false,
                       series.xaxis, series.yaxis, symbol);
            ctx.restore();
        }

        function drawBar(x, y, b, barLeft, barRight, offset, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {
            var left, right, bottom, top,
                drawLeft, drawRight, drawTop, drawBottom,
                tmp;

            // in horizontal mode, we start the bar from the left
            // instead of from the bottom so it appears to be
            // horizontal rather than vertical
            if (horizontal) {
                drawBottom = drawRight = drawTop = true;
                drawLeft = false;
                left = b;
                right = x;
                top = y + barLeft;
                bottom = y + barRight;

                // account for negative bars
                if (right < left) {
                    tmp = right;
                    right = left;
                    left = tmp;
                    drawLeft = true;
                    drawRight = false;
                }
            }
            else {
                drawLeft = drawRight = drawTop = true;
                drawBottom = false;
                left = x + barLeft;
                right = x + barRight;
                bottom = b;
                top = y;

                // account for negative bars
                if (top < bottom) {
                    tmp = top;
                    top = bottom;
                    bottom = tmp;
                    drawBottom = true;
                    drawTop = false;
                }
            }
           
            // clip
            if (right < axisx.min || left > axisx.max ||
                top < axisy.min || bottom > axisy.max)
                return;
            
            if (left < axisx.min) {
                left = axisx.min;
                drawLeft = false;
            }

            if (right > axisx.max) {
                right = axisx.max;
                drawRight = false;
            }

            if (bottom < axisy.min) {
                bottom = axisy.min;
                drawBottom = false;
            }
            
            if (top > axisy.max) {
                top = axisy.max;
                drawTop = false;
            }

            left = axisx.p2c(left);
            bottom = axisy.p2c(bottom);
            right = axisx.p2c(right);
            top = axisy.p2c(top);
            
            // fill the bar
            if (fillStyleCallback) {
                c.beginPath();
                c.moveTo(left, bottom);
                c.lineTo(left, top);
                c.lineTo(right, top);
                c.lineTo(right, bottom);
                c.fillStyle = fillStyleCallback(bottom, top);
                c.fill();
            }

            // draw outline
            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {
                c.beginPath();

                // FIXME: inline moveTo is buggy with excanvas
                c.moveTo(left, bottom + offset);
                if (drawLeft)
                    c.lineTo(left, top + offset);
                else
                    c.moveTo(left, top + offset);
                if (drawTop)
                    c.lineTo(right, top + offset);
                else
                    c.moveTo(right, top + offset);
                if (drawRight)
                    c.lineTo(right, bottom + offset);
                else
                    c.moveTo(right, bottom + offset);
                if (drawBottom)
                    c.lineTo(left, bottom + offset);
                else
                    c.moveTo(left, bottom + offset);
                c.stroke();
            }
        }
        
        function drawSeriesBars(series) {
            function plotBars(datapoints, barLeft, barRight, offset, fillStyleCallback, axisx, axisy) {
                var points = datapoints.points, ps = datapoints.pointsize;
                
                for (var i = 0; i < points.length; i += ps) {
                    if (points[i] == null)
                        continue;
                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, offset, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);
                }
            }

            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            // FIXME: figure out a way to add shadows (for instance along the right edge)
            ctx.lineWidth = series.bars.lineWidth;
            ctx.strokeStyle = series.color;
            var barLeft = series.bars.align == "left" ? 0 : -series.bars.barWidth/2;
            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;
            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, 0, fillStyleCallback, series.xaxis, series.yaxis);
            ctx.restore();
        }

        function getFillStyle(filloptions, seriesColor, bottom, top) {
            var fill = filloptions.fill;
            if (!fill)
                return null;

            if (filloptions.fillColor)
                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);
            
            var c = $.color.parse(seriesColor);
            c.a = typeof fill == "number" ? fill : 0.4;
            c.normalize();
            return c.toString();
        }
        
        function insertLegend() {
            placeholder.find(".legend").remove();

            if (!options.legend.show)
                return;
            
            var fragments = [], rowStarted = false,
                lf = options.legend.labelFormatter, s, label;
            for (var i = 0; i < series.length; ++i) {
                s = series[i];
                label = s.label;
                if (!label)
                    continue;
                
                if (i % options.legend.noColumns == 0) {
                    if (rowStarted)
                        fragments.push('</tr>');
                    fragments.push('<tr>');
                    rowStarted = true;
                }

                if (lf)
                    label = lf(label, s);
                
                fragments.push(
                    '<td class="legendColorBox"><div style="border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + s.color + ';overflow:hidden"></div></div></td>' +
                    '<td class="legendLabel">' + label + '</td>');
            }
            if (rowStarted)
                fragments.push('</tr>');
            
            if (fragments.length == 0)
                return;

            var table = '<table style="font-size:smaller;color:' + options.grid.color + '">' + fragments.join("") + '</table>';
            if (options.legend.container != null)
                $(options.legend.container).html(table);
            else {
                var pos = "",
                    p = options.legend.position,
                    m = options.legend.margin;
                if (m[0] == null)
                    m = [m, m];
                if (p.charAt(0) == "n")
                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';
                else if (p.charAt(0) == "s")
                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';
                if (p.charAt(1) == "e")
                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';
                else if (p.charAt(1) == "w")
                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';
                var legend = $('<div class="legend">' + table.replace('style="', 'style="position:absolute;' + pos +';') + '</div>').appendTo(placeholder);
                if (options.legend.backgroundOpacity != 0.0) {
                    // put in the transparent background
                    // separately to avoid blended labels and
                    // label boxes
                    var c = options.legend.backgroundColor;
                    if (c == null) {
                        c = options.grid.backgroundColor;
                        if (c && typeof c == "string")
                            c = $.color.parse(c);
                        else
                            c = $.color.extract(legend, 'background-color');
                        c.a = 1;
                        c = c.toString();
                    }
                    var div = legend.children();
                    $('<div style="position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);
                }
            }
        }


        // interactive features
        
        var highlights = [],
            redrawTimeout = null;
        
        // returns the data item the mouse is over, or null if none is found
        function findNearbyItem(mouseX, mouseY, seriesFilter) {
            var maxDistance = options.grid.mouseActiveRadius,
                smallestDistance = maxDistance * maxDistance + 1,
                item = null, foundPoint = false, i, j;

            for (i = series.length - 1; i >= 0; --i) {
                if (!seriesFilter(series[i]))
                    continue;
                
                var s = series[i],
                    axisx = s.xaxis,
                    axisy = s.yaxis,
                    points = s.datapoints.points,
                    ps = s.datapoints.pointsize,
                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster
                    my = axisy.c2p(mouseY),
                    maxx = maxDistance / axisx.scale,
                    maxy = maxDistance / axisy.scale;

                // with inverse transforms, we can't use the maxx/maxy
                // optimization, sadly
                if (axisx.options.inverseTransform)
                    maxx = Number.MAX_VALUE;
                if (axisy.options.inverseTransform)
                    maxy = Number.MAX_VALUE;
                
                if (s.lines.show || s.points.show) {
                    for (j = 0; j < points.length; j += ps) {
                        var x = points[j], y = points[j + 1];
                        if (x == null)
                            continue;
                        
                        // For points and lines, the cursor must be within a
                        // certain distance to the data point
                        if (x - mx > maxx || x - mx < -maxx ||
                            y - my > maxy || y - my < -maxy)
                            continue;

                        // We have to calculate distances in pixels, not in
                        // data units, because the scales of the axes may be different
                        var dx = Math.abs(axisx.p2c(x) - mouseX),
                            dy = Math.abs(axisy.p2c(y) - mouseY),
                            dist = dx * dx + dy * dy; // we save the sqrt

                        // use <= to ensure last point takes precedence
                        // (last generally means on top of)
                        if (dist < smallestDistance) {
                            smallestDistance = dist;
                            item = [i, j / ps];
                        }
                    }
                }
                    
                if (s.bars.show && !item) { // no other point can be nearby
                    var barLeft = s.bars.align == "left" ? 0 : -s.bars.barWidth/2,
                        barRight = barLeft + s.bars.barWidth;
                    
                    for (j = 0; j < points.length; j += ps) {
                        var x = points[j], y = points[j + 1], b = points[j + 2];
                        if (x == null)
                            continue;
  
                        // for a bar graph, the cursor must be inside the bar
                        if (series[i].bars.horizontal ? 
                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) && 
                             my >= y + barLeft && my <= y + barRight) :
                            (mx >= x + barLeft && mx <= x + barRight &&
                             my >= Math.min(b, y) && my <= Math.max(b, y)))
                                item = [i, j / ps];
                    }
                }
            }

            if (item) {
                i = item[0];
                j = item[1];
                ps = series[i].datapoints.pointsize;
                
                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),
                         dataIndex: j,
                         series: series[i],
                         seriesIndex: i };
            }
            
            return null;
        }

        function onMouseMove(e) {
            if (options.grid.hoverable)
                triggerClickHoverEvent("plothover", e,
                                       function (s) { return s["hoverable"] != false; });
        }

        function onMouseLeave(e) {
            if (options.grid.hoverable)
                triggerClickHoverEvent("plothover", e,
                                       function (s) { return false; });
        }

        function onClick(e) {
            triggerClickHoverEvent("plotclick", e,
                                   function (s) { return s["clickable"] != false; });
        }

        // trigger click or hover event (they send the same parameters
        // so we share their code)
        function triggerClickHoverEvent(eventname, event, seriesFilter) {
            var offset = eventHolder.offset(),
                canvasX = event.pageX - offset.left - plotOffset.left,
                canvasY = event.pageY - offset.top - plotOffset.top,
            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });

            pos.pageX = event.pageX;
            pos.pageY = event.pageY;

            var item = findNearbyItem(canvasX, canvasY, seriesFilter);

            if (item) {
                // fill in mouse pos for any listeners out there
                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left);
                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top);
            }

            if (options.grid.autoHighlight) {
                // clear auto-highlights
                for (var i = 0; i < highlights.length; ++i) {
                    var h = highlights[i];
                    if (h.auto == eventname &&
                        !(item && h.series == item.series &&
                          h.point[0] == item.datapoint[0] &&
                          h.point[1] == item.datapoint[1]))
                        unhighlight(h.series, h.point);
                }
                
                if (item)
                    highlight(item.series, item.datapoint, eventname);
            }
            
            placeholder.trigger(eventname, [ pos, item ]);
        }

        function triggerRedrawOverlay() {
            if (!redrawTimeout)
                redrawTimeout = setTimeout(drawOverlay, 30);
        }

        function drawOverlay() {
            redrawTimeout = null;

            // draw highlights
            octx.save();
            octx.clearRect(0, 0, canvasWidth, canvasHeight);
            octx.translate(plotOffset.left, plotOffset.top);
            
            var i, hi;
            for (i = 0; i < highlights.length; ++i) {
                hi = highlights[i];

                if (hi.series.bars.show)
                    drawBarHighlight(hi.series, hi.point);
                else
                    drawPointHighlight(hi.series, hi.point);
            }
            octx.restore();
            
            executeHooks(hooks.drawOverlay, [octx]);
        }
        
        function highlight(s, point, auto) {
            if (typeof s == "number")
                s = series[s];

            if (typeof point == "number") {
                var ps = s.datapoints.pointsize;
                point = s.datapoints.points.slice(ps * point, ps * (point + 1));
            }

            var i = indexOfHighlight(s, point);
            if (i == -1) {
                highlights.push({ series: s, point: point, auto: auto });

                triggerRedrawOverlay();
            }
            else if (!auto)
                highlights[i].auto = false;
        }
            
        function unhighlight(s, point) {
            if (s == null && point == null) {
                highlights = [];
                triggerRedrawOverlay();
            }
            
            if (typeof s == "number")
                s = series[s];

            if (typeof point == "number")
                point = s.data[point];

            var i = indexOfHighlight(s, point);
            if (i != -1) {
                highlights.splice(i, 1);

                triggerRedrawOverlay();
            }
        }
        
        function indexOfHighlight(s, p) {
            for (var i = 0; i < highlights.length; ++i) {
                var h = highlights[i];
                if (h.series == s && h.point[0] == p[0]
                    && h.point[1] == p[1])
                    return i;
            }
            return -1;
        }
        
        function drawPointHighlight(series, point) {
            var x = point[0], y = point[1],
                axisx = series.xaxis, axisy = series.yaxis;
            
            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)
                return;
            
            var pointRadius = series.points.radius + series.points.lineWidth / 2;
            octx.lineWidth = pointRadius;
            octx.strokeStyle = $.color.parse(series.color).scale('a', 0.5).toString();
            var radius = 1.5 * pointRadius,
                x = axisx.p2c(x),
                y = axisy.p2c(y);
            
            octx.beginPath();
            if (series.points.symbol == "circle")
                octx.arc(x, y, radius, 0, 2 * Math.PI, false);
            else
                series.points.symbol(octx, x, y, radius, false);
            octx.closePath();
            octx.stroke();
        }

        function drawBarHighlight(series, point) {
            octx.lineWidth = series.bars.lineWidth;
            octx.strokeStyle = $.color.parse(series.color).scale('a', 0.5).toString();
            var fillStyle = $.color.parse(series.color).scale('a', 0.5).toString();
            var barLeft = series.bars.align == "left" ? 0 : -series.bars.barWidth/2;
            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,
                    0, function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);
        }

        function getColorOrGradient(spec, bottom, top, defaultColor) {
            if (typeof spec == "string")
                return spec;
            else {
                // assume this is a gradient spec; IE currently only
                // supports a simple vertical gradient properly, so that's
                // what we support too
                var gradient = ctx.createLinearGradient(0, top, 0, bottom);
                
                for (var i = 0, l = spec.colors.length; i < l; ++i) {
                    var c = spec.colors[i];
                    if (typeof c != "string") {
                        var co = $.color.parse(defaultColor);
                        if (c.brightness != null)
                            co = co.scale('rgb', c.brightness)
                        if (c.opacity != null)
                            co.a *= c.opacity;
                        c = co.toString();
                    }
                    gradient.addColorStop(i / (l - 1), c);
                }
                
                return gradient;
            }
        }
    }

    $.plot = function(placeholder, data, options) {
        //var t0 = new Date();
        var plot = new Plot($(placeholder), data, options, $.plot.plugins);
        //(window.console ? console.log : alert)("time used (msecs): " + ((new Date()).getTime() - t0.getTime()));
        return plot;
    };

    $.plot.version = "0.7";
    
    $.plot.plugins = [];

    // returns a string with the date d formatted according to fmt
    $.plot.formatDate = function(d, fmt, monthNames) {
        var leftPad = function(n) {
            n = "" + n;
            return n.length == 1 ? "0" + n : n;
        };
        
        var r = [];
        var escape = false, padNext = false;
        var hours = d.getUTCHours();
        var isAM = hours < 12;
        if (monthNames == null)
            monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

        if (fmt.search(/%p|%P/) != -1) {
            if (hours > 12) {
                hours = hours - 12;
            } else if (hours == 0) {
                hours = 12;
            }
        }
        for (var i = 0; i < fmt.length; ++i) {
            var c = fmt.charAt(i);
            
            if (escape) {
                switch (c) {
                case 'h': c = "" + hours; break;
                case 'H': c = leftPad(hours); break;
                case 'M': c = leftPad(d.getUTCMinutes()); break;
                case 'S': c = leftPad(d.getUTCSeconds()); break;
                case 'd': c = "" + d.getUTCDate(); break;
                case 'm': c = "" + (d.getUTCMonth() + 1); break;
                case 'y': c = "" + d.getUTCFullYear(); break;
                case 'b': c = "" + monthNames[d.getUTCMonth()]; break;
                case 'p': c = (isAM) ? ("" + "am") : ("" + "pm"); break;
                case 'P': c = (isAM) ? ("" + "AM") : ("" + "PM"); break;
                case '0': c = ""; padNext = true; break;
                }
                if (c && padNext) {
                    c = leftPad(c);
                    padNext = false;
                }
                r.push(c);
                if (!padNext)
                    escape = false;
            }
            else {
                if (c == "%")
                    escape = true;
                else
                    r.push(c);
            }
        }
        return r.join("");
    };
    
    // round to nearby lower multiple of base
    function floorInBase(n, base) {
        return base * Math.floor(n / base);
    }
    
})(jQuery);

/* module-key = 'bamboo.web.resources:flot', location = '/bower/jquery-flot/jquery.flot.pie.js' */
/*
Flot plugin for rendering pie charts. The plugin assumes the data is 
coming is as a single data value for each series, and each of those 
values is a positive value or zero (negative numbers don't make 
any sense and will cause strange effects). The data values do 
NOT need to be passed in as percentage values because it 
internally calculates the total and percentages.

* Created by Brian Medendorp, June 2009
* Updated November 2009 with contributions from: btburnett3, Anthony Aragues and Xavi Ivars

* Changes:
	2009-10-22: lineJoin set to round
	2009-10-23: IE full circle fix, donut
	2009-11-11: Added basic hover from btburnett3 - does not work in IE, and center is off in Chrome and Opera
	2009-11-17: Added IE hover capability submitted by Anthony Aragues
	2009-11-18: Added bug fix submitted by Xavi Ivars (issues with arrays when other JS libraries are included as well)
		

Available options are:
series: {
	pie: {
		show: true/false
		radius: 0-1 for percentage of fullsize, or a specified pixel length, or 'auto'
		innerRadius: 0-1 for percentage of fullsize or a specified pixel length, for creating a donut effect
		startAngle: 0-2 factor of PI used for starting angle (in radians) i.e 3/2 starts at the top, 0 and 2 have the same result
		tilt: 0-1 for percentage to tilt the pie, where 1 is no tilt, and 0 is completely flat (nothing will show)
		offset: {
			top: integer value to move the pie up or down
			left: integer value to move the pie left or right, or 'auto'
		},
		stroke: {
			color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#FFF')
			width: integer pixel width of the stroke
		},
		label: {
			show: true/false, or 'auto'
			formatter:  a user-defined function that modifies the text/style of the label text
			radius: 0-1 for percentage of fullsize, or a specified pixel length
			background: {
				color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#000')
				opacity: 0-1
			},
			threshold: 0-1 for the percentage value at which to hide labels (if they're too small)
		},
		combine: {
			threshold: 0-1 for the percentage value at which to combine slices (if they're too small)
			color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#CCC'), if null, the plugin will automatically use the color of the first slice to be combined
			label: any text value of what the combined slice should be labeled
		}
		highlight: {
			opacity: 0-1
		}
	}
}

More detail and specific examples can be found in the included HTML file.

*/

(function ($) 
{
	function init(plot) // this is the "body" of the plugin
	{
		var canvas = null;
		var target = null;
		var maxRadius = null;
		var centerLeft = null;
		var centerTop = null;
		var total = 0;
		var redraw = true;
		var redrawAttempts = 10;
		var shrink = 0.95;
		var legendWidth = 0;
		var processed = false;
		var raw = false;
		
		// interactive variables	
		var highlights = [];	
	
		// add hook to determine if pie plugin in enabled, and then perform necessary operations
		plot.hooks.processOptions.push(checkPieEnabled);
		plot.hooks.bindEvents.push(bindEvents);	

		// check to see if the pie plugin is enabled
		function checkPieEnabled(plot, options)
		{
			if (options.series.pie.show)
			{
				//disable grid
				options.grid.show = false;
				
				// set labels.show
				if (options.series.pie.label.show=='auto')
					if (options.legend.show)
						options.series.pie.label.show = false;
					else
						options.series.pie.label.show = true;
				
				// set radius
				if (options.series.pie.radius=='auto')
					if (options.series.pie.label.show)
						options.series.pie.radius = 3/4;
					else
						options.series.pie.radius = 1;
						
				// ensure sane tilt
				if (options.series.pie.tilt>1)
					options.series.pie.tilt=1;
				if (options.series.pie.tilt<0)
					options.series.pie.tilt=0;
			
				// add processData hook to do transformations on the data
				plot.hooks.processDatapoints.push(processDatapoints);
				plot.hooks.drawOverlay.push(drawOverlay);	
				
				// add draw hook
				plot.hooks.draw.push(draw);
			}
		}
	
		// bind hoverable events
		function bindEvents(plot, eventHolder) 		
		{		
			var options = plot.getOptions();
			
			if (options.series.pie.show && options.grid.hoverable)
				eventHolder.unbind('mousemove').mousemove(onMouseMove);
				
			if (options.series.pie.show && options.grid.clickable)
				eventHolder.unbind('click').click(onClick);
		}	
		

		// debugging function that prints out an object
		function alertObject(obj)
		{
			var msg = '';
			function traverse(obj, depth)
			{
				if (!depth)
					depth = 0;
				for (var i = 0; i < obj.length; ++i)
				{
					for (var j=0; j<depth; j++)
						msg += '\t';
				
					if( typeof obj[i] == "object")
					{	// its an object
						msg += ''+i+':\n';
						traverse(obj[i], depth+1);
					}
					else
					{	// its a value
						msg += ''+i+': '+obj[i]+'\n';
					}
				}
			}
			traverse(obj);
			alert(msg);
		}
		
		function calcTotal(data)
		{
			for (var i = 0; i < data.length; ++i)
			{
				var item = parseFloat(data[i].data[0][1]);
				if (item)
					total += item;
			}
		}	
		
		function processDatapoints(plot, series, data, datapoints) 
		{	
			if (!processed)
			{
				processed = true;
			
				canvas = plot.getCanvas();
				target = $(canvas).parent();
				options = plot.getOptions();
			
				plot.setData(combine(plot.getData()));
			}
		}
		
		function setupPie()
		{
			legendWidth = target.children().filter('.legend').children().width();
		
			// calculate maximum radius and center point
			maxRadius =  Math.min(canvas.width,(canvas.height/options.series.pie.tilt))/2;
			centerTop = (canvas.height/2)+options.series.pie.offset.top;
			centerLeft = (canvas.width/2);
			
			if (options.series.pie.offset.left=='auto')
				if (options.legend.position.match('w'))
					centerLeft += legendWidth/2;
				else
					centerLeft -= legendWidth/2;
			else
				centerLeft += options.series.pie.offset.left;
					
			if (centerLeft<maxRadius)
				centerLeft = maxRadius;
			else if (centerLeft>canvas.width-maxRadius)
				centerLeft = canvas.width-maxRadius;
		}
		
		function fixData(data)
		{
			for (var i = 0; i < data.length; ++i)
			{
				if (typeof(data[i].data)=='number')
					data[i].data = [[1,data[i].data]];
				else if (typeof(data[i].data)=='undefined' || typeof(data[i].data[0])=='undefined')
				{
					if (typeof(data[i].data)!='undefined' && typeof(data[i].data.label)!='undefined')
						data[i].label = data[i].data.label; // fix weirdness coming from flot
					data[i].data = [[1,0]];
					
				}
			}
			return data;
		}
		
		function combine(data)
		{
			data = fixData(data);
			calcTotal(data);
			var combined = 0;
			var numCombined = 0;
			var color = options.series.pie.combine.color;
			
			var newdata = [];
			for (var i = 0; i < data.length; ++i)
			{
				// make sure its a number
				data[i].data[0][1] = parseFloat(data[i].data[0][1]);
				if (!data[i].data[0][1])
					data[i].data[0][1] = 0;
					
				if (data[i].data[0][1]/total<=options.series.pie.combine.threshold)
				{
					combined += data[i].data[0][1];
					numCombined++;
					if (!color)
						color = data[i].color;
				}				
				else
				{
					newdata.push({
						data: [[1,data[i].data[0][1]]], 
						color: data[i].color, 
						label: data[i].label,
						angle: (data[i].data[0][1]*(Math.PI*2))/total,
						percent: (data[i].data[0][1]/total*100)
					});
				}
			}
			if (numCombined>0)
				newdata.push({
					data: [[1,combined]], 
					color: color, 
					label: options.series.pie.combine.label,
					angle: (combined*(Math.PI*2))/total,
					percent: (combined/total*100)
				});
			return newdata;
		}		
		
		function draw(plot, newCtx)
		{
			if (!target) return; // if no series were passed
			ctx = newCtx;
		
			setupPie();
			var slices = plot.getData();
		
			var attempts = 0;
			while (redraw && attempts<redrawAttempts)
			{
				redraw = false;
				if (attempts>0)
					maxRadius *= shrink;
				attempts += 1;
				clear();
				if (options.series.pie.tilt<=0.8)
					drawShadow();
				drawPie();
			}
			if (attempts >= redrawAttempts) {
				clear();
				target.prepend('<div class="error">Could not draw pie with labels contained inside canvas</div>');
			}
			
			if ( plot.setSeries && plot.insertLegend )
			{
				plot.setSeries(slices);
				plot.insertLegend();
			}
			
			// we're actually done at this point, just defining internal functions at this point
			
			function clear()
			{
				ctx.clearRect(0,0,canvas.width,canvas.height);
				target.children().filter('.pieLabel, .pieLabelBackground').remove();
			}
			
			function drawShadow()
			{
				var shadowLeft = 5;
				var shadowTop = 15;
				var edge = 10;
				var alpha = 0.02;
			
				// set radius
				if (options.series.pie.radius>1)
					var radius = options.series.pie.radius;
				else
					var radius = maxRadius * options.series.pie.radius;
					
				if (radius>=(canvas.width/2)-shadowLeft || radius*options.series.pie.tilt>=(canvas.height/2)-shadowTop || radius<=edge)
					return;	// shadow would be outside canvas, so don't draw it
			
				ctx.save();
				ctx.translate(shadowLeft,shadowTop);
				ctx.globalAlpha = alpha;
				ctx.fillStyle = '#000';

				// center and rotate to starting position
				ctx.translate(centerLeft,centerTop);
				ctx.scale(1, options.series.pie.tilt);
				
				//radius -= edge;
				for (var i=1; i<=edge; i++)
				{
					ctx.beginPath();
					ctx.arc(0,0,radius,0,Math.PI*2,false);
					ctx.fill();
					radius -= i;
				}	
				
				ctx.restore();
			}
			
			function drawPie()
			{
				startAngle = Math.PI*options.series.pie.startAngle;
				
				// set radius
				if (options.series.pie.radius>1)
					var radius = options.series.pie.radius;
				else
					var radius = maxRadius * options.series.pie.radius;
				
				// center and rotate to starting position
				ctx.save();
				ctx.translate(centerLeft,centerTop);
				ctx.scale(1, options.series.pie.tilt);
				//ctx.rotate(startAngle); // start at top; -- This doesn't work properly in Opera
				
				// draw slices
				ctx.save();
				var currentAngle = startAngle;
				for (var i = 0; i < slices.length; ++i)
				{
					slices[i].startAngle = currentAngle;
					drawSlice(slices[i].angle, slices[i].color, true);
				}
				ctx.restore();
				
				// draw slice outlines
				ctx.save();
				ctx.lineWidth = options.series.pie.stroke.width;
				currentAngle = startAngle;
				for (var i = 0; i < slices.length; ++i)
					drawSlice(slices[i].angle, options.series.pie.stroke.color, false);
				ctx.restore();
					
				// draw donut hole
				drawDonutHole(ctx);
				
				// draw labels
				if (options.series.pie.label.show)
					drawLabels();
				
				// restore to original state
				ctx.restore();
				
				function drawSlice(angle, color, fill)
				{	
					if (angle<=0)
						return;
				
					if (fill)
						ctx.fillStyle = color;
					else
					{
						ctx.strokeStyle = color;
						ctx.lineJoin = 'round';
					}
						
					ctx.beginPath();
					if (Math.abs(angle - Math.PI*2) > 0.000000001)
						ctx.moveTo(0,0); // Center of the pie
					else if ($.browser.msie)
						angle -= 0.0001;
					//ctx.arc(0,0,radius,0,angle,false); // This doesn't work properly in Opera
					ctx.arc(0,0,radius,currentAngle,currentAngle+angle,false);
					ctx.closePath();
					//ctx.rotate(angle); // This doesn't work properly in Opera
					currentAngle += angle;
					
					if (fill)
						ctx.fill();
					else
						ctx.stroke();
				}
				
				function drawLabels()
				{
					var currentAngle = startAngle;
					
					// set radius
					if (options.series.pie.label.radius>1)
						var radius = options.series.pie.label.radius;
					else
						var radius = maxRadius * options.series.pie.label.radius;
					
					for (var i = 0; i < slices.length; ++i)
					{
						if (slices[i].percent >= options.series.pie.label.threshold*100)
							drawLabel(slices[i], currentAngle, i);
						currentAngle += slices[i].angle;
					}
					
					function drawLabel(slice, startAngle, index)
					{
						if (slice.data[0][1]==0)
							return;
							
						// format label text
						var lf = options.legend.labelFormatter, text, plf = options.series.pie.label.formatter;
						if (lf)
							text = lf(slice.label, slice);
						else
							text = slice.label;
						if (plf)
							text = plf(text, slice);
							
						var halfAngle = ((startAngle+slice.angle) + startAngle)/2;
						var x = centerLeft + Math.round(Math.cos(halfAngle) * radius);
						var y = centerTop + Math.round(Math.sin(halfAngle) * radius) * options.series.pie.tilt;
						
						var html = '<span class="pieLabel" id="pieLabel'+index+'" style="position:absolute;top:' + y + 'px;left:' + x + 'px;">' + text + "</span>";
						target.append(html);
						var label = target.children('#pieLabel'+index);
						var labelTop = (y - label.height()/2);
						var labelLeft = (x - label.width()/2);
						label.css('top', labelTop);
						label.css('left', labelLeft);
						
						// check to make sure that the label is not outside the canvas
						if (0-labelTop>0 || 0-labelLeft>0 || canvas.height-(labelTop+label.height())<0 || canvas.width-(labelLeft+label.width())<0)
							redraw = true;
						
						if (options.series.pie.label.background.opacity != 0) {
							// put in the transparent background separately to avoid blended labels and label boxes
							var c = options.series.pie.label.background.color;
							if (c == null) {
								c = slice.color;
							}
							var pos = 'top:'+labelTop+'px;left:'+labelLeft+'px;';
							$('<div class="pieLabelBackground" style="position:absolute;width:' + label.width() + 'px;height:' + label.height() + 'px;' + pos +'background-color:' + c + ';"> </div>').insertBefore(label).css('opacity', options.series.pie.label.background.opacity);
						}
					} // end individual label function
				} // end drawLabels function
			} // end drawPie function
		} // end draw function
		
		// Placed here because it needs to be accessed from multiple locations 
		function drawDonutHole(layer)
		{
			// draw donut hole
			if(options.series.pie.innerRadius > 0)
			{
				// subtract the center
				layer.save();
				innerRadius = options.series.pie.innerRadius > 1 ? options.series.pie.innerRadius : maxRadius * options.series.pie.innerRadius;
				layer.globalCompositeOperation = 'destination-out'; // this does not work with excanvas, but it will fall back to using the stroke color
				layer.beginPath();
				layer.fillStyle = options.series.pie.stroke.color;
				layer.arc(0,0,innerRadius,0,Math.PI*2,false);
				layer.fill();
				layer.closePath();
				layer.restore();
				
				// add inner stroke
				layer.save();
				layer.beginPath();
				layer.strokeStyle = options.series.pie.stroke.color;
				layer.arc(0,0,innerRadius,0,Math.PI*2,false);
				layer.stroke();
				layer.closePath();
				layer.restore();
				// TODO: add extra shadow inside hole (with a mask) if the pie is tilted.
			}
		}
		
		//-- Additional Interactive related functions --
		
		function isPointInPoly(poly, pt)
		{
			for(var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)
				((poly[i][1] <= pt[1] && pt[1] < poly[j][1]) || (poly[j][1] <= pt[1] && pt[1]< poly[i][1]))
				&& (pt[0] < (poly[j][0] - poly[i][0]) * (pt[1] - poly[i][1]) / (poly[j][1] - poly[i][1]) + poly[i][0])
				&& (c = !c);
			return c;
		}
		
		function findNearbySlice(mouseX, mouseY)
		{
			var slices = plot.getData(),
				options = plot.getOptions(),
				radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;
			
			for (var i = 0; i < slices.length; ++i) 
			{
				var s = slices[i];	
				
				if(s.pie.show)
				{
					ctx.save();
					ctx.beginPath();
					ctx.moveTo(0,0); // Center of the pie
					//ctx.scale(1, options.series.pie.tilt);	// this actually seems to break everything when here.
					ctx.arc(0,0,radius,s.startAngle,s.startAngle+s.angle,false);
					ctx.closePath();
					x = mouseX-centerLeft;
					y = mouseY-centerTop;
					if(ctx.isPointInPath)
					{
						if (ctx.isPointInPath(mouseX-centerLeft, mouseY-centerTop))
						{
							//alert('found slice!');
							ctx.restore();
							return {datapoint: [s.percent, s.data], dataIndex: 0, series: s, seriesIndex: i};
						}
					}
					else
					{
						// excanvas for IE doesn;t support isPointInPath, this is a workaround. 
						p1X = (radius * Math.cos(s.startAngle));
						p1Y = (radius * Math.sin(s.startAngle));
						p2X = (radius * Math.cos(s.startAngle+(s.angle/4)));
						p2Y = (radius * Math.sin(s.startAngle+(s.angle/4)));
						p3X = (radius * Math.cos(s.startAngle+(s.angle/2)));
						p3Y = (radius * Math.sin(s.startAngle+(s.angle/2)));
						p4X = (radius * Math.cos(s.startAngle+(s.angle/1.5)));
						p4Y = (radius * Math.sin(s.startAngle+(s.angle/1.5)));
						p5X = (radius * Math.cos(s.startAngle+s.angle));
						p5Y = (radius * Math.sin(s.startAngle+s.angle));
						arrPoly = [[0,0],[p1X,p1Y],[p2X,p2Y],[p3X,p3Y],[p4X,p4Y],[p5X,p5Y]];
						arrPoint = [x,y];
						// TODO: perhaps do some mathmatical trickery here with the Y-coordinate to compensate for pie tilt?
						if(isPointInPoly(arrPoly, arrPoint))
						{
							ctx.restore();
							return {datapoint: [s.percent, s.data], dataIndex: 0, series: s, seriesIndex: i};
						}			
					}
					ctx.restore();
				}
			}
			
			return null;
		}

		function onMouseMove(e) 
		{
			triggerClickHoverEvent('plothover', e);
		}
		
        function onClick(e) 
		{
			triggerClickHoverEvent('plotclick', e);
        }

		// trigger click or hover event (they send the same parameters so we share their code)
		function triggerClickHoverEvent(eventname, e) 
		{
			var offset = plot.offset(),
				canvasX = parseInt(e.pageX - offset.left),
				canvasY =  parseInt(e.pageY - offset.top),
				item = findNearbySlice(canvasX, canvasY);
			
			if (options.grid.autoHighlight) 
			{
				// clear auto-highlights
				for (var i = 0; i < highlights.length; ++i) 
				{
					var h = highlights[i];
					if (h.auto == eventname && !(item && h.series == item.series))
						unhighlight(h.series);
				}
			}
			
			// highlight the slice
			if (item) 
			    highlight(item.series, eventname);
				
			// trigger any hover bind events
			var pos = { pageX: e.pageX, pageY: e.pageY };
			target.trigger(eventname, [ pos, item ]);	
		}

		function highlight(s, auto) 
		{
			if (typeof s == "number")
				s = series[s];

			var i = indexOfHighlight(s);
			if (i == -1) 
			{
				highlights.push({ series: s, auto: auto });
				plot.triggerRedrawOverlay();
			}
			else if (!auto)
				highlights[i].auto = false;
		}

		function unhighlight(s) 
		{
			if (s == null) 
			{
				highlights = [];
				plot.triggerRedrawOverlay();
			}
			
			if (typeof s == "number")
				s = series[s];

			var i = indexOfHighlight(s);
			if (i != -1) 
			{
				highlights.splice(i, 1);
				plot.triggerRedrawOverlay();
			}
		}

		function indexOfHighlight(s) 
		{
			for (var i = 0; i < highlights.length; ++i) 
			{
				var h = highlights[i];
				if (h.series == s)
					return i;
			}
			return -1;
		}

		function drawOverlay(plot, octx) 
		{
			//alert(options.series.pie.radius);
			var options = plot.getOptions();
			//alert(options.series.pie.radius);
			
			var radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;

			octx.save();
			octx.translate(centerLeft, centerTop);
			octx.scale(1, options.series.pie.tilt);
			
			for (i = 0; i < highlights.length; ++i) 
				drawHighlight(highlights[i].series);
			
			drawDonutHole(octx);

			octx.restore();

			function drawHighlight(series) 
			{
				if (series.angle < 0) return;
				
				//octx.fillStyle = parseColor(options.series.pie.highlight.color).scale(null, null, null, options.series.pie.highlight.opacity).toString();
				octx.fillStyle = "rgba(255, 255, 255, "+options.series.pie.highlight.opacity+")"; // this is temporary until we have access to parseColor
				
				octx.beginPath();
				if (Math.abs(series.angle - Math.PI*2) > 0.000000001)
					octx.moveTo(0,0); // Center of the pie
				octx.arc(0,0,radius,series.startAngle,series.startAngle+series.angle,false);
				octx.closePath();
				octx.fill();
			}
			
		}	
		
	} // end init (plugin body)
	
	// define pie specific options and their default values
	var options = {
		series: {
			pie: {
				show: false,
				radius: 'auto',	// actual radius of the visible pie (based on full calculated radius if <=1, or hard pixel value)
				innerRadius:0, /* for donut */
				startAngle: 3/2,
				tilt: 1,
				offset: {
					top: 0,
					left: 'auto'
				},
				stroke: {
					color: '#FFF',
					width: 1
				},
				label: {
					show: 'auto',
					formatter: function(label, slice){
						return '<div style="font-size:x-small;text-align:center;padding:2px;color:'+slice.color+';">'+label+'<br/>'+Math.round(slice.percent)+'%</div>';
					},	// formatter function
					radius: 1,	// radius at which to place the labels (based on full calculated radius if <=1, or hard pixel value)
					background: {
						color: null,
						opacity: 0
					},
					threshold: 0	// percentage at which to hide the label (i.e. the slice is too narrow)
				},
				combine: {
					threshold: -1,	// percentage at which to combine little slices into one larger slice
					color: null,	// color to give the new slice (auto-generated if null)
					label: 'Other'	// label to give the new slice
				},
				highlight: {
					//color: '#FFF',		// will add this functionality once parseColor is available
					opacity: 0.5
				}
			}
		}
	};
    
	$.plot.plugins.push({
		init: init,
		options: options,
		name: "pie",
		version: "1.0"
	});
})(jQuery);

/* module-key = 'bamboo.web.resources:buildStatistics', location = '/scripts/build-statistics.js' */
BAMBOO.BuildStatistics = (function ($) {
    var colours = {
            fail: '#a00',
            success: '#393'
        };

    function generatePieData(successRate, failureRate) {
        function sliceWithinBounds(slice) {
            var min = 0.125, /* small enough so that it only renders a white line at the size we have the graph */
                max = 100 - min;

            return Math.max(Math.min(slice, max), min);
        }
        function buildSuccessSeriesConfig(label, data, colour) {
            return {
                label: label,
                data: sliceWithinBounds(data),
                color: colour
            }
        }

        return [
            buildSuccessSeriesConfig('Successful', successRate, colours.success),
            buildSuccessSeriesConfig('Failed', failureRate, colours.fail)
        ];
    }
    function buildNumberSeriesConfig(data, colour) {
        return {
            data: data,
            bars: { show: true, fill: 1, lineWidth: 0 },
            color: colour,
            shadowSize: 0
        }
    }

    return {
        init: function () {
            $(function () {
                var $buildSuccessChart = $('#build-success-chart'),
                    $buildNumberChart = $('#build-number-chart'),
                    buildNumberResults = $buildNumberChart.data('json')['results'];

                $.plot($buildSuccessChart, generatePieData($buildSuccessChart.data('successful'), $buildSuccessChart.data('failed')), {
                    series: {
                        pie: {
                            show: true,
                            radius: 1,
                            label: { show: false }
                        }
                    },
                    legend: { show: false }
                });
                $.plot($buildNumberChart, [ buildNumberSeriesConfig(buildNumberResults['failed'], colours.fail), buildNumberSeriesConfig(buildNumberResults['successful'], colours.success) ], {
                    xaxis: { show: false },
                    yaxis: { show: false },
                    grid: { show: false }
                });
            });
        }
    };
})(jQuery);
/* module-key = 'bamboo.web.resources:jira-issue-list', location = '/feature/jira-issue-list/jira-issue-list.soy' */
// This file was automatically generated from jira-issue-list.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.jiraIssueList == 'undefined') { bamboo.feature.jiraIssueList = {}; }


bamboo.feature.jiraIssueList.jiraIssueList = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<table class="aui jira-issues', (opt_data.loading) ? ' loading' : '', '"><thead><tr><th colspan="2" class="issue">Issue</th><th class="description">Description</th>', (! opt_data.hideStatus) ? '<th class="status">Status</th>' : '', '</tr></thead>', (opt_data.issuesCount > opt_data.maxIssues) ? '<tfoot><tr><td colspan="' + soy.$$escapeHtml(opt_data.hideStatus ? 3 : 4) + '"><a href="' + soy.$$escapeHtml(opt_data.jiraTabUrl) + '">' + soy.$$escapeHtml(opt_data.issuesCount - opt_data.maxIssues + ' more issue' + (opt_data.issuesCount - opt_data.maxIssues > 1 ? 's' : '')) + '&hellip;</a></td></tr></tfoot>' : '', '<tbody>');
  var issueList22 = opt_data.issues;
  var issueListLen22 = issueList22.length;
  for (var issueIndex22 = 0; issueIndex22 < issueListLen22; issueIndex22++) {
    var issueData22 = issueList22[issueIndex22];
    if (issueData22.url && issueData22.url.href && issueData22.key && issueData22.summary) {
      bamboo.feature.jiraIssueList.jiraIssueListItem({key: issueData22.key, url: issueData22.url, summary: issueData22.summary, issueType: issueData22.issueType ? issueData22.issueType : opt_data.defaultIssueType, iconUrl: issueData22.iconUrl ? issueData22.iconUrl : opt_data.defaultIssueIconUrl, status: issueData22.status, statusClass: issueData22.statusClass, statusIconUrl: issueData22.statusIconUrl, hideStatus: opt_data.hideStatus}, output);
    } else {
      bamboo.feature.jiraIssueList.jiraIssueListItemNoConnection({key: issueData22.issueKey ? issueData22.issueKey : issueData22.key, hideStatus: opt_data.hideStatus}, output);
    }
  }
  output.append('</tbody></table>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.jiraIssueListItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<tr data-issue-key="', opt_data.key, '"><td class="type"><a href="', soy.$$escapeHtml(opt_data.url.href), '" title="', soy.$$escapeHtml("View this issue"), '"><img src="', soy.$$escapeHtml(opt_data.iconUrl), '" alt="', soy.$$escapeHtml(opt_data.issueType), '" /></a></td><td class="key"><a href="', soy.$$escapeHtml(opt_data.url.href), '">', opt_data.key, '</a></td><td class="description">', soy.$$escapeHtml(opt_data.summary), '</td>', (! opt_data.hideStatus) ? '<td class="status">' + ((opt_data.showStatusIcon) ? '<img src="' + soy.$$escapeHtml(opt_data.statusIconUrl) + '" alt="" />' : '') + '<span class="status-lozenge lozenge-subtle' + ((opt_data.statusClass) ? ' status-' + opt_data.statusClass : '') + '" title="' + soy.$$escapeHtml(opt_data.status) + '">' + soy.$$escapeHtml(opt_data.status) + '</span></td>' : '', '</tr>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.jiraIssueListItemNoConnection = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<tr><td class="type">');
  widget.icons.icon({type: 'jiraissue-unknown', text: 'Unknown Issue Type', showTitle: true}, output);
  output.append('</td><td class="key">', soy.$$escapeHtml(opt_data.key), '</td><td', (! opt_data.hideStatus) ? ' colspan="2"' : '', ' class="details-error"><span>', soy.$$escapeHtml("Could not obtain issue details from JIRA"), '</span></td></tr>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.singleIssue = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="jira-issue"', (opt_data.key) ? ' data-key="' + opt_data.key + '"' : '', '><a href="', (opt_data.url.href) ? soy.$$escapeHtml(opt_data.url.href) : soy.$$escapeHtml(opt_data.url), '" title="', soy.$$escapeHtml("View this issue"), ' (', soy.$$escapeHtml(opt_data.issueType), ')" style="background-image: url(', soy.$$escapeHtml(opt_data.iconUrl), ');">', soy.$$escapeHtml(opt_data.key), '</a><span class="description">', soy.$$escapeHtml(opt_data.summary), '</span><span class="status-lozenge">', soy.$$escapeHtml(opt_data.status), '</span></span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.singleIssueLoading = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="single-issue-loading"><a', (opt_data.keyLink) ? ' href="' + soy.$$escapeHtml(opt_data.keyLink) + '"' : '', '>', opt_data.key, '</a></span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.singleIssueOAuth = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param137 = new soy.StringBuilder();
  bamboo.feature.jiraIssueList.linkedIssueOAuth({authenticationRedirectUrl: opt_data.authenticationRedirectUrl, authenticationInstanceName: opt_data.authenticationInstanceName, reason: 'to see issue details'}, param137);
  bamboo.feature.jiraIssueList.singleIssueRetrievalError({key: opt_data.key, keyLink: opt_data.keyLink, errorDetails: param137.toString()}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.singleIssueRetrievalError = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="single-issue-retrieval-error"', (opt_data.key) ? ' data-key="' + opt_data.key + '"' : '', '>', (opt_data.key) ? '<a' + ((opt_data.keyLink) ? ' href="' + soy.$$escapeHtml(opt_data.keyLink) + '"' : '') + '>' + opt_data.key + '</a>' : '', '<span class="error-message', (! opt_data.errorDetails) ? ' unspecified' : '', '">', (opt_data.errorDetails) ? opt_data.errorDetails : soy.$$escapeHtml("Could not obtain issue details from JIRA"), '</span></span>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.jiraIssueList.linkedIssueOAuth = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<a class="oauth-init" href="', soy.$$escapeHtml(opt_data.authenticationRedirectUrl), '">Authenticate</a> ', (opt_data.authenticationInstanceName) ? ' with ' + soy.$$escapeHtml(opt_data.authenticationInstanceName) : '', ' ', soy.$$escapeHtml(opt_data.reason));
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:variable-multiselect', location = '/widget/autocomplete-controls/bamboo/variables/variable-singleselect.js' */
define('widget/variable-single-select', [
    'jquery',
    'underscore',
    'backbone',
    'widget/single-select'
], function(
    $,
    _,
    Backbone,
    SingleSelect
) {

    'use strict';

    /* currently only supports pre-bootstrapped data.  No rest end point. */
    var VariableSingleSelect = Backbone.View.extend({
        initialize: function(options) {
            options || (options = {});
            this.singleSelect = new SingleSelect({
                el: this.$el,
                bootstrap: options.bootstrap ? _.map(options.bootstrap, function(variable) {
                    return $.extend(true, variable, {id: variable.key});
                }) : [],
                maxResults: options.maxResults || 5,
                matcher: _.bind(this.matcher, this),
                resultItemTemplate: bamboo.widget.autocomplete.variableItemResult
            });
            this.singleSelect.on('selected', this.handleSelection, this);
        },
        containsMatch: function(str, find) {
            return (str.toLowerCase().indexOf(find.toLowerCase()) > -1);
        },
        matcher: function(variable, query) {
            var matches = false;
            matches = matches || this.containsMatch(variable.get('key'), query);
            return matches;
        },
        handleSelection: function(model) {
            this.$el.trigger('selected', model);
        }
    });

    return VariableSingleSelect;
});

/* module-key = 'bamboo.web.resources:variable-multiselect', location = '/widget/autocomplete-controls/bamboo/variables/variable-multiselect.js' */
define('widget/variable-multi-select', [
    'jquery',
    'underscore',
    'backbone',
    'widget/variable-single-select',
    'widget/selected-list'
], function(
    $,
    _,
    Backbone,
    VariableSingleSelect,
    SelectedList
) {

    'use strict';

    var VariableMultiSelect = Backbone.View.extend({
        initialize: function(options) {
            this.variableSelect = new VariableSingleSelect({
                el: this.$el,
                bootstrap: options.bootstrap || [],
                maxResults: 10
            });
            this.variableSelect.on('selected', this.handleSelection, this);

            this.selectedVariables = new SelectedList({
                el: options.selectedVariablesEl,
                bootstrap: options.selectedVariables ? _.map(options.selectedVariables, function(variable) {
                    return $.extend(true, variable, {id: variable.key});
                }) : [],
                itemTemplate: bamboo.widget.autocomplete.variableSelect.item
            });
        },
        handleSelection: function(model) {
            this.selectedVariables.addItem(model);
            this.variableSelect.singleSelect.setValue('');
        }
    });

    return VariableMultiSelect;
});

/* module-key = 'bamboo.web.resources:variable-multiselect', location = '/widget/autocomplete-controls/bamboo/variables/variable-multiselect.soy' */
// This file was automatically generated from variable-multiselect.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.autocomplete == 'undefined') { bamboo.widget.autocomplete = {}; }
if (typeof bamboo.widget.autocomplete.variableSelect == 'undefined') { bamboo.widget.autocomplete.variableSelect = {}; }


bamboo.widget.autocomplete.variableSelect.list = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<ul class="', soy.$$escapeHtml(opt_data.variablesToAutoIncrement.length == 0 ? 'empty' : ''));
  aui.renderExtraClasses(opt_data, output);
  output.append('">');
  var variableList7 = opt_data.variablesToAutoIncrement;
  var variableListLen7 = variableList7.length;
  for (var variableIndex7 = 0; variableIndex7 < variableListLen7; variableIndex7++) {
    var variableData7 = variableList7[variableIndex7];
    output.append('<li data-id="', soy.$$escapeHtml(variableData7.key), '">');
    bamboo.widget.autocomplete.variableSelect.item(variableData7, output);
    output.append('</li>');
  }
  output.append('</ul>');
  return opt_sb ? '' : output.toString();
};


bamboo.widget.autocomplete.variableSelect.item = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append(soy.$$escapeHtml(opt_data.key), '<a class="remove"></a><input type="hidden" name="variablesToAutoIncrement" value="', soy.$$escapeHtml(opt_data.key), '" />');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:status-widgets', location = '/widget/status/status.soy' */
// This file was automatically generated from status.soy.
// Please don't edit this file by hand.

if (typeof widget == 'undefined') { var widget = {}; }
if (typeof widget.status == 'undefined') { widget.status = {}; }


widget.status.deploymentResultStatusLozenge = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var colour__soy3 = new soy.StringBuilder();
  if (opt_data.lifeCycleState == 'FINISHED') {
    switch (opt_data.deploymentState) {
      case 'UNKNOWN':
        colour__soy3.append('current');
        break;
      case 'SUCCESS':
        colour__soy3.append('success');
        break;
      case 'FAILED':
        colour__soy3.append('error');
        break;
    }
  } else {
    switch (opt_data.lifeCycleState) {
      case 'PENDING':
        colour__soy3.append('complete');
        break;
      case 'QUEUED':
        colour__soy3.append('complete');
        break;
      case 'IN_PROGRESS':
        colour__soy3.append('complete');
        break;
      case 'NOT_BUILT':
        colour__soy3.append('current');
        break;
    }
  }
  colour__soy3 = colour__soy3.toString();
  var text__soy23 = new soy.StringBuilder();
  if (opt_data.lifeCycleState == 'FINISHED') {
    switch (opt_data.deploymentState) {
      case 'UNKNOWN':
        text__soy23.append('Unknown');
        break;
      case 'SUCCESS':
        text__soy23.append('Success');
        break;
      case 'FAILED':
        text__soy23.append('Failed');
        break;
    }
  } else {
    switch (opt_data.lifeCycleState) {
      case 'PENDING':
        text__soy23.append('Queued');
        break;
      case 'QUEUED':
        text__soy23.append('Queued');
        break;
      case 'IN_PROGRESS':
        text__soy23.append('In Progress');
        break;
      case 'NOT_BUILT':
        text__soy23.append('Not Built');
        break;
    }
  }
  text__soy23 = text__soy23.toString();
  widget.lozenges.auilozenge({colour: colour__soy3, text: text__soy23, subtle: opt_data.subtle}, output);
  return opt_sb ? '' : output.toString();
};


widget.status.buildResultStatusIcon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var class__soy48 = new soy.StringBuilder();
  widget.status.buildResultStatusClass(opt_data, class__soy48);
  class__soy48 = class__soy48.toString();
  widget.icons.icon({type: class__soy48}, output);
  return opt_sb ? '' : output.toString();
};


widget.status.buildResultStatusClass = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.resultSummary.continuable && opt_data.resultSummary.successful) ? 'SuccessfulPartial' : (opt_data.resultSummary.notRunYet) ? 'NotRunYet' : (opt_data.resultSummary.finished) ? soy.$$escapeHtml(opt_data.resultSummary.buildState) : soy.$$escapeHtml(opt_data.resultSummary.lifeCycleState));
  return opt_sb ? '' : output.toString();
};


widget.status.statusRibbon = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="status-ribbon');
  aui.renderExtraClasses(opt_data, output);
  output.append('" data-statuses="', soy.$$escapeHtml(opt_data.statuses.length), '"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><div class="status-ribbon-inner">');
  var statusList77 = opt_data.statuses;
  var statusListLen77 = statusList77.length;
  for (var statusIndex77 = 0; statusIndex77 < statusListLen77; statusIndex77++) {
    var statusData77 = statusList77[statusIndex77];
    widget.status.statusRibbonItem(statusData77, output);
  }
  output.append('</div>', (opt_data.progressbarContent) ? '<div class="status-ribbon-progress-bar">' + opt_data.progressbarContent + '</div>' : '', '</div>');
  return opt_sb ? '' : output.toString();
};


widget.status.statusRibbonItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<div', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' class="status-ribbon-status ', soy.$$escapeHtml(opt_data.state));
  aui.renderExtraClasses(opt_data, output);
  output.append('"');
  aui.renderExtraAttributes(opt_data, output);
  output.append('><', soy.$$escapeHtml(opt_data.headingTagName ? opt_data.headingTagName : 'h2'), ' class="status-ribbon-status-heading">');
  widget.icons.icon({type: opt_data.state + ' icon-reversed'}, output);
  output.append(' ', opt_data.content, '</', soy.$$escapeHtml(opt_data.headingTagName ? opt_data.headingTagName : 'h2'), '></div>');
  return opt_sb ? '' : output.toString();
};


widget.status.deploymentVersionStatus = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.deploymentVersionState && opt_data.deploymentVersionState != 'UNKNOWN') {
    widget.lozenges.auilozenge({colour: (opt_data.deploymentVersionState == 'BROKEN' || opt_data.deploymentVersionState == 'INCOMPLETE') ? 'error' : 'success', text: opt_data.deploymentVersionState, subtle: opt_data.subtle, extraClasses: 'version-lozenge'}, output);
  }
  return opt_sb ? '' : output.toString();
};


widget.status.deploymentVersionStatusInfo = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.deploymentVersionState == 'APPROVED' || opt_data.deploymentVersionState == 'BROKEN') {
    output.append('<div class="detailed-version-info-container reviewed-user-avatar">');
    aui.avatar.avatar({size: 'small', avatarImageUrl: opt_data.avatar ? opt_data.avatar : "" + '/images/icons/useravatar.png', accessibilityText: opt_data.userName ? opt_data.userName : "Anonymous user", title: opt_data.displayName ? opt_data.displayName : "Anonymous user", badgeContent: (opt_data.deploymentVersionState == 'BROKEN') ? '<span class="badge reviewed broken"></span>' : (opt_data.deploymentVersionState == 'APPROVED') ? '<span class="badge reviewed approved"></span>' : ''}, output);
    output.append('<script>AJS.$(".aui-avatar-inner > img").tooltip({gravity: \'n\'});<\/script></div>');
  }
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:tooltip-widget', location = '/widget/tooltip/tooltip.soy' */
// This file was automatically generated from tooltip.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.widget == 'undefined') { bamboo.widget = {}; }
if (typeof bamboo.widget.tooltip == 'undefined') { bamboo.widget.tooltip = {}; }


bamboo.widget.tooltip.tooltip = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<script type="text/javascript">require([\'widget/tooltip\'], function(Tooltip){return new Tooltip(\'', soy.$$escapeHtml(opt_data.trigger), '\', {', (opt_data.url) ? 'url: \'' + soy.$$escapeJsString(opt_data.url) + '\'' : 'content: \'' + soy.$$escapeJsString(opt_data.content) + '\'', (opt_data.addMarker) ? ',addMarker: ' + soy.$$escapeHtml(opt_data.addMarker) : '', (opt_data.showDelay) ? ',showDelay: ' + soy.$$escapeHtml(opt_data.showDelay) : '', (opt_data.width) ? ',width: ' + soy.$$escapeHtml(opt_data.width) : '', '});});<\/script>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:tooltip-widget', location = '/widget/tooltip/tooltip.js' */
define('widget/tooltip', [
    'jquery',
    'underscore'
], function(
    $,
    _
) {

    'use strict';

    var isIdRegex = /^#[a-z][^\s]*/i;
    var nonAlphaNumericRegex = /[^a-z0-9]/gi;
    var firstCharacterHashOrDot = /^[#\.]/;

    /**
     * Tooltip
     * @param {selector} trigger Selector targeting the element(s) that trigger the tooltip to open when hovered
     * @param {Object} options Map of options to initialise the tooltip with
     * @constructor
     */
    function Tooltip(trigger, options) {
        this.trigger = this.sanitizeTriggerSelector(trigger);
        this.options = $.extend({}, Tooltip.defaults, options);
        if (!this.options.content && !this.options.url) {
            throw new Error('Content for the tooltip must be provided via either the content option or url option.');
        }
        this._dialogIdentifier = this.trigger.replace(firstCharacterHashOrDot, '').replace(nonAlphaNumericRegex, '-');
        this.initialize(this.options);
    }

    Tooltip.prototype = {
        _tooltipMarkerClass: 'tooltip-marker',
        _inlineDialogIdPrefix: 'inline-dialog-',
        initialize: function(options) {
            var scope = this;
            $(function() {
                if (options.addMarker) {
                    scope.addTooltipMarker(scope.trigger);
                }
                if (!scope.inlineDialogAlreadyExists()) {
                    scope._inlineDialog = AJS.InlineDialog(scope.trigger, scope._dialogIdentifier, (options.url || function() {
                        scope.setupInlineDialogContent.apply(scope, arguments);
                    }), scope.getInlineDialogOptions());
                }
            });
        },
        /**
         * Add the content to the inline dialog and trigger showing it
         * @param {jQuery} $contents jQuery object referencing the element containing content of the inline dialog
         * @param {HTMLElement} trigger Element that triggered the inline dialog
         * @param {Function} show Show function passed from inline dialog to display it
         */
        setupInlineDialogContent: function($contents, trigger, show) {
            $contents.html(this.options.content);
            show();
        },
        /**
         * Clean trigger selector (if it's an id) of stupid characters like ":" and "." which jQuery doesn't like
         * @param {selector} trigger Selector to sanitize
         * @returns {selector}
         */
        sanitizeTriggerSelector: function(trigger) {
            return (isIdRegex.test(trigger) ? BAMBOO.escapeIdToJQuerySelector(trigger) : trigger);
        },
        /**
         * Add tooltip markers
         * @param {selector} target Selector targeting the elements to add tooltip markers to
         */
        addTooltipMarker: function(target) {
            $(target).addClass(this._tooltipMarkerClass);
        },
        /**
         * Check if the inline dialog already exists in the DOM
         * @returns {boolean}
         */
        inlineDialogAlreadyExists: function() {
            return !!document.getElementById(this._inlineDialogIdPrefix + this._dialogIdentifier);
        },
        /**
         * Get options for inline dialog
         * @returns {Object} Map of options used to intialize the inline dialog
         */
        getInlineDialogOptions: function() {
            return {
                onHover: true,
                fadeTime: 50,
                hideDelay: 0,
                showDelay: this.options.showDelay,
                width: this.options.width,
                useLiveEvents: true
            };
        }
    };

    /**
     * Tooltip default options
     * @type {Object} Map of default options for Tooltip
     */
    Tooltip.defaults = {
        /**
         * Add tooltip marker class to triggers
         * @type {boolean}
         * @default false
         */
        addMarker: false,
        /**
         * Delay (in ms) before tooltip should display
         * @type {Number}
         * @default 500
         */
        showDelay: 500,
        /**
         * Width (in px) of the tooltip
         * @type {Number}
         * @default 300
         */
        width: 300,
        /**
         * Content of the tooltip (required if url not specified)
         * @type {String}
         */
        content: null,
        /**
         * URL to location of the content for the tooltip (required if content not specified)
         * @type {String}
         */
        url: null
    };

    return Tooltip;
});

/* module-key = 'bamboo.web.resources:variables', location = '/feature/variables/variables.js' */
define('feature/variables', [
    'jquery',
    'underscore',
    'widget/dialog',
    'widget/variable-single-select',
    'exports'
], function(
    $,
    _,
    Dialog,
    VariableSingleSelect,
    exports
) {

    'use strict';

    /**
     * Inline Editing
     * @param options
     *  - target        String - selector targeting the span/element to make inline-editable
     *  - submit        Function - handles what to do when value is submitted
     *  - cancel        Function - handles what to do when cancel is triggered
     *  - focus         Function - handles what to do when focus is given to the edit field
     *  - $delegator    jQuery Object - where the event handler should be bound
     */
    var inlineEdit = function(options) {
        var defaults = {
                target: null,
                submit: null,
                cancel: null,
                focus: null
            },
            handleEdit = function(event) {
                var $target = $(this);
                var $row = $target.parents('tr:first');

                if (!keyIsPassword($row)) {
                    prepareRow($row, $target);
                }
                // field contains password
                else {
                    prepareRow($row, $target, true,
                        _.bind(function() {
                            var keyElement = $row.find('td:eq(0) .inline-edit-field');
                            var $input = $target.siblings('div.input-password');

                            keyElement.trigger('selected', !!$input.length);
                        }, this)
                    );
                }

                event.preventDefault();
            },
            handleKeyDown = function(event) {
                var keyCode = event.which;
                var $element = $(event.currentTarget);

                // on ESCAPE revert current changes
                if (keyCode === $.ui.keyCode.ESCAPE) {
                    revertRow($element.blur().parents('tr:first'));
                    event.preventDefault();
                }
                // on ENTER apply current changes
                else if (keyCode === $.ui.keyCode.ENTER) {
                    updateRow($element.blur().parents('tr:first'));
                    event.preventDefault();
                }
            },
            prepareRow = function($row, $target, clearValue, callback) {
                // update currently active row
                options.$delegator.find('tr.active').each(function() {
                    revertRow($(this));
                });

                // find elements
                var $elements = $row.find('.inline-edit-view');
                var elementsCount = $elements.length;

                $elements.each(function(index) {
                    var $target = $(this);
                    var $input = $target.parent('td:first').find('.inline-edit-field:text');

                    // set current value
                    $input.val($target.text());

                    // clear value for last element if flag was set
                    if (clearValue && (elementsCount - 1) === index) {
                        $input.val('');
                    }

                    if (!$input.data('hasInlineEditHandlers')) {
                        $input.keydown(handleKeyDown)
                            .data('hasInlineEditHandlers', true)
                            .data('lastValidValue', $input.val());
                    }

                    $target.hide();
                    $input.parent().removeClass('hidden');
                });

                if ($.isFunction(options.focus)) {
                    options.focus($target);
                }

                // focus on first input field (which was clicked)
                $target.parent().find('.inline-edit-field').addClass('focus').focus();

                if ($.isFunction(callback)) {
                    callback();
                }
            },
            revertRow = function($row) {
                // activate first row
                options.$delegator.find('tr.inactive').removeClass('inactive');

                // cancel callback
                if ($.isFunction(options.cancel)) {
                    options.cancel($row.find('td:eq(0) input:visible'));
                }

                // reset styles and behaviour
                $row.removeClass('active')
                    .find('.inline-edit-view, .inline-edit-field')
                    .attr('style', '');

                $row.find('td:eq(1) .input-password').addClass('hidden');
            },
            updateRow = function($row) {
                if (!$.isFunction(options.submit)) {
                    updateRowSuccess();
                }
                // submit callback
                else {
                    options.submit($row.find('td:eq(1)').find('input:visible'), _.bind(function() {
                        updateRowSuccess($row);
                    }, this));
                }
            },
            updateRowSuccess = function($row) {
                var keyCell = $row.find('td:eq(0)');

                // is key value empty?
                if ($.trim(keyCell.find('input').val()).length > 0) {
                    // activate first row
                    options.$delegator.find('tr.inactive').removeClass('inactive');

                    // cancel callback
                    if ($.isFunction(options.cancel)) {
                        options.cancel(keyCell.find('input:visible'));
                    }

                    // reset styles and behaviour
                    $row.removeClass('active')
                        .find('.inline-edit-view, .inline-edit-field')
                        .attr('style', '');

                    keyCell.find('.inline-edit-view:first').text(
                        keyCell.find('.inline-edit-field:text').val()
                    );

                    // default password value
                    var value = '********';
                    var valueCell = $row.find('td:eq(1)');

                    valueCell.find('.input-password')
                        .addClass('hidden');

                    if (!keyIsPassword($row)) {
                        value = valueCell.find('.inline-edit-field:text').val();
                    }

                    $row.find('td:eq(1) .inline-edit-view:first').text(value);
                }
            },
            keyIsPassword = function($row) {
                var value = $.trim($row.find('.inline-edit-view:first').text()).toLowerCase();
                return (value.indexOf('password') >= 0);
            };

        options = $.extend(true, defaults, options);

        // append update handler
        options.$delegator.find('.operations button[name="update"]').on('click', function() {
            updateRow($(this).parents('tr:first'));
        });

        // append revert handler
        options.$delegator.find('.operations a.cancel-variable').on('click', function() {
            revertRow($(this).parents('tr:first'));
        });

        // revert current active TR if user click on .add-variable fields
        options.$delegator.find('tr.add-variable').on('click', 'input', _.bind(function() {
            var $active = options.$delegator.find('tr.active');

            if ($active.length) {
                revertRow($active);
                $(this).removeClass('inactive');
            }
        }, this));

        if (options.target) {
            options.$delegator.delegate(options.target, 'click', handleEdit);
        }
    };

    function VariablesTable(options) {
        if (!(this instanceof VariablesTable)) {
            return new VariablesTable(options);
        }

        var defaults = {
            selectors: {
                table: null,
                addRow: '.add-variable',
                deleteRow: '.delete-variable',
                overrideButton: '.variables-override'
            },
            templates: {
                row: null
            },
            availableVariables: null
        }, that = this;
        this.options = $.extend(true, defaults, options);

        this.$table = $(this.options.selectors.table)
            .on('click', this.options.selectors.deleteRow, function(e) {
                _.bind(that.handleDeleteClick, that)(this, e);
            })
            .on('click', this.options.selectors.overrideButton, _.bind(this.handleOverrideClick, this))
            .on('change', 'select', this.handleChangeVariableSelection);

        this.$addVariable = this.$table.find(this.options.selectors.addRow)
            .on('keydown', 'input:text, select', _.bind(this.handleAdd, this))
            .on('click', 'input:submit', _.bind(this.handleAdd, this));
    }

    VariablesTable.prototype = {
        handleAdd: function(e) {
            if (e.type == 'click' || e.which == jQuery.ui.keyCode.ENTER) {
                e.preventDefault();
                var $inputs = this.$addVariable.find(':input'),
                    key = $inputs.filter('[name="variableKey"]').val(),
                    value = $inputs.filter('[name="variableValue"]').val();

                $(AJS.template.load(this.options.templates.row).fill({
                    id: 'variable_' + key,
                    key: key,
                    value: value
                }).toString()).appendTo(this.$table.find('tbody'));
            }
        },
        handleChangeVariableSelection: function() {
            var $this = $(this),
                $option = $this.find('option:selected'),
                $text = $this.closest('tr').find('input:text'),
                id = $option.val();
            $this.prop('name', 'key_' + id);
            $text.prop('name', 'variable_' + id).val($option.get(0).getAttribute('data-current-value') || '');
        },
        handleDeleteClick: function(el, event) {
            var $this = $(el);
            var href = $this.attr('href');
            var self = this;

            event.preventDefault();

            // if in override mode (customised build) then just delete nearest TR
            if (!!this.overrideMode) {
                $this.closest('tr').remove();
            }
            // show confirmation dialog when deleting a record
            else {
                new Dialog({
                    header: "Delete a variable",
                    content: bamboo.feature.variables.deleteConfirmaton(),
                    height: 240,
                    width: 600,
                    buttons: [
                        {
                            id: 'confirm',
                            label: "Confirm",
                            cssClass: 'aui-button aui-button-primary',
                            params: {
                                self: self,
                                $this: $this,
                                href: href
                            },
                            callback: function(id, params) {
                                if (params.href) {
                                    $.post(params.href, { 'bamboo.successReturnMode': 'json', decorator: 'nothing', confirm: true }).done(_.bind(function(result) {
                                        if (params.self.resultStatusMatches(result, 'OK')) {
                                            if (!$('table[id=global-variable-config]').length) {
                                                var variable = {};
                                                variable.key = params.$this.data('variableKey');

                                                if (params.self.options.overriddenVariablesMap[variable.key]) {
                                                    var oldPicker = params.$this.closest('tbody').find('.bamboo-single-select');

                                                    if (oldPicker) {
                                                        oldPicker.remove();
                                                    }

                                                    params.self.options.globalNotOverriddenVariables.push(variable);

                                                    var variableSelect = new VariableSingleSelect({
                                                        el: '#variableKey',
                                                        bootstrap: params.self.options.globalNotOverriddenVariables
                                                    });

                                                    variableSelect.singleSelect.field.$placeholder.attr(
                                                        'placeholder', "Choose from global variables or type in your own"
                                                    );
                                                }
                                            }
                                            params.$this.closest('tr').remove();
                                        }
                                    }, params.self));
                                } else {
                                    params.$this.closest('tr').remove();
                                }

                                this.dialog.remove();
                            }
                        },
                        {
                            id: 'cancel',
                            label: "Cancel",
                            type: 'link'
                        }
                    ]
                });
            }
        },
        handleOverrideClick: function(e) {
            var $row = $(bamboo.feature.variables.variablesTableRow({
                id: '',
                key: '',
                value: '',
                availableVariables: this.options.availableVariables
            })).appendTo(this.$table.find('tbody'));

            this.handleChangeVariableSelection.call($row[0]);
            this.overrideMode = true;

            e.preventDefault();
        },
        resultStatusMatches: function(result, match) {
            return (result.status.toUpperCase() == match);
        }
    };

    function VariablesConfigurationForm(options) {
        if (!(this instanceof VariablesConfigurationForm)) {
            return new VariablesConfigurationForm(options);
        }

        var defaults = {
            selectors: {
                form: null,
                table: '.variables-list',
                addRow: '.add-variable',
                deleteRow: '.delete-variable'
            },
            templates: {
                row: null
            },
            classes: {
                active: 'active',
                inactive: 'inactive'
            },
            updateVariableUrl: null,
            overriddenVariablesMap: {},
            globalNotOverriddenVariables: []
        }, that = this;

        this.options = $.extend(true, defaults, options);
        this.cache = {};

        this.$form = $(this.options.selectors.form)
            .on('submit', _.bind(this.handleSubmit, this));
        this.$table = this.$form.find(this.options.selectors.table)
            .on('click', this.options.selectors.deleteRow, function(event) {
                _.bind(that.handleDeleteClick, that)(this, event);
            });

        this.$addVariable = this.$table.find(this.options.selectors.addRow)
            .on('change', 'select', this.handleChangeVariableSelection);

        // global table handler for input <> password fields
        this.$table.on('selected keyup', 'tr td:first-child input', function(event, focusValue) {
            _.bind(that.handleChangeVariableName, this)(that, focusValue);
        });

        inlineEdit({
            target: '.inline-edit-view',
            $delegator: this.$form,
            submit: _.bind(this.handleInlineSubmit, this),
            focus: _.bind(this.handleInlineFocus, this),
            cancel: _.bind(this.handleInlineCancel, this)
        });
    }

    VariablesConfigurationForm.prototype = new VariablesTable();

    $.extend(true, VariablesConfigurationForm.prototype, {
        clearFormErrors: function() {
            this.$form.find('.error,.aui-message').remove();
        },
        clearFieldErrors: function($field) {
            $field.nextAll('.error').remove();
        },
        resultFieldErrors: function(fieldErrors, func) {
            for (var fieldName in fieldErrors) {
                if (fieldErrors.hasOwnProperty(fieldName)) {
                    func(fieldName, fieldErrors[fieldName]);
                }
            }
        },
        handleChangeVariableSelection: function() {
            var $this = $(this),
                $option = $this.find('option:selected'),
                $text = $this.closest('tr').find('input:text');

            $text.val($option.get(0).getAttribute('data-current-value') || '');
        },
        handleChangeVariableName: function(self, focusValue) {
            var $this = $(this);
            var $tr = $this.parents('tr:first');
            var id = $tr.attr('id');

            var value = $.trim($this.val()).toLowerCase();
            var hasPassword = (value.indexOf('password') >= 0);

            // initialize cache object
            if (!self.cache[id]) {
                self.cache[id] = {};
            }

            // runs only once per row & then is cached
            if (_.isEmpty(self.cache[id])) {
                self.cache[id].varHasPassword = null;

                // always synchronize input & password field
                self.cache[id].$varInput = $tr.find('.variable-value input')
                    .on('keyup', _.bind(function() {
                        self.cache[id].$varPassword.val(
                            self.cache[id].$varInput.val()
                        );
                    }, $this));

                self.cache[id].$varPassword = $tr.find('.variable-value-password input')
                    .on('keyup', _.bind(function() {
                        self.cache[id].$varInput.val(
                            self.cache[id].$varPassword.val()
                        );
                    }, $this));

                // register toggle for show/hide password field
                self.cache[id].$varToggle = $tr.find('.input-password > button').on('click', _.bind(function(event) {
                    self.cache[id].$varInput.parent().toggleClass('hidden')
                        .find('button').toggleClass('hidden');

                    self.cache[id].$varPassword
                        .parent().toggleClass('hidden');

                    event.preventDefault();
                }, self));
            }

            // input contains 'password' string
            if (hasPassword) {
                self.cache[id].$varInput.parent().addClass('hidden');
                self.cache[id].$varPassword.val(self.cache[id].$varInput.val()).parent().removeClass('hidden');
                self.cache[id].varHasPassword = true;

                if (focusValue) {
                    self.cache[id].$varPassword.focus();
                }
            }
            else if (self.cache[id].varHasPassword !== false) {
                self.cache[id].$varInput.parent().removeClass('hidden').find('button').addClass('hidden');
                self.cache[id].$varPassword.parent().addClass('hidden');
                self.cache[id].varHasPassword = false;

                if (focusValue) {
                    self.cache[id].$varInput.focus();
                }
            }

            // focus variable key
            if (!_.isUndefined(focusValue) && !focusValue) {
                $this.focus();
            }
        },
        handleSubmit: function(e) {
            e.preventDefault();
            this.clearFormErrors();
            var formUrl = this.$form.attr('action'),
                data = this.$addVariable.find(':input').serialize() + '&'
                    + BAMBOO.XsrfUtils.getAtlTokenQueryParam(formUrl)
                    + '&bamboo.successReturnMode=json&decorator=nothing&confirm=true';
            $.post(formUrl, data, _.bind(function(result) {
                if (this.resultStatusMatches(result, 'OK')) {
                    window.location.reload();
                } else if (this.resultStatusMatches(result, 'ERROR')) {
                    var fieldErrors = result.fieldErrors,
                        errors = result.errors,
                        $firstError;

                    if (fieldErrors) {
                        this.resultFieldErrors(fieldErrors, _.bind(function(fieldName, fieldError) {
                            this.$addVariable.find(':input[name="' + fieldName + '"]').after(BAMBOO.buildFieldError(fieldError));
                        }, this));
                    }
                    if (errors) {
                        this.$form.prepend(BAMBOO.buildAUIErrorMessage(errors));
                    }
                    $firstError = this.$addVariable.find(':input:visible:enabled.errorField:first').focus();
                    if (!$firstError.length) {
                        this.$addVariable.find(':input:visible:enabled:first').focus();
                    }
                }
            }, this));
        },
        handleInlineSubmit: function($target, callback) {
            var $loading = $('<span/>', { 'class': 'icon icon-loading' }),
                name = $target.attr('name'),
                id, $key, $value;

            if (name.indexOf('key_') === 0) {
                id = BAMBOO.stripPrefixFromId('key_', name);
                $key = $target;
                $value = this.$form.find(':input[name="value_' + id + '"]');
            }
            else if (name.indexOf('value_') === 0) {
                id = BAMBOO.stripPrefixFromId('value_', name);
                $key = this.$form.find(':input[name="key_' + id + '"]');
                $value = $target;
            }

            if (id && $key && $value) {
                $loading.insertAfter($target[0]);
                this.clearFieldErrors($target);

                $.post(this.options.updateVariableUrl, BAMBOO.XsrfUtils.addXsrfTokenProperty(this.options.updateVariableUrl, {
                        variableId: id,
                        variableKey: $key.val(),
                        variableValue: $value.val(),
                        'bamboo.successReturnMode': 'json',
                        decorator: 'nothing',
                        confirm: true
                    })).done(_.bind(function(result) {
                        var fieldErrors = result.fieldErrors,
                            errors = result.errors,
                            $tr = $target.closest('tr');

                        $loading.remove();

                        if (!$tr.find('.focus').length) {
                            $tr.removeClass('active');
                        }
                        if (this.resultStatusMatches(result, 'OK')) {
                            $target.data('lastValidValue', $target.val());
                            var $div = $('#override_field_' + id);

                            $div.html($(bamboo.feature.variables.overrideText({
                                variable: this.options.overriddenVariablesMap[$key.val()]
                            })));

                            if (!this.$form.find('.focus').length) {
                                this.$addVariable
                                    .removeClass(this.options.classes.inactive)
                                    .find('input')
                                    .removeAttr('disabled');
                            }

                            if (callback) {
                                callback();
                            }
                        }
                        else if (this.resultStatusMatches(result, 'ERROR')) {
                            if (fieldErrors) {
                                this.resultFieldErrors(fieldErrors, _.bind(function(fieldName, fieldError) {
                                    var $field = (fieldName === 'variableValue' ? $value : $key);
                                    this.clearFieldErrors($field);
                                    $field.after(BAMBOO.buildFieldError(fieldError));
                                }, this));
                            }
                            if (errors) {
                                $key.after(BAMBOO.buildAUIErrorMessage(errors));
                            }
                        }

                        // update variable meta-data
                        $tr.find('td.variable-value-container')
                            .attr('data-variable-key', $key.val());

                    }, this)).fail(function() {
                        $loading.remove();
                        var error = ["Server error - variable not saved"];
                        $key.after(BAMBOO.buildFieldError(error));
                    });
            }
        },
        handleInlineFocus: function($target) {
            $target.closest('tr').addClass(this.options.classes.active);
            this.$addVariable.addClass(this.options.classes.inactive);
        },
        handleInlineCancel: function($target) {
            this.clearFieldErrors($target.closest('tr').removeClass(this.options.classes.active).end());
            this.$addVariable.removeClass(this.options.classes.inactive);
        }
    });

    exports.VariablesTable = VariablesTable;
    exports.VariablesConfigurationForm = VariablesConfigurationForm;

});

/* module-key = 'bamboo.web.resources:variables', location = '/feature/variables/variables.soy' */
// This file was automatically generated from variables.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.variables == 'undefined') { bamboo.feature.variables = {}; }


bamboo.feature.variables.variablesTable = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  var param18 = new soy.StringBuilder();
  if (! opt_data.hideAddHeader) {
    param18.append('<tr class="add-variable"><td>');
    bamboo.feature.variables.selectOrInput({id: 'variableKey', options: opt_data.availableVariables}, param18);
    param18.append('</td><td>');
    bamboo.feature.variables.selectOrInput({id: 'variableValue', value: opt_data.firstAvailableVariable}, param18);
    param18.append('</td><td class="operations">');
    aui.form.submit({text: "Add", id: ''}, param18);
    param18.append('</td></tr>');
  }
  if (opt_data.variables) {
    var variableList36 = opt_data.variables;
    var variableListLen36 = variableList36.length;
    for (var variableIndex36 = 0; variableIndex36 < variableListLen36; variableIndex36++) {
      var variableData36 = variableList36[variableIndex36];
      bamboo.feature.variables.variablesTableRow(soy.$$augmentData(variableData36, {inlineEdit: opt_data.inlineEdit, availableVariables: opt_data.availableVariables, deleteVariableUrl: opt_data.deleteVariableUrl}), param18);
    }
  }
  aui.table({extraClasses: 'variables-list', columnsContent: '<colgroup><col width="30%" /><col width="*" /><col width="60" /></colgroup>', theadContent: '<tr><th>' + soy.$$escapeHtml("Variable name") + '</th><th>' + soy.$$escapeHtml("Value") + '</th><th class="operations"><span class="assistive">' + soy.$$escapeHtml("Operations") + '</span></th></tr>', tfootContent: (opt_data.showOverrideFooter) ? '<tr><td colspan="3"><a class="aui-button aui-button-link aui-style variables-override">Override a variable</a></td></tr>' : '', content: param18.toString()}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.variablesTableRow = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<tr data-variable-id="', soy.$$escapeHtml(opt_data.id), '"><td>');
  if (opt_data.inlineEdit) {
    bamboo.feature.variables.inPlaceEditField({id: 'key_' + opt_data.id, value: opt_data.key, options: opt_data.availableVariables}, output);
  } else {
    bamboo.feature.variables.selectOrInput({id: 'key_' + opt_data.id, value: opt_data.key, options: opt_data.availableVariables}, output);
  }
  output.append('</td><td>');
  if (opt_data.inlineEdit) {
    bamboo.feature.variables.inPlaceEditField({id: 'value_' + opt_data.id, value: opt_data.value}, output);
  } else {
    bamboo.feature.variables.selectOrInput({id: 'value_' + opt_data.id, value: opt_data.key}, output);
  }
  output.append('</td><td class="operations"><a id="deleteVariable_', soy.$$escapeHtml(opt_data.id), '" class="delete-variable"', (opt_data.deleteVariableUrl) ? ' href="' + soy.$$escapeHtml(opt_data.deleteVariableUrl) + '"' : '', ' title="', soy.$$escapeHtml("Delete"), '" tabindex="-1">');
  aui.icons.icon({icon: 'remove', useIconFont: true, accessibilityText: "Delete", extraAttributes: {'title': "Delete"}}, output);
  output.append('</a></td></tr>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.inPlaceEditField = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<span class="inline-edit-view"', (! opt_data.readonly) ? ' tabindex="0"' : '', ' id="key_', soy.$$escapeHtml(opt_data.id), '">', soy.$$escapeHtml(opt_data.value), '</span>');
  if (opt_data.readonly) {
    aui.form.input({type: 'hidden', name: opt_data.id, value: opt_data.value}, output);
  } else {
    bamboo.feature.variables.selectOrInput(soy.$$augmentData(opt_data, {extraClasses: 'inline-edit-field'}), output);
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.selectOrInput = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.options) {
    bamboo.feature.variables.select({name: opt_data.id, options: opt_data.options, extraClasses: opt_data.extraClasses}, output);
  } else {
    aui.form.input({type: 'text', name: opt_data.id, value: opt_data.value, extraClasses: opt_data.extraClasses, extraAttributes: {'autocomplete': 'off'}}, output);
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.passwordConfirmaton = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.warning({titleContent: "variables.password.dialog.title", content: '<p>' + soy.$$escapeHtml("variables.password.dialog.description") + '</p>'}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.deleteConfirmaton = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  aui.message.warning({titleContent: "Warning", content: '<p>' + soy.$$escapeHtml("You are about to delete the selected variable. Are you sure you want to continue?") + '</p>'}, output);
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.select = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<select', (opt_data.id) ? ' id="' + soy.$$escapeHtml(opt_data.id) + '"' : '', ' name="', (opt_data.name) ? soy.$$escapeHtml(opt_data.name) : soy.$$escapeHtml(opt_data.id), '" class="', soy.$$escapeHtml(opt_data.isMultiple ? 'multi-select' : 'select'));
  aui.renderExtraClasses(opt_data, output);
  output.append('"', (opt_data.size) ? ' size="' + soy.$$escapeHtml(opt_data.size) + '"' : '', (opt_data.isDisabled) ? ' disabled' : '', (opt_data.isMultiple) ? ' multiple' : '');
  aui.renderExtraAttributes(opt_data, output);
  output.append('>');
  var optionList162 = opt_data.options;
  var optionListLen162 = optionList162.length;
  for (var optionIndex162 = 0; optionIndex162 < optionListLen162; optionIndex162++) {
    var optionData162 = optionList162[optionIndex162];
    bamboo.feature.variables.optionOrOptgroup(optionData162, output);
  }
  output.append('</select>');
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.optionOrOptgroup = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.options) {
    output.append('<optgroup label="', soy.$$escapeHtml(opt_data.text), '"');
    aui.renderExtraAttributes(opt_data, output);
    output.append('>');
    var optionList174 = opt_data.options;
    var optionListLen174 = optionList174.length;
    for (var optionIndex174 = 0; optionIndex174 < optionListLen174; optionIndex174++) {
      var optionData174 = optionList174[optionIndex174];
      bamboo.feature.variables.optionOrOptgroup(optionData174, output);
    }
    output.append('</optgroup>');
  } else {
    output.append('<option value="', soy.$$escapeHtml(opt_data.value), '"');
    aui.renderExtraAttributes(opt_data, output);
    output.append((opt_data.selected) ? ' selected' : '', '>', soy.$$escapeHtml(opt_data.text), '</option>');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.variables.overrideText = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.variable) ? '<div class="variable-override-text">' + ((opt_data.variable.variableType == 'PLAN') ? soy.$$escapeHtml("Overrides plan value:") + ' ' + soy.$$escapeHtml(opt_data.variable.value) : soy.$$escapeHtml("Overrides global value:") + ' ' + soy.$$escapeHtml(opt_data.variable.value)) + '</div>' : '');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'bamboo.web.resources:variables', location = '/widget/autocomplete-controls/bamboo/variables/variable-singleselect.js' */
define('widget/variable-single-select', [
    'jquery',
    'underscore',
    'backbone',
    'widget/single-select'
], function(
    $,
    _,
    Backbone,
    SingleSelect
) {

    'use strict';

    /* currently only supports pre-bootstrapped data.  No rest end point. */
    var VariableSingleSelect = Backbone.View.extend({
        initialize: function(options) {
            options || (options = {});
            this.singleSelect = new SingleSelect({
                el: this.$el,
                bootstrap: options.bootstrap ? _.map(options.bootstrap, function(variable) {
                    return $.extend(true, variable, {id: variable.key});
                }) : [],
                maxResults: options.maxResults || 5,
                matcher: _.bind(this.matcher, this),
                resultItemTemplate: bamboo.widget.autocomplete.variableItemResult
            });
            this.singleSelect.on('selected', this.handleSelection, this);
        },
        containsMatch: function(str, find) {
            return (str.toLowerCase().indexOf(find.toLowerCase()) > -1);
        },
        matcher: function(variable, query) {
            var matches = false;
            matches = matches || this.containsMatch(variable.get('key'), query);
            return matches;
        },
        handleSelection: function(model) {
            this.$el.trigger('selected', model);
        }
    });

    return VariableSingleSelect;
});

/* module-key = 'bamboo.web.resources.common:feature-quarantine-current', location = '/feature/quarantine-current/quarantine-current.js' */
/**
 * Quarantined Tests Tab & Test Results Tables behaviour
 */
define('feature/quarantine-current', [
    'jquery',
    'underscore'
], function(
    $,
    _
) {

    'use strict';

    var defaultAjaxOptions = {
        contentType: 'application/json',
        type: 'POST',
        data: '{}'
    };

    // clicking 'quarantine' or 'unleash' in test results table
    $(document).on('click', '.quarantine-action', function(e) {
        var $button = $(this);
        var $icon = $button.find('.icon');
        var planKey = $button.attr('data-plan-key');
        var testId = $button.attr('data-test-id');

        // a table cell containing 'quarantined by' info
        var $quarantinedByCell = $('.test-case-row-' + testId).find('.quarantine-data');
        var baseUrl = AJS.contextPath() + '/rest/api/latest/plan/' + planKey + '/test/' + testId;
        var quarantineUrl = baseUrl + '/quarantine';
        var unleashUrl = baseUrl + '/unleash';

        e.preventDefault();
        var options = {};

        if (!$button.hasClass('quarantined')) {
            options = {
                url: quarantineUrl,
                success: function() {
                    $button.addClass('quarantined');
                    $button.html($icon);
                    $icon.after("Resume");
                    $quarantinedByCell.html("You, a moment ago");
                }
            };
        } else {
            options = {
                url: unleashUrl,
                success: function() {
                    $button.removeClass('quarantined');
                    $button.html($icon);
                    $icon.after("Quarantine");
                    $quarantinedByCell.html(
                        '<em class="disabled">' +
                            "Not quarantined" +
                        '</em>'
                    );
                }
            };
        }

        $.ajax(_.defaults(
            options, defaultAjaxOptions
        ));
    });

    // clicking 'unleash' on quarantined tests tab
    $(document).on('click', '#quarantined-tests .unleash-test', function(e) {
        var $button = $(this);
        var $testsTable = $button.closest('.tests-table');
        var $tableRow = $button.closest('tr');

        var planKey = $button.attr('data-plan-key');
        var testId = $button.attr('data-test-id');
        var unleashUrl = AJS.contextPath() + '/rest/api/latest/plan/' + planKey + '/test/' + testId + '/unleash';

        e.preventDefault();

        $.post(unleashUrl, function() {
            $tableRow.fadeOut(function() {
                $(this).remove();
                if (!$testsTable.find('tbody > tr').length) {
                    $testsTable.replaceWith($('<p/>', { text: "No quarantined tests to display." }));
                }
            });
        });
    });

});

require(['feature/quarantine-current']);

/* module-key = 'bamboo.web.resources:comments', location = '/feature/comments/comments.js' */
require([
    'jquery'
], function(
    $
) {

    'use strict';

    (function() {
        var selectors = {
            comments: '.comments',
            commentsList: '> h2 + ol',
            commentsHeading: '> h2',
            commentForm: '#result_summary_comment',
            createCommentContainer: '.aui-toolbar',
            commentField: 'textarea',
            commentFormSubmit: '.buttons > input',
            commentFormCancel: '.buttons > .cancel',
            errorMessages: '.aui-message.error',
            deleteLink: '.delete'
        };

        function collapseCommentForm() {
            var $commentForm = $(selectors.commentForm).addClass('collapsed');
            $commentForm.find(selectors.commentField).val('');
            $commentForm.find(selectors.errorMessages).remove();
        }
        function expandCommentForm() {
            $(selectors.commentForm).removeClass('collapsed');
        }
        function appendComment(json) {
            var comment = json.comment,
                $commentsList = $(selectors.comments).find(selectors.commentsList);

            if ($commentsList.length) {
                $(bamboo.feature.comments.commentListItem(comment)).hide().appendTo($commentsList).slideDown();
            } else {
                $(bamboo.feature.comments.commentList({
                    comments: [comment],
                    showOperations: comment.showOperations, showTopLevelHeading: true
                })).hide().insertBefore(selectors.commentForm).slideDown();
            }
            collapseCommentForm();
        }
        function focusCommentField() {
            $(selectors.commentForm).find(selectors.commentField).focus();
        }
        function deleteComment(e) {
            var $delete = $(this),
                $deletePlaceholder = $('<span/>', { text: $delete.text() }),
                $original,
                $loading = $(widget.icons.icon({ type: 'loading' })),
                $comment = $delete.closest('li');

            e.preventDefault();

            if (confirm($delete.attr('title'))) {
                $original = $delete.replaceWith($deletePlaceholder);
                $loading.insertAfter($deletePlaceholder);
                $.post($delete.attr('href')).done(function() {
                    $loading.remove();
                    $comment.slideUp(function() {
                        var $comment = $(this),
                            $comments = $comment.siblings(),
                            $commentsList = $comment.closest('ol'),
                            $commentsHeading = $commentsList.prev('h2,h3');

                        if (!$comments.length) {
                            $commentsList.add($commentsHeading).slideUp(function() { $(this).remove(); });
                        } else {
                            $comment.slideUp(function() { $(this).remove(); });
                        }

                    });
                }).fail(function() {
                    $loading.remove();
                    $deletePlaceholder.replaceWith($original);
                });
            }
        }
        function handleKeyUp(e) {
            if (e.which == $.ui.keyCode.ESCAPE) {
                // focus the comment link so that keyboard navigation isn't broken after the textarea loses focus
                $(selectors.commentForm).find(selectors.commentFormCancel).focus();
                collapseCommentForm();
            }
        }

        $(document)
            .on('click', selectors.comments + ' ' + selectors.deleteLink, deleteComment)
            .on('focus', selectors.commentField, expandCommentForm)
            .on('keyup', selectors.commentField, handleKeyUp);

        BAMBOO.asyncForm({
            target: selectors.commentForm,
            success: appendComment,
            cancel: collapseCommentForm,
            formReplaced: focusCommentField,
            resetOnSuccess: true,
            loadingIconInsertionMethod: 'append'
        });
        AJS.whenIType("m").execute(focusCommentField);
    }());
});

/* module-key = 'bamboo.web.resources:comments', location = '/feature/comments/comments.soy' */
// This file was automatically generated from comments.soy.
// Please don't edit this file by hand.

if (typeof bamboo == 'undefined') { var bamboo = {}; }
if (typeof bamboo.feature == 'undefined') { bamboo.feature = {}; }
if (typeof bamboo.feature.comments == 'undefined') { bamboo.feature.comments = {}; }


bamboo.feature.comments.commentList = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  if (opt_data.comments.length > 0) {
    output.append((opt_data.showTopLevelHeading) ? '<h2>' + soy.$$escapeHtml("Comments") + '</h2>' : '', '<ol>');
    var commentList11 = opt_data.comments;
    var commentListLen11 = commentList11.length;
    for (var commentIndex11 = 0; commentIndex11 < commentListLen11; commentIndex11++) {
      var commentData11 = commentList11[commentIndex11];
      bamboo.feature.comments.commentListItem({id: commentData11.id, comment: commentData11.comment, lastModificationDate: commentData11.lastModificationDate, prettyLastModificationDate: commentData11.prettyLastModificationDate, avatar: commentData11.avatar, user: commentData11.user, userDisplayName: commentData11.userDisplayName, showOperations: opt_data.showOperations, headingLevel: opt_data.headingLevel ? opt_data.headingLevel : 'h3', result: commentData11.result}, output);
    }
    output.append('</ol>');
  }
  return opt_sb ? '' : output.toString();
};


bamboo.feature.comments.commentListItem = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li><img src="', soy.$$escapeHtml(opt_data.avatar ? opt_data.avatar : "" + '/images/icons/useravatar.png'), '" class="avatar"><', soy.$$escapeHtml(opt_data.headingLevel ? opt_data.headingLevel : 'h3'), '>', (opt_data.user) ? '<a href="' + soy.$$escapeHtml("" + '/browse/user/' + opt_data.user.name) + '">' + soy.$$escapeHtml(opt_data.userDisplayName) + '</a>' : soy.$$escapeHtml("Anonymous user"), '</', soy.$$escapeHtml(opt_data.headingLevel ? opt_data.headingLevel : 'h3'), '><p>', opt_data.comment, '</p>', (opt_data.showOperations) ? '<div class="ops">' + ((opt_data.result) ? '<a class="delete mutative" href="' + soy.$$escapeHtml("" + '/build/ajax/deleteComment.action?commentId=' + opt_data.id + '&buildKey=' + opt_data.result.buildKey + '&buildNumber=' + opt_data.result.buildNumber) + '" title="' + soy.$$escapeHtml("Permanently delete this comment?") + '">' + soy.$$escapeHtml("Delete") + '</a>' : '<a class="delete mutative" href="' + soy.$$escapeHtml("" + '/deploy/deleteComment.action?commentId=' + opt_data.id) + '" title="' + soy.$$escapeHtml("Permanently delete this comment?") + '">' + soy.$$escapeHtml("Delete") + '</a>') + '</div>' : '', '<time datetime="', soy.$$escapeHtml(opt_data.lastModificationDate), '" title="', soy.$$escapeHtml(opt_data.lastModificationDate), '">', soy.$$escapeHtml(AJS.format("about {0} ago",opt_data.prettyLastModificationDate)), '</time></li>');
  return opt_sb ? '' : output.toString();
};

